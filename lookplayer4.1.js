/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/330939e7/js/main/player/progressLogger.js.tmp ***/
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.createTemplateTagFirstArg = function(c) {
    return c.raw = c
}
;
$jscomp.createTemplateTagFirstArgWithRaw = function(c, e) {
    c.raw = e;
    return c
}
;
var ProgressLogger = function() {
    function c() {
        this.duration = this.progress = this.interval = this.rootElement = null
    }
    function e(a) {
        this.buffer = 0;
        this.loggerKey = a;
        if (a = localStorage.getItem(this.loggerKey))
            a = JSON.parse(a),
            this.duration = a.duration,
            this.progress = a.progress || a.currentTime
    }
    function g(a) {
        this.buffer = 0;
        this.watchHistoryUrl = "/api/v2/watch-history/mark?id=" + a.id;
        this.progress = a.progress || 0;
        this.duration = a.duration || 0
    }
    var d = null;
    c.prototype.dispose = function() {
        null !== this.rootElement && "undefined" !== typeof this.rootElement && this.rootElement.remove();
        null !== this.interval && clearInterval(this.interval);
        d = null
    }
    ;
    c.prototype.hasProgress = function() {
        return null === this.progress ? !1 : 1E4 < this.progress
    }
    ;
    c.prototype.renderDialogue = function(a, b, f) {
        a = document.querySelector(a);
        null === a ? console.error("cannot render continue dialogue, parent element not exists.") : (this.rootElement = document.createElement("div"),
        this.rootElement.classList.add("continue-wrapper"),
        this.rootElement.innerHTML = '\n        <div class="continue--controls-wrapper">\n            <div class="continue__time-display--wrapper">\n                <span class="currentTime">00:00:00</span>\n                <div class="divider">/</div>\n                <span class="duration">00:00:00</span>\n            </div>\n            <div class="progress">\n                <div class="progress-bar" role="progressbar"></div>\n            </div>\n            <div class="continue__controls-wrapper">\n                <button class="continue__button">Continue Watching</button>\n                <span>or</span>\n                <button class="continue__button--from_begin">Start From The Beginning</button>\n            </div>\n        </div>\n    ',
        this.rootElement.querySelector(".currentTime").innerHTML = toHHMMSS(this.progress / 1E3),
        this.rootElement.querySelector(".duration").innerHTML = toHHMMSS(this.duration / 1E3),
        this.rootElement.querySelector(".progress-bar").style.width = (100 / (this.duration / 1E3) * (this.progress / 1E3)).toFixed(0) + "%",
        this.rootElement.querySelector(".continue__button--from_begin").onclick = function() {
            "undefined" !== typeof f && f();
            this.rootElement.remove()
        }
        .bind(this),
        this.rootElement.querySelector("button.continue__button").onclick = function() {
            "undefined" !== typeof b && b(this.progress);
            this.rootElement.remove()
        }
        .bind(this),
        a.appendChild(this.rootElement))
    }
    ;
    e.prototype = Object.create(c.prototype);
    g.prototype = Object.create(c.prototype);
    e.prototype.log = function(a, b) {
        this.buffer > a && (this.buffer = a);
        2E3 < a - this.buffer && (this.buffer = a,
        localStorage.setItem(this.loggerKey, JSON.stringify({
            duration: b,
            progress: a
        })))
    }
    ;
    g.prototype.log = function(a, b) {
        this.buffer > a && (this.buffer = a);
        25E3 < a - this.buffer && (this.buffer = a,
        ajaxCall("POST", this.watchHistoryUrl + "&progress=" + a + "&duration=" + b, null))
    }
    ;
    return {
        log: function(a, b) {
            d.log(a, b)
        },
        renderDialogue: function(a, b, f) {
            d.renderDialogue(a, b, f)
        },
        hasProgress: function() {
            return d.hasProgress()
        },
        getInstance: function() {
            return d
        },
        createInstance: function(a) {
            a = void 0 === a ? {} : a;
            d && d.dispose();
            var b = "object" === typeof a && a.hasOwnProperty("id") ? "watchHistory" : "localStorage";
            switch (b) {
            case "localStorage":
                d = new e(a);
                break;
            case "watchHistory":
                d = new g(a)
            }
            return d
        }
    }
}();
/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/330939e7/js/main/player/progressLogger.js.tmp ***/
/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/330939e7/js/main/player/Player.js.tmp ***/
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.createTemplateTagFirstArg = function(a) {
    return a.raw = a
}
;
$jscomp.createTemplateTagFirstArgWithRaw = function(a, b) {
    a.raw = b;
    return a
}
;
$jscomp.arrayIteratorImpl = function(a) {
    var b = 0;
    return function() {
        return b < a.length ? {
            done: !1,
            value: a[b++]
        } : {
            done: !0
        }
    }
}
;
$jscomp.arrayIterator = function(a) {
    return {
        next: $jscomp.arrayIteratorImpl(a)
    }
}
;
$jscomp.makeIterator = function(a) {
    var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];
    return b ? b.call(a) : $jscomp.arrayIterator(a)
}
;
$jscomp.arrayFromIterator = function(a) {
    for (var b, f = []; !(b = a.next()).done; )
        f.push(b.value);
    return f
}
;
$jscomp.arrayFromIterable = function(a) {
    return a instanceof Array ? a : $jscomp.arrayFromIterator($jscomp.makeIterator(a))
}
;
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.ISOLATE_POLYFILLS = !1;
$jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(a, b, f) {
    if (a == Array.prototype || a == Object.prototype)
        return a;
    a[b] = f.value;
    return a
}
;
$jscomp.getGlobal = function(a) {
    a = ["object" == typeof globalThis && globalThis, a, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global];
    for (var b = 0; b < a.length; ++b) {
        var f = a[b];
        if (f && f.Math == Math)
            return f
    }
    throw Error("Cannot find global object");
}
;
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.IS_SYMBOL_NATIVE = "function" === typeof Symbol && "symbol" === typeof Symbol("x");
$jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE;
$jscomp.polyfills = {};
$jscomp.propertyToPolyfillSymbol = {};
$jscomp.POLYFILL_PREFIX = "$jscp$";
var $jscomp$lookupPolyfilledValue = function(a, b) {
    var f = $jscomp.propertyToPolyfillSymbol[b];
    if (null == f)
        return a[b];
    f = a[f];
    return void 0 !== f ? f : a[b]
};
$jscomp.polyfill = function(a, b, f, g) {
    b && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(a, b, f, g) : $jscomp.polyfillUnisolated(a, b, f, g))
}
;
$jscomp.polyfillUnisolated = function(a, b, f, g) {
    f = $jscomp.global;
    a = a.split(".");
    for (g = 0; g < a.length - 1; g++) {
        var c = a[g];
        if (!(c in f))
            return;
        f = f[c]
    }
    a = a[a.length - 1];
    g = f[a];
    b = b(g);
    b != g && null != b && $jscomp.defineProperty(f, a, {
        configurable: !0,
        writable: !0,
        value: b
    })
}
;
$jscomp.polyfillIsolated = function(a, b, f, g) {
    var c = a.split(".");
    a = 1 === c.length;
    g = c[0];
    g = !a && g in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global;
    for (var l = 0; l < c.length - 1; l++) {
        var e = c[l];
        if (!(e in g))
            return;
        g = g[e]
    }
    c = c[c.length - 1];
    f = $jscomp.IS_SYMBOL_NATIVE && "es6" === f ? g[c] : null;
    b = b(f);
    null != b && (a ? $jscomp.defineProperty($jscomp.polyfills, c, {
        configurable: !0,
        writable: !0,
        value: b
    }) : b !== f && ($jscomp.propertyToPolyfillSymbol[c] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol(c) : $jscomp.POLYFILL_PREFIX + c,
    c = $jscomp.propertyToPolyfillSymbol[c],
    $jscomp.defineProperty(g, c, {
        configurable: !0,
        writable: !0,
        value: b
    })))
}
;
$jscomp.underscoreProtoCanBeSet = function() {
    var a = {
        a: !0
    }
      , b = {};
    try {
        return b.__proto__ = a,
        b.a
    } catch (f) {}
    return !1
}
;
$jscomp.setPrototypeOf = $jscomp.TRUST_ES6_POLYFILLS && "function" == typeof Object.setPrototypeOf ? Object.setPrototypeOf : $jscomp.underscoreProtoCanBeSet() ? function(a, b) {
    a.__proto__ = b;
    if (a.__proto__ !== b)
        throw new TypeError(a + " is not extensible");
    return a
}
: null;
$jscomp.generator = {};
$jscomp.generator.ensureIteratorResultIsObject_ = function(a) {
    if (!(a instanceof Object))
        throw new TypeError("Iterator result " + a + " is not an object");
}
;
$jscomp.generator.Context = function() {
    this.isRunning_ = !1;
    this.yieldAllIterator_ = null;
    this.yieldResult = void 0;
    this.nextAddress = 1;
    this.finallyAddress_ = this.catchAddress_ = 0;
    this.finallyContexts_ = this.abruptCompletion_ = null
}
;
$jscomp.generator.Context.prototype.start_ = function() {
    if (this.isRunning_)
        throw new TypeError("Generator is already running");
    this.isRunning_ = !0
}
;
$jscomp.generator.Context.prototype.stop_ = function() {
    this.isRunning_ = !1
}
;
$jscomp.generator.Context.prototype.jumpToErrorHandler_ = function() {
    this.nextAddress = this.catchAddress_ || this.finallyAddress_
}
;
$jscomp.generator.Context.prototype.next_ = function(a) {
    this.yieldResult = a
}
;
$jscomp.generator.Context.prototype.throw_ = function(a) {
    this.abruptCompletion_ = {
        exception: a,
        isException: !0
    };
    this.jumpToErrorHandler_()
}
;
$jscomp.generator.Context.prototype.return = function(a) {
    this.abruptCompletion_ = {
        return: a
    };
    this.nextAddress = this.finallyAddress_
}
;
$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks = function(a) {
    this.abruptCompletion_ = {
        jumpTo: a
    };
    this.nextAddress = this.finallyAddress_
}
;
$jscomp.generator.Context.prototype.yield = function(a, b) {
    this.nextAddress = b;
    return {
        value: a
    }
}
;
$jscomp.generator.Context.prototype.yieldAll = function(a, b) {
    a = $jscomp.makeIterator(a);
    var f = a.next();
    $jscomp.generator.ensureIteratorResultIsObject_(f);
    if (f.done)
        this.yieldResult = f.value,
        this.nextAddress = b;
    else
        return this.yieldAllIterator_ = a,
        this.yield(f.value, b)
}
;
$jscomp.generator.Context.prototype.jumpTo = function(a) {
    this.nextAddress = a
}
;
$jscomp.generator.Context.prototype.jumpToEnd = function() {
    this.nextAddress = 0
}
;
$jscomp.generator.Context.prototype.setCatchFinallyBlocks = function(a, b) {
    this.catchAddress_ = a;
    void 0 != b && (this.finallyAddress_ = b)
}
;
$jscomp.generator.Context.prototype.setFinallyBlock = function(a) {
    this.catchAddress_ = 0;
    this.finallyAddress_ = a || 0
}
;
$jscomp.generator.Context.prototype.leaveTryBlock = function(a, b) {
    this.nextAddress = a;
    this.catchAddress_ = b || 0
}
;
$jscomp.generator.Context.prototype.enterCatchBlock = function(a) {
    this.catchAddress_ = a || 0;
    a = this.abruptCompletion_.exception;
    this.abruptCompletion_ = null;
    return a
}
;
$jscomp.generator.Context.prototype.enterFinallyBlock = function(a, b, f) {
    f ? this.finallyContexts_[f] = this.abruptCompletion_ : this.finallyContexts_ = [this.abruptCompletion_];
    this.catchAddress_ = a || 0;
    this.finallyAddress_ = b || 0
}
;
$jscomp.generator.Context.prototype.leaveFinallyBlock = function(a, b) {
    b = this.finallyContexts_.splice(b || 0)[0];
    if (b = this.abruptCompletion_ = this.abruptCompletion_ || b) {
        if (b.isException)
            return this.jumpToErrorHandler_();
        void 0 != b.jumpTo && this.finallyAddress_ < b.jumpTo ? (this.nextAddress = b.jumpTo,
        this.abruptCompletion_ = null) : this.nextAddress = this.finallyAddress_
    } else
        this.nextAddress = a
}
;
$jscomp.generator.Context.prototype.forIn = function(a) {
    return new $jscomp.generator.Context.PropertyIterator(a)
}
;
$jscomp.generator.Context.PropertyIterator = function(a) {
    this.object_ = a;
    this.properties_ = [];
    for (var b in a)
        this.properties_.push(b);
    this.properties_.reverse()
}
;
$jscomp.generator.Context.PropertyIterator.prototype.getNext = function() {
    for (; 0 < this.properties_.length; ) {
        var a = this.properties_.pop();
        if (a in this.object_)
            return a
    }
    return null
}
;
$jscomp.generator.Engine_ = function(a) {
    this.context_ = new $jscomp.generator.Context;
    this.program_ = a
}
;
$jscomp.generator.Engine_.prototype.next_ = function(a) {
    this.context_.start_();
    if (this.context_.yieldAllIterator_)
        return this.yieldAllStep_(this.context_.yieldAllIterator_.next, a, this.context_.next_);
    this.context_.next_(a);
    return this.nextStep_()
}
;
$jscomp.generator.Engine_.prototype.return_ = function(a) {
    this.context_.start_();
    var b = this.context_.yieldAllIterator_;
    if (b)
        return this.yieldAllStep_("return"in b ? b["return"] : function(f) {
            return {
                value: f,
                done: !0
            }
        }
        , a, this.context_.return);
    this.context_.return(a);
    return this.nextStep_()
}
;
$jscomp.generator.Engine_.prototype.throw_ = function(a) {
    this.context_.start_();
    if (this.context_.yieldAllIterator_)
        return this.yieldAllStep_(this.context_.yieldAllIterator_["throw"], a, this.context_.next_);
    this.context_.throw_(a);
    return this.nextStep_()
}
;
$jscomp.generator.Engine_.prototype.yieldAllStep_ = function(a, b, f) {
    try {
        var g = a.call(this.context_.yieldAllIterator_, b);
        $jscomp.generator.ensureIteratorResultIsObject_(g);
        if (!g.done)
            return this.context_.stop_(),
            g;
        var c = g.value
    } catch (l) {
        return this.context_.yieldAllIterator_ = null,
        this.context_.throw_(l),
        this.nextStep_()
    }
    this.context_.yieldAllIterator_ = null;
    f.call(this.context_, c);
    return this.nextStep_()
}
;
$jscomp.generator.Engine_.prototype.nextStep_ = function() {
    for (; this.context_.nextAddress; )
        try {
            var a = this.program_(this.context_);
            if (a)
                return this.context_.stop_(),
                {
                    value: a.value,
                    done: !1
                }
        } catch (b) {
            this.context_.yieldResult = void 0,
            this.context_.throw_(b)
        }
    this.context_.stop_();
    if (this.context_.abruptCompletion_) {
        a = this.context_.abruptCompletion_;
        this.context_.abruptCompletion_ = null;
        if (a.isException)
            throw a.exception;
        return {
            value: a.return,
            done: !0
        }
    }
    return {
        value: void 0,
        done: !0
    }
}
;
$jscomp.generator.Generator_ = function(a) {
    this.next = function(b) {
        return a.next_(b)
    }
    ;
    this.throw = function(b) {
        return a.throw_(b)
    }
    ;
    this.return = function(b) {
        return a.return_(b)
    }
    ;
    this[Symbol.iterator] = function() {
        return this
    }
}
;
$jscomp.generator.createGenerator = function(a, b) {
    b = new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(b));
    $jscomp.setPrototypeOf && a.prototype && $jscomp.setPrototypeOf(b, a.prototype);
    return b
}
;
$jscomp.asyncExecutePromiseGenerator = function(a) {
    function b(g) {
        return a.next(g)
    }
    function f(g) {
        return a.throw(g)
    }
    return new Promise(function(g, c) {
        function l(e) {
            e.done ? g(e.value) : Promise.resolve(e.value).then(b, f).then(l, c)
        }
        l(a.next())
    }
    )
}
;
$jscomp.asyncExecutePromiseGeneratorFunction = function(a) {
    return $jscomp.asyncExecutePromiseGenerator(a())
}
;
$jscomp.asyncExecutePromiseGeneratorProgram = function(a) {
    return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(a)))
}
;
$jscomp.initSymbol = function() {}
;
$jscomp.polyfill("Symbol", function(a) {
    if (a)
        return a;
    var b = function(c, l) {
        this.$jscomp$symbol$id_ = c;
        $jscomp.defineProperty(this, "description", {
            configurable: !0,
            writable: !0,
            value: l
        })
    };
    b.prototype.toString = function() {
        return this.$jscomp$symbol$id_
    }
    ;
    var f = 0
      , g = function(c) {
        if (this instanceof g)
            throw new TypeError("Symbol is not a constructor");
        return new b("jscomp_symbol_" + (c || "") + "_" + f++,c)
    };
    return g
}, "es6", "es3");
$jscomp.polyfill("Symbol.iterator", function(a) {
    if (a)
        return a;
    a = Symbol("Symbol.iterator");
    for (var b = "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "), f = 0; f < b.length; f++) {
        var g = $jscomp.global[b[f]];
        "function" === typeof g && "function" != typeof g.prototype[a] && $jscomp.defineProperty(g.prototype, a, {
            configurable: !0,
            writable: !0,
            value: function() {
                return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))
            }
        })
    }
    return a
}, "es6", "es3");
$jscomp.iteratorPrototype = function(a) {
    a = {
        next: a
    };
    a[Symbol.iterator] = function() {
        return this
    }
    ;
    return a
}
;
$jscomp.polyfill("Promise", function(a) {
    function b() {
        this.batch_ = null
    }
    function f(e) {
        return e instanceof c ? e : new c(function(d, h) {
            d(e)
        }
        )
    }
    if (a && (!($jscomp.FORCE_POLYFILL_PROMISE || $jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION && "undefined" === typeof $jscomp.global.PromiseRejectionEvent) || !$jscomp.global.Promise || -1 === $jscomp.global.Promise.toString().indexOf("[native code]")))
        return a;
    b.prototype.asyncExecute = function(e) {
        if (null == this.batch_) {
            this.batch_ = [];
            var d = this;
            this.asyncExecuteFunction(function() {
                d.executeBatch_()
            })
        }
        this.batch_.push(e)
    }
    ;
    var g = $jscomp.global.setTimeout;
    b.prototype.asyncExecuteFunction = function(e) {
        g(e, 0)
    }
    ;
    b.prototype.executeBatch_ = function() {
        for (; this.batch_ && this.batch_.length; ) {
            var e = this.batch_;
            this.batch_ = [];
            for (var d = 0; d < e.length; ++d) {
                var h = e[d];
                e[d] = null;
                try {
                    h()
                } catch (k) {
                    this.asyncThrow_(k)
                }
            }
        }
        this.batch_ = null
    }
    ;
    b.prototype.asyncThrow_ = function(e) {
        this.asyncExecuteFunction(function() {
            throw e;
        })
    }
    ;
    var c = function(e) {
        this.state_ = 0;
        this.result_ = void 0;
        this.onSettledCallbacks_ = [];
        this.isRejectionHandled_ = !1;
        var d = this.createResolveAndReject_();
        try {
            e(d.resolve, d.reject)
        } catch (h) {
            d.reject(h)
        }
    };
    c.prototype.createResolveAndReject_ = function() {
        function e(k) {
            return function(m) {
                h || (h = !0,
                k.call(d, m))
            }
        }
        var d = this
          , h = !1;
        return {
            resolve: e(this.resolveTo_),
            reject: e(this.reject_)
        }
    }
    ;
    c.prototype.resolveTo_ = function(e) {
        if (e === this)
            this.reject_(new TypeError("A Promise cannot resolve to itself"));
        else if (e instanceof c)
            this.settleSameAsPromise_(e);
        else {
            a: switch (typeof e) {
            case "object":
                var d = null != e;
                break a;
            case "function":
                d = !0;
                break a;
            default:
                d = !1
            }
            d ? this.resolveToNonPromiseObj_(e) : this.fulfill_(e)
        }
    }
    ;
    c.prototype.resolveToNonPromiseObj_ = function(e) {
        var d = void 0;
        try {
            d = e.then
        } catch (h) {
            this.reject_(h);
            return
        }
        "function" == typeof d ? this.settleSameAsThenable_(d, e) : this.fulfill_(e)
    }
    ;
    c.prototype.reject_ = function(e) {
        this.settle_(2, e)
    }
    ;
    c.prototype.fulfill_ = function(e) {
        this.settle_(1, e)
    }
    ;
    c.prototype.settle_ = function(e, d) {
        if (0 != this.state_)
            throw Error("Cannot settle(" + e + ", " + d + "): Promise already settled in state" + this.state_);
        this.state_ = e;
        this.result_ = d;
        2 === this.state_ && this.scheduleUnhandledRejectionCheck_();
        this.executeOnSettledCallbacks_()
    }
    ;
    c.prototype.scheduleUnhandledRejectionCheck_ = function() {
        var e = this;
        g(function() {
            if (e.notifyUnhandledRejection_()) {
                var d = $jscomp.global.console;
                "undefined" !== typeof d && d.error(e.result_)
            }
        }, 1)
    }
    ;
    c.prototype.notifyUnhandledRejection_ = function() {
        if (this.isRejectionHandled_)
            return !1;
        var e = $jscomp.global.CustomEvent
          , d = $jscomp.global.Event
          , h = $jscomp.global.dispatchEvent;
        if ("undefined" === typeof h)
            return !0;
        "function" === typeof e ? e = new e("unhandledrejection",{
            cancelable: !0
        }) : "function" === typeof d ? e = new d("unhandledrejection",{
            cancelable: !0
        }) : (e = $jscomp.global.document.createEvent("CustomEvent"),
        e.initCustomEvent("unhandledrejection", !1, !0, e));
        e.promise = this;
        e.reason = this.result_;
        return h(e)
    }
    ;
    c.prototype.executeOnSettledCallbacks_ = function() {
        if (null != this.onSettledCallbacks_) {
            for (var e = 0; e < this.onSettledCallbacks_.length; ++e)
                l.asyncExecute(this.onSettledCallbacks_[e]);
            this.onSettledCallbacks_ = null
        }
    }
    ;
    var l = new b;
    c.prototype.settleSameAsPromise_ = function(e) {
        var d = this.createResolveAndReject_();
        e.callWhenSettled_(d.resolve, d.reject)
    }
    ;
    c.prototype.settleSameAsThenable_ = function(e, d) {
        var h = this.createResolveAndReject_();
        try {
            e.call(d, h.resolve, h.reject)
        } catch (k) {
            h.reject(k)
        }
    }
    ;
    c.prototype.then = function(e, d) {
        function h(q, p) {
            return "function" == typeof q ? function(t) {
                try {
                    k(q(t))
                } catch (r) {
                    m(r)
                }
            }
            : p
        }
        var k, m, n = new c(function(q, p) {
            k = q;
            m = p
        }
        );
        this.callWhenSettled_(h(e, k), h(d, m));
        return n
    }
    ;
    c.prototype.catch = function(e) {
        return this.then(void 0, e)
    }
    ;
    c.prototype.callWhenSettled_ = function(e, d) {
        function h() {
            switch (k.state_) {
            case 1:
                e(k.result_);
                break;
            case 2:
                d(k.result_);
                break;
            default:
                throw Error("Unexpected state: " + k.state_);
            }
        }
        var k = this;
        null == this.onSettledCallbacks_ ? l.asyncExecute(h) : this.onSettledCallbacks_.push(h);
        this.isRejectionHandled_ = !0
    }
    ;
    c.resolve = f;
    c.reject = function(e) {
        return new c(function(d, h) {
            h(e)
        }
        )
    }
    ;
    c.race = function(e) {
        return new c(function(d, h) {
            for (var k = $jscomp.makeIterator(e), m = k.next(); !m.done; m = k.next())
                f(m.value).callWhenSettled_(d, h)
        }
        )
    }
    ;
    c.all = function(e) {
        var d = $jscomp.makeIterator(e)
          , h = d.next();
        return h.done ? f([]) : new c(function(k, m) {
            function n(t) {
                return function(r) {
                    q[t] = r;
                    p--;
                    0 == p && k(q)
                }
            }
            var q = []
              , p = 0;
            do
                q.push(void 0),
                p++,
                f(h.value).callWhenSettled_(n(q.length - 1), m),
                h = d.next();
            while (!h.done)
        }
        )
    }
    ;
    return c
}, "es6", "es3");
$jscomp.checkStringArgs = function(a, b, f) {
    if (null == a)
        throw new TypeError("The 'this' value for String.prototype." + f + " must not be null or undefined");
    if (b instanceof RegExp)
        throw new TypeError("First argument to String.prototype." + f + " must not be a regular expression");
    return a + ""
}
;
$jscomp.polyfill("String.prototype.endsWith", function(a) {
    return a ? a : function(b, f) {
        var g = $jscomp.checkStringArgs(this, b, "endsWith");
        b += "";
        void 0 === f && (f = g.length);
        f = Math.max(0, Math.min(f | 0, g.length));
        for (var c = b.length; 0 < c && 0 < f; )
            if (g[--f] != b[--c])
                return !1;
        return 0 >= c
    }
}, "es6", "es3");
$jscomp.polyfill("String.prototype.startsWith", function(a) {
    return a ? a : function(b, f) {
        var g = $jscomp.checkStringArgs(this, b, "startsWith");
        b += "";
        var c = g.length
          , l = b.length;
        f = Math.max(0, Math.min(f | 0, g.length));
        for (var e = 0; e < l && f < c; )
            if (g[f++] != b[e++])
                return !1;
        return e >= l
    }
}, "es6", "es3");
var keyLatestSubtitleLanguage = "vjs.latest.subtitles.language";
function getPlayerControlBarSettings() {
    var a = "playToggle volumePanel CurrentTimeDisplay TimeDivider DurationDisplay CustomControlSpacer qualitySelector fullscreenToggle progressControl".split(" ")
      , b = "volumePanel CurrentTimeDisplay TimeDivider DurationDisplay CustomControlSpacer qualitySelector fullscreenToggle progressControl".split(" ");
    return 768 <= window.screen.width ? a : b
}
function handlePlayerErrorMessage() {
    var a = document.querySelector(".jw-error-msg") || document.querySelector(".vjs-modal-dialog-content");
    null !== a && setTimeout(function() {
        a.innerHTML = '<p>Seeing this message many times means your Anti Virus or Internet Provider censored our streams.</p><p> <a data-static-in-floater="/static/playback-issues-faq?isAjax=true" style="text-decoration: underline;">CLICK HERE</a> to read how to bypass their restrictions.</p>'
    }, 10)
}
function getPlayerOptions(a, b, f) {
    return {
        textTrackSettings: !0,
        persistTextTrackSettings: !0,
        playbackTitle: f,
        poster: b,
        inactivityTimeout: 4E3,
        responsive: !0,
        preload: "none",
        autoplay: !1,
        techOrder: ["chromecast", "hls", "html5"],
        chromecast: {
            preloadTextTracks: !1,
            requestBackdropFn: function() {
                return b
            },
            requestPosterFn: function() {
                return a
            },
            requestTitleFn: function() {
                return f
            },
            requestSubtitleFn: function() {
                return "Playing on " + window.location.host
            }
        },
        controlBar: {
            volumePanel: {
                inline: !1
            },
            children: getPlayerControlBarSettings()
        },
        plugins: {
            landscapeFullscreen: {
                fullscreen: {
                    enterOnRotate: !1,
                    alwaysInLandscapeMode: !0,
                    iOS: !1
                }
            },
            mobileUi: {},
            seekButtons: {
                forward: 768 <= window.screen.width ? 10 : 0,
                back: 768 <= window.screen.width ? 10 : 0
            },
            chromecast: {
                addButtonToControlBar: !0,
                buttonPositionIndex: window.videojs.browser.IS_IOS || window.videojs.browser.IS_ANDROID ? 5 : 7
            },
            airplayButton: {},
            hotkeys: {
                volumeStep: .1,
                seekStep: 10,
                enableVolumeScroll: !1,
                enableModifiersForNumbers: !1
            }
        },
        hls: {
            preloadTextTracks: !1,
            overrideNative: !0,
            _: {}
        },
        html5: {
            preloadTextTracks: !1,
            overrideNative: !0
        }
    }
}
function MoviesPlay() {
    function a(g) {
        window.videoJS = videojs("video_player", getPlayerOptions(window.movie_storage.movie_poster, window.movie_storage.backdrop_huge, window.movie_storage.title + " (" + window.movie_storage.year + ")"), function() {
            var c = this, l, e;
            return $jscomp.asyncExecutePromiseGeneratorProgram(function(d) {
                switch (d.nextAddress) {
                case 1:
                    c.addClass("plyr-skin");
                    c.aspectRatio("16:9");
                    vjsCreateSubtitlesButton(c);
                    addControlBarOverlay(c);
                    playerBindQualitySave(c);
                    vjsCreatePlaybackTitleComponent(c);
                    c.on("fullscreenchange", function() {
                        playerFullscreenChangeHandler(this.isFullscreen())
                    }
                    .bind(c));
                    c.on("error", handlePlayerErrorMessage);
                    c.on("clickHandleTrackUpload", SubtitleUploadHandle);
                    c.updatePlaybackTitle(c.options().playbackTitle);
                    l = [];
                    "undefined" !== typeof g.streams["360p"] && l.push({
                        src: g.streams["360p"],
                        label: "360p",
                        type: g.streams["360p"].endsWith("m3u8") ? "application/vnd.apple.mpegurl" : "video/mp4",
                        withCredentials: !1,
                        selected: !1
                    });
                    "undefined" !== typeof g.streams["480p"] && l.push({
                        src: g.streams["480p"],
                        label: "480p",
                        type: g.streams["480p"].endsWith("m3u8") ? "application/vnd.apple.mpegurl" : "video/mp4",
                        withCredentials: !1,
                        selected: !1
                    });
                    "undefined" !== typeof g.streams["720p"] && l.push({
                        src: g.streams["720p"],
                        type: g.streams["720p"].endsWith("m3u8") ? "application/vnd.apple.mpegurl" : "video/mp4",
                        label: "HD",
                        withCredentials: !1,
                        selected: !1
                    });
                    "undefined" === typeof g.streams["1080p"] || true || add1080pButton(c);
                    "undefined" !== typeof g.streams["1080p"] && true && l.push({
                        src: g.streams["1080p"],
                        label: "FullHD",
                        type: g.streams["1080p"].endsWith("m3u8") ? "application/vnd.apple.mpegurl" : "video/mp4",
                        withCredentials: !1,
                        selected: !1
                    });
                    vjsLoadDefaultSubtitleStyle(c);
                    l = selectDefaultSource(l);
                    ProgressLogger.createInstance(g.watchHistory || "lookmovie.mv_" + g.id_movie);
                    ProgressLogger.hasProgress() && ProgressLogger.renderDialogue("#PlayerZone", function(h) {
                        this.play();
                        this.currentTime(h / 1E3)
                    }
                    .bind(c), function() {
                        this.play()
                    }
                    .bind(c));
                    c.on("timeupdate", function() {
                        ProgressLogger.log(1E3 * this.currentTime(), 1E3 * this.getCache().duration)
                    }
                    .bind(c));
                    if ("undefined" !== typeof window.p2pEngine || !window.Yii2App.p2p.enabled) {
                        d.jumpTo(2);
                        break
                    }
                    d.setCatchFinallyBlocks(3);
                    window.p2pEngine = new P2PEngineHls(configP2P());
                    return d.yield(P2PEngineHls.tryRegisterServiceWorker(configP2P()), 5);
                case 5:
                    d.leaveTryBlock(2);
                    break;
                case 3:
                    e = d.enterCatchBlock(),
                    console.log(e);
                case 2:
                    c.src(l),
                    f(g.subtitles),
                    document.querySelector("#PlayerZone .player__wrapper").style.display = "block",
                    document.querySelector("#PlayerZone .placeholder__wrapper").classList.add("hidden"),
                    d.jumpToEnd()
                }
            })
        })
    }
    function b() {
        return new Promise(function(g, c) {
            (new HttpClient).get("/api/v1/security/movie-access?id_movie=" + window.movie_storage.id_movie + "&hash=" + window.movie_storage.hash + "&expires=" + window.movie_storage.expires, function(l) {
                g(JSON.parse(l))
            }, function(l) {
                c(l)
            })
        }
        )
    }
    new HttpClient;
    var f = function(g) {
        var c, l, e, d, h;
        return $jscomp.asyncExecutePromiseGeneratorProgram(function(k) {
            for (c = 0; c < g.length; c++)
                l = g[c],
                videojs.browser.IS_ANY_SAFARI && "string" !== typeof l.file || (e = "string" === typeof l.file ? window.location.protocol + "//" + window.location.host + l.file : l.file,
                window.videoJS.addRemoteTextTrack({
                    src: e,
                    kind: "subtitles",
                    label: l.language
                }, !0));
            d = window.localStorage.getItem(keyLatestSubtitleLanguage);
            if ("undefined" === typeof d)
                return k.return();
            for (h = 0; window.videoJS.textTracks().length > h; h++)
                if (window.videoJS.textTracks()[h].label === d) {
                    window.videoJS.textTracks()[h].mode = "showing";
                    break
                }
            k.jumpToEnd()
        })
    };
    $(document).ready(function() {
        var g, c;
        return $jscomp.asyncExecutePromiseGeneratorProgram(function(l) {
            switch (l.nextAddress) {
            case 1:
                return $("#similar-movies").owlCarousel({
                    dots: !0,
                    responsiveClass: !0,
                    nav: !0,
                    navText: ["", ""],
                    responsive: {
                        0: {
                            items: 2,
                            nav: !0,
                            slideBy: 2,
                            margin: 0
                        },
                        480: {
                            items: 2,
                            slideBy: 2,
                            margin: 0,
                            nav: !0
                        },
                        768: {
                            slideBy: 4,
                            margin: 0,
                            items: 4
                        },
                        1024: {
                            slideBy: 5,
                            margin: 0,
                            items: 5
                        }
                    }
                }),
                l.setCatchFinallyBlocks(2),
                l.yield(b(), 4);
            case 4:
                g = l.yieldResult;
                if (!g.success)
                    return l.return(renderPlayerMessage(g.message, "error"));
                if (true) {
                    l.jumpTo(5);
                    break
                }
                document.querySelector(".placeholder__wrapper").style.display = "none";
                return l.yield(initPrePlaybackCounter(g.config.playbackTimeout), 6);
            case 6:
                document.querySelector(".placeholder__wrapper").style.display = "block";
            case 5:
                a(g);
                l.leaveTryBlock(0);
                break;
            case 2:
                c = l.enterCatchBlock(),
                alert(c + ". Please Refresh page and try again."),
                l.jumpToEnd()
            }
        })
    })
}
function configP2P() {
    var a = {
        swFile: "/sw.js?rev=6.1",
        token: window.Yii2App.p2p.token,
        live: !1,
        strictSegmentId: !0,
        memoryCacheLimit: {
            pc: 0,
            mobile: 0
        },
        swAutoRegister: !1,
        getStats: function(b, f, g, c) {
            1 === window.Yii2App.mode && (f = (b / (b + g) * 100).toFixed(1),
            b = (b / 1E3).toFixed(2),
            g = (g / 1E3).toFixed(2),
            document.querySelector("#efficiency .value").innerHTML = f + "%",
            document.querySelector("#p2p-downloaded .value").innerHTML = b + "mb",
            document.querySelector("#http-downloaded .value").innerHTML = g + "mb")
        },
        segmentId: function(b, f, g, c) {
            b = g.split("?")[0];
            b.startsWith("http") && (b = b.split("://")[1]);
            b = b.split("/");
            f = b[1];
            b.splice(0, 4);
            b = f + "/" + b.join("/");
            1 === window.Yii2App.mode && (console.log("segmentId", b),
            c && console.log("segment range:", c));
            return c ? b + "|" + c : "" + b
        },
        getPeersInfo: function(b) {
            1 === window.Yii2App.mode && (document.querySelector("#seeds .value").innerHTML = b.length)
        },
        channelId: function(b) {
            b = b.split("?")[0];
            b.startsWith("http") && (b = b.split("://")[1]);
            b = b.split("/");
            var f = b[1];
            b.splice(0, 4);
            b = f + "/" + b.join("/");
            1 === window.Yii2App.mode && console.log("channelId:", b);
            return b
        }
    };
    "string" === typeof window.Yii2App.p2p.announce && (a.announce = window.Yii2App.p2p.announce);
    return a
}
function ShowsPlay() {
    function a() {
        new HttpClient;
        this.subtitles = [];
        f(function(d) {
            return $jscomp.asyncExecutePromiseGeneratorProgram(function(h) {
                switch (h.nextAddress) {
                case 1:
                    if (!d.success)
                        return renderPlayerMessage(d.message, "error"),
                        h.return();
                    if (true) {
                        h.jumpTo(3);
                        break
                    }
                    document.querySelector(".placeholder__wrapper").style.display = "none";
                    window.prePlaybackCounterPromise = initPrePlaybackCounter(d.config.playbackTimeout);
                    h.setCatchFinallyBlocks(4);
                    return h.yield(window.prePlaybackCounterPromise, 6);
                case 6:
                    window.prePlaybackCounterPromise = void 0;
                    h.leaveTryBlock(3);
                    break;
                case 4:
                    return h.enterCatchBlock(),
                    window.prePlaybackCounterPromise = void 0,
                    h.return();
                case 3:
                    e(d, !1),
                    h.jumpToEnd()
                }
            })
        });
        window.addEventListener("ChangedEpisodeHash", function() {
            location.hash.match(/#S\d+-E\d+-\d+/gi) && (b(location.hash),
            "undefined" !== typeof window.videoJS && window.videoJS.pause(),
            document.querySelector(".player__wrapper").style.display = "none",
            document.querySelector(".placeholder__wrapper").style.display = "block",
            l())
        });
        var c = function(d) {
            d.forEach(function(k) {
                if (videojs.browser.IS_ANY_SAFARI && "string" !== typeof k.file)
                    return !1;
                window.videoJS.addRemoteTextTrack({
                    src: "string" === typeof k.file ? window.location.protocol + "//" + window.location.host + k.file : k.file,
                    kind: "subtitles",
                    label: k.language
                }, !0)
            });
            d = window.localStorage.getItem(keyLatestSubtitleLanguage);
            if ("undefined" !== typeof d)
                for (var h = 0; window.videoJS.textTracks().length > h; h++)
                    if (window.videoJS.textTracks()[h].label === d) {
                        window.videoJS.textTracks()[h].mode = "showing";
                        break
                    }
        }
          , l = function() {
            window.UploadIndex = 1;
            if ("undefined" !== typeof window.videoJS && "undefined" !== typeof window.videoJS.chromecastSessionManager) {
                var d = window.videoJS.chromecastSessionManager.getCastContext();
                "CONNECTED" === d.getCastState() && d.endCurrentSession(!0)
            }
            f(function(h) {
                return $jscomp.asyncExecutePromiseGeneratorProgram(function(k) {
                    switch (k.nextAddress) {
                    case 1:
                        if (!h.success) {
                            renderPlayerMessage(h.message, "error");
                            k.jumpTo(0);
                            break
                        }
                        window.subtitles = h.subtitles;
                        if (true) {
                            k.jumpTo(3);
                            break
                        }
                        "undefined" !== typeof window.prePlaybackCounterPromise && window.prePlaybackCounterPromise.cancel();
                        document.querySelector(".placeholder__wrapper").style.display = "none";
                        window.prePlaybackCounterPromise = initPrePlaybackCounter(h.config.playbackTimeout);
                        k.setCatchFinallyBlocks(4);
                        return k.yield(window.prePlaybackCounterPromise, 6);
                    case 6:
                        window.prePlaybackCounterPromise = void 0;
                        k.leaveTryBlock(3);
                        break;
                    case 4:
                        return k.enterCatchBlock(),
                        window.prePlaybackCounterPromise = void 0,
                        k.return();
                    case 3:
                        "undefined" !== typeof window.videoJS && window.videoJS.dispose(),
                        e(h, !0),
                        k.jumpToEnd()
                    }
                })
            })
        }
          , e = function(d, h) {
            var k = document.querySelector(".continue-wrapper");
            "undefined" !== typeof k && null !== k && (k.style.display = "none");
            k = document.createElement("video");
            k.classList.add("video-js");
            k.classList.add("vjs-lookmovie");
            k.classList.add("vjs-default-skin");
            k.classList.add("vjs-fluid");
            k.setAttribute("webkit-playsinline", "true");
            k.setAttribute("controls", "");
            k.setAttribute("playsinline", "true");
            k.setAttribute("x-webkit-airplay", "allow");
            k.setAttribute("id", "video_player");
            document.querySelector("#player-container").appendChild(k);
            window.videoJS = videojs("video_player", getPlayerOptions(window.show_storage.poster_medium, window.show_storage.backdrop_huge, window.show_storage.title + " (" + window.show_storage.year + ")"), function() {
                var m = this, n, q;
                return $jscomp.asyncExecutePromiseGeneratorProgram(function(p) {
                    switch (p.nextAddress) {
                    case 1:
                        m.addClass("plyr-skin");
                        m.aspectRatio("16:9");
                        vjsCreateSubtitlesButton(m);
                        playerBindQualitySave(m);
                        addControlBarOverlay(m);
                        vjsCreatePlaybackTitleComponent(m);
                        vjsCreateNextEpisodeButton(m);
                        (videojs.browser.IS_ANDROID || videojs.browser.IS_IOS || videojs.browser.IS_IPAD) && m.controlBar.volumePanel.hide();
                        vjsLoadDefaultSubtitleStyle(m);
                        window.currentEpisodeIndex + 1 < window.show_storage.total_episodes && m.upnext({
                            timeout: 6E3,
                            headText: "NEXT EPISODE",
                            cancelText: "Cancel",
                            getTitle: function() {
                                var t = window.show_storage.seasons[window.currentEpisodeIndex + 1];
                                return "S" + t.season + "E" + t.episode + " " + t.title
                            },
                            next: function() {
                                window.dispatchEvent(new Event("switch-next-episode"))
                            }
                        });
                        m.updatePlaybackTitle("S" + show_storage.seasons[window.currentEpisodeIndex].season + "E" + show_storage.seasons[window.currentEpisodeIndex].episode + " " + show_storage.seasons[window.currentEpisodeIndex].title);
                        m.on("clickHandleTrackUpload", SubtitleUploadHandle);
                        m.on("error", handlePlayerErrorMessage);
                        h && window.videoJS.play();
                        n = [];
                        "undefined" !== typeof d.streams["360"] && n.push({
                            src: d.streams["360"],
                            label: "360p",
                            type: "application/vnd.apple.mpegurl",
                            withCredentials: !1,
                            selected: !1
                        });
                        "undefined" !== typeof d.streams["480"] && n.push({
                            src: d.streams["480"],
                            label: "480p",
                            type: "application/vnd.apple.mpegurl",
                            withCredentials: !1,
                            selected: !1
                        });
                        "undefined" !== typeof d.streams["720"] && n.push({
                            src: d.streams["720"],
                            type: "application/vnd.apple.mpegurl",
                            label: "HD",
                            withCredentials: !1,
                            selected: !1
                        });
                        "undefined" === typeof d.streams["1080"] || true || add1080pButton(m);
                        "undefined" !== typeof d.streams["1080"] && true && n.push({
                            src: d.streams["1080"],
                            label: "FullHD",
                            type: "application/vnd.apple.mpegurl",
                            withCredentials: !1,
                            selected: !1
                        });
                        n = selectDefaultSource(n);
                        ProgressLogger.createInstance(d.watchHistory || "ep_" + d.id_episode);
                        ProgressLogger.hasProgress() && (m.pause(),
                        ProgressLogger.renderDialogue("#PlayerZone", function(t) {
                            this.play();
                            this.currentTime(t / 1E3)
                        }
                        .bind(m), function() {
                            this.play()
                        }
                        .bind(m)));
                        m.on("timeupdate", function() {
                            ProgressLogger.log(1E3 * this.currentTime(), 1E3 * this.getCache().duration)
                        }
                        .bind(m));
                        window.videoJS.on("subsUploader", function() {
                            SubtitleUploadHandle()
                        });
                        if ("undefined" !== typeof window.p2pEngine || !window.Yii2App.p2p.enabled) {
                            p.jumpTo(2);
                            break
                        }
                        p.setCatchFinallyBlocks(3);
                        window.p2pEngine = new P2PEngineHls(configP2P());
                        return p.yield(P2PEngineHls.tryRegisterServiceWorker(configP2P()), 5);
                    case 5:
                        p.leaveTryBlock(2);
                        break;
                    case 3:
                        q = p.enterCatchBlock(),
                        console.log(q);
                    case 2:
                        m.src(n),
                        c(d.subtitles),
                        document.querySelector(".player__wrapper").style.display = "block",
                        document.querySelector(".placeholder__wrapper").style.display = "none",
                        p.jumpToEnd()
                    }
                })
            })
        }
    }
    var b = function(c) {
        c = c.substr(1).split("-");
        "undefined" !== typeof c["0"] && "undefined" !== typeof c["1"] && (window.currentSeason = c["0"].substr(1),
        window.currentEpisode = c["1"].substr(1),
        window.currentEpisodeID = c["2"])
    }
      , f = function(c) {
        var l = new HttpClient
          , e = "/api/v1/security/episode-access?id_episode=" + window.currentEpisodeID + "&hash=" + window.show_storage.hash + "&expires=" + window.show_storage.expires;
        "undefined" !== typeof window.prePlaybackCounterPromise && (window.prePlaybackCounterPromise.cancel(),
        window.prePlaybackCounterPromise = void 0);
        l.get(e, function(d) {
            d = JSON.parse(d);
            c(d);
            var h = {}, k;
            for (k in d.streams)
                d.hasOwnProperty(k) && (h[k + "p"] = d[k]);
            window.QualityLevels = h
        })
    }
      , g = function() {
        window.VueEpisodesSwitcher = new Vue({
            el: "#episodes-switcher",
            name: "EpisodesSwitcher",
            data: {
                currentSeason: 0,
                currentEpisode: 0,
                seasons: [],
                isOpenSeasons: !1,
                isOpenEpisodes: !1
            },
            computed: {
                seasonEpisodes: function() {
                    return this.seasons[this.currentSeason].episodes
                }
            },
            methods: {
                isValidHash: function(c) {
                    return c.match(/#S\d+-E\d+-\d+/gi) ? !0 : !1
                },
                setFromHash: function(c) {
                    c = c.substr(1).split("-");
                    "undefined" !== typeof c["0"] && "undefined" !== typeof c["1"] && (this.currentSeason = c["0"].substr(1),
                    this.currentEpisode = c["1"].substr(1),
                    window.currentEpisodeIndex = this.seasons[this.currentSeason].episodes[this.currentEpisode].index)
                },
                updateHash: function() {
                    if (window.history && window.history.pushState) {
                        var c = location.href;
                        c = "undefined" !== typeof location.hash && location.hash && this.isValidHash(location.hash) ? c.replace(location.hash, "#S" + this.currentSeason + "-E" + this.currentEpisode + "-" + this.seasons[this.currentSeason].episodes[this.currentEpisode].id_episode) : c + "#S" + this.currentSeason + "-E" + this.currentEpisode + "-" + this.seasons[this.currentSeason].episodes[this.currentEpisode].id_episode;
                        history.replaceState(null, null, c);
                        c = document.createEvent("Event");
                        c.initEvent("ChangedEpisodeHash", !0, !0);
                        window.dispatchEvent(c)
                    } else
                        location.replace("#S" + this.currentSeason + "-E" + this.currentEpisode + "-" + this.seasons[this.currentSeason].episodes[this.currentEpisode].id_episode),
                        c = document.createEvent("Event"),
                        c.initEvent("ChangedEpisodeHash", !0, !0),
                        window.dispatchEvent(c);
                    window.currentEpisodeID = this.seasons[this.currentSeason].episodes[this.currentEpisode].id_episode;
                    window.currentEpisodeIndex = this.seasons[this.currentSeason].episodes[this.currentEpisode].index
                },
                updateComponent: function() {
                    "undefined" !== typeof location.hash && "" !== location.hash && this.isValidHash(location.hash) ? this.setFromHash(location.hash) : this.setRecentPlayedEpisode() || this.setLatest()
                },
                updateSeason: function(c) {
                    this.currentSeason = c;
                    this.setLatestEpisode(c);
                    this.updateHash()
                },
                updateEpisode: function(c) {
                    this.currentEpisode = c;
                    this.updateHash()
                },
                setRecentPlayedEpisode: function() {
                    if ("undefined" !== typeof window.show_storage.recentEpisode) {
                        for (var c = 0; c < window.show_storage.seasons.length; c++)
                            if (window.show_storage.seasons[c].id_episode === window.show_storage.recentEpisode.id_episode)
                                return this.currentEpisode = window.show_storage.seasons[c].episode,
                                this.currentSeason = window.show_storage.seasons[c].season,
                                window.currentEpisodeIndex = window.show_storage.seasons[c].index,
                                this.updateHash(),
                                !0;
                        return !1
                    }
                },
                setLatestEpisode: function() {
                    var c = 1, l;
                    for (l in this.seasons[this.currentSeason].episodes) {
                        c = l;
                        break
                    }
                    this.currentEpisode = c
                },
                setLatest: function(c) {
                    c = "undefined" === typeof c ? 1 : c;
                    var l = 1;
                    if (1 === c)
                        for (var e in this.seasons) {
                            c = e;
                            break
                        }
                    for (var d in this.seasons[c].episodes) {
                        l = d;
                        break
                    }
                    window.currentEpisodeIndex = this.seasons[c].episodes[l].index;
                    this.currentEpisode = l;
                    this.currentSeason = c;
                    this.updateHash()
                }
            },
            created: function() {
                this.seasons = JSON.parse(window.seasons)
            },
            mounted: function() {
                var c = this;
                window.addEventListener("switch-next-episode", function() {
                    c.currentSeason = window.show_storage.seasons[window.currentEpisodeIndex + 1].season;
                    c.currentEpisode = window.show_storage.seasons[window.currentEpisodeIndex + 1].episode;
                    c.updateHash()
                });
                document.querySelector(".episodes-controls-wrapper").classList.remove("zero-opacity");
                this.updateComponent()
            }
        })
    };
    location.hash.match(/#S\d+-E\d+-\d+/gi) && b(location.hash);
    window.addEventListener("ChangedEpisodeHash", function() {
        b(location.hash)
    });
    $(document).ready(function() {
        return $jscomp.asyncExecutePromiseGeneratorProgram(function(c) {
            try {
                g(),
                a()
            } catch (l) {
                console.log(l)
            }
            c.jumpToEnd()
        })
    })
}
function SubtitleUploadHandle() {
    window.UploadIndex = "undefined" === typeof window.UploadIndex ? 1 : window.UploadIndex;
    var a = function() {
        for (var b = 0; b < window.videoJS.tech_.textTracks_.length; b++)
            window.videoJS.tech_.textTracks_[b].mode = "disabled"
    };
    (function() {
        for (var b = document.querySelector("#SubtitlesDropzone"); b.firstChild; )
            b.removeChild(b.firstChild);
        var f = document.createElement("input");
        f.type = "file";
        b.appendChild(f);
        f.onchange = function() {
            var g = new XMLHttpRequest
              , c = new FormData;
            c.append("srt", f.files[0]);
            g.open("POST", window.location.protocol + "//" + window.Yii2App.apiDomain + "/v1/subtitles/srt-to-vtt");
            g.send(c);
            g.onreadystatechange = function() {
                if (4 === g.readyState) {
                    var l = new Blob([g.response],{
                        type: "text/vtt"
                    });
                    l = URL.createObjectURL(l);
                    var e = window.videoJS.addRemoteTextTrack({
                        src: l,
                        label: "Custom"
                    }, !1);
                    a();
                    setTimeout(function() {
                        e.track.mode = "showing"
                    }, 50);
                    window.UploadIndex++
                }
            }
        }
        ;
        f.click()
    }
    )()
}
function addControlBarOverlay(a) {
    var b = new (videojs.getComponent("Component"))(a);
    b.addClass("vjs-control-bar-overlay");
    a.addChild(b)
}
function playerBindQualitySave(a) {
    a.on("qualitySelected", function(b, f) {
        window.localStorage.setItem("lookmovie.prevQuality", f.label)
    })
}
function episodeNextCard(a, b) {
    b = b || {};
    b.title = "undefined" !== typeof b.title ? "" : b.title;
    b.timeout = "undefined" !== typeof b.timeout ? 10 : b.timeout;
    b.threshold = "undefined" !== typeof b.threshold ? 10 : b.threshold;
    b.backdrop = "undefined" !== typeof b.backdrop ? "" : b.backdrop;
    b = new (videojs.getComponent("Component"))(a,{
        el: videojs.dom.createEl("div", {
            type: "vjs-next-card"
        }, {
            class: "vjs-next-card"
        })
    });
    a.addChild(b)
}
function vjsCreatePlaybackTitleComponent(a) {
    var b = new (videojs.getComponent("Component"))(a,{
        el: videojs.dom.createEl("div", {
            type: "vjs-title"
        }, {
            class: "vjs-title"
        })
    });
    a.addChild(b);
    a.updatePlaybackTitle = function(f) {
        "undefined" !== typeof b && null !== b && (b.contentEl().innerHTML = f)
    }
}
function add1080pButton(a) {
    a.on("playing", function() {
        null !== document.querySelector(".only-prem-1080p") && $(".only-prem-1080p").remove()
    });
    $(document).on("click", ".only-prem-1080p__continue-watching", function(b) {
        b.preventDefault();
        a.play()
    });
    a.on("playerSourcesChanged", function() {
        var b = $('<li class="vjs-menu-item" id="user-limited-notify-button">FullHD</li>');
        b.on("click", function() {
            null === document.querySelector(".only-prem-1080p") && (window.videojs.browser.IS_IOS || window.videojs.browser.IS_ANDROID ? $(".vjs-lookmovie").append(get1080pMessageMobile()) : $(".vjs-lookmovie").append(get1080pMessage()));
            a.pause();
            $(".vjs-quality-selector").removeClass("vjs-hover")
        });
        $(".vjs-settings-quality-menu .vjs-menu-content").append(b)
    })
}
function get1080pMessage() {
    return '<div class="only-prem-1080p"><p><b>1080p</b> is available for Premium Members only</p><br><p><br>While we are doing everything to provide the best FREE <br>streaming experience it still comes with high server bandwidth costs.</p><br><p>To reduce costs, some features will be available for Paid Members only.</p><br><div class="only-prem-1080p__buttons"><a class="only-prem-1080p__button only-prem-1080p__continue-watching" href="#vjs-continue-watching">Continue Watching</a><a class="only-prem-1080p__button only-prem-1080p__check-premium" href="' + Yii2App.PREMIUM_PAGE_URL + '" target="_blank">Become Premium</a></div></div>'
}
function get1080pMessageMobile() {
    return '<div class="only-prem-1080p"><p><b>1080p</b> is available for Premium Members</p><br><div class="only-prem-1080p__buttons"><a class="only-prem-1080p__button only-prem-1080p__continue-watching" href="#vjs-continue-watching">Continue Watching</a><a class="only-prem-1080p__button only-prem-1080p__check-premium" href="' + Yii2App.PREMIUM_PAGE_URL + '" target="_blank">Become Premium</a></div></div>'
}
function setVideoJsBreakpoints(a) {
    a.breakpoints({
        tiny: 30,
        xsmall: 320,
        small: 450,
        medium: 992,
        large: 1440,
        xlarge: Infinity
    })
}
function vjsLoadDefaultSubtitleStyle(a) {
    return !1
}
function selectDefaultSource(a) {
    var b = ["FullHD", "HD", "480p", "360p"]
      , f = a.map(function(l) {
        return l.label
    })
      , g = window.localStorage.getItem("lookmovie.prevQuality");
    if (1 === a.length)
        return a["0"].selected = !0,
        a;
    if ("string" === typeof g) {
        var c = f.indexOf(g);
        if (-1 !== c)
            return a[c].selected = !0,
            a;
        for (c = 0; c < b.length; c++)
            if (b.indexOf(b[c]) >= b.indexOf(g) && -1 !== f.indexOf(b[c]))
                return a[f.indexOf(b[c])].selected = !0,
                a
    }
    for (b = 0; b < a.length; b++)
        if ("480p" === a[b].label)
            return a[b].selected = !0,
            a;
    a["0"].selected = !0;
    return a
}
function vjsCreateNextEpisodeButton(a) {
    a = a.controlBar.addChild("button", {
        text: "Next Episode",
        controlText: "Next Episode",
        className: "vjs-next-episode-button"
    }, 1);
    a.haveNextEpisode = function() {
        return window.currentEpisodeIndex + 1 < window.show_storage.total_episodes ? !0 : !1
    }
    ;
    a.haveNextEpisode() || a.disable();
    a.handleClick = function() {
        window.dispatchEvent(new Event("switch-next-episode"))
    }
}
function vjsCreateSubtitlesButton(a) {
    var b = videojs.getComponent("Component")
      , f = videojs.getComponent("Button");
    this.enableTextTrack = function(e, d) {
        var h = this, k, m, n, q;
        return $jscomp.asyncExecutePromiseGeneratorProgram(function(p) {
            switch (p.nextAddress) {
            case 1:
                for (k = 0; a.textTracks().length > k; k++)
                    a.textTracks()[k].mode = "disabled";
                if ("object" != typeof a.textTracks()[e].src) {
                    p.jumpTo(2);
                    break
                }
                p.setCatchFinallyBlocks(3);
                a.notifyEl = vjsInsertInTextTrackDisplay(a, "Loading: " + d);
                m = new FormData;
                m.append("source_id", a.textTracks()[e].src[1]);
                m.append("opensubtitle_id", a.textTracks()[e].src[0]);
                m.append("language_id", a.textTracks()[e].src[2]);
                m.append("release_title", a.textTracks()[e].src[3]);
                m.append("score", a.textTracks()[e].src[4]);
                return p.yield(h.uploadTextTrack(m), 5);
            case 5:
                n = p.yieldResult;
                n = "string" === typeof n ? JSON.parse(n) : n;
                a.textTracks()[e].src = n.url;
                p.leaveTryBlock(2);
                break;
            case 3:
                return q = p.enterCatchBlock(),
                console.log(q),
                "undefined" !== typeof a.notifyEl && !1 === a.notifyEl.isDisposed() && a.notifyEl.dispose(),
                p.return(!1);
            case 2:
                if ("undefined" === typeof a.textTracks()[e])
                    return p.return(!1);
                a.textTracks()[e].mode = "showing";
                window.localStorage.setItem(keyLatestSubtitleLanguage, a.textTracks()[e].label);
                "undefined" !== typeof a.notifyEl && !1 === a.notifyEl.isDisposed() && a.notifyEl.dispose();
                p.jumpToEnd()
            }
        })
    }
    ;
    this.uploadTextTrack = function(e) {
        var d;
        "undefined" !== typeof window.movie_storage && "movie" === window.movie_storage.type ? d = "/api/v1/security/upload-movie-opensub?id_movie=" + window.movie_storage.id_movie : "undefined" !== typeof window.show_storage && "show" === window.show_storage.type && (d = "/api/v1/security/upload-episode-opensub?id_episode=" + window.currentEpisodeID);
        return makeAJAXCall("POST", d, null, e)
    }
    ;
    this.disableSubtitles = function(e) {
        e = a.remoteTextTracks();
        for (var d = 0; e.length > d; d++)
            e[d].mode = "disabled";
        window.localStorage.removeItem(keyLatestSubtitleLanguage)
    }
    ;
    this._createSubtitleOffComponent = function() {
        var e = this
          , d = new b(a);
        d.addClass("vjs-subtitle-off");
        d.addClass("showing");
        d.addChild(new f(a,{
            el: function(h, k) {
                var m = document.createElement("button");
                m.innerHTML = h;
                m.classList.add.apply(m.classList, $jscomp.arrayFromIterable(k));
                return m
            }("Off", []),
            clickHandler: function(h) {
                e.disableSubtitles();
                d.trigger("closeMenuClicked");
                d.addClass("showing")
            }
        }));
        return d
    }
    ;
    this._createHeadingComponent = function() {
        var e = function(h, k) {
            var m = document.createElement("button");
            m.innerHTML = h;
            m.classList.add("vjs-heading-button");
            m.classList.add.apply(m.classList, $jscomp.arrayFromIterable(k));
            return m
        }
          , d = new b(a);
        d.addClass("vjs-settings-heading");
        d.addChild(new f(a,{
            el: e("Upload", []),
            clickHandler: function(h) {
                d.trigger("closeMenuClicked");
                SubtitleUploadHandle()
            }
        }));
        d.addChild(new f(a,{
            el: e("Settings", []),
            clickHandler: function(h) {
                d.trigger("closeMenuClicked");
                a.getChild("textTrackSettings").open()
            }
        }));
        d.addChild(new f(a,{
            el: e('<span class="vjs-icon-placeholder vjs-icon-close"></span>', ["heading-close-button"]),
            clickHandler: function(h) {
                d.trigger("closeMenuClicked")
            }
        }));
        return d
    }
    ;
    this._createSubtitlesListComponent = function(e) {
        var d = document.createElement("div");
        d.classList.add("vjs-subtitles-list");
        var h = new b(a,{
            el: d
        })
          , k = a.textTracks();
        d.toggleChildren = function(n) {
            for (var q = n.classList.contains("open"), p = 0; p < d.children.length; p++)
                d.children[p].classList.remove("open");
            q ? n.classList.remove("open") : n.classList.add("open")
        }
        ;
        var m = function() {
            d.innerHTML = "";
            a.remoteTextTrackEls();
            for (var n = a.textTracks(), q = {}, p = 0; p < n.length; p++)
                "subtitles" === n[p].kind && ("undefined" === typeof q[n[p].label] && (q[n[p].label] = []),
                q[n[p].label].push({
                    label: n[p].label,
                    mode: n[p].mode,
                    index: p
                }));
            n = {};
            for (var t in q) {
                n.$jscomp$loop$prop$key$6 = t;
                if (q.hasOwnProperty(n.$jscomp$loop$prop$key$6)) {
                    var r = document.createElement("button");
                    n.$jscomp$loop$prop$menuContainer$5 = document.createElement("div");
                    p = document.createElement("ul");
                    r.classList.add("vjs-subtitles-language-toggle");
                    r.innerHTML = '<span class="vjs-subtitles-language-title">' + n.$jscomp$loop$prop$key$6 + '</span> <span class="toggle-plus">+</span> <span class="toggle-minus">-</span>';
                    n.$jscomp$loop$prop$menuContainer$5.classList.add("vjs-subtitles-item");
                    n.$jscomp$loop$prop$menuContainer$5.appendChild(r);
                    n.$jscomp$loop$prop$menuContainer$5.appendChild(p);
                    n.$jscomp$loop$prop$menuContainer$5.addEventListener("click", function(v) {
                        return function(w) {
                            w.stopPropagation();
                            d.toggleChildren(v.$jscomp$loop$prop$menuContainer$5)
                        }
                    }(n));
                    p.classList.add("vjs-subtitles-language-items");
                    for (r = {
                        $jscomp$loop$prop$i$2$8: 0
                    }; r.$jscomp$loop$prop$i$2$8 < q[n.$jscomp$loop$prop$key$6].length; r = {
                        $jscomp$loop$prop$i$2$8: r.$jscomp$loop$prop$i$2$8
                    },
                    r.$jscomp$loop$prop$i$2$8++) {
                        var u = document.createElement("li");
                        u.classList.add("vjs-subtitles-language-item");
                        u.innerHTML = "<span>" + n.$jscomp$loop$prop$key$6 + " " + (r.$jscomp$loop$prop$i$2$8 + 1) + "</span>";
                        u.addEventListener("click", function(v, w) {
                            return function(x) {
                                $(x.target).parent().addClass("active-child");
                                x.stopPropagation();
                                this.enableTextTrack(q[v.$jscomp$loop$prop$key$6][w.$jscomp$loop$prop$i$2$8].index, v.$jscomp$loop$prop$key$6 + " " + (w.$jscomp$loop$prop$i$2$8 + 1) + '<svg class="nf-spinner" viewBox="0 0 50 50"><circle class="path" cx="25" cy="25" r="20" fill="none" stroke-width="5"></circle></svg>');
                                e.hide()
                            }
                        }(n, r).bind(this));
                        "showing" === q[n.$jscomp$loop$prop$key$6][r.$jscomp$loop$prop$i$2$8].mode && (n.$jscomp$loop$prop$menuContainer$5.classList.add("open"),
                        u.classList.add("showing"),
                        document.getElementsByClassName("vjs-subtitle-off ")[0].classList.remove("showing"));
                        p.appendChild(u)
                    }
                    d.appendChild(n.$jscomp$loop$prop$menuContainer$5)
                }
                n = {
                    $jscomp$loop$prop$menuContainer$5: n.$jscomp$loop$prop$menuContainer$5,
                    $jscomp$loop$prop$key$6: n.$jscomp$loop$prop$key$6
                }
            }
        };
        k.on("change", function() {
            m()
        });
        k.on("addtrack", function() {
            m()
        });
        return h
    }
    ;
    this._buildVjsMenuSwitcher = function() {
        var e = this._createHeadingComponent()
          , d = new b(a);
        d.el_.className = "vjs-settings-body";
        var h = this._createSubtitleOffComponent();
        e.on("closeMenuClicked", function() {
            k.hide()
        });
        h.on("closeMenuClicked", function() {
            k.hide()
        });
        var k = new b(a);
        k.el_.className = "vjs-menu vjs-settings-menu vjs-hidden";
        k.show = function() {
            this.removeClass("vjs-hidden")
        }
        ;
        k.toggle = function(m) {
            this.hasClass("vjs-hidden") ? this.show() : this.hide()
        }
        ;
        k.hide = function() {
            this.addClass("vjs-hidden")
        }
        ;
        k.addChild(e);
        d.addChild(h);
        d.addChild(this._createSubtitlesListComponent(k));
        k.addChild(d);
        return k
    }
    ;
    var g = new b(a)
      , c = this._buildVjsMenuSwitcher()
      , l = new f(a,{
        clickHandler: function(e) {
            c.toggle(l)
        }
    });
    l.el_.className = "vjs-subtitles-button vjs-menu-button vjs-menu-button-popup vjs-control vjs-button";
    g.addClass("vjs-menu-button");
    g.addClass("vjs-button");
    g.addClass("vjs-control");
    g.addChild(l);
    a.controlBar.addChild(g, {}, a.controlBar.children().length - 3);
    540 > window.innerWidth ? a.addChild(c) : a.controlBar.addChild(c)
}
function initPrePlaybackCounter(a) {
    a = void 0 === a ? 10 : a;
    var b, f = document.querySelector(".player-pre-init-ads"), g = document.querySelectorAll(".player-ads-summer-2024-counter__value > span"), c = document.querySelector(".player-ads-summer-2024--back"), l = document.querySelector(".player-ads-summer-2024--close");
    "undefined" !== typeof window._progressInterval && clearInterval(window._progressInterval);
    var e = new Promise(function(d, h) {
        b = h;
        var k = a;
        if (1 > k || "number" === typeof window._preInitAdsTimestamp && 5E4 > Date.now() - window._preInitAdsTimestamp)
            return d();
        f.classList.remove("hidden");
        f.classList.remove("finished");
        "undefined" !== typeof window._counterTimeout && (clearInterval(window._counterTimeout),
        window._counterTimeout = void 0);
        l.onclick = function() {
            window._preInitAdsTimestamp = Date.now();
            f.classList.add("hidden");
            return d()
        }
        ;
        c.onclick = function() {
            window._preInitAdsTimestamp = Date.now();
            f.classList.add("hidden");
            return d()
        }
        ;
        for (h = 0; h < g.length; h++)
            g[h].innerHTML = k;
        window._counterTimeout = setInterval(function() {
            --k;
            for (var m = 0; m < g.length; m++)
                g[m].innerHTML = k;
            0 >= k && (clearInterval(window._counterTimeout),
            f.classList.add("finished"))
        }, 1E3)
    }
    );
    e.cancel = function() {
        clearInterval(window._counterTimeout);
        window._counterTimeout = void 0;
        b()
    }
    ;
    return e
}
function renderPlayerMessage(a, b) {
    document.querySelector(".placeholder__wrapper").style.display = "none";
    document.querySelector(".player__wrapper").style.display = "none";
    document.querySelector(".player_message_wrapper").style.display = "block";
    document.querySelector(".player_message_wrapper .message-container").innerHTML = a
}
;/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/330939e7/js/main/player/Player.js.tmp ***/
/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/c9e11c47/video.js.tmp ***/
/*

 Video.js 7.20.3 <http://videojs.com/>
 Copyright Brightcove, Inc. <https://www.brightcove.com/>
 Available under Apache License Version 2.0
 <https://github.com/videojs/video.js/blob/main/LICENSE>

 Includes vtt.js <https://github.com/mozilla/vtt.js>
 Available under Apache License Version 2.0
 <https://github.com/mozilla/vtt.js/blob/main/LICENSE>

 slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>
 Copyright (c) 2014 David Bj?rklund
 Available under the MIT license
 <https://github.com/kesla/parse-headers/blob/master/LICENCE>
 Programatically add the following
 @name m3u8-parser @version 4.7.1 @license Apache-2.0  @name mpd-parser @version 0.21.1 @license Apache-2.0  @name @videojs/http-streaming @version 2.14.3 @license Apache-2.0  @name pkcs7 @version 1.0.4 @license Apache-2.0  @name aes-decrypter @version 3.1.3 @license Apache-2.0 */
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.owns = function(R, ha) {
    return Object.prototype.hasOwnProperty.call(R, ha)
}
;
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.ISOLATE_POLYFILLS = !1;
$jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(R, ha, ca) {
    if (R == Array.prototype || R == Object.prototype)
        return R;
    R[ha] = ca.value;
    return R
}
;
$jscomp.getGlobal = function(R) {
    R = ["object" == typeof globalThis && globalThis, R, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global];
    for (var ha = 0; ha < R.length; ++ha) {
        var ca = R[ha];
        if (ca && ca.Math == Math)
            return ca
    }
    throw Error("Cannot find global object");
}
;
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.IS_SYMBOL_NATIVE = "function" === typeof Symbol && "symbol" === typeof Symbol("x");
$jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE;
$jscomp.polyfills = {};
$jscomp.propertyToPolyfillSymbol = {};
$jscomp.POLYFILL_PREFIX = "$jscp$";
var $jscomp$lookupPolyfilledValue = function(R, ha) {
    var ca = $jscomp.propertyToPolyfillSymbol[ha];
    if (null == ca)
        return R[ha];
    ca = R[ca];
    return void 0 !== ca ? ca : R[ha]
};
$jscomp.polyfill = function(R, ha, ca, da) {
    ha && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(R, ha, ca, da) : $jscomp.polyfillUnisolated(R, ha, ca, da))
}
;
$jscomp.polyfillUnisolated = function(R, ha, ca, da) {
    ca = $jscomp.global;
    R = R.split(".");
    for (da = 0; da < R.length - 1; da++) {
        var W = R[da];
        if (!(W in ca))
            return;
        ca = ca[W]
    }
    R = R[R.length - 1];
    da = ca[R];
    ha = ha(da);
    ha != da && null != ha && $jscomp.defineProperty(ca, R, {
        configurable: !0,
        writable: !0,
        value: ha
    })
}
;
$jscomp.polyfillIsolated = function(R, ha, ca, da) {
    var W = R.split(".");
    R = 1 === W.length;
    da = W[0];
    da = !R && da in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global;
    for (var wa = 0; wa < W.length - 1; wa++) {
        var Z = W[wa];
        if (!(Z in da))
            return;
        da = da[Z]
    }
    W = W[W.length - 1];
    ca = $jscomp.IS_SYMBOL_NATIVE && "es6" === ca ? da[W] : null;
    ha = ha(ca);
    null != ha && (R ? $jscomp.defineProperty($jscomp.polyfills, W, {
        configurable: !0,
        writable: !0,
        value: ha
    }) : ha !== ca && ($jscomp.propertyToPolyfillSymbol[W] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol(W) : $jscomp.POLYFILL_PREFIX + W,
    W = $jscomp.propertyToPolyfillSymbol[W],
    $jscomp.defineProperty(da, W, {
        configurable: !0,
        writable: !0,
        value: ha
    })))
}
;
$jscomp.assign = $jscomp.TRUST_ES6_POLYFILLS && "function" == typeof Object.assign ? Object.assign : function(R, ha) {
    for (var ca = 1; ca < arguments.length; ca++) {
        var da = arguments[ca];
        if (da)
            for (var W in da)
                $jscomp.owns(da, W) && (R[W] = da[W])
    }
    return R
}
;
$jscomp.polyfill("Object.assign", function(R) {
    return R || $jscomp.assign
}, "es6", "es3");
$jscomp.arrayIteratorImpl = function(R) {
    var ha = 0;
    return function() {
        return ha < R.length ? {
            done: !1,
            value: R[ha++]
        } : {
            done: !0
        }
    }
}
;
$jscomp.arrayIterator = function(R) {
    return {
        next: $jscomp.arrayIteratorImpl(R)
    }
}
;
$jscomp.initSymbol = function() {}
;
$jscomp.polyfill("Symbol", function(R) {
    if (R)
        return R;
    var ha = function(W, wa) {
        this.$jscomp$symbol$id_ = W;
        $jscomp.defineProperty(this, "description", {
            configurable: !0,
            writable: !0,
            value: wa
        })
    };
    ha.prototype.toString = function() {
        return this.$jscomp$symbol$id_
    }
    ;
    var ca = 0
      , da = function(W) {
        if (this instanceof da)
            throw new TypeError("Symbol is not a constructor");
        return new ha("jscomp_symbol_" + (W || "") + "_" + ca++,W)
    };
    return da
}, "es6", "es3");
$jscomp.polyfill("Symbol.iterator", function(R) {
    if (R)
        return R;
    R = Symbol("Symbol.iterator");
    for (var ha = "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "), ca = 0; ca < ha.length; ca++) {
        var da = $jscomp.global[ha[ca]];
        "function" === typeof da && "function" != typeof da.prototype[R] && $jscomp.defineProperty(da.prototype, R, {
            configurable: !0,
            writable: !0,
            value: function() {
                return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))
            }
        })
    }
    return R
}, "es6", "es3");
$jscomp.iteratorPrototype = function(R) {
    R = {
        next: R
    };
    R[Symbol.iterator] = function() {
        return this
    }
    ;
    return R
}
;
$jscomp.iteratorFromArray = function(R, ha) {
    R instanceof String && (R += "");
    var ca = 0
      , da = !1
      , W = {
        next: function() {
            if (!da && ca < R.length) {
                var wa = ca++;
                return {
                    value: ha(wa, R[wa]),
                    done: !1
                }
            }
            da = !0;
            return {
                done: !0,
                value: void 0
            }
        }
    };
    W[Symbol.iterator] = function() {
        return W
    }
    ;
    return W
}
;
$jscomp.polyfill("Array.prototype.keys", function(R) {
    return R ? R : function() {
        return $jscomp.iteratorFromArray(this, function(ha) {
            return ha
        })
    }
}, "es6", "es3");
$jscomp.checkEs6ConformanceViaProxy = function() {
    try {
        var R = {}
          , ha = Object.create(new $jscomp.global.Proxy(R,{
            get: function(ca, da, W) {
                return ca == R && "q" == da && W == ha
            }
        }));
        return !0 === ha.q
    } catch (ca) {
        return !1
    }
}
;
$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS = !1;
$jscomp.ES6_CONFORMANCE = $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS && $jscomp.checkEs6ConformanceViaProxy();
$jscomp.makeIterator = function(R) {
    var ha = "undefined" != typeof Symbol && Symbol.iterator && R[Symbol.iterator];
    return ha ? ha.call(R) : $jscomp.arrayIterator(R)
}
;
$jscomp.polyfill("WeakMap", function(R) {
    function ha() {
        if (!R || !Object.seal)
            return !1;
        try {
            var ea = Object.seal({})
              , ka = Object.seal({})
              , ua = new R([[ea, 2], [ka, 3]]);
            if (2 != ua.get(ea) || 3 != ua.get(ka))
                return !1;
            ua.delete(ea);
            ua.set(ka, 4);
            return !ua.has(ea) && 4 == ua.get(ka)
        } catch (Qa) {
            return !1
        }
    }
    function ca() {}
    function da(ea) {
        var ka = typeof ea;
        return "object" === ka && null !== ea || "function" === ka
    }
    function W(ea) {
        if (!$jscomp.owns(ea, Z)) {
            var ka = new ca;
            $jscomp.defineProperty(ea, Z, {
                value: ka
            })
        }
    }
    function wa(ea) {
        if (!$jscomp.ISOLATE_POLYFILLS) {
            var ka = Object[ea];
            ka && (Object[ea] = function(ua) {
                if (ua instanceof ca)
                    return ua;
                Object.isExtensible(ua) && W(ua);
                return ka(ua)
            }
            )
        }
    }
    if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
        if (R && $jscomp.ES6_CONFORMANCE)
            return R
    } else if (ha())
        return R;
    var Z = "$jscomp_hidden_" + Math.random();
    wa("freeze");
    wa("preventExtensions");
    wa("seal");
    var pa = 0
      , ba = function(ea) {
        this.id_ = (pa += Math.random() + 1).toString();
        if (ea) {
            ea = $jscomp.makeIterator(ea);
            for (var ka; !(ka = ea.next()).done; )
                ka = ka.value,
                this.set(ka[0], ka[1])
        }
    };
    ba.prototype.set = function(ea, ka) {
        if (!da(ea))
            throw Error("Invalid WeakMap key");
        W(ea);
        if (!$jscomp.owns(ea, Z))
            throw Error("WeakMap key fail: " + ea);
        ea[Z][this.id_] = ka;
        return this
    }
    ;
    ba.prototype.get = function(ea) {
        return da(ea) && $jscomp.owns(ea, Z) ? ea[Z][this.id_] : void 0
    }
    ;
    ba.prototype.has = function(ea) {
        return da(ea) && $jscomp.owns(ea, Z) && $jscomp.owns(ea[Z], this.id_)
    }
    ;
    ba.prototype.delete = function(ea) {
        return da(ea) && $jscomp.owns(ea, Z) && $jscomp.owns(ea[Z], this.id_) ? delete ea[Z][this.id_] : !1
    }
    ;
    return ba
}, "es6", "es3");
$jscomp.MapEntry = function() {}
;
$jscomp.polyfill("Map", function(R) {
    function ha() {
        if ($jscomp.ASSUME_NO_NATIVE_MAP || !R || "function" != typeof R || !R.prototype.entries || "function" != typeof Object.seal)
            return !1;
        try {
            var ba = Object.seal({
                x: 4
            })
              , ea = new R($jscomp.makeIterator([[ba, "s"]]));
            if ("s" != ea.get(ba) || 1 != ea.size || ea.get({
                x: 4
            }) || ea.set({
                x: 4
            }, "t") != ea || 2 != ea.size)
                return !1;
            var ka = ea.entries()
              , ua = ka.next();
            if (ua.done || ua.value[0] != ba || "s" != ua.value[1])
                return !1;
            ua = ka.next();
            return ua.done || 4 != ua.value[0].x || "t" != ua.value[1] || !ka.next().done ? !1 : !0
        } catch (Qa) {
            return !1
        }
    }
    if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
        if (R && $jscomp.ES6_CONFORMANCE)
            return R
    } else if (ha())
        return R;
    var ca = new WeakMap
      , da = function(ba) {
        this.data_ = {};
        this.head_ = Z();
        this.size = 0;
        if (ba) {
            ba = $jscomp.makeIterator(ba);
            for (var ea; !(ea = ba.next()).done; )
                ea = ea.value,
                this.set(ea[0], ea[1])
        }
    };
    da.prototype.set = function(ba, ea) {
        ba = 0 === ba ? 0 : ba;
        var ka = W(this, ba);
        ka.list || (ka.list = this.data_[ka.id] = []);
        ka.entry ? ka.entry.value = ea : (ka.entry = {
            next: this.head_,
            previous: this.head_.previous,
            head: this.head_,
            key: ba,
            value: ea
        },
        ka.list.push(ka.entry),
        this.head_.previous.next = ka.entry,
        this.head_.previous = ka.entry,
        this.size++);
        return this
    }
    ;
    da.prototype.delete = function(ba) {
        ba = W(this, ba);
        return ba.entry && ba.list ? (ba.list.splice(ba.index, 1),
        ba.list.length || delete this.data_[ba.id],
        ba.entry.previous.next = ba.entry.next,
        ba.entry.next.previous = ba.entry.previous,
        ba.entry.head = null,
        this.size--,
        !0) : !1
    }
    ;
    da.prototype.clear = function() {
        this.data_ = {};
        this.head_ = this.head_.previous = Z();
        this.size = 0
    }
    ;
    da.prototype.has = function(ba) {
        return !!W(this, ba).entry
    }
    ;
    da.prototype.get = function(ba) {
        return (ba = W(this, ba).entry) && ba.value
    }
    ;
    da.prototype.entries = function() {
        return wa(this, function(ba) {
            return [ba.key, ba.value]
        })
    }
    ;
    da.prototype.keys = function() {
        return wa(this, function(ba) {
            return ba.key
        })
    }
    ;
    da.prototype.values = function() {
        return wa(this, function(ba) {
            return ba.value
        })
    }
    ;
    da.prototype.forEach = function(ba, ea) {
        for (var ka = this.entries(), ua; !(ua = ka.next()).done; )
            ua = ua.value,
            ba.call(ea, ua[1], ua[0], this)
    }
    ;
    da.prototype[Symbol.iterator] = da.prototype.entries;
    var W = function(ba, ea) {
        var ka = ea && typeof ea;
        "object" == ka || "function" == ka ? ca.has(ea) ? ka = ca.get(ea) : (ka = "" + ++pa,
        ca.set(ea, ka)) : ka = "p_" + ea;
        var ua = ba.data_[ka];
        if (ua && $jscomp.owns(ba.data_, ka))
            for (ba = 0; ba < ua.length; ba++) {
                var Qa = ua[ba];
                if (ea !== ea && Qa.key !== Qa.key || ea === Qa.key)
                    return {
                        id: ka,
                        list: ua,
                        index: ba,
                        entry: Qa
                    }
            }
        return {
            id: ka,
            list: ua,
            index: -1,
            entry: void 0
        }
    }
      , wa = function(ba, ea) {
        var ka = ba.head_;
        return $jscomp.iteratorPrototype(function() {
            if (ka) {
                for (; ka.head != ba.head_; )
                    ka = ka.previous;
                for (; ka.next != ka.head; )
                    return ka = ka.next,
                    {
                        done: !1,
                        value: ea(ka)
                    };
                ka = null
            }
            return {
                done: !0,
                value: void 0
            }
        })
    }
      , Z = function() {
        var ba = {};
        return ba.previous = ba.next = ba.head = ba
    }
      , pa = 0;
    return da
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.values", function(R) {
    return R ? R : function() {
        return $jscomp.iteratorFromArray(this, function(ha, ca) {
            return ca
        })
    }
}, "es8", "es3");
$jscomp.polyfill("Array.prototype.fill", function(R) {
    return R ? R : function(ha, ca, da) {
        var W = this.length || 0;
        0 > ca && (ca = Math.max(0, W + ca));
        if (null == da || da > W)
            da = W;
        da = Number(da);
        0 > da && (da = Math.max(0, W + da));
        for (ca = Number(ca || 0); ca < da; ca++)
            this[ca] = ha;
        return this
    }
}, "es6", "es3");
$jscomp.typedArrayFill = function(R) {
    return R ? R : Array.prototype.fill
}
;
$jscomp.polyfill("Int8Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Uint8Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Uint8ClampedArray.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Int16Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Uint16Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Int32Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Uint32Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Float32Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Float64Array.prototype.fill", $jscomp.typedArrayFill, "es6", "es5");
$jscomp.polyfill("Set", function(R) {
    function ha() {
        if ($jscomp.ASSUME_NO_NATIVE_SET || !R || "function" != typeof R || !R.prototype.entries || "function" != typeof Object.seal)
            return !1;
        try {
            var da = Object.seal({
                x: 4
            })
              , W = new R($jscomp.makeIterator([da]));
            if (!W.has(da) || 1 != W.size || W.add(da) != W || 1 != W.size || W.add({
                x: 4
            }) != W || 2 != W.size)
                return !1;
            var wa = W.entries()
              , Z = wa.next();
            if (Z.done || Z.value[0] != da || Z.value[1] != da)
                return !1;
            Z = wa.next();
            return Z.done || Z.value[0] == da || 4 != Z.value[0].x || Z.value[1] != Z.value[0] ? !1 : wa.next().done
        } catch (pa) {
            return !1
        }
    }
    if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
        if (R && $jscomp.ES6_CONFORMANCE)
            return R
    } else if (ha())
        return R;
    var ca = function(da) {
        this.map_ = new Map;
        if (da) {
            da = $jscomp.makeIterator(da);
            for (var W; !(W = da.next()).done; )
                this.add(W.value)
        }
        this.size = this.map_.size
    };
    ca.prototype.add = function(da) {
        da = 0 === da ? 0 : da;
        this.map_.set(da, da);
        this.size = this.map_.size;
        return this
    }
    ;
    ca.prototype.delete = function(da) {
        da = this.map_.delete(da);
        this.size = this.map_.size;
        return da
    }
    ;
    ca.prototype.clear = function() {
        this.map_.clear();
        this.size = 0
    }
    ;
    ca.prototype.has = function(da) {
        return this.map_.has(da)
    }
    ;
    ca.prototype.entries = function() {
        return this.map_.entries()
    }
    ;
    ca.prototype.values = function() {
        return this.map_.values()
    }
    ;
    ca.prototype.keys = ca.prototype.values;
    ca.prototype[Symbol.iterator] = ca.prototype.values;
    ca.prototype.forEach = function(da, W) {
        var wa = this;
        this.map_.forEach(function(Z) {
            return da.call(W, Z, Z, wa)
        })
    }
    ;
    return ca
}, "es6", "es3");
$jscomp.polyfill("Promise", function(R) {
    function ha() {
        this.batch_ = null
    }
    function ca(Z) {
        return Z instanceof W ? Z : new W(function(pa, ba) {
            pa(Z)
        }
        )
    }
    if (R && (!($jscomp.FORCE_POLYFILL_PROMISE || $jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION && "undefined" === typeof $jscomp.global.PromiseRejectionEvent) || !$jscomp.global.Promise || -1 === $jscomp.global.Promise.toString().indexOf("[native code]")))
        return R;
    ha.prototype.asyncExecute = function(Z) {
        if (null == this.batch_) {
            this.batch_ = [];
            var pa = this;
            this.asyncExecuteFunction(function() {
                pa.executeBatch_()
            })
        }
        this.batch_.push(Z)
    }
    ;
    var da = $jscomp.global.setTimeout;
    ha.prototype.asyncExecuteFunction = function(Z) {
        da(Z, 0)
    }
    ;
    ha.prototype.executeBatch_ = function() {
        for (; this.batch_ && this.batch_.length; ) {
            var Z = this.batch_;
            this.batch_ = [];
            for (var pa = 0; pa < Z.length; ++pa) {
                var ba = Z[pa];
                Z[pa] = null;
                try {
                    ba()
                } catch (ea) {
                    this.asyncThrow_(ea)
                }
            }
        }
        this.batch_ = null
    }
    ;
    ha.prototype.asyncThrow_ = function(Z) {
        this.asyncExecuteFunction(function() {
            throw Z;
        })
    }
    ;
    var W = function(Z) {
        this.state_ = 0;
        this.result_ = void 0;
        this.onSettledCallbacks_ = [];
        this.isRejectionHandled_ = !1;
        var pa = this.createResolveAndReject_();
        try {
            Z(pa.resolve, pa.reject)
        } catch (ba) {
            pa.reject(ba)
        }
    };
    W.prototype.createResolveAndReject_ = function() {
        function Z(ea) {
            return function(ka) {
                ba || (ba = !0,
                ea.call(pa, ka))
            }
        }
        var pa = this
          , ba = !1;
        return {
            resolve: Z(this.resolveTo_),
            reject: Z(this.reject_)
        }
    }
    ;
    W.prototype.resolveTo_ = function(Z) {
        if (Z === this)
            this.reject_(new TypeError("A Promise cannot resolve to itself"));
        else if (Z instanceof W)
            this.settleSameAsPromise_(Z);
        else {
            a: switch (typeof Z) {
            case "object":
                var pa = null != Z;
                break a;
            case "function":
                pa = !0;
                break a;
            default:
                pa = !1
            }
            pa ? this.resolveToNonPromiseObj_(Z) : this.fulfill_(Z)
        }
    }
    ;
    W.prototype.resolveToNonPromiseObj_ = function(Z) {
        var pa = void 0;
        try {
            pa = Z.then
        } catch (ba) {
            this.reject_(ba);
            return
        }
        "function" == typeof pa ? this.settleSameAsThenable_(pa, Z) : this.fulfill_(Z)
    }
    ;
    W.prototype.reject_ = function(Z) {
        this.settle_(2, Z)
    }
    ;
    W.prototype.fulfill_ = function(Z) {
        this.settle_(1, Z)
    }
    ;
    W.prototype.settle_ = function(Z, pa) {
        if (0 != this.state_)
            throw Error("Cannot settle(" + Z + ", " + pa + "): Promise already settled in state" + this.state_);
        this.state_ = Z;
        this.result_ = pa;
        2 === this.state_ && this.scheduleUnhandledRejectionCheck_();
        this.executeOnSettledCallbacks_()
    }
    ;
    W.prototype.scheduleUnhandledRejectionCheck_ = function() {
        var Z = this;
        da(function() {
            if (Z.notifyUnhandledRejection_()) {
                var pa = $jscomp.global.console;
                "undefined" !== typeof pa && pa.error(Z.result_)
            }
        }, 1)
    }
    ;
    W.prototype.notifyUnhandledRejection_ = function() {
        if (this.isRejectionHandled_)
            return !1;
        var Z = $jscomp.global.CustomEvent
          , pa = $jscomp.global.Event
          , ba = $jscomp.global.dispatchEvent;
        if ("undefined" === typeof ba)
            return !0;
        "function" === typeof Z ? Z = new Z("unhandledrejection",{
            cancelable: !0
        }) : "function" === typeof pa ? Z = new pa("unhandledrejection",{
            cancelable: !0
        }) : (Z = $jscomp.global.document.createEvent("CustomEvent"),
        Z.initCustomEvent("unhandledrejection", !1, !0, Z));
        Z.promise = this;
        Z.reason = this.result_;
        return ba(Z)
    }
    ;
    W.prototype.executeOnSettledCallbacks_ = function() {
        if (null != this.onSettledCallbacks_) {
            for (var Z = 0; Z < this.onSettledCallbacks_.length; ++Z)
                wa.asyncExecute(this.onSettledCallbacks_[Z]);
            this.onSettledCallbacks_ = null
        }
    }
    ;
    var wa = new ha;
    W.prototype.settleSameAsPromise_ = function(Z) {
        var pa = this.createResolveAndReject_();
        Z.callWhenSettled_(pa.resolve, pa.reject)
    }
    ;
    W.prototype.settleSameAsThenable_ = function(Z, pa) {
        var ba = this.createResolveAndReject_();
        try {
            Z.call(pa, ba.resolve, ba.reject)
        } catch (ea) {
            ba.reject(ea)
        }
    }
    ;
    W.prototype.then = function(Z, pa) {
        function ba(Qa, ta) {
            return "function" == typeof Qa ? function(yb) {
                try {
                    ea(Qa(yb))
                } catch (hc) {
                    ka(hc)
                }
            }
            : ta
        }
        var ea, ka, ua = new W(function(Qa, ta) {
            ea = Qa;
            ka = ta
        }
        );
        this.callWhenSettled_(ba(Z, ea), ba(pa, ka));
        return ua
    }
    ;
    W.prototype.catch = function(Z) {
        return this.then(void 0, Z)
    }
    ;
    W.prototype.callWhenSettled_ = function(Z, pa) {
        function ba() {
            switch (ea.state_) {
            case 1:
                Z(ea.result_);
                break;
            case 2:
                pa(ea.result_);
                break;
            default:
                throw Error("Unexpected state: " + ea.state_);
            }
        }
        var ea = this;
        null == this.onSettledCallbacks_ ? wa.asyncExecute(ba) : this.onSettledCallbacks_.push(ba);
        this.isRejectionHandled_ = !0
    }
    ;
    W.resolve = ca;
    W.reject = function(Z) {
        return new W(function(pa, ba) {
            ba(Z)
        }
        )
    }
    ;
    W.race = function(Z) {
        return new W(function(pa, ba) {
            for (var ea = $jscomp.makeIterator(Z), ka = ea.next(); !ka.done; ka = ea.next())
                ca(ka.value).callWhenSettled_(pa, ba)
        }
        )
    }
    ;
    W.all = function(Z) {
        var pa = $jscomp.makeIterator(Z)
          , ba = pa.next();
        return ba.done ? ca([]) : new W(function(ea, ka) {
            function ua(yb) {
                return function(hc) {
                    Qa[yb] = hc;
                    ta--;
                    0 == ta && ea(Qa)
                }
            }
            var Qa = []
              , ta = 0;
            do
                Qa.push(void 0),
                ta++,
                ca(ba.value).callWhenSettled_(ua(Qa.length - 1), ka),
                ba = pa.next();
            while (!ba.done)
        }
        )
    }
    ;
    return W
}, "es6", "es3");
$jscomp.underscoreProtoCanBeSet = function() {
    var R = {
        a: !0
    }
      , ha = {};
    try {
        return ha.__proto__ = R,
        ha.a
    } catch (ca) {}
    return !1
}
;
$jscomp.setPrototypeOf = $jscomp.TRUST_ES6_POLYFILLS && "function" == typeof Object.setPrototypeOf ? Object.setPrototypeOf : $jscomp.underscoreProtoCanBeSet() ? function(R, ha) {
    R.__proto__ = ha;
    if (R.__proto__ !== ha)
        throw new TypeError(R + " is not extensible");
    return R
}
: null;
$jscomp.polyfill("Object.setPrototypeOf", function(R) {
    return R || $jscomp.setPrototypeOf
}, "es6", "es5");
$jscomp.polyfill("Reflect", function(R) {
    return R ? R : {}
}, "es6", "es3");
$jscomp.objectCreate = $jscomp.ASSUME_ES5 || "function" == typeof Object.create ? Object.create : function(R) {
    var ha = function() {};
    ha.prototype = R;
    return new ha
}
;
$jscomp.getConstructImplementation = function() {
    function R() {
        function ca() {}
        new ca;
        Reflect.construct(ca, [], function() {});
        return new ca instanceof ca
    }
    if ($jscomp.TRUST_ES6_POLYFILLS && "undefined" != typeof Reflect && Reflect.construct) {
        if (R())
            return Reflect.construct;
        var ha = Reflect.construct;
        return function(ca, da, W) {
            ca = ha(ca, da);
            W && Reflect.setPrototypeOf(ca, W.prototype);
            return ca
        }
    }
    return function(ca, da, W) {
        void 0 === W && (W = ca);
        W = $jscomp.objectCreate(W.prototype || Object.prototype);
        return Function.prototype.apply.call(ca, W, da) || W
    }
}
;
$jscomp.construct = {
    valueOf: $jscomp.getConstructImplementation
}.valueOf();
$jscomp.polyfill("Reflect.construct", function(R) {
    return $jscomp.construct
}, "es6", "es3");
$jscomp.polyfill("Number.MAX_SAFE_INTEGER", function() {
    return 9007199254740991
}, "es6", "es3");
(function(R, ha) {
    "object" === typeof exports && "undefined" !== typeof module ? module.exports = ha() : "function" === typeof define && define.amd ? define(ha) : (R = "undefined" !== typeof globalThis ? globalThis : R || self,
    R.videojs = ha())
}
)(this, function() {
    function R(n) {
        var d = "info"
          , c = function() {
            for (var a = arguments.length, e = Array(a), l = 0; l < a; l++)
                e[l] = arguments[l];
            b("log", d, e)
        };
        var b = ll(n, c);
        c.createLogger = function(a) {
            return R(n + ": " + a)
        }
        ;
        c.levels = {
            all: "debug|log|warn|error",
            off: "",
            debug: "debug|log|warn|error",
            info: "log|warn|error",
            warn: "warn|error",
            error: "error",
            DEFAULT: d
        };
        c.level = function(a) {
            if ("string" === typeof a) {
                if (!c.levels.hasOwnProperty(a))
                    throw Error('"' + a + '" in not a valid log level');
                d = a
            }
            return d
        }
        ;
        c.history = function() {
            return lb ? [].concat(lb) : []
        }
        ;
        c.history.filter = function(a) {
            return (lb || []).filter(function(e) {
                return (new RegExp(".*" + a + ".*")).test(e[0])
            })
        }
        ;
        c.history.clear = function() {
            lb && (lb.length = 0)
        }
        ;
        c.history.disable = function() {
            null !== lb && (lb.length = 0,
            lb = null)
        }
        ;
        c.history.enable = function() {
            null === lb && (lb = [])
        }
        ;
        c.error = function() {
            for (var a = arguments.length, e = Array(a), l = 0; l < a; l++)
                e[l] = arguments[l];
            return b("error", d, e)
        }
        ;
        c.warn = function() {
            for (var a = arguments.length, e = Array(a), l = 0; l < a; l++)
                e[l] = arguments[l];
            return b("warn", d, e)
        }
        ;
        c.debug = function() {
            for (var a = arguments.length, e = Array(a), l = 0; l < a; l++)
                e[l] = arguments[l];
            return b("debug", d, e)
        }
        ;
        return c
    }
    function ha(n, d) {
        return d = {
            exports: {}
        },
        n(d, d.exports),
        d.exports
    }
    function ca(n, d) {
        Zg(n).forEach(function(c) {
            return d(n[c], c)
        })
    }
    function da(n, d, c) {
        void 0 === c && (c = 0);
        return Zg(n).reduce(function(b, a) {
            return d(b, n[a], a)
        }, c)
    }
    function W(n) {
        for (var d = arguments.length, c = Array(1 < d ? d - 1 : 0), b = 1; b < d; b++)
            c[b - 1] = arguments[b];
        if (Object.assign)
            return Fb.apply(void 0, [n].concat(c));
        c.forEach(function(a) {
            a && ca(a, function(e, l) {
                n[l] = e
            })
        });
        return n
    }
    function wa(n) {
        return !!n && "object" === typeof n
    }
    function Z(n) {
        return wa(n) && "[object Object]" === ml.call(n) && n.constructor === Object
    }
    function pa(n, d) {
        if (!n || !d)
            return "";
        if ("function" === typeof window.getComputedStyle) {
            try {
                var c = window.getComputedStyle(n)
            } catch (b) {
                return ""
            }
            return c ? c.getPropertyValue(d) || c[d] : ""
        }
        return ""
    }
    function ba(n) {
        if (0 <= n.indexOf(" "))
            throw Error("class has illegal whitespace characters");
    }
    function ea() {
        return document === window.document
    }
    function ka(n) {
        return wa(n) && 1 === n.nodeType
    }
    function ua() {
        try {
            return window.parent !== window.self
        } catch (n) {
            return !0
        }
    }
    function Qa(n) {
        return function(d, c) {
            if ("string" !== typeof d || !d.trim())
                return document[n](null);
            "string" === typeof c && c.trim() && (c = document.querySelector(c));
            c = ka(c) ? c : document;
            return c[n] && c[n](d)
        }
    }
    function ta(n, d, c, b) {
        void 0 === n && (n = "div");
        void 0 === d && (d = {});
        void 0 === c && (c = {});
        var a = document.createElement(n);
        Object.getOwnPropertyNames(d).forEach(function(e) {
            var l = d[e];
            if (-1 !== e.indexOf("aria-") || "role" === e || "type" === e)
                va.warn("Setting attributes in the second argument of createEl()\nhas been deprecated. Use the third argument instead.\ncreateEl(type, properties, attributes). Attempting to set " + (e + " to " + l + ".")),
                a.setAttribute(e, l);
            else if ("textContent" === e)
                yb(a, l);
            else if (a[e] !== l || "tabIndex" === e)
                a[e] = l
        });
        Object.getOwnPropertyNames(c).forEach(function(e) {
            a.setAttribute(e, c[e])
        });
        b && Re(a, b);
        return a
    }
    function yb(n, d) {
        "undefined" === typeof n.textContent ? n.innerText = d : n.textContent = d;
        return n
    }
    function hc(n, d) {
        d.firstChild ? d.insertBefore(n, d.firstChild) : d.appendChild(n)
    }
    function ic(n, d) {
        ba(d);
        return n.classList ? n.classList.contains(d) : (new RegExp("(^|\\s)" + d + "($|\\s)")).test(n.className)
    }
    function Mb(n, d) {
        n.classList ? n.classList.add(d) : ic(n, d) || (n.className = (n.className + " " + d).trim());
        return n
    }
    function Yc(n, d) {
        if (!n)
            return va.warn("removeClass was called with an element that doesn't exist"),
            null;
        n.classList ? n.classList.remove(d) : (ba(d),
        n.className = n.className.split(/\s+/).filter(function(c) {
            return c !== d
        }).join(" "));
        return n
    }
    function $g(n, d, c) {
        var b = ic(n, d);
        "function" === typeof c && (c = c(n, d));
        "boolean" !== typeof c && (c = !b);
        if (c !== b)
            return c ? Mb(n, d) : Yc(n, d),
            n
    }
    function ah(n, d) {
        Object.getOwnPropertyNames(d).forEach(function(c) {
            var b = d[c];
            null === b || "undefined" === typeof b || !1 === b ? n.removeAttribute(c) : n.setAttribute(c, !0 === b ? "" : b)
        })
    }
    function Nb(n) {
        var d = {};
        if (n && n.attributes && 0 < n.attributes.length)
            for (var c = n.attributes, b = c.length - 1; 0 <= b; b--) {
                var a = c[b].name
                  , e = c[b].value;
                if ("boolean" === typeof n[a] || -1 !== ",autoplay,controls,playsinline,loop,muted,default,defaultMuted,".indexOf("," + a + ","))
                    e = null !== e ? !0 : !1;
                d[a] = e
            }
        return d
    }
    function bh() {
        document.body.focus();
        document.onselectstart = function() {
            return !1
        }
    }
    function ch() {
        document.onselectstart = function() {
            return !0
        }
    }
    function tc(n) {
        if (n && n.getBoundingClientRect && n.parentNode) {
            var d = n.getBoundingClientRect()
              , c = {};
            "bottom height left right top width".split(" ").forEach(function(b) {
                void 0 !== d[b] && (c[b] = d[b])
            });
            c.height || (c.height = parseFloat(pa(n, "height")));
            c.width || (c.width = parseFloat(pa(n, "width")));
            return c
        }
    }
    function Zc(n) {
        if (!n || n && !n.offsetParent)
            return {
                left: 0,
                top: 0,
                width: 0,
                height: 0
            };
        for (var d = n.offsetWidth, c = n.offsetHeight, b = 0, a = 0; n.offsetParent && n !== document[Hd.fullscreenElement]; )
            b += n.offsetLeft,
            a += n.offsetTop,
            n = n.offsetParent;
        return {
            left: b,
            top: a,
            width: d,
            height: c
        }
    }
    function Id(n, d) {
        var c = 0
          , b = 0;
        if (cb)
            for (var a = n; a && "html" !== a.nodeName.toLowerCase(); ) {
                var e = pa(a, "transform");
                /^matrix/.test(e) ? (e = e.slice(7, -1).split(/,\s/).map(Number),
                c += e[4],
                b += e[5]) : /^matrix3d/.test(e) && (e = e.slice(9, -1).split(/,\s/).map(Number),
                c += e[12],
                b += e[13]);
                a = a.parentNode
            }
        a = {};
        e = Zc(d.target);
        n = Zc(n);
        var l = n.width
          , h = n.height
          , g = d.offsetY - (n.top - e.top);
        e = d.offsetX - (n.left - e.left);
        d.changedTouches && (e = d.changedTouches[0].pageX - n.left,
        g = d.changedTouches[0].pageY + n.top,
        cb && (e -= c,
        g -= b));
        a.y = 1 - Math.max(0, Math.min(1, g / h));
        a.x = Math.max(0, Math.min(1, e / l));
        return a
    }
    function dh(n) {
        return wa(n) && 3 === n.nodeType
    }
    function Se(n) {
        for (; n.firstChild; )
            n.removeChild(n.firstChild);
        return n
    }
    function eh(n) {
        "function" === typeof n && (n = n());
        return (Array.isArray(n) ? n : [n]).map(function(d) {
            "function" === typeof d && (d = d());
            if (ka(d) || dh(d))
                return d;
            if ("string" === typeof d && /\S/.test(d))
                return document.createTextNode(d)
        }).filter(function(d) {
            return d
        })
    }
    function Re(n, d) {
        eh(d).forEach(function(c) {
            return n.appendChild(c)
        });
        return n
    }
    function fh(n, d) {
        return Re(Se(n), d)
    }
    function $c(n) {
        return void 0 === n.button && void 0 === n.buttons || 0 === n.button && void 0 === n.buttons || "mouseup" === n.type && 0 === n.button && 0 === n.buttons ? !0 : 0 !== n.button || 1 !== n.buttons ? !1 : !0
    }
    function Te(n, d) {
        ea() && (d && (Ue = d),
        window.setTimeout(nl, n))
    }
    function Ve() {
        gh = !0;
        window.removeEventListener("load", Ve)
    }
    function hh(n, d) {
        if (db.has(n)) {
            var c = db.get(n);
            0 === c.handlers[d].length && (delete c.handlers[d],
            n.removeEventListener ? n.removeEventListener(d, c.dispatcher, !1) : n.detachEvent && n.detachEvent("on" + d, c.dispatcher));
            0 >= Object.getOwnPropertyNames(c.handlers).length && (delete c.handlers,
            delete c.dispatcher,
            delete c.disabled);
            if (0 === Object.getOwnPropertyNames(c).length)
                db["delete"](n)
        }
    }
    function We(n, d, c, b) {
        c.forEach(function(a) {
            n(d, a, b)
        })
    }
    function Jd(n) {
        function d() {
            return !0
        }
        function c() {
            return !1
        }
        if (n.fixed_)
            return n;
        if (!n || !n.isPropagationStopped || !n.isImmediatePropagationStopped) {
            var b = n || window.event;
            n = {};
            for (var a in b)
                "layerX" !== a && "layerY" !== a && "keyLocation" !== a && "webkitMovementX" !== a && "webkitMovementY" !== a && "path" !== a && ("returnValue" === a && b.preventDefault || (n[a] = b[a]));
            n.target || (n.target = n.srcElement || document);
            n.relatedTarget || (n.relatedTarget = n.fromElement === n.target ? n.toElement : n.fromElement);
            n.preventDefault = function() {
                b.preventDefault && b.preventDefault();
                n.returnValue = !1;
                b.returnValue = !1;
                n.defaultPrevented = !0
            }
            ;
            n.defaultPrevented = !1;
            n.stopPropagation = function() {
                b.stopPropagation && b.stopPropagation();
                n.cancelBubble = !0;
                b.cancelBubble = !0;
                n.isPropagationStopped = d
            }
            ;
            n.isPropagationStopped = c;
            n.stopImmediatePropagation = function() {
                b.stopImmediatePropagation && b.stopImmediatePropagation();
                n.isImmediatePropagationStopped = d;
                n.stopPropagation()
            }
            ;
            n.isImmediatePropagationStopped = c;
            if (null !== n.clientX && void 0 !== n.clientX) {
                a = document.documentElement;
                var e = document.body;
                n.pageX = n.clientX + (a && a.scrollLeft || e && e.scrollLeft || 0) - (a && a.clientLeft || e && e.clientLeft || 0);
                n.pageY = n.clientY + (a && a.scrollTop || e && e.scrollTop || 0) - (a && a.clientTop || e && e.clientTop || 0)
            }
            n.which = n.charCode || n.keyCode;
            null !== n.button && void 0 !== n.button && (n.button = n.button & 1 ? 0 : n.button & 4 ? 1 : n.button & 2 ? 2 : 0)
        }
        n.fixed_ = !0;
        return n
    }
    function rb(n, d, c) {
        if (Array.isArray(d))
            return We(rb, n, d, c);
        db.has(n) || db.set(n, {});
        var b = db.get(n);
        b.handlers || (b.handlers = {});
        b.handlers[d] || (b.handlers[d] = []);
        c.guid || (c.guid = Ob++);
        b.handlers[d].push(c);
        b.dispatcher || (b.disabled = !1,
        b.dispatcher = function(a, e) {
            if (!b.disabled) {
                a = Jd(a);
                var l = b.handlers[a.type];
                if (l) {
                    l = l.slice(0);
                    for (var h = 0, g = l.length; h < g && !a.isImmediatePropagationStopped(); h++)
                        try {
                            l[h].call(n, a, e)
                        } catch (q) {
                            va.error(q)
                        }
                }
            }
        }
        );
        1 === b.handlers[d].length && (n.addEventListener ? (c = !1,
        ol() && -1 < pl.indexOf(d) && (c = {
            passive: !0
        }),
        n.addEventListener(d, b.dispatcher, c)) : n.attachEvent && n.attachEvent("on" + d, b.dispatcher))
    }
    function Za(n, d, c) {
        if (db.has(n)) {
            var b = db.get(n);
            if (b.handlers) {
                if (Array.isArray(d))
                    return We(Za, n, d, c);
                if (void 0 === d)
                    for (var a in b.handlers)
                        Object.prototype.hasOwnProperty.call(b.handlers || {}, a) && (d = n,
                        c = a,
                        b.handlers[c] = [],
                        hh(d, c));
                else if (a = b.handlers[d]) {
                    if (!c)
                        b.handlers[d] = [];
                    else if (c.guid)
                        for (b = 0; b < a.length; b++)
                            a[b].guid === c.guid && a.splice(b--, 1);
                    hh(n, d)
                }
            }
        }
    }
    function uc(n, d, c) {
        var b = db.has(n) ? db.get(n) : {}
          , a = n.parentNode || n.ownerDocument;
        "string" === typeof d ? d = {
            type: d,
            target: n
        } : d.target || (d.target = n);
        d = Jd(d);
        b.dispatcher && b.dispatcher.call(n, d, c);
        if (a && !d.isPropagationStopped() && !0 === d.bubbles)
            uc.call(null, a, d, c);
        else if (!a && !d.defaultPrevented && d.target && d.target[d.type] && (db.has(d.target) || db.set(d.target, {}),
        n = db.get(d.target),
        d.target[d.type])) {
            n.disabled = !0;
            if ("function" === typeof d.target[d.type])
                d.target[d.type]();
            n.disabled = !1
        }
        return !d.defaultPrevented
    }
    function Kd(n, d, c) {
        if (Array.isArray(d))
            return We(Kd, n, d, c);
        var b = function e() {
            Za(n, d, e);
            c.apply(this, arguments)
        };
        b.guid = c.guid = c.guid || Ob++;
        rb(n, d, b)
    }
    function ih(n, d, c) {
        var b = function e() {
            Za(n, d, e);
            c.apply(this, arguments)
        };
        b.guid = c.guid = c.guid || Ob++;
        rb(n, d, b)
    }
    function Xe(n, d) {
        void 0 === d && (d = {});
        if (d = d.eventBusKey) {
            if (!n[d].nodeName)
                throw Error('The eventBusKey "' + d + '" does not refer to an element.');
            n.eventBusEl_ = n[d]
        } else
            n.eventBusEl_ = ta("span", {
                className: "vjs-event-bus"
            });
        W(n, ql);
        n.eventedCallbacks && n.eventedCallbacks.forEach(function(c) {
            c()
        });
        n.on("dispose", function() {
            n.off();
            [n, n.el_, n.eventBusEl_].forEach(function(c) {
                if (c && db.has(c))
                    db["delete"](c)
            });
            window.setTimeout(function() {
                n.eventBusEl_ = null
            }, 0)
        });
        return n
    }
    function jh(n, d) {
        W(n, rl);
        n.state = W({}, n.state, d);
        if ("function" === typeof n.handleStateChanged && Pb(n))
            n.on("statechanged", n.handleStateChanged);
        return n
    }
    function Ea() {
        for (var n = {}, d = arguments.length, c = Array(d), b = 0; b < d; b++)
            c[b] = arguments[b];
        c.forEach(function(a) {
            a && ca(a, function(e, l) {
                Z(e) ? (Z(n[l]) || (n[l] = {}),
                n[l] = Ea(n[l], e)) : n[l] = e
            })
        });
        return n
    }
    function kh(n, d, c, b) {
        var a = c.length - 1;
        if ("number" !== typeof b || 0 > b || b > a)
            throw Error("Failed to execute '" + n + "' on 'TimeRanges': The index provided (" + b + ") is non-numeric or out of bounds (0-" + a + ").");
        return c[b][d]
    }
    function Ye(n) {
        var d = void 0 === n || 0 === n.length ? {
            length: 0,
            start: function() {
                throw Error("This TimeRanges object is empty");
            },
            end: function() {
                throw Error("This TimeRanges object is empty");
            }
        } : {
            length: n.length,
            start: kh.bind(null, "start", 0, n),
            end: kh.bind(null, "end", 1, n)
        };
        window.Symbol && window.Symbol.iterator && (d[window.Symbol.iterator] = function() {
            return (n || []).values()
        }
        );
        return d
    }
    function jc(n, d) {
        return Array.isArray(n) ? Ye(n) : void 0 === n || void 0 === d ? Ye() : Ye([[n, d]])
    }
    function lh(n, d) {
        var c = 0;
        if (!d)
            return 0;
        n && n.length || (n = jc(0, 0));
        for (var b = 0; b < n.length; b++) {
            var a = n.start(b);
            var e = n.end(b);
            e > d && (e = d);
            c += e - a
        }
        return c / d
    }
    function eb(n) {
        if (n instanceof eb)
            return n;
        "number" === typeof n ? this.code = n : "string" === typeof n ? this.message = n : wa(n) && ("number" === typeof n.code && (this.code = n.code),
        W(this, n));
        this.message || (this.message = eb.defaultMessages[this.code] || "")
    }
    function ad(n) {
        return void 0 !== n && null !== n && "function" === typeof n.then
    }
    function Gb(n) {
        ad(n) && n.then(null, function(d) {})
    }
    function sl(n) {
        void 0 === n && (n = "");
        return n.toLowerCase().split(";").reduce(function(d, c) {
            c = c.split("=");
            var b = c[1];
            return "charset" === c[0].trim() ? b.trim() : d
        }, "utf-8")
    }
    function tl(n) {
        for (var d in n)
            if (n.hasOwnProperty(d))
                return !1;
        return !0
    }
    function mh(n, d, c) {
        var b = n;
        if (d) {
            var a = ul.call(d);
            a = "[object Function]" === a || "function" === typeof d && "[object RegExp]" !== a || "undefined" !== typeof window && (d === window.setTimeout || d === window.alert || d === window.confirm || d === window.prompt)
        } else
            a = !1;
        a ? (c = d,
        "string" === typeof n && (b = {
            uri: n
        })) : b = Fb({}, d, {
            uri: n
        });
        b.callback = c;
        return b
    }
    function vb(n, d, c) {
        d = mh(n, d, c);
        return nh(d)
    }
    function nh(n) {
        function d(u) {
            clearTimeout(k);
            u instanceof Error || (u = Error("" + (u || "Unknown XMLHttpRequest Error")));
            u.statusCode = 0;
            var t = r;
            b || (b = !0,
            n.callback(u, t, void 0))
        }
        function c() {
            if (!l) {
                clearTimeout(k);
                var u = n.useXDR && void 0 === a.status ? 200 : 1223 === a.status ? 204 : a.status;
                var t = r
                  , x = null;
                if (0 !== u) {
                    if (a.response)
                        t = a.response;
                    else if (!(t = a.responseText))
                        a: {
                            try {
                                if ("document" === a.responseType) {
                                    t = a.responseXML;
                                    break a
                                }
                                var F = a.responseXML && "parsererror" === a.responseXML.documentElement.nodeName;
                                if ("" === a.responseType && !F) {
                                    t = a.responseXML;
                                    break a
                                }
                            } catch (K) {}
                            t = null
                        }
                    if (m)
                        try {
                            t = JSON.parse(t)
                        } catch (K) {}
                    t = {
                        body: t,
                        statusCode: u,
                        method: g,
                        headers: {},
                        url: h,
                        rawRequest: a
                    };
                    a.getAllResponseHeaders && (t.headers = vl(a.getAllResponseHeaders()))
                } else
                    x = Error("Internal XMLHttpRequest Error");
                u = t.body;
                b || (b = !0,
                n.callback(x, t, u))
            }
        }
        if ("undefined" === typeof n.callback)
            throw Error("callback argument missing");
        var b = !1
          , a = n.xhr || null;
        a || (a = n.cors || n.useXDR ? new vb.XDomainRequest : new vb.XMLHttpRequest);
        var e, l, h = a.url = n.uri || n.url, g = a.method = n.method || "GET", q = n.body || n.data, p = a.headers = n.headers || {}, f = !!n.sync, m = !1, k, r = {
            body: void 0,
            headers: {},
            statusCode: 0,
            method: g,
            url: h,
            rawRequest: a
        };
        "json"in n && !1 !== n.json && (m = !0,
        p.accept || p.Accept || (p.Accept = "application/json"),
        "GET" !== g && "HEAD" !== g && (p["content-type"] || p["Content-Type"] || (p["Content-Type"] = "application/json"),
        q = JSON.stringify(!0 === n.json ? q : n.json)));
        a.onreadystatechange = function() {
            4 === a.readyState && setTimeout(c, 0)
        }
        ;
        a.onload = c;
        a.onerror = d;
        a.onprogress = function() {}
        ;
        a.onabort = function() {
            l = !0
        }
        ;
        a.ontimeout = d;
        a.open(g, h, !f, n.username, n.password);
        f || (a.withCredentials = !!n.withCredentials);
        !f && 0 < n.timeout && (k = setTimeout(function() {
            if (!l) {
                l = !0;
                a.abort("timeout");
                var u = Error("XMLHttpRequest timeout");
                u.code = "ETIMEDOUT";
                d(u)
            }
        }, n.timeout));
        if (a.setRequestHeader)
            for (e in p)
                p.hasOwnProperty(e) && a.setRequestHeader(e, p[e]);
        else if (n.headers && !tl(n.headers))
            throw Error("Headers cannot be set on an XDomainRequest object");
        "responseType"in n && (a.responseType = n.responseType);
        "beforeSend"in n && "function" === typeof n.beforeSend && n.beforeSend(a);
        a.send(q || null);
        return a
    }
    function wl() {}
    function sb(n, d) {
        this.name = "ParsingError";
        this.code = n.code;
        this.message = d || n.message
    }
    function Ze(n) {
        n = n.match(/^(\d+):(\d{1,2})(:\d{1,2})?\.(\d{3})/);
        if (!n)
            return null;
        if (n[3]) {
            var d = n[3].replace(":", "");
            return 3600 * (n[1] | 0) + 60 * (n[2] | 0) + (d | 0) + (n[4] | 0) / 1E3
        }
        return 59 < n[1] ? 3600 * (n[1] | 0) + 60 * (n[2] | 0) + (n[4] | 0) / 1E3 : 60 * (n[1] | 0) + (n[2] | 0) + (n[4] | 0) / 1E3
    }
    function bd() {
        this.values = $e(null)
    }
    function cd(n, d, c, b) {
        n = b ? n.split(b) : [n];
        for (var a in n)
            if ("string" === typeof n[a]) {
                var e = n[a].split(c);
                2 === e.length && (b = e[0].trim(),
                e = e[1].trim(),
                d(b, e))
            }
    }
    function xl(n, d, c) {
        function b() {
            var l = Ze(n);
            if (null === l)
                throw new sb(sb.Errors.BadTimeStamp,"Malformed timestamp: " + e);
            n = n.replace(/^[^\sa-zA-Z-]+/, "");
            return l
        }
        function a() {
            n = n.replace(/^\s+/, "")
        }
        var e = n;
        a();
        d.startTime = b();
        a();
        if ("--\x3e" !== n.substr(0, 3))
            throw new sb(sb.Errors.BadTimeStamp,"Malformed time stamp (time stamps must be separated by '--\x3e'): " + e);
        n = n.substr(3);
        a();
        d.endTime = b();
        a();
        (function(l, h) {
            var g = new bd;
            cd(l, function(q, p) {
                switch (q) {
                case "region":
                    for (var f = c.length - 1; 0 <= f; f--)
                        if (c[f].id === p) {
                            g.set(q, c[f].region);
                            break
                        }
                    break;
                case "vertical":
                    g.alt(q, p, ["rl", "lr"]);
                    break;
                case "line":
                    p = p.split(",");
                    f = p[0];
                    g.integer(q, f);
                    g.percent(q, f) ? g.set("snapToLines", !1) : null;
                    g.alt(q, f, ["auto"]);
                    2 === p.length && g.alt("lineAlign", p[1], ["start", "center", "end"]);
                    break;
                case "position":
                    p = p.split(",");
                    g.percent(q, p[0]);
                    2 === p.length && g.alt("positionAlign", p[1], ["start", "center", "end"]);
                    break;
                case "size":
                    g.percent(q, p);
                    break;
                case "align":
                    g.alt(q, p, ["start", "center", "end", "left", "right"])
                }
            }, /:/, /\s/);
            h.region = g.get("region", null);
            h.vertical = g.get("vertical", "");
            try {
                h.line = g.get("line", "auto")
            } catch (q) {}
            h.lineAlign = g.get("lineAlign", "start");
            h.snapToLines = g.get("snapToLines", !0);
            h.size = g.get("size", 100);
            try {
                h.align = g.get("align", "center")
            } catch (q) {
                h.align = g.get("align", "middle")
            }
            try {
                h.position = g.get("position", "auto")
            } catch (q) {
                h.position = g.get("position", {
                    start: 0,
                    left: 0,
                    center: 50,
                    middle: 50,
                    end: 100,
                    right: 100
                }, h.align)
            }
            h.positionAlign = g.get("positionAlign", {
                start: "start",
                left: "start",
                center: "center",
                middle: "center",
                end: "end",
                right: "end"
            }, h.align)
        }
        )(n, d)
    }
    function oh(n, d) {
        function c() {
            if (!d)
                return null;
            var f = d.match(/^([^<]*)(<[^>]*>?)?/);
            f = f[1] ? f[1] : f[2];
            d = d.substr(f.length);
            return f
        }
        function b(f) {
            af.innerHTML = f;
            f = af.textContent;
            af.textContent = "";
            return f
        }
        function a(f, m) {
            var k = yl[f];
            if (!k)
                return null;
            k = n.document.createElement(k);
            (f = zl[f]) && m && (k[f] = m.trim());
            return k
        }
        for (var e = n.document.createElement("div"), l = e, h, g = []; null !== (h = c()); )
            if ("<" === h[0])
                if ("/" === h[1])
                    g.length && g[g.length - 1] === h.substr(2).replace(">", "") && (g.pop(),
                    l = l.parentNode);
                else {
                    var q = Ze(h.substr(1, h.length - 2));
                    if (q) {
                        var p = n.document.createProcessingInstruction("timestamp", q);
                        l.appendChild(p)
                    } else if (h = h.match(/^<([^.\s/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/))
                        !(p = a(h[1], h[3])) || ph[p.localName] && ph[p.localName] !== l.localName || (h[2] && (q = h[2].split("."),
                        q.forEach(function(f) {
                            var m = /^bg_/.test(f);
                            f = m ? f.slice(3) : f;
                            qh.hasOwnProperty(f) && (p.style[m ? "background-color" : "color"] = qh[f])
                        }),
                        p.className = q.join(" ")),
                        g.push(h[1]),
                        l.appendChild(p),
                        l = p)
                }
            else
                l.appendChild(n.document.createTextNode(b(h)));
        return e
    }
    function Al(n) {
        for (var d = 0; d < rh.length; d++) {
            var c = rh[d];
            if (n >= c[0] && n <= c[1])
                return !0
        }
        return !1
    }
    function Bl(n) {
        function d(l, h) {
            for (var g = h.childNodes.length - 1; 0 <= g; g--)
                l.push(h.childNodes[g])
        }
        function c(l) {
            if (!l || !l.length)
                return null;
            var h = l.pop()
              , g = h.textContent || h.innerText;
            if (g)
                return (h = g.match(/^.*(\n|\r)/)) ? (l.length = 0,
                h[0]) : g;
            if ("ruby" === h.tagName)
                return c(l);
            if (h.childNodes)
                return d(l, h),
                c(l)
        }
        var b = []
          , a = "";
        if (!n || !n.childNodes)
            return "ltr";
        for (d(b, n); a = c(b); )
            for (var e = 0; e < a.length; e++)
                if (n = a.charCodeAt(e),
                Al(n))
                    return "rtl";
        return "ltr"
    }
    function bf() {}
    function Ld(n, d, c) {
        this.cue = d;
        this.cueDiv = oh(n, d.text);
        var b = {
            color: "rgba(255, 255, 255, 1)",
            backgroundColor: "rgba(0, 0, 0, 0.8)",
            position: "relative",
            left: 0,
            right: 0,
            top: 0,
            bottom: 0,
            display: "inline",
            writingMode: "" === d.vertical ? "horizontal-tb" : "lr" === d.vertical ? "vertical-lr" : "vertical-rl",
            unicodeBidi: "plaintext"
        };
        this.applyStyles(b, this.cueDiv);
        this.div = n.document.createElement("div");
        b = {
            direction: Bl(this.cueDiv),
            writingMode: "" === d.vertical ? "horizontal-tb" : "lr" === d.vertical ? "vertical-lr" : "vertical-rl",
            unicodeBidi: "plaintext",
            textAlign: "middle" === d.align ? "center" : d.align,
            font: c.font,
            whiteSpace: "pre-line",
            position: "absolute"
        };
        this.applyStyles(b);
        this.div.appendChild(this.cueDiv);
        n = 0;
        switch (d.positionAlign) {
        case "start":
            n = d.position;
            break;
        case "center":
            n = d.position - d.size / 2;
            break;
        case "end":
            n = d.position - d.size
        }
        "" === d.vertical ? this.applyStyles({
            left: this.formatStyle(n, "%"),
            width: this.formatStyle(d.size, "%")
        }) : this.applyStyles({
            top: this.formatStyle(n, "%"),
            height: this.formatStyle(d.size, "%")
        });
        this.move = function(a) {
            this.applyStyles({
                top: this.formatStyle(a.top, "px"),
                bottom: this.formatStyle(a.bottom, "px"),
                left: this.formatStyle(a.left, "px"),
                right: this.formatStyle(a.right, "px"),
                height: this.formatStyle(a.height, "px"),
                width: this.formatStyle(a.width, "px")
            })
        }
    }
    function fb(n) {
        if (n.div) {
            var d = n.div.offsetHeight;
            var c = n.div.offsetWidth;
            var b = n.div.offsetTop;
            var a = (a = n.div.childNodes) && (a = a[0]) && a.getClientRects && a.getClientRects();
            n = n.div.getBoundingClientRect();
            var e = a ? Math.max(a[0] && a[0].height || 0, n.height / a.length) : 0
        }
        this.left = n.left;
        this.right = n.right;
        this.top = n.top || b;
        this.height = n.height || d;
        this.bottom = n.bottom || b + (n.height || d);
        this.width = n.width || c;
        this.lineHeight = void 0 !== e ? e : n.lineHeight
    }
    function vc() {}
    function cf(n) {
        return "string" !== typeof n ? !1 : Cl[n.toLowerCase()] ? n.toLowerCase() : !1
    }
    function sh(n, d, c) {
        this.hasBeenReset = !1;
        var b = ""
          , a = !1
          , e = n
          , l = d
          , h = c
          , g = null
          , q = ""
          , p = !0
          , f = "auto"
          , m = "start"
          , k = "auto"
          , r = "auto"
          , u = 100
          , t = "center";
        Object.defineProperties(this, {
            id: {
                enumerable: !0,
                get: function() {
                    return b
                },
                set: function(x) {
                    b = "" + x
                }
            },
            pauseOnExit: {
                enumerable: !0,
                get: function() {
                    return a
                },
                set: function(x) {
                    a = !!x
                }
            },
            startTime: {
                enumerable: !0,
                get: function() {
                    return e
                },
                set: function(x) {
                    if ("number" !== typeof x)
                        throw new TypeError("Start time must be set to a number.");
                    e = x;
                    this.hasBeenReset = !0
                }
            },
            endTime: {
                enumerable: !0,
                get: function() {
                    return l
                },
                set: function(x) {
                    if ("number" !== typeof x)
                        throw new TypeError("End time must be set to a number.");
                    l = x;
                    this.hasBeenReset = !0
                }
            },
            text: {
                enumerable: !0,
                get: function() {
                    return h
                },
                set: function(x) {
                    h = "" + x;
                    this.hasBeenReset = !0
                }
            },
            region: {
                enumerable: !0,
                get: function() {
                    return g
                },
                set: function(x) {
                    g = x;
                    this.hasBeenReset = !0
                }
            },
            vertical: {
                enumerable: !0,
                get: function() {
                    return q
                },
                set: function(x) {
                    x = "string" !== typeof x ? !1 : Dl[x.toLowerCase()] ? x.toLowerCase() : !1;
                    if (!1 === x)
                        throw new SyntaxError("Vertical: an invalid or illegal direction string was specified.");
                    q = x;
                    this.hasBeenReset = !0
                }
            },
            snapToLines: {
                enumerable: !0,
                get: function() {
                    return p
                },
                set: function(x) {
                    p = !!x;
                    this.hasBeenReset = !0
                }
            },
            line: {
                enumerable: !0,
                get: function() {
                    return f
                },
                set: function(x) {
                    if ("number" !== typeof x && "auto" !== x)
                        throw new SyntaxError("Line: an invalid number or illegal string was specified.");
                    f = x;
                    this.hasBeenReset = !0
                }
            },
            lineAlign: {
                enumerable: !0,
                get: function() {
                    return m
                },
                set: function(x) {
                    (x = cf(x)) ? (m = x,
                    this.hasBeenReset = !0) : console.warn("lineAlign: an invalid or illegal string was specified.")
                }
            },
            position: {
                enumerable: !0,
                get: function() {
                    return k
                },
                set: function(x) {
                    if (0 > x || 100 < x)
                        throw Error("Position must be between 0 and 100.");
                    k = x;
                    this.hasBeenReset = !0
                }
            },
            positionAlign: {
                enumerable: !0,
                get: function() {
                    return r
                },
                set: function(x) {
                    (x = cf(x)) ? (r = x,
                    this.hasBeenReset = !0) : console.warn("positionAlign: an invalid or illegal string was specified.")
                }
            },
            size: {
                enumerable: !0,
                get: function() {
                    return u
                },
                set: function(x) {
                    if (0 > x || 100 < x)
                        throw Error("Size must be between 0 and 100.");
                    u = x;
                    this.hasBeenReset = !0
                }
            },
            align: {
                enumerable: !0,
                get: function() {
                    return t
                },
                set: function(x) {
                    x = cf(x);
                    if (!x)
                        throw new SyntaxError("align: an invalid or illegal alignment string was specified.");
                    t = x;
                    this.hasBeenReset = !0
                }
            }
        });
        this.displayState = void 0
    }
    function dd(n) {
        return "number" === typeof n && 0 <= n && 100 >= n
    }
    function El(n, d, c) {
        n.setTimeout(function() {
            return kc(d, lc[d.type], c, n)
        }, 1)
    }
    function Fl(n, d) {
        n.forEach(function(c) {
            return c.setTech && c.setTech(d)
        })
    }
    function th(n, d, c, b) {
        void 0 === b && (b = null);
        var a = "call" + Ka(c);
        a = n.reduce(df(a), b);
        d = (b = a === Md) ? null : d[c](a);
        for (a = n.length - 1; 0 <= a; a--) {
            var e = n[a];
            if (e[c])
                e[c](b, d)
        }
        return d
    }
    function df(n) {
        return function(d, c) {
            return d === Md ? Md : c[n] ? c[n](d) : d
        }
    }
    function Gl(n, d) {
        var c = ef[n.id()]
          , b = null;
        if (void 0 === c || null === c)
            return b = d(n),
            ef[n.id()] = [[d, b]],
            b;
        for (var a = 0; a < c.length; a++) {
            var e = c[a];
            e[0] === d && (b = e[1])
        }
        null === b && (b = d(n),
        c.push([d, b]));
        return b
    }
    function kc(n, d, c, b, a, e) {
        void 0 === n && (n = {});
        void 0 === d && (d = []);
        void 0 === a && (a = []);
        void 0 === e && (e = !1);
        var l = d[0]
          , h = d.slice(1);
        if ("string" === typeof l)
            kc(n, lc[l], c, b, a, e);
        else if (l) {
            var g = Gl(b, l);
            if (!g.setSource)
                return a.push(g),
                kc(n, h, c, b, a, e);
            g.setSource(W({}, n), function(q, p) {
                if (q)
                    return kc(n, h, c, b, a, e);
                a.push(g);
                kc(p, n.type === p.type ? h : lc[p.type], c, b, a, e)
            })
        } else
            h.length ? kc(n, h, c, b, a, e) : e ? c(n, a) : kc(n, lc["*"], c, b, a, !0)
    }
    function uh(n) {
        if (!n.type) {
            var d = Nd(n.src);
            d && (n.type = d)
        }
        return n
    }
    function ff(n, d) {
        if (4 === n.length)
            n = n[1] + n[1] + n[2] + n[2] + n[3] + n[3];
        else if (7 === n.length)
            n = n.slice(1);
        else
            throw Error("Invalid color code provided, " + n + "; must be formatted as e.g. #f0e or #f604e2.");
        return "rgba(" + parseInt(n.slice(0, 2), 16) + "," + parseInt(n.slice(2, 4), 16) + "," + parseInt(n.slice(4, 6), 16) + "," + d + ")"
    }
    function wc(n, d) {
        void 0 === d && (d = n);
        return gf(n, d)
    }
    function vh(n, d) {
        d && (n = d(n));
        if (n && "none" !== n)
            return n
    }
    function N(n, d, c) {
        var b = N.getPlayer(n);
        if (b)
            return d && va.warn('Player "' + n + '" is already initialised. Options will not be applied.'),
            c && b.ready(c),
            b;
        var a = "string" === typeof n ? bc("#" + wh(n)) : n;
        if (!ka(a))
            throw new TypeError("The element or ID supplied is not valid. (videojs)");
        a.ownerDocument.defaultView && a.ownerDocument.body.contains(a) || va.warn("The element supplied is not included in the DOM");
        d = d || {};
        !0 === d.restoreEl && (d.restoreEl = (a.parentNode && a.parentNode.hasAttribute("data-vjs-player") ? a.parentNode : a).cloneNode(!0));
        cc("beforesetup").forEach(function(e) {
            e = e(a, Ea(d));
            !wa(e) || Array.isArray(e) ? va.error("please return an object in beforesetup hooks") : d = Ea(d, e)
        });
        b = new (aa.getComponent("Player"))(a,d,c);
        cc("setup").forEach(function(e) {
            return e(b)
        });
        return b
    }
    function Od(n, d) {
        void 0 === d && (d = Object);
        return d && "function" === typeof d.freeze ? d.freeze(n) : n
    }
    function Hl(n) {
        return "" !== n
    }
    function Il(n, d) {
        n.hasOwnProperty(d) || (n[d] = !0);
        return n
    }
    function xh(n) {
        if (!n)
            return [];
        n = n ? n.split(/[\t\n\f\r ]+/).filter(Hl) : [];
        return Object.keys(n.reduce(Il, {}))
    }
    function Jl(n) {
        return function(d) {
            return n && -1 !== n.indexOf(d)
        }
    }
    function ed(n, d) {
        for (var c in n)
            d[c] = n[c]
    }
    function mb(n, d) {
        var c = n.prototype;
        if (!(c instanceof d)) {
            var b = function() {};
            b.prototype = d.prototype;
            b = new b;
            ed(c, b);
            n.prototype = c = b
        }
        c.constructor != n && ("function" != typeof n && console.error("unknown Class:" + n),
        c.constructor = n)
    }
    function xc(n, d) {
        if (d instanceof Error)
            var c = d;
        else
            c = this,
            Error.call(this, Ra[n]),
            this.message = Ra[n],
            Error.captureStackTrace && Error.captureStackTrace(this, xc);
        c.code = n;
        d && (this.message = this.message + ": " + d);
        return c
    }
    function dc() {}
    function yc(n, d) {
        this._node = n;
        this._refresh = d;
        hf(this)
    }
    function hf(n) {
        var d = n._node._inc || n._node.ownerDocument._inc;
        if (n._inc != d) {
            var c = n._refresh(n._node);
            yh(n, "length", c.length);
            ed(c, n);
            n._inc = d
        }
    }
    function Pd() {}
    function zh(n, d) {
        for (var c = n.length; c--; )
            if (n[c] === d)
                return c
    }
    function Ah(n, d, c, b) {
        b ? d[zh(d, b)] = c : d[d.length++] = c;
        n && (c.ownerElement = n,
        d = n.ownerDocument) && (b && (d && d._inc++,
        b.namespaceURI === zc.XMLNS && delete n._nsMap[b.prefix ? b.localName : ""]),
        d && d._inc++,
        c.namespaceURI === zc.XMLNS && (n._nsMap[c.prefix ? c.localName : ""] = c.value))
    }
    function Bh(n, d, c) {
        var b = zh(d, c);
        if (0 <= b) {
            for (var a = d.length - 1; b < a; )
                d[b] = d[++b];
            d.length = a;
            n && (d = n.ownerDocument) && (d && d._inc++,
            c.namespaceURI === zc.XMLNS && delete n._nsMap[c.prefix ? c.localName : ""],
            c.ownerElement = null)
        } else
            throw xc(Kl, Error(n.tagName + "@" + c));
    }
    function Ch() {}
    function gb() {}
    function Dh(n) {
        return "<" == n && "&lt;" || ">" == n && "&gt;" || "&" == n && "&amp;" || '"' == n && "&quot;" || "&#" + n.charCodeAt() + ";"
    }
    function fd(n, d) {
        if (d(n))
            return !0;
        if (n = n.firstChild) {
            do
                if (fd(n, d))
                    return !0;
            while (n = n.nextSibling)
        }
    }
    function gd() {}
    function jf(n, d, c) {
        if (n && n._inc)
            if (n._inc++,
            n = d.childNodes,
            c)
                n[n.length++] = c;
            else {
                d = d.firstChild;
                for (c = 0; d; )
                    n[c++] = d,
                    d = d.nextSibling;
                n.length = c
            }
    }
    function Eh(n, d) {
        var c = d.previousSibling
          , b = d.nextSibling;
        c ? c.nextSibling = b : n.firstChild = b;
        b ? b.previousSibling = c : n.lastChild = c;
        jf(n.ownerDocument, n);
        return d
    }
    function Fh(n, d, c) {
        var b = d.parentNode;
        b && b.removeChild(d);
        if (d.nodeType === Qb) {
            b = d.firstChild;
            if (null == b)
                return d;
            var a = d.lastChild
        } else
            b = a = d;
        var e = c ? c.previousSibling : n.lastChild;
        b.previousSibling = e;
        a.nextSibling = c;
        e ? e.nextSibling = b : n.firstChild = b;
        null == c ? n.lastChild = a : c.previousSibling = a;
        do
            b.parentNode = n;
        while (b !== a && (b = b.nextSibling));
        jf(n.ownerDocument || n, n);
        d.nodeType == Qb && (d.firstChild = d.lastChild = null);
        return d
    }
    function Ac() {
        this._nsMap = {}
    }
    function Qd() {}
    function hd() {}
    function kf() {}
    function lf() {}
    function mf() {}
    function nf() {}
    function Gh() {}
    function Hh() {}
    function of() {}
    function Rd() {}
    function pf() {}
    function Ih(n, d, c) {
        d = n.prefix || "";
        n = n.namespaceURI;
        if (!n || "xml" === d && n === zc.XML || n === zc.XMLNS)
            return !1;
        for (var b = c.length; b--; ) {
            var a = c[b];
            if (a.prefix === d)
                return a.namespace !== n
        }
        return !0
    }
    function qf(n, d, c) {
        n.push(" ", d, '="', c.replace(/[<&"]/g, Dh), '"')
    }
    function Bc(n, d, c, b, a) {
        a || (a = []);
        if (b)
            if (n = b(n)) {
                if ("string" == typeof n) {
                    d.push(n);
                    return
                }
            } else
                return;
        switch (n.nodeType) {
        case zb:
            var e = n.attributes
              , l = e.length
              , h = n.firstChild
              , g = n.tagName;
            c = zc.isHTML(n.namespaceURI) || c;
            var q = g;
            if (!c && !n.prefix && n.namespaceURI) {
                for (var p, f = 0; f < e.length; f++)
                    if ("xmlns" === e.item(f).name) {
                        p = e.item(f).value;
                        break
                    }
                if (!p)
                    for (f = a.length - 1; 0 <= f; f--) {
                        var m = a[f];
                        if ("" === m.prefix && m.namespace === n.namespaceURI) {
                            p = m.namespace;
                            break
                        }
                    }
                if (p !== n.namespaceURI)
                    for (f = a.length - 1; 0 <= f; f--)
                        if (m = a[f],
                        m.namespace === n.namespaceURI) {
                            m.prefix && (q = m.prefix + ":" + g);
                            break
                        }
            }
            d.push("<", q);
            for (p = 0; p < l; p++)
                f = e.item(p),
                "xmlns" == f.prefix ? a.push({
                    prefix: f.localName,
                    namespace: f.value
                }) : "xmlns" == f.nodeName && a.push({
                    prefix: "",
                    namespace: f.value
                });
            for (p = 0; p < l; p++) {
                f = e.item(p);
                if (Ih(f, c, a)) {
                    m = f.prefix || "";
                    var k = f.namespaceURI;
                    qf(d, m ? "xmlns:" + m : "xmlns", k);
                    a.push({
                        prefix: m,
                        namespace: k
                    })
                }
                Bc(f, d, c, b, a)
            }
            g === q && Ih(n, c, a) && (m = n.prefix || "",
            k = n.namespaceURI,
            qf(d, m ? "xmlns:" + m : "xmlns", k),
            a.push({
                prefix: m,
                namespace: k
            }));
            if (h || c && !/^(?:meta|link|img|br|hr|input)$/i.test(g)) {
                d.push(">");
                if (c && /^script$/i.test(g))
                    for (; h; )
                        h.data ? d.push(h.data) : Bc(h, d, c, b, a.slice()),
                        h = h.nextSibling;
                else
                    for (; h; )
                        Bc(h, d, c, b, a.slice()),
                        h = h.nextSibling;
                d.push("</", q, ">")
            } else
                d.push("/>");
            break;
        case Jh:
        case Qb:
            for (h = n.firstChild; h; )
                Bc(h, d, c, b, a.slice()),
                h = h.nextSibling;
            break;
        case Cc:
            return qf(d, n.name, n.value);
        case Sd:
            return d.push(n.data.replace(/[<&]/g, Dh).replace(/]]\x3e/g, "]]&gt;"));
        case Kh:
            return d.push("<![CDATA[", n.data, "]]\x3e");
        case Lh:
            return d.push("\x3c!--", n.data, "--\x3e");
        case Mh:
            c = n.publicId;
            b = n.systemId;
            d.push("<!DOCTYPE ", n.name);
            c ? (d.push(" PUBLIC ", c),
            b && "." != b && d.push(" ", b),
            d.push(">")) : b && "." != b ? d.push(" SYSTEM ", b, ">") : ((n = n.internalSubset) && d.push(" [", n, "]"),
            d.push(">"));
            break;
        case Nh:
            return d.push("<?", n.target, " ", n.data, "?>");
        case Oh:
            return d.push("&", n.nodeName, ";");
        default:
            d.push("??", n.nodeName)
        }
    }
    function Ph(n, d, c) {
        switch (d.nodeType) {
        case zb:
            var b = d.cloneNode(!1);
            b.ownerDocument = n;
        case Qb:
            break;
        case Cc:
            c = !0
        }
        b || (b = d.cloneNode(!1));
        b.ownerDocument = n;
        b.parentNode = null;
        if (c)
            for (d = d.firstChild; d; )
                b.appendChild(Ph(n, d, c)),
                d = d.nextSibling;
        return b
    }
    function rf(n, d, c) {
        var b = new d.constructor;
        for (e in d) {
            var a = d[e];
            "object" != typeof a && a != b[e] && (b[e] = a)
        }
        d.childNodes && (b.childNodes = new dc);
        b.ownerDocument = n;
        switch (b.nodeType) {
        case zb:
            var e = d.attributes;
            var l = b.attributes = new Pd;
            a = e.length;
            l._ownerElement = b;
            for (l = 0; l < a; l++)
                b.setAttributeNode(rf(n, e.item(l), !0));
            break;
        case Cc:
            c = !0
        }
        if (c)
            for (d = d.firstChild; d; )
                b.appendChild(rf(n, d, c)),
                d = d.nextSibling;
        return b
    }
    function yh(n, d, c) {
        n[d] = c
    }
    function Dc(n, d) {
        this.message = n;
        this.locator = d;
        Error.captureStackTrace && Error.captureStackTrace(this, Dc)
    }
    function Qh() {}
    function Ll(n, d, c, b, a) {
        function e(la) {
            var oa = la.slice(1, -1);
            if (oa in c)
                return c[oa];
            if ("#" === oa.charAt(0))
                return la = parseInt(oa.substr(1).replace("x", "0x")),
                65535 < la ? (la -= 65536,
                la = String.fromCharCode(55296 + (la >> 10), 56320 + (la & 1023))) : la = String.fromCharCode(la),
                la;
            a.error("entity not found:" + la);
            return la
        }
        function l(la) {
            if (la > k) {
                var oa = n.substring(k, la).replace(/&#?\w+;/g, e);
                f && h(k);
                b.characters(oa, 0, la - k);
                k = la
            }
        }
        function h(la, oa) {
            for (; la >= q && (oa = p.exec(n)); )
                g = oa.index,
                q = g + oa[0].length,
                f.lineNumber++;
            f.columnNumber = la - g + 1
        }
        var g = 0
          , q = 0
          , p = /.*(?:\r\n?|\n)|.*$/g
          , f = b.locator;
        d = [{
            currentNSMap: d
        }];
        for (var m = {}, k = 0; ; ) {
            try {
                var r = n.indexOf("<", k);
                if (0 > r) {
                    if (!n.substr(k).match(/^\s*$/)) {
                        var u = b.doc
                          , t = u.createTextNode(n.substr(k));
                        u.appendChild(t);
                        b.currentElement = t
                    }
                    break
                }
                r > k && l(r);
                switch (n.charAt(r + 1)) {
                case "/":
                    var x = n.indexOf(">", r + 3)
                      , F = n.substring(r + 2, x).replace(/[ \t\n\r]+$/g, "")
                      , K = d.pop();
                    0 > x ? (F = n.substring(r + 2).replace(/[\s<].*/, ""),
                    a.error("end tag name: " + F + " is not complete:" + K.tagName),
                    x = r + 1 + F.length) : F.match(/\s</) && (F = F.replace(/[\s<].*/, ""),
                    a.error("end tag name: " + F + " maybe not complete"),
                    x = r + 1 + F.length);
                    var M = K.localNSMap
                      , P = K.tagName == F;
                    if (P || K.tagName && K.tagName.toLowerCase() == F.toLowerCase()) {
                        b.endElement(K.uri, K.localName, F);
                        if (M)
                            for (var I in M)
                                b.endPrefixMapping(I);
                        P || a.fatalError("end tag name: " + F + " is not match the current start tagName:" + K.tagName)
                    } else
                        d.push(K);
                    x++;
                    break;
                case "?":
                    f && h(r);
                    x = Ml(n, r, b);
                    break;
                case "!":
                    f && h(r);
                    x = Nl(n, r, b, a);
                    break;
                default:
                    f && h(r);
                    var L = new Rh
                      , V = d[d.length - 1].currentNSMap;
                    x = Ol(n, r, L, V, e, a);
                    var Y = L.length;
                    !L.closed && Pl(n, x, L.tagName, m) && (L.closed = !0,
                    c.nbsp || a.warning("unclosed xml attribute"));
                    if (f && Y) {
                        for (var fa = Sh(f, {}), ja = 0; ja < Y; ja++) {
                            var U = L[ja];
                            h(U.offset);
                            U.locator = Sh(f, {})
                        }
                        b.locator = fa;
                        Th(L, b, V) && d.push(L);
                        b.locator = f
                    } else
                        Th(L, b, V) && d.push(L);
                    id.isHTML(L.uri) && !L.closed ? x = Ql(n, x, L.tagName, e, b) : x++
                }
            } catch (la) {
                if (la instanceof Dc)
                    throw la;
                a.error("element parse error: " + la);
                x = -1
            }
            x > k ? k = x : l(Math.max(r, k) + 1)
        }
    }
    function Sh(n, d) {
        d.lineNumber = n.lineNumber;
        d.columnNumber = n.columnNumber;
        return d
    }
    function Ol(n, d, c, b, a, e) {
        function l(m, k, r) {
            c.attributeNames.hasOwnProperty(m) && e.fatalError("Attribute " + m + " redefined");
            c.addValue(m, k, r)
        }
        for (var h, g, q = ++d, p = 0; ; ) {
            var f = n.charAt(q);
            switch (f) {
            case "=":
                if (1 === p)
                    h = n.slice(d, q),
                    p = 3;
                else if (2 === p)
                    p = 3;
                else
                    throw Error("attribute equal must after attrName");
                break;
            case "'":
            case '"':
                if (3 === p || 1 === p)
                    if (1 === p && (e.warning('attribute value must after "="'),
                    h = n.slice(d, q)),
                    d = q + 1,
                    q = n.indexOf(f, d),
                    0 < q)
                        g = n.slice(d, q).replace(/&#?\w+;/g, a),
                        l(h, g, d - 1),
                        p = 5;
                    else
                        throw Error("attribute value no end '" + f + "' match");
                else if (4 == p)
                    g = n.slice(d, q).replace(/&#?\w+;/g, a),
                    l(h, g, d),
                    e.warning('attribute "' + h + '" missed start quot(' + f + ")!!"),
                    d = q + 1,
                    p = 5;
                else
                    throw Error('attribute value must after "="');
                break;
            case "/":
                switch (p) {
                case 0:
                    c.setTagName(n.slice(d, q));
                case 5:
                case 6:
                case 7:
                    p = 7,
                    c.closed = !0;
                case 4:
                case 1:
                case 2:
                    break;
                default:
                    throw Error("attribute invalid close char('/')");
                }
                break;
            case "":
                return e.error("unexpected end of input"),
                0 == p && c.setTagName(n.slice(d, q)),
                q;
            case ">":
                switch (p) {
                case 0:
                    c.setTagName(n.slice(d, q));
                case 5:
                case 6:
                case 7:
                    break;
                case 4:
                case 1:
                    g = n.slice(d, q),
                    "/" === g.slice(-1) && (c.closed = !0,
                    g = g.slice(0, -1));
                case 2:
                    2 === p && (g = h);
                    4 == p ? (e.warning('attribute "' + g + '" missed quot(")!'),
                    l(h, g.replace(/&#?\w+;/g, a), d)) : (id.isHTML(b[""]) && g.match(/^(?:disabled|checked|selected)$/i) || e.warning('attribute "' + g + '" missed value!! "' + g + '" instead!!'),
                    l(g, g, d));
                    break;
                case 3:
                    throw Error("attribute value missed!!");
                }
                return q;
            case "\u0080":
                f = " ";
            default:
                if (" " >= f)
                    switch (p) {
                    case 0:
                        c.setTagName(n.slice(d, q));
                        p = 6;
                        break;
                    case 1:
                        h = n.slice(d, q);
                        p = 2;
                        break;
                    case 4:
                        g = n.slice(d, q).replace(/&#?\w+;/g, a),
                        e.warning('attribute "' + g + '" missed quot(")!!'),
                        l(h, g, d);
                    case 5:
                        p = 6
                    }
                else
                    switch (p) {
                    case 2:
                        c.tagName;
                        id.isHTML(b[""]) && h.match(/^(?:disabled|checked|selected)$/i) || e.warning('attribute "' + h + '" missed value!! "' + h + '" instead2!!');
                        l(h, h, d);
                        d = q;
                        p = 1;
                        break;
                    case 5:
                        e.warning('attribute space is required"' + h + '"!!');
                    case 6:
                        p = 1;
                        d = q;
                        break;
                    case 3:
                        p = 4;
                        d = q;
                        break;
                    case 7:
                        throw Error("elements closed character '/' and '>' must be connected to");
                    }
            }
            q++
        }
    }
    function Th(n, d, c) {
        for (var b = n.tagName, a = null, e = n.length; e--; ) {
            var l = n[e]
              , h = l.qName
              , g = l.value
              , q = h.indexOf(":");
            if (0 < q) {
                var p = l.prefix = h.slice(0, q);
                q = h.slice(q + 1);
                p = "xmlns" === p && q
            } else
                q = h,
                p = "xmlns" === h && "";
            l.localName = q;
            if (!1 !== p) {
                if (null == a) {
                    a = {};
                    q = void 0;
                    h = c;
                    var f = c = {};
                    for (q in h)
                        f[q] = h[q]
                }
                c[p] = a[p] = g;
                l.uri = id.XMLNS;
                d.startPrefixMapping(p, g)
            }
        }
        for (e = n.length; e--; )
            if (l = n[e],
            p = l.prefix)
                "xml" === p && (l.uri = id.XML),
                "xmlns" !== p && (l.uri = c[p || ""]);
        q = b.indexOf(":");
        0 < q ? (p = n.prefix = b.slice(0, q),
        q = n.localName = b.slice(q + 1)) : (p = null,
        q = n.localName = b);
        e = n.uri = c[p || ""];
        d.startElement(e, q, b, n);
        if (n.closed) {
            if (d.endElement(e, q, b),
            a)
                for (p in a)
                    d.endPrefixMapping(p)
        } else
            return n.currentNSMap = c,
            n.localNSMap = a,
            !0
    }
    function Ql(n, d, c, b, a) {
        if (/^(?:script|textarea)$/i.test(c)) {
            var e = n.indexOf("</" + c + ">", d);
            n = n.substring(d + 1, e);
            if (/[&<]/.test(n)) {
                if (/^script$/i.test(c))
                    return a.characters(n, 0, n.length),
                    e;
                n = n.replace(/&#?\w+;/g, b);
                a.characters(n, 0, n.length);
                return e
            }
        }
        return d + 1
    }
    function Pl(n, d, c, b) {
        var a = b[c];
        null == a && (a = n.lastIndexOf("</" + c + ">"),
        a < d && (a = n.lastIndexOf("</" + c)),
        b[c] = a);
        return a < d
    }
    function Nl(n, d, c, b) {
        switch (n.charAt(d + 2)) {
        case "-":
            if ("-" === n.charAt(d + 3)) {
                var a = n.indexOf("--\x3e", d + 4);
                if (a > d)
                    return c.comment(n, d + 4, a - d - 4),
                    a + 3;
                b.error("Unclosed comment")
            }
            break;
        default:
            if ("CDATA[" == n.substr(d + 3, 6))
                return a = n.indexOf("]]\x3e", d + 9),
                c.startCDATA(),
                c.characters(n, d + 9, a - d - 9),
                c.endCDATA(),
                a + 3;
            a: {
                b = [];
                a = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
                a.lastIndex = d;
                for (a.exec(n); d = a.exec(n); )
                    if (b.push(d),
                    d[1]) {
                        a = b;
                        break a
                    }
                a = void 0
            }
            var e = a.length;
            if (1 < e && /!doctype/i.test(a[0][0]))
                return n = a[1][0],
                b = d = !1,
                3 < e && (/^public$/i.test(a[2][0]) ? (d = a[3][0],
                b = 4 < e && a[4][0]) : /^system$/i.test(a[2][0]) && (b = a[3][0])),
                a = a[e - 1],
                c.startDTD(n, d, b),
                c.endDTD(),
                a.index + a[0].length
        }
        return -1
    }
    function Ml(n, d, c) {
        var b = n.indexOf("?>", d);
        return b && (n = n.substring(d, b).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/)) ? (n[0].length,
        c.processingInstruction(n[1], n[2]),
        b + 2) : -1
    }
    function Rh() {
        this.attributeNames = {}
    }
    function Uh(n) {
        this.options = n || {
            locator: {}
        }
    }
    function Rl(n, d, c) {
        function b(l) {
            var h = n[l];
            !h && e && (h = 2 == n.length ? function(g) {
                n(l, g)
            }
            : n);
            a[l] = h && function(g) {
                h("[xmldom " + l + "]\t" + g + sf(c))
            }
            || function() {}
        }
        if (!n) {
            if (d instanceof Td)
                return d;
            n = d
        }
        var a = {}
          , e = n instanceof Function;
        c = c || {};
        b("warning");
        b("error");
        b("fatalError");
        return a
    }
    function Td() {
        this.cdata = !1
    }
    function Ec(n, d) {
        d.lineNumber = n.lineNumber;
        d.columnNumber = n.columnNumber
    }
    function sf(n) {
        if (n)
            return "\n@" + (n.systemId || "") + "#[line:" + n.lineNumber + ",col:" + n.columnNumber + "]"
    }
    function Vh(n, d, c) {
        return "string" == typeof n ? n.substr(d, c) : n.length >= d + c || d ? new java.lang.String(n,d,c) + "" : n
    }
    function Ud(n, d) {
        n.currentElement ? n.currentElement.appendChild(d) : n.doc.appendChild(d)
    }
    function Rb() {}
    for (var Sb = {}, cc = function(n, d) {
        Sb[n] = Sb[n] || [];
        d && (Sb[n] = Sb[n].concat(d));
        return Sb[n]
    }, Wh = function(n, d) {
        d = cc(n).indexOf(d);
        if (-1 >= d)
            return !1;
        Sb[n] = Sb[n].slice();
        Sb[n].splice(d, 1);
        return !0
    }, Hd = {
        prefixed: !0
    }, Vd = ["requestFullscreen exitFullscreen fullscreenElement fullscreenEnabled fullscreenchange fullscreenerror fullscreen".split(" "), "webkitRequestFullscreen webkitExitFullscreen webkitFullscreenElement webkitFullscreenEnabled webkitfullscreenchange webkitfullscreenerror -webkit-full-screen".split(" "), "mozRequestFullScreen mozCancelFullScreen mozFullScreenElement mozFullScreenEnabled mozfullscreenchange mozfullscreenerror -moz-full-screen".split(" "), "msRequestFullscreen msExitFullscreen msFullscreenElement msFullscreenEnabled MSFullscreenChange MSFullscreenError -ms-fullscreen".split(" ")], Xh = Vd[0], jd, Wd = 0; Wd < Vd.length; Wd++)
        if (Vd[Wd][1]in document) {
            jd = Vd[Wd];
            break
        }
    if (jd) {
        for (var Xd = 0; Xd < jd.length; Xd++)
            Hd[Xh[Xd]] = jd[Xd];
        Hd.prefixed = jd[0] !== Xh[0]
    }
    var lb = [], ll = function(n, d) {
        return function(c, b, a) {
            b = d.levels[b];
            var e = new RegExp("^(" + b + ")$");
            "log" !== c && a.unshift(c.toUpperCase() + ":");
            a.unshift(n + ":");
            if (lb) {
                lb.push([].concat(a));
                var l = lb.length - 1E3;
                lb.splice(0, 0 < l ? l : 0)
            }
            if (window.console && ((l = window.console[c]) || "debug" !== c || (l = window.console.info || window.console.log),
            l && b && e.test(c)))
                l[Array.isArray(a) ? "apply" : "call"](window.console, a)
        }
    }, va = R("VIDEOJS"), Yh = va.createLogger, Yd = "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : {}, Fb = ha(function(n) {
        function d() {
            n.exports = d = Object.assign || function(c) {
                for (var b = 1; b < arguments.length; b++) {
                    var a = arguments[b], e;
                    for (e in a)
                        Object.prototype.hasOwnProperty.call(a, e) && (c[e] = a[e])
                }
                return c
            }
            ;
            return d.apply(this, arguments)
        }
        n.exports = d
    }), ml = Object.prototype.toString, Zg = function(n) {
        return wa(n) ? Object.keys(n) : []
    }, Sa = window.navigator && window.navigator.userAgent || "", Zh = /AppleWebKit\/([\d.]+)/i.exec(Sa), Sl = Zh ? parseFloat(Zh.pop()) : null, $h = /iPod/i.test(Sa), Tl = function() {
        var n = Sa.match(/OS (\d+)_/i);
        return n && n[1] ? n[1] : null
    }(), Tb = /Android/i.test(Sa), tf = function() {
        var n = Sa.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
        if (!n)
            return null;
        var d = n[1] && parseFloat(n[1])
          , c = n[2] && parseFloat(n[2]);
        return d && c ? parseFloat(n[1] + "." + n[2]) : d ? d : null
    }(), ai = Tb && 5 > tf && 537 > Sl, bi = /Firefox/i.test(Sa), kd = /Edg/i.test(Sa), Ub = !kd && (/Chrome/i.test(Sa) || /CriOS/i.test(Sa)), ci = function() {
        var n = Sa.match(/(Chrome|CriOS)\/(\d+)/);
        return n && n[2] ? parseFloat(n[2]) : null
    }(), ld = function() {
        var n = /MSIE\s(\d+)\.\d/.exec(Sa);
        n = n && parseFloat(n[1]);
        !n && /Trident\/7.0/i.test(Sa) && /rv:11.0/.test(Sa) && (n = 11);
        return n
    }(), uf = /Safari/i.test(Sa) && !Ub && !Tb && !kd, di = /Windows/i.test(Sa), Fc = !(!ea() || !("ontouchstart"in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch)), vf = /iPad/i.test(Sa) || uf && Fc && !/iPhone/i.test(Sa), wf = /iPhone/i.test(Sa) && !vf, cb = wf || vf || $h, Zd = (uf || cb) && !Ub, Ul = Object.freeze({
        __proto__: null,
        IS_IPOD: $h,
        IOS_VERSION: Tl,
        IS_ANDROID: Tb,
        ANDROID_VERSION: tf,
        IS_NATIVE_ANDROID: ai,
        IS_FIREFOX: bi,
        IS_EDGE: kd,
        IS_CHROME: Ub,
        CHROME_VERSION: ci,
        IE_VERSION: ld,
        IS_SAFARI: uf,
        IS_WINDOWS: di,
        TOUCH_ENABLED: Fc,
        IS_IPAD: vf,
        IS_IPHONE: wf,
        IS_IOS: cb,
        IS_ANY_SAFARI: Zd
    }), bc = Qa("querySelector"), ei = Qa("querySelectorAll"), fi = Object.freeze({
        __proto__: null,
        isReal: ea,
        isEl: ka,
        isInFrame: ua,
        createEl: ta,
        textContent: yb,
        prependTo: hc,
        hasClass: ic,
        addClass: Mb,
        removeClass: Yc,
        toggleClass: $g,
        setAttributes: ah,
        getAttributes: Nb,
        getAttribute: function(n, d) {
            return n.getAttribute(d)
        },
        setAttribute: function(n, d, c) {
            n.setAttribute(d, c)
        },
        removeAttribute: function(n, d) {
            n.removeAttribute(d)
        },
        blockTextSelection: bh,
        unblockTextSelection: ch,
        getBoundingClientRect: tc,
        findPosition: Zc,
        getPointerPosition: Id,
        isTextNode: dh,
        emptyEl: Se,
        normalizeContent: eh,
        appendContent: Re,
        insertContent: fh,
        isSingleLeftClick: $c,
        $: bc,
        $$: ei
    }), gh = !1, Ue, nl = function() {
        if (!1 !== Ue.options.autoSetup) {
            var n = Array.prototype.slice.call(document.getElementsByTagName("video"))
              , d = Array.prototype.slice.call(document.getElementsByTagName("audio"))
              , c = Array.prototype.slice.call(document.getElementsByTagName("video-js"));
            if ((n = n.concat(d, c)) && 0 < n.length)
                for (d = 0,
                c = n.length; d < c; d++) {
                    var b = n[d];
                    if (b && b.getAttribute)
                        void 0 === b.player && null !== b.getAttribute("data-setup") && Ue(b);
                    else {
                        Te(1);
                        break
                    }
                }
            else
                gh || Te(1)
        }
    };
    ea() && ("complete" === document.readyState ? Ve() : window.addEventListener("load", Ve));
    var gi = function(n) {
        var d = document.createElement("style");
        d.className = n;
        return d
    }, hi = function(n, d) {
        n.styleSheet ? n.styleSheet.cssText = d : n.textContent = d
    }, Ob = 3, ii;
    window.WeakMap || (ii = function() {
        function n() {
            this.vdata = "vdata" + Math.floor(window.performance && window.performance.now() || Date.now());
            this.data = {}
        }
        var d = n.prototype;
        d.set = function(c, b) {
            var a = c[this.vdata] || Ob++;
            c[this.vdata] || (c[this.vdata] = a);
            this.data[a] = b;
            return this
        }
        ;
        d.get = function(c) {
            var b = c[this.vdata];
            if (b)
                return this.data[b];
            va("We have no data for this element", c)
        }
        ;
        d.has = function(c) {
            return c[this.vdata]in this.data
        }
        ;
        d["delete"] = function(c) {
            var b = c[this.vdata];
            b && (delete this.data[b],
            delete c[this.vdata])
        }
        ;
        return n
    }());
    var db = window.WeakMap ? new WeakMap : new ii, $d, ol = function() {
        if ("boolean" !== typeof $d) {
            $d = !1;
            try {
                var n = Object.defineProperty({}, "passive", {
                    get: function() {
                        $d = !0
                    }
                });
                window.addEventListener("test", null, n);
                window.removeEventListener("test", null, n)
            } catch (d) {}
        }
        return $d
    }, pl = ["touchstart", "touchmove"], Vl = Object.freeze({
        __proto__: null,
        fixEvent: Jd,
        on: rb,
        off: Za,
        trigger: uc,
        one: Kd,
        any: ih
    }), Fa = function(n, d, c) {
        d.guid || (d.guid = Ob++);
        n = d.bind(n);
        n.guid = c ? c + "_" + d.guid : d.guid;
        return n
    }, Vb = function(n, d) {
        var c = window.performance.now();
        return function() {
            var b = window.performance.now();
            b - c >= d && (n.apply(void 0, arguments),
            c = b)
        }
    }, Wl = function(n, d, c, b) {
        void 0 === b && (b = window);
        var a, e = function() {
            var l = this
              , h = arguments
              , g = function() {
                g = a = null;
                c || n.apply(l, h)
            };
            !a && c && n.apply(l, h);
            b.clearTimeout(a);
            a = b.setTimeout(g, d)
        };
        e.cancel = function() {
            b.clearTimeout(a);
            a = null
        }
        ;
        return e
    }, Ta = function() {};
    Ta.prototype.allowedEvents_ = {};
    Ta.prototype.on = function(n, d) {
        var c = this.addEventListener;
        this.addEventListener = function() {}
        ;
        rb(this, n, d);
        this.addEventListener = c
    }
    ;
    Ta.prototype.addEventListener = Ta.prototype.on;
    Ta.prototype.off = function(n, d) {
        Za(this, n, d)
    }
    ;
    Ta.prototype.removeEventListener = Ta.prototype.off;
    Ta.prototype.one = function(n, d) {
        var c = this.addEventListener;
        this.addEventListener = function() {}
        ;
        Kd(this, n, d);
        this.addEventListener = c
    }
    ;
    Ta.prototype.any = function(n, d) {
        var c = this.addEventListener;
        this.addEventListener = function() {}
        ;
        ih(this, n, d);
        this.addEventListener = c
    }
    ;
    Ta.prototype.trigger = function(n) {
        var d = n.type || n;
        "string" === typeof n && (n = {
            type: d
        });
        n = Jd(n);
        if (this.allowedEvents_[d] && this["on" + d])
            this["on" + d](n);
        uc(this, n)
    }
    ;
    Ta.prototype.dispatchEvent = Ta.prototype.trigger;
    var md;
    Ta.prototype.queueTrigger = function(n) {
        var d = this;
        md || (md = new Map);
        var c = n.type || n
          , b = md.get(this);
        b || (b = new Map,
        md.set(this, b));
        var a = b.get(c);
        b["delete"](c);
        window.clearTimeout(a);
        a = window.setTimeout(function() {
            0 === b.size && (b = null,
            md["delete"](d));
            d.trigger(n)
        }, 0);
        b.set(c, a)
    }
    ;
    var ae = function(n) {
        return "function" === typeof n.name ? n.name() : "string" === typeof n.name ? n.name : n.name_ ? n.name_ : n.constructor && n.constructor.name ? n.constructor.name : typeof n
    }
      , Pb = function(n) {
        return n instanceof Ta || !!n.eventBusEl_ && ["on", "one", "off", "trigger"].every(function(d) {
            return "function" === typeof n[d]
        })
    }
      , Xl = function(n, d) {
        Pb(n) ? d() : (n.eventedCallbacks || (n.eventedCallbacks = []),
        n.eventedCallbacks.push(d))
    }
      , xf = function(n) {
        return "string" === typeof n && /\S/.test(n) || Array.isArray(n) && !!n.length
    }
      , be = function(n, d, c) {
        if (!n || !n.nodeName && !Pb(n))
            throw Error("Invalid target for " + ae(d) + "#" + c + "; must be a DOM node or evented object.");
    }
      , ji = function(n, d, c) {
        if (!xf(n))
            throw Error("Invalid event type for " + ae(d) + "#" + c + "; must be a non-empty string or array.");
    }
      , ki = function(n, d, c) {
        if ("function" !== typeof n)
            throw Error("Invalid listener for " + ae(d) + "#" + c + "; must be a function.");
    }
      , yf = function(n, d, c) {
        var b = 3 > d.length || d[0] === n || d[0] === n.eventBusEl_;
        if (b) {
            var a = n.eventBusEl_;
            3 <= d.length && d.shift();
            var e = d[0];
            d = d[1]
        } else
            a = d[0],
            e = d[1],
            d = d[2];
        be(a, n, c);
        ji(e, n, c);
        ki(d, n, c);
        d = Fa(n, d);
        return {
            isTargetingSelf: b,
            target: a,
            type: e,
            listener: d
        }
    }
      , mc = function(n, d, c, b) {
        be(n, n, d);
        if (n.nodeName)
            Vl[d](n, c, b);
        else
            n[d](c, b)
    }
      , ql = {
        on: function() {
            for (var n = this, d = arguments.length, c = Array(d), b = 0; b < d; b++)
                c[b] = arguments[b];
            d = yf(this, c, "on");
            c = d.isTargetingSelf;
            var a = d.target
              , e = d.type
              , l = d.listener;
            mc(a, "on", e, l);
            if (!c) {
                var h = function() {
                    return n.off(a, e, l)
                };
                h.guid = l.guid;
                d = function() {
                    return n.off("dispose", h)
                }
                ;
                d.guid = l.guid;
                mc(this, "on", "dispose", h);
                mc(a, "on", "dispose", d)
            }
        },
        one: function() {
            for (var n = this, d = arguments.length, c = Array(d), b = 0; b < d; b++)
                c[b] = arguments[b];
            d = yf(this, c, "one");
            var a = d.target
              , e = d.type
              , l = d.listener;
            d.isTargetingSelf ? mc(a, "one", e, l) : (d = function g() {
                n.off(a, e, g);
                for (var q = arguments.length, p = Array(q), f = 0; f < q; f++)
                    p[f] = arguments[f];
                l.apply(null, p)
            }
            ,
            d.guid = l.guid,
            mc(a, "one", e, d))
        },
        any: function() {
            for (var n = this, d = arguments.length, c = Array(d), b = 0; b < d; b++)
                c[b] = arguments[b];
            d = yf(this, c, "any");
            var a = d.target
              , e = d.type
              , l = d.listener;
            d.isTargetingSelf ? mc(a, "any", e, l) : (d = function g() {
                n.off(a, e, g);
                for (var q = arguments.length, p = Array(q), f = 0; f < q; f++)
                    p[f] = arguments[f];
                l.apply(null, p)
            }
            ,
            d.guid = l.guid,
            mc(a, "any", e, d))
        },
        off: function(n, d, c) {
            !n || xf(n) ? Za(this.eventBusEl_, n, d) : (be(n, this, "off"),
            ji(d, this, "off"),
            ki(c, this, "off"),
            c = Fa(this, c),
            this.off("dispose", c),
            n.nodeName ? (Za(n, d, c),
            Za(n, "dispose", c)) : Pb(n) && (n.off(d, c),
            n.off("dispose", c)))
        },
        trigger: function(n, d) {
            be(this.eventBusEl_, this, "trigger");
            if (!xf(n && "string" !== typeof n ? n.type : n)) {
                var c = "Invalid event type for " + ae(this) + "#trigger; must be a non-empty string or object with a type key that has a non-empty value.";
                if (n)
                    (this.log || va).error(c);
                else
                    throw Error(c);
            }
            return uc(this.eventBusEl_, n, d)
        }
    }
      , rl = {
        state: {},
        setState: function(n) {
            var d = this;
            "function" === typeof n && (n = n());
            var c;
            ca(n, function(b, a) {
                d.state[a] !== b && (c = c || {},
                c[a] = {
                    from: d.state[a],
                    to: b
                });
                d.state[a] = b
            });
            c && Pb(this) && this.trigger({
                changes: c,
                type: "statechanged"
            });
            return c
        }
    }
      , ce = function(n) {
        return "string" !== typeof n ? n : n.replace(/./, function(d) {
            return d.toLowerCase()
        })
    }
      , Ka = function(n) {
        return "string" !== typeof n ? n : n.replace(/./, function(d) {
            return d.toUpperCase()
        })
    }
      , Yl = function(n, d) {
        return Ka(n) === Ka(d)
    }
      , Zl = function() {
        function n() {
            this.map_ = {}
        }
        var d = n.prototype;
        d.has = function(c) {
            return c in this.map_
        }
        ;
        d["delete"] = function(c) {
            var b = this.has(c);
            delete this.map_[c];
            return b
        }
        ;
        d.set = function(c, b) {
            this.map_[c] = b;
            return this
        }
        ;
        d.forEach = function(c, b) {
            for (var a in this.map_)
                c.call(b, this.map_[a], a, this)
        }
        ;
        return n
    }()
      , $l = window.Map ? window.Map : Zl
      , am = function() {
        function n() {
            this.set_ = {}
        }
        var d = n.prototype;
        d.has = function(c) {
            return c in this.set_
        }
        ;
        d["delete"] = function(c) {
            var b = this.has(c);
            delete this.set_[c];
            return b
        }
        ;
        d.add = function(c) {
            this.set_[c] = 1;
            return this
        }
        ;
        d.forEach = function(c, b) {
            for (var a in this.set_)
                c.call(b, a, a, this)
        }
        ;
        return n
    }()
      , zf = window.Set ? window.Set : am
      , ra = ha(function(n, d) {
        function c(h) {
            if (h && "object" === typeof h) {
                var g = h.which || h.keyCode || h.charCode;
                g && (h = g)
            }
            if ("number" === typeof h)
                return e[h];
            h = String(h);
            if ((g = b[h.toLowerCase()]) || (g = a[h.toLowerCase()]))
                return g;
            if (1 === h.length)
                return h.charCodeAt(0)
        }
        c.isEventKey = function(h, g) {
            if (h && "object" === typeof h) {
                h = h.which || h.keyCode || h.charCode;
                if (null === h || void 0 === h)
                    return !1;
                if ("string" === typeof g) {
                    var q = b[g.toLowerCase()];
                    if (q || (q = a[g.toLowerCase()]))
                        return q === h
                } else if ("number" === typeof g)
                    return g === h;
                return !1
            }
        }
        ;
        d = n.exports = c;
        var b = d.code = d.codes = {
            backspace: 8,
            tab: 9,
            enter: 13,
            shift: 16,
            ctrl: 17,
            alt: 18,
            "pause/break": 19,
            "caps lock": 20,
            esc: 27,
            space: 32,
            "page up": 33,
            "page down": 34,
            end: 35,
            home: 36,
            left: 37,
            up: 38,
            right: 39,
            down: 40,
            insert: 45,
            "delete": 46,
            command: 91,
            "left command": 91,
            "right command": 93,
            "numpad *": 106,
            "numpad +": 107,
            "numpad -": 109,
            "numpad .": 110,
            "numpad /": 111,
            "num lock": 144,
            "scroll lock": 145,
            "my computer": 182,
            "my calculator": 183,
            ";": 186,
            "=": 187,
            ",": 188,
            "-": 189,
            ".": 190,
            "/": 191,
            "`": 192,
            "[": 219,
            "\\": 220,
            "]": 221,
            "'": 222
        }
          , a = d.aliases = {
            windows: 91,
            "\u21e7": 16,
            "\u2325": 18,
            "\u2303": 17,
            "\u2318": 91,
            ctl: 17,
            control: 17,
            option: 18,
            pause: 19,
            "break": 19,
            caps: 20,
            "return": 13,
            escape: 27,
            spc: 32,
            spacebar: 32,
            pgup: 33,
            pgdn: 34,
            ins: 45,
            del: 46,
            cmd: 91
        };
        for (n = 97; 123 > n; n++)
            b[String.fromCharCode(n)] = n - 32;
        for (n = 48; 58 > n; n++)
            b[n - 48] = n;
        for (n = 1; 13 > n; n++)
            b["f" + n] = n + 111;
        for (n = 0; 10 > n; n++)
            b["numpad " + n] = n + 96;
        var e = d.names = d.title = {};
        for (n in b)
            e[b[n]] = n;
        for (var l in a)
            b[l] = a[l]
    });
    ra.code;
    ra.codes;
    ra.aliases;
    ra.names;
    ra.title;
    var aa = function() {
        function n(c, b, a) {
            var e = this;
            this.player_ = !c && this.play ? c = this : c;
            this.isDisposed_ = !1;
            this.parentComponent_ = null;
            this.options_ = Ea({}, this.options_);
            b = this.options_ = Ea(this.options_, b);
            this.id_ = b.id || b.el && b.el.id;
            this.id_ || (this.id_ = (c && c.id && c.id() || "no_player") + "_component_" + Ob++);
            this.name_ = b.name || null;
            b.el ? this.el_ = b.el : !1 !== b.createEl && (this.el_ = this.createEl());
            b.className && this.el_ && b.className.split(" ").forEach(function(l) {
                return e.addClass(l)
            });
            !1 !== b.evented && (Xe(this, {
                eventBusKey: this.el_ ? "el_" : null
            }),
            this.handleLanguagechange = this.handleLanguagechange.bind(this),
            this.on(this.player_, "languagechange", this.handleLanguagechange));
            jh(this, this.constructor.defaultState);
            this.children_ = [];
            this.childIndex_ = {};
            this.childNameIndex_ = {};
            this.setTimeoutIds_ = new zf;
            this.setIntervalIds_ = new zf;
            this.rafIds_ = new zf;
            this.namedRafs_ = new $l;
            this.clearingTimersOnDispose_ = !1;
            !1 !== b.initChildren && this.initChildren();
            this.ready(a);
            !1 !== b.reportTouchActivity && this.enableTouchActivity()
        }
        var d = n.prototype;
        d.dispose = function(c) {
            void 0 === c && (c = {});
            if (!this.isDisposed_) {
                this.readyQueue_ && (this.readyQueue_.length = 0);
                this.trigger({
                    type: "dispose",
                    bubbles: !1
                });
                this.isDisposed_ = !0;
                if (this.children_)
                    for (var b = this.children_.length - 1; 0 <= b; b--)
                        this.children_[b].dispose && this.children_[b].dispose();
                this.parentComponent_ = this.childNameIndex_ = this.childIndex_ = this.children_ = null;
                this.el_ && (this.el_.parentNode && (c.restoreEl ? this.el_.parentNode.replaceChild(c.restoreEl, this.el_) : this.el_.parentNode.removeChild(this.el_)),
                this.el_ = null);
                this.player_ = null
            }
        }
        ;
        d.isDisposed = function() {
            return !!this.isDisposed_
        }
        ;
        d.player = function() {
            return this.player_
        }
        ;
        d.options = function(c) {
            return c ? this.options_ = Ea(this.options_, c) : this.options_
        }
        ;
        d.el = function() {
            return this.el_
        }
        ;
        d.createEl = function(c, b, a) {
            return ta(c, b, a)
        }
        ;
        d.localize = function(c, b, a) {
            void 0 === a && (a = c);
            var e = this.player_.language && this.player_.language()
              , l = this.player_.languages && this.player_.languages()
              , h = l && l[e];
            e = e && e.split("-")[0];
            l = l && l[e];
            h && h[c] ? a = h[c] : l && l[c] && (a = l[c]);
            b && (a = a.replace(/\{(\d+)\}/g, function(g, q) {
                var p = q = b[q - 1];
                "undefined" === typeof q && (p = g);
                return p
            }));
            return a
        }
        ;
        d.handleLanguagechange = function() {}
        ;
        d.contentEl = function() {
            return this.contentEl_ || this.el_
        }
        ;
        d.id = function() {
            return this.id_
        }
        ;
        d.name = function() {
            return this.name_
        }
        ;
        d.children = function() {
            return this.children_
        }
        ;
        d.getChildById = function(c) {
            return this.childIndex_[c]
        }
        ;
        d.getChild = function(c) {
            if (c)
                return this.childNameIndex_[c]
        }
        ;
        d.getDescendant = function() {
            for (var c = arguments.length, b = Array(c), a = 0; a < c; a++)
                b[a] = arguments[a];
            b = b.reduce(function(e, l) {
                return e.concat(l)
            }, []);
            c = this;
            for (a = 0; a < b.length; a++)
                if (c = c.getChild(b[a]),
                !c || !c.getChild)
                    return;
            return c
        }
        ;
        d.addChild = function(c, b, a) {
            void 0 === b && (b = {});
            void 0 === a && (a = this.children_.length);
            if ("string" === typeof c) {
                var e = Ka(c);
                c = b.componentClass || e;
                b.name = e;
                var l = n.getComponent(c);
                if (!l)
                    throw Error("Component " + c + " does not exist");
                if ("function" !== typeof l)
                    return null;
                b = new l(this.player_ || this,b)
            } else
                b = c;
            b.parentComponent_ && b.parentComponent_.removeChild(b);
            this.children_.splice(a, 0, b);
            b.parentComponent_ = this;
            "function" === typeof b.id && (this.childIndex_[b.id()] = b);
            if (e = e || b.name && Ka(b.name()))
                this.childNameIndex_[e] = b,
                this.childNameIndex_[ce(e)] = b;
            "function" === typeof b.el && b.el() && (e = null,
            this.children_[a + 1] && (this.children_[a + 1].el_ ? e = this.children_[a + 1].el_ : ka(this.children_[a + 1]) && (e = this.children_[a + 1])),
            this.contentEl().insertBefore(b.el(), e));
            return b
        }
        ;
        d.removeChild = function(c) {
            "string" === typeof c && (c = this.getChild(c));
            if (c && this.children_) {
                for (var b = !1, a = this.children_.length - 1; 0 <= a; a--)
                    if (this.children_[a] === c) {
                        b = !0;
                        this.children_.splice(a, 1);
                        break
                    }
                b && (c.parentComponent_ = null,
                this.childIndex_[c.id()] = null,
                this.childNameIndex_[Ka(c.name())] = null,
                this.childNameIndex_[ce(c.name())] = null,
                (b = c.el()) && b.parentNode === this.contentEl() && this.contentEl().removeChild(c.el()))
            }
        }
        ;
        d.initChildren = function() {
            var c = this
              , b = this.options_.children;
            if (b) {
                var a = this.options_
                  , e = n.getComponent("Tech");
                var l = Array.isArray(b) ? b : Object.keys(b);
                l.concat(Object.keys(this.options_).filter(function(h) {
                    return !l.some(function(g) {
                        return "string" === typeof g ? h === g : h === g.name
                    })
                })).map(function(h) {
                    if ("string" === typeof h) {
                        var g = h;
                        h = b[g] || c.options_[g] || {}
                    } else
                        g = h.name;
                    return {
                        name: g,
                        opts: h
                    }
                }).filter(function(h) {
                    return (h = n.getComponent(h.opts.componentClass || Ka(h.name))) && !e.isTech(h)
                }).forEach(function(h) {
                    var g = h.name;
                    h = h.opts;
                    void 0 !== a[g] && (h = a[g]);
                    !1 !== h && (!0 === h && (h = {}),
                    h.playerOptions = c.options_.playerOptions,
                    (h = c.addChild(g, h)) && (c[g] = h))
                })
            }
        }
        ;
        d.buildCSSClass = function() {
            return ""
        }
        ;
        d.ready = function(c, b) {
            void 0 === b && (b = !1);
            c && (this.isReady_ ? b ? c.call(this) : this.setTimeout(c, 1) : (this.readyQueue_ = this.readyQueue_ || [],
            this.readyQueue_.push(c)))
        }
        ;
        d.triggerReady = function() {
            this.isReady_ = !0;
            this.setTimeout(function() {
                var c = this.readyQueue_;
                this.readyQueue_ = [];
                c && 0 < c.length && c.forEach(function(b) {
                    b.call(this)
                }, this);
                this.trigger("ready")
            }, 1)
        }
        ;
        d.$ = function(c, b) {
            return bc(c, b || this.contentEl())
        }
        ;
        d.$$ = function(c, b) {
            return ei(c, b || this.contentEl())
        }
        ;
        d.hasClass = function(c) {
            return ic(this.el_, c)
        }
        ;
        d.addClass = function(c) {
            Mb(this.el_, c)
        }
        ;
        d.removeClass = function(c) {
            Yc(this.el_, c)
        }
        ;
        d.toggleClass = function(c, b) {
            $g(this.el_, c, b)
        }
        ;
        d.show = function() {
            this.removeClass("vjs-hidden")
        }
        ;
        d.hide = function() {
            this.addClass("vjs-hidden")
        }
        ;
        d.lockShowing = function() {
            this.addClass("vjs-lock-showing")
        }
        ;
        d.unlockShowing = function() {
            this.removeClass("vjs-lock-showing")
        }
        ;
        d.getAttribute = function(c) {
            return this.el_.getAttribute(c)
        }
        ;
        d.setAttribute = function(c, b) {
            this.el_.setAttribute(c, b)
        }
        ;
        d.removeAttribute = function(c) {
            this.el_.removeAttribute(c)
        }
        ;
        d.width = function(c, b) {
            return this.dimension("width", c, b)
        }
        ;
        d.height = function(c, b) {
            return this.dimension("height", c, b)
        }
        ;
        d.dimensions = function(c, b) {
            this.width(c, !0);
            this.height(b)
        }
        ;
        d.dimension = function(c, b, a) {
            if (void 0 !== b) {
                if (null === b || b !== b)
                    b = 0;
                -1 !== ("" + b).indexOf("%") || -1 !== ("" + b).indexOf("px") ? this.el_.style[c] = b : this.el_.style[c] = "auto" === b ? "" : b + "px";
                a || this.trigger("componentresize")
            } else {
                if (!this.el_)
                    return 0;
                b = this.el_.style[c];
                a = b.indexOf("px");
                return -1 !== a ? parseInt(b.slice(0, a), 10) : parseInt(this.el_["offset" + Ka(c)], 10)
            }
        }
        ;
        d.currentDimension = function(c) {
            if ("width" !== c && "height" !== c)
                throw Error("currentDimension only accepts width or height value");
            var b = pa(this.el_, c);
            b = parseFloat(b);
            if (0 === b || isNaN(b))
                c = "offset" + Ka(c),
                b = this.el_[c];
            return b
        }
        ;
        d.currentDimensions = function() {
            return {
                width: this.currentDimension("width"),
                height: this.currentDimension("height")
            }
        }
        ;
        d.currentWidth = function() {
            return this.currentDimension("width")
        }
        ;
        d.currentHeight = function() {
            return this.currentDimension("height")
        }
        ;
        d.focus = function() {
            this.el_.focus()
        }
        ;
        d.blur = function() {
            this.el_.blur()
        }
        ;
        d.handleKeyDown = function(c) {
            this.player_ && (ra.isEventKey(c, "Tab") || c.stopPropagation(),
            this.player_.handleKeyDown(c))
        }
        ;
        d.handleKeyPress = function(c) {
            this.handleKeyDown(c)
        }
        ;
        d.emitTapEvents = function() {
            var c = 0, b = null, a;
            this.on("touchstart", function(l) {
                1 === l.touches.length && (b = {
                    pageX: l.touches[0].pageX,
                    pageY: l.touches[0].pageY
                },
                c = window.performance.now(),
                a = !0)
            });
            this.on("touchmove", function(l) {
                if (1 < l.touches.length)
                    a = !1;
                else if (b) {
                    var h = l.touches[0].pageX - b.pageX;
                    l = l.touches[0].pageY - b.pageY;
                    10 < Math.sqrt(h * h + l * l) && (a = !1)
                }
            });
            var e = function() {
                a = !1
            };
            this.on("touchleave", e);
            this.on("touchcancel", e);
            this.on("touchend", function(l) {
                b = null;
                !0 === a && 200 > window.performance.now() - c && (l.preventDefault(),
                this.trigger("tap"))
            })
        }
        ;
        d.enableTouchActivity = function() {
            if (this.player() && this.player().reportUserActivity) {
                var c = Fa(this.player(), this.player().reportUserActivity), b;
                this.on("touchstart", function() {
                    c();
                    this.clearInterval(b);
                    b = this.setInterval(c, 250)
                });
                var a = function(e) {
                    c();
                    this.clearInterval(b)
                };
                this.on("touchmove", c);
                this.on("touchend", a);
                this.on("touchcancel", a)
            }
        }
        ;
        d.setTimeout = function(c, b) {
            var a = this;
            c = Fa(this, c);
            this.clearTimersOnDispose_();
            var e = window.setTimeout(function() {
                if (a.setTimeoutIds_.has(e))
                    a.setTimeoutIds_["delete"](e);
                c()
            }, b);
            this.setTimeoutIds_.add(e);
            return e
        }
        ;
        d.clearTimeout = function(c) {
            this.setTimeoutIds_.has(c) && (this.setTimeoutIds_["delete"](c),
            window.clearTimeout(c));
            return c
        }
        ;
        d.setInterval = function(c, b) {
            c = Fa(this, c);
            this.clearTimersOnDispose_();
            c = window.setInterval(c, b);
            this.setIntervalIds_.add(c);
            return c
        }
        ;
        d.clearInterval = function(c) {
            this.setIntervalIds_.has(c) && (this.setIntervalIds_["delete"](c),
            window.clearInterval(c));
            return c
        }
        ;
        d.requestAnimationFrame = function(c) {
            var b = this;
            if (!this.supportsRaf_)
                return this.setTimeout(c, 1E3 / 60);
            this.clearTimersOnDispose_();
            c = Fa(this, c);
            var a = window.requestAnimationFrame(function() {
                if (b.rafIds_.has(a))
                    b.rafIds_["delete"](a);
                c()
            });
            this.rafIds_.add(a);
            return a
        }
        ;
        d.requestNamedAnimationFrame = function(c, b) {
            var a = this;
            if (!this.namedRafs_.has(c)) {
                this.clearTimersOnDispose_();
                b = Fa(this, b);
                var e = this.requestAnimationFrame(function() {
                    b();
                    if (a.namedRafs_.has(c))
                        a.namedRafs_["delete"](c)
                });
                this.namedRafs_.set(c, e);
                return c
            }
        }
        ;
        d.cancelNamedAnimationFrame = function(c) {
            this.namedRafs_.has(c) && (this.cancelAnimationFrame(this.namedRafs_.get(c)),
            this.namedRafs_["delete"](c))
        }
        ;
        d.cancelAnimationFrame = function(c) {
            if (!this.supportsRaf_)
                return this.clearTimeout(c);
            this.rafIds_.has(c) && (this.rafIds_["delete"](c),
            window.cancelAnimationFrame(c));
            return c
        }
        ;
        d.clearTimersOnDispose_ = function() {
            var c = this;
            this.clearingTimersOnDispose_ || (this.clearingTimersOnDispose_ = !0,
            this.one("dispose", function() {
                [["namedRafs_", "cancelNamedAnimationFrame"], ["rafIds_", "cancelAnimationFrame"], ["setTimeoutIds_", "clearTimeout"], ["setIntervalIds_", "clearInterval"]].forEach(function(b) {
                    var a = b[1];
                    c[b[0]].forEach(function(e, l) {
                        return c[a](l)
                    })
                });
                c.clearingTimersOnDispose_ = !1
            }))
        }
        ;
        n.registerComponent = function(c, b) {
            if ("string" !== typeof c || !c)
                throw Error('Illegal component name, "' + c + '"; must be a non-empty string.');
            var a = n.getComponent("Tech");
            a = a && a.isTech(b);
            var e = n === b || n.prototype.isPrototypeOf(b.prototype);
            if (a || !e)
                throw Error('Illegal component, "' + c + '"; ' + (a ? "techs must be registered using Tech.registerTech()" : "must be a Component subclass") + ".");
            c = Ka(c);
            n.components_ || (n.components_ = {});
            a = n.getComponent("Player");
            if ("Player" === c && a && a.players) {
                var l = a.players;
                a = Object.keys(l);
                if (l && 0 < a.length && a.map(function(h) {
                    return l[h]
                }).every(Boolean))
                    throw Error("Can not register Player component after player has been created.");
            }
            n.components_[c] = b;
            return n.components_[ce(c)] = b
        }
        ;
        n.getComponent = function(c) {
            if (c && n.components_)
                return n.components_[c]
        }
        ;
        return n
    }();
    aa.prototype.supportsRaf_ = "function" === typeof window.requestAnimationFrame && "function" === typeof window.cancelAnimationFrame;
    aa.registerComponent("Component", aa);
    var sa = function(n) {
        if (void 0 === n)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return n
    }
      , ia = function(n, d) {
        n.prototype = Object.create(d.prototype);
        n.prototype.constructor = n;
        n.__proto__ = d
    };
    eb.prototype.code = 0;
    eb.prototype.message = "";
    eb.prototype.status = null;
    eb.errorTypes = "MEDIA_ERR_CUSTOM MEDIA_ERR_ABORTED MEDIA_ERR_NETWORK MEDIA_ERR_DECODE MEDIA_ERR_SRC_NOT_SUPPORTED MEDIA_ERR_ENCRYPTED".split(" ");
    eb.defaultMessages = {
        1: "You aborted the media playback",
        2: "A network error caused the media download to fail part-way.",
        3: "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.",
        4: "The media could not be loaded, either because the server or network failed or because the format is not supported.",
        5: "The media is encrypted and we do not have the keys to decrypt it."
    };
    for (var Gc = 0; Gc < eb.errorTypes.length; Gc++)
        eb[eb.errorTypes[Gc]] = Gc,
        eb.prototype[eb.errorTypes[Gc]] = Gc;
    var Af = function(n) {
        return "kind label language id inBandMetadataTrackDispatchType mode src".split(" ").reduce(function(d, c, b) {
            n[c] && (d[c] = n[c]);
            return d
        }, {
            cues: n.cues && Array.prototype.map.call(n.cues, function(d) {
                return {
                    startTime: d.startTime,
                    endTime: d.endTime,
                    text: d.text,
                    id: d.id
                }
            })
        })
    }
      , li = {
        textTracksToJson: function(n) {
            var d = n.$$("track")
              , c = Array.prototype.map.call(d, function(b) {
                return b.track
            });
            return Array.prototype.map.call(d, function(b) {
                var a = Af(b.track);
                b.src && (a.src = b.src);
                return a
            }).concat(Array.prototype.filter.call(n.textTracks(), function(b) {
                return -1 === c.indexOf(b)
            }).map(Af))
        },
        jsonToTextTracks: function(n, d) {
            n.forEach(function(c) {
                var b = d.addRemoteTextTrack(c).track;
                !c.src && c.cues && c.cues.forEach(function(a) {
                    return b.addCue(a)
                })
            });
            return d.textTracks()
        },
        trackToJson_: Af
    }
      , Hc = function(n) {
        function d(b, a) {
            var e = n.call(this, b, a) || this;
            e.handleKeyDown_ = function(l) {
                return e.handleKeyDown(l)
            }
            ;
            e.close_ = function(l) {
                return e.close(l)
            }
            ;
            e.opened_ = e.hasBeenOpened_ = e.hasBeenFilled_ = !1;
            e.closeable(!e.options_.uncloseable);
            e.content(e.options_.content);
            e.contentEl_ = ta("div", {
                className: "vjs-modal-dialog-content"
            }, {
                role: "document"
            });
            e.descEl_ = ta("p", {
                className: "vjs-modal-dialog-description vjs-control-text",
                id: e.el().getAttribute("aria-describedby")
            });
            yb(e.descEl_, e.description());
            e.el_.appendChild(e.descEl_);
            e.el_.appendChild(e.contentEl_);
            return e
        }
        ia(d, n);
        var c = d.prototype;
        c.createEl = function() {
            return n.prototype.createEl.call(this, "div", {
                className: this.buildCSSClass(),
                tabIndex: -1
            }, {
                "aria-describedby": this.id() + "_description",
                "aria-hidden": "true",
                "aria-label": this.label(),
                role: "dialog"
            })
        }
        ;
        c.dispose = function() {
            this.previouslyActiveEl_ = this.descEl_ = this.contentEl_ = null;
            n.prototype.dispose.call(this)
        }
        ;
        c.buildCSSClass = function() {
            return "vjs-modal-dialog vjs-hidden " + n.prototype.buildCSSClass.call(this)
        }
        ;
        c.label = function() {
            return this.localize(this.options_.label || "Modal Window")
        }
        ;
        c.description = function() {
            var b = this.options_.description || this.localize("This is a modal window.");
            this.closeable() && (b += " " + this.localize("This modal can be closed by pressing the Escape key or activating the close button."));
            return b
        }
        ;
        c.open = function() {
            if (!this.opened_) {
                var b = this.player();
                this.trigger("beforemodalopen");
                this.opened_ = !0;
                (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) && this.fill();
                this.wasPlaying_ = !b.paused();
                this.options_.pauseOnOpen && this.wasPlaying_ && b.pause();
                this.on("keydown", this.handleKeyDown_);
                this.hadControls_ = b.controls();
                b.controls(!1);
                this.show();
                this.conditionalFocus_();
                this.el().setAttribute("aria-hidden", "false");
                this.trigger("modalopen");
                this.hasBeenOpened_ = !0
            }
        }
        ;
        c.opened = function(b) {
            if ("boolean" === typeof b)
                this[b ? "open" : "close"]();
            return this.opened_
        }
        ;
        c.close = function() {
            if (this.opened_) {
                var b = this.player();
                this.trigger("beforemodalclose");
                this.opened_ = !1;
                this.wasPlaying_ && this.options_.pauseOnOpen && b.play();
                this.off("keydown", this.handleKeyDown_);
                this.hadControls_ && b.controls(!0);
                this.hide();
                this.el().setAttribute("aria-hidden", "true");
                this.trigger("modalclose");
                this.conditionalBlur_();
                this.options_.temporary && this.dispose()
            }
        }
        ;
        c.closeable = function(b) {
            if ("boolean" === typeof b) {
                b = this.closeable_ = !!b;
                var a = this.getChild("closeButton");
                if (b && !a) {
                    var e = this.contentEl_;
                    this.contentEl_ = this.el_;
                    a = this.addChild("closeButton", {
                        controlText: "Close Modal Dialog"
                    });
                    this.contentEl_ = e;
                    this.on(a, "close", this.close_)
                }
                !b && a && (this.off(a, "close", this.close_),
                this.removeChild(a),
                a.dispose())
            }
            return this.closeable_
        }
        ;
        c.fill = function() {
            this.fillWith(this.content())
        }
        ;
        c.fillWith = function(b) {
            var a = this.contentEl()
              , e = a.parentNode
              , l = a.nextSibling;
            this.trigger("beforemodalfill");
            this.hasBeenFilled_ = !0;
            e.removeChild(a);
            this.empty();
            fh(a, b);
            this.trigger("modalfill");
            l ? e.insertBefore(a, l) : e.appendChild(a);
            (b = this.getChild("closeButton")) && e.appendChild(b.el_)
        }
        ;
        c.empty = function() {
            this.trigger("beforemodalempty");
            Se(this.contentEl());
            this.trigger("modalempty")
        }
        ;
        c.content = function(b) {
            "undefined" !== typeof b && (this.content_ = b);
            return this.content_
        }
        ;
        c.conditionalFocus_ = function() {
            var b = document.activeElement
              , a = this.player_.el_;
            this.previouslyActiveEl_ = null;
            if (a.contains(b) || a === b)
                this.previouslyActiveEl_ = b,
                this.focus()
        }
        ;
        c.conditionalBlur_ = function() {
            this.previouslyActiveEl_ && (this.previouslyActiveEl_.focus(),
            this.previouslyActiveEl_ = null)
        }
        ;
        c.handleKeyDown = function(b) {
            b.stopPropagation();
            if (ra.isEventKey(b, "Escape") && this.closeable())
                b.preventDefault(),
                this.close();
            else if (ra.isEventKey(b, "Tab")) {
                for (var a = this.focusableEls_(), e = this.el_.querySelector(":focus"), l, h = 0; h < a.length; h++)
                    if (e === a[h]) {
                        l = h;
                        break
                    }
                document.activeElement === this.el_ && (l = 0);
                b.shiftKey && 0 === l ? (a[a.length - 1].focus(),
                b.preventDefault()) : b.shiftKey || l !== a.length - 1 || (a[0].focus(),
                b.preventDefault())
            }
        }
        ;
        c.focusableEls_ = function() {
            var b = this.el_.querySelectorAll("*");
            return Array.prototype.filter.call(b, function(a) {
                return (a instanceof window.HTMLAnchorElement || a instanceof window.HTMLAreaElement) && a.hasAttribute("href") || (a instanceof window.HTMLInputElement || a instanceof window.HTMLSelectElement || a instanceof window.HTMLTextAreaElement || a instanceof window.HTMLButtonElement) && !a.hasAttribute("disabled") || a instanceof window.HTMLIFrameElement || a instanceof window.HTMLObjectElement || a instanceof window.HTMLEmbedElement || a.hasAttribute("tabindex") && -1 !== a.getAttribute("tabindex") || a.hasAttribute("contenteditable")
            })
        }
        ;
        return d
    }(aa);
    Hc.prototype.options_ = {
        pauseOnOpen: !0,
        temporary: !0
    };
    aa.registerComponent("ModalDialog", Hc);
    var Ic = function(n) {
        function d(b) {
            void 0 === b && (b = []);
            var a = n.call(this) || this;
            a.tracks_ = [];
            Object.defineProperty(sa(a), "length", {
                get: function() {
                    return this.tracks_.length
                }
            });
            for (var e = 0; e < b.length; e++)
                a.addTrack(b[e]);
            return a
        }
        ia(d, n);
        var c = d.prototype;
        c.addTrack = function(b) {
            var a = this
              , e = this.tracks_.length;
            "" + e in this || Object.defineProperty(this, e, {
                get: function() {
                    return this.tracks_[e]
                }
            });
            -1 === this.tracks_.indexOf(b) && (this.tracks_.push(b),
            this.trigger({
                track: b,
                type: "addtrack",
                target: this
            }));
            b.labelchange_ = function() {
                a.trigger({
                    track: b,
                    type: "labelchange",
                    target: a
                })
            }
            ;
            Pb(b) && b.addEventListener("labelchange", b.labelchange_)
        }
        ;
        c.removeTrack = function(b) {
            for (var a, e = 0, l = this.length; e < l; e++)
                if (this[e] === b) {
                    a = this[e];
                    a.off && a.off();
                    this.tracks_.splice(e, 1);
                    break
                }
            a && this.trigger({
                track: a,
                type: "removetrack",
                target: this
            })
        }
        ;
        c.getTrackById = function(b) {
            for (var a = null, e = 0, l = this.length; e < l; e++) {
                var h = this[e];
                if (h.id === b) {
                    a = h;
                    break
                }
            }
            return a
        }
        ;
        return d
    }(Ta);
    Ic.prototype.allowedEvents_ = {
        change: "change",
        addtrack: "addtrack",
        removetrack: "removetrack",
        labelchange: "labelchange"
    };
    for (var bm in Ic.prototype.allowedEvents_)
        Ic.prototype["on" + bm] = null;
    var Bf = function(n, d) {
        for (var c = 0; c < n.length; c++)
            Object.keys(n[c]).length && d.id !== n[c].id && (n[c].enabled = !1)
    }
      , cm = function(n) {
        function d(b) {
            void 0 === b && (b = []);
            for (var a = b.length - 1; 0 <= a; a--)
                if (b[a].enabled) {
                    Bf(b, b[a]);
                    break
                }
            b = n.call(this, b) || this;
            b.changing_ = !1;
            return b
        }
        ia(d, n);
        var c = d.prototype;
        c.addTrack = function(b) {
            var a = this;
            b.enabled && Bf(this, b);
            n.prototype.addTrack.call(this, b);
            b.addEventListener && (b.enabledChange_ = function() {
                a.changing_ || (a.changing_ = !0,
                Bf(a, b),
                a.changing_ = !1,
                a.trigger("change"))
            }
            ,
            b.addEventListener("enabledchange", b.enabledChange_))
        }
        ;
        c.removeTrack = function(b) {
            n.prototype.removeTrack.call(this, b);
            b.removeEventListener && b.enabledChange_ && (b.removeEventListener("enabledchange", b.enabledChange_),
            b.enabledChange_ = null)
        }
        ;
        return d
    }(Ic)
      , Cf = function(n, d) {
        for (var c = 0; c < n.length; c++)
            Object.keys(n[c]).length && d.id !== n[c].id && (n[c].selected = !1)
    }
      , dm = function(n) {
        function d(b) {
            void 0 === b && (b = []);
            for (var a = b.length - 1; 0 <= a; a--)
                if (b[a].selected) {
                    Cf(b, b[a]);
                    break
                }
            b = n.call(this, b) || this;
            b.changing_ = !1;
            Object.defineProperty(sa(b), "selectedIndex", {
                get: function() {
                    for (var e = 0; e < this.length; e++)
                        if (this[e].selected)
                            return e;
                    return -1
                },
                set: function() {}
            });
            return b
        }
        ia(d, n);
        var c = d.prototype;
        c.addTrack = function(b) {
            var a = this;
            b.selected && Cf(this, b);
            n.prototype.addTrack.call(this, b);
            b.addEventListener && (b.selectedChange_ = function() {
                a.changing_ || (a.changing_ = !0,
                Cf(a, b),
                a.changing_ = !1,
                a.trigger("change"))
            }
            ,
            b.addEventListener("selectedchange", b.selectedChange_))
        }
        ;
        c.removeTrack = function(b) {
            n.prototype.removeTrack.call(this, b);
            b.removeEventListener && b.selectedChange_ && (b.removeEventListener("selectedchange", b.selectedChange_),
            b.selectedChange_ = null)
        }
        ;
        return d
    }(Ic)
      , mi = function(n) {
        function d() {
            return n.apply(this, arguments) || this
        }
        ia(d, n);
        var c = d.prototype;
        c.addTrack = function(b) {
            var a = this;
            n.prototype.addTrack.call(this, b);
            this.queueChange_ || (this.queueChange_ = function() {
                return a.queueTrigger("change")
            }
            );
            this.triggerSelectedlanguagechange || (this.triggerSelectedlanguagechange_ = function() {
                return a.trigger("selectedlanguagechange")
            }
            );
            b.addEventListener("modechange", this.queueChange_);
            -1 === ["metadata", "chapters"].indexOf(b.kind) && b.addEventListener("modechange", this.triggerSelectedlanguagechange_)
        }
        ;
        c.removeTrack = function(b) {
            n.prototype.removeTrack.call(this, b);
            b.removeEventListener && (this.queueChange_ && b.removeEventListener("modechange", this.queueChange_),
            this.selectedlanguagechange_ && b.removeEventListener("modechange", this.triggerSelectedlanguagechange_))
        }
        ;
        return d
    }(Ic)
      , em = function() {
        function n(c) {
            void 0 === c && (c = []);
            this.trackElements_ = [];
            Object.defineProperty(this, "length", {
                get: function() {
                    return this.trackElements_.length
                }
            });
            for (var b = 0, a = c.length; b < a; b++)
                this.addTrackElement_(c[b])
        }
        var d = n.prototype;
        d.addTrackElement_ = function(c) {
            var b = this.trackElements_.length;
            "" + b in this || Object.defineProperty(this, b, {
                get: function() {
                    return this.trackElements_[b]
                }
            });
            -1 === this.trackElements_.indexOf(c) && this.trackElements_.push(c)
        }
        ;
        d.getTrackElementByTrack_ = function(c) {
            for (var b, a = 0, e = this.trackElements_.length; a < e; a++)
                if (c === this.trackElements_[a].track) {
                    b = this.trackElements_[a];
                    break
                }
            return b
        }
        ;
        d.removeTrackElement_ = function(c) {
            for (var b = 0, a = this.trackElements_.length; b < a; b++)
                if (c === this.trackElements_[b]) {
                    this.trackElements_[b].track && "function" === typeof this.trackElements_[b].track.off && this.trackElements_[b].track.off();
                    "function" === typeof this.trackElements_[b].off && this.trackElements_[b].off();
                    this.trackElements_.splice(b, 1);
                    break
                }
        }
        ;
        return n
    }()
      , ni = function() {
        function n(c) {
            n.prototype.setCues_.call(this, c);
            Object.defineProperty(this, "length", {
                get: function() {
                    return this.length_
                }
            })
        }
        var d = n.prototype;
        d.setCues_ = function(c) {
            var b = this.length || 0
              , a = 0
              , e = c.length;
            this.cues_ = c;
            this.length_ = c.length;
            c = function(l) {
                "" + l in this || Object.defineProperty(this, "" + l, {
                    get: function() {
                        return this.cues_[l]
                    }
                })
            }
            ;
            if (b < e)
                for (a = b; a < e; a++)
                    c.call(this, a)
        }
        ;
        d.getCueById = function(c) {
            for (var b = null, a = 0, e = this.length; a < e; a++) {
                var l = this[a];
                if (l.id === c) {
                    b = l;
                    break
                }
            }
            return b
        }
        ;
        return n
    }()
      , fm = {
        alternative: "alternative",
        captions: "captions",
        main: "main",
        sign: "sign",
        subtitles: "subtitles",
        commentary: "commentary"
    }
      , gm = {
        alternative: "alternative",
        descriptions: "descriptions",
        main: "main",
        "main-desc": "main-desc",
        translation: "translation",
        commentary: "commentary"
    }
      , hm = {
        subtitles: "subtitles",
        captions: "captions",
        descriptions: "descriptions",
        chapters: "chapters",
        metadata: "metadata"
    }
      , oi = {
        disabled: "disabled",
        hidden: "hidden",
        showing: "showing"
    }
      , Df = function(n) {
        function d(c) {
            void 0 === c && (c = {});
            var b = n.call(this) || this;
            var a = {
                id: c.id || "vjs_track_" + Ob++,
                kind: c.kind || "",
                language: c.language || ""
            }
              , e = c.label || "";
            c = function(h) {
                Object.defineProperty(sa(b), h, {
                    get: function() {
                        return a[h]
                    },
                    set: function() {}
                })
            }
            ;
            for (var l in a)
                c(l);
            Object.defineProperty(sa(b), "label", {
                get: function() {
                    return e
                },
                set: function(h) {
                    h !== e && (e = h,
                    this.trigger("labelchange"))
                }
            });
            return b
        }
        ia(d, n);
        return d
    }(Ta)
      , Ef = function(n) {
        var d = "protocol hostname port pathname search hash host".split(" ")
          , c = document.createElement("a");
        c.href = n;
        n = {};
        for (var b = 0; b < d.length; b++)
            n[d[b]] = c[d[b]];
        "http:" === n.protocol && (n.host = n.host.replace(/:80$/, ""));
        "https:" === n.protocol && (n.host = n.host.replace(/:443$/, ""));
        n.protocol || (n.protocol = window.location.protocol);
        n.host || (n.host = window.location.host);
        return n
    }
      , pi = function(n) {
        if (!n.match(/^https?:\/\//)) {
            var d = document.createElement("a");
            d.href = n;
            n = d.href
        }
        return n
    }
      , Ff = function(n) {
        return "string" === typeof n && (n = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/.exec(n)) ? n.pop().toLowerCase() : ""
    }
      , de = function(n, d) {
        void 0 === d && (d = window.location);
        n = Ef(n);
        return (":" === n.protocol ? d.protocol : n.protocol) + n.host !== d.protocol + d.host
    }
      , im = Object.freeze({
        __proto__: null,
        parseUrl: Ef,
        getAbsoluteURL: pi,
        getFileExtension: Ff,
        isCrossOrigin: de
    })
      , wb = "undefined" !== typeof window ? window : "undefined" !== typeof Yd ? Yd : "undefined" !== typeof self ? self : {}
      , ul = Object.prototype.toString;
    vb.httpHandler = function(n, d) {
        void 0 === d && (d = !1);
        return function(c, b, a) {
            if (c)
                n(c);
            else if (400 <= b.statusCode && 599 >= b.statusCode) {
                c = a;
                if (d)
                    if (wb.TextDecoder) {
                        b = sl(b.headers && b.headers["content-type"]);
                        try {
                            c = (new TextDecoder(b)).decode(a)
                        } catch (e) {}
                    } else
                        c = String.fromCharCode.apply(null, new Uint8Array(a));
                n({
                    cause: c
                })
            } else
                n(null, a)
        }
    }
    ;
    var vl = function(n) {
        var d = {};
        if (!n)
            return d;
        n.trim().split("\n").forEach(function(c) {
            var b = c.indexOf(":")
              , a = c.slice(0, b).trim().toLowerCase();
            c = c.slice(b + 1).trim();
            "undefined" === typeof d[a] ? d[a] = c : Array.isArray(d[a]) ? d[a].push(c) : d[a] = [d[a], c]
        });
        return d
    };
    vb.XMLHttpRequest = wb.XMLHttpRequest || wl;
    vb.XDomainRequest = "withCredentials"in new vb.XMLHttpRequest ? vb.XMLHttpRequest : wb.XDomainRequest;
    (function(n, d) {
        for (var c = 0; c < n.length; c++)
            d(n[c])
    }
    )("get put post patch head delete".split(" "), function(n) {
        vb["delete" === n ? "del" : n] = function(d, c, b) {
            c = mh(d, c, b);
            c.method = n.toUpperCase();
            return nh(c)
        }
    });
    vb["default"] = vb;
    var qi = function(n, d) {
        var c = new window.WebVTT.Parser(window,window.vttjs,window.WebVTT.StringDecoder())
          , b = [];
        c.oncue = function(a) {
            d.addCue(a)
        }
        ;
        c.onparsingerror = function(a) {
            b.push(a)
        }
        ;
        c.onflush = function() {
            d.trigger({
                type: "loadeddata",
                target: d
            })
        }
        ;
        c.parse(n);
        0 < b.length && (window.console && window.console.groupCollapsed && window.console.groupCollapsed("Text Track parsing errors for " + d.src),
        b.forEach(function(a) {
            return va.error(a)
        }),
        window.console && window.console.groupEnd && window.console.groupEnd());
        c.flush()
    }
      , ri = function(n, d) {
        var c = {
            uri: n
        };
        if (n = de(n))
            c.cors = n;
        if (n = "use-credentials" === d.tech_.crossOrigin())
            c.withCredentials = n;
        vb(c, Fa(this, function(b, a, e) {
            if (b)
                return va.error(b, a);
            d.loaded_ = !0;
            "function" !== typeof window.WebVTT ? d.tech_ && d.tech_.any(["vttjsloaded", "vttjserror"], function(l) {
                if ("vttjserror" === l.type)
                    va.error("vttjs failed to load, stopping trying to process " + d.src);
                else
                    return qi(e, d)
            }) : qi(e, d)
        }))
    }
      , nd = function(n) {
        function d(b) {
            void 0 === b && (b = {});
            if (!b.tech)
                throw Error("A tech was not provided.");
            b = Ea(b, {
                kind: hm[b.kind] || "subtitles",
                language: b.language || b.srclang || ""
            });
            var a = oi[b.mode] || "disabled"
              , e = b["default"];
            if ("metadata" === b.kind || "chapters" === b.kind)
                a = "hidden";
            var l = n.call(this, b) || this;
            l.tech_ = b.tech;
            l.cues_ = [];
            l.activeCues_ = [];
            l.preload_ = !1 !== l.tech_.preloadTextTracks;
            var h = new ni(l.cues_)
              , g = new ni(l.activeCues_)
              , q = !1;
            l.timeupdateHandler = Fa(sa(l), function(p) {
                void 0 === p && (p = {});
                this.tech_.isDisposed() || (this.tech_.isReady_ && (this.activeCues = this.activeCues,
                q && (this.trigger("cuechange"),
                q = !1)),
                "timeupdate" !== p.type && (this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler)))
            });
            l.tech_.one("dispose", function() {
                l.stopTracking()
            });
            "disabled" !== a && l.startTracking();
            Object.defineProperties(sa(l), {
                "default": {
                    get: function() {
                        return e
                    },
                    set: function() {}
                },
                mode: {
                    get: function() {
                        return a
                    },
                    set: function(p) {
                        oi[p] && a !== p && (a = p,
                        this.preload_ || "disabled" === a || 0 !== this.cues.length || ri(this.src, this),
                        this.stopTracking(),
                        "disabled" !== a && this.startTracking(),
                        this.trigger("modechange"))
                    }
                },
                cues: {
                    get: function() {
                        return this.loaded_ ? h : null
                    },
                    set: function() {}
                },
                activeCues: {
                    get: function() {
                        if (!this.loaded_)
                            return null;
                        if (0 === this.cues.length)
                            return g;
                        for (var p = this.tech_.currentTime(), f = [], m = 0, k = this.cues.length; m < k; m++) {
                            var r = this.cues[m];
                            r.startTime <= p && r.endTime >= p ? f.push(r) : r.startTime === r.endTime && r.startTime <= p && r.startTime + .5 >= p && f.push(r)
                        }
                        q = !1;
                        if (f.length !== this.activeCues_.length)
                            q = !0;
                        else
                            for (p = 0; p < f.length; p++)
                                -1 === this.activeCues_.indexOf(f[p]) && (q = !0);
                        this.activeCues_ = f;
                        g.setCues_(this.activeCues_);
                        return g
                    },
                    set: function() {}
                }
            });
            b.src ? (l.src = b.src,
            l.preload_ || (l.loaded_ = !0),
            (l.preload_ || "subtitles" !== b.kind && "captions" !== b.kind) && ri(l.src, sa(l))) : l.loaded_ = !0;
            return l
        }
        ia(d, n);
        var c = d.prototype;
        c.startTracking = function() {
            this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);
            this.tech_.on("timeupdate", this.timeupdateHandler)
        }
        ;
        c.stopTracking = function() {
            this.rvf_ && (this.tech_.cancelVideoFrameCallback(this.rvf_),
            this.rvf_ = void 0);
            this.tech_.off("timeupdate", this.timeupdateHandler)
        }
        ;
        c.addCue = function(b) {
            var a = b;
            if (window.vttjs && !(b instanceof window.vttjs.VTTCue)) {
                a = new window.vttjs.VTTCue(b.startTime,b.endTime,b.text);
                for (var e in b)
                    e in a || (a[e] = b[e]);
                a.id = b.id;
                a.originalCue_ = b
            }
            b = this.tech_.textTracks();
            for (e = 0; e < b.length; e++)
                b[e] !== this && b[e].removeCue(a);
            this.cues_.push(a);
            this.cues.setCues_(this.cues_)
        }
        ;
        c.removeCue = function(b) {
            for (var a = this.cues_.length; a--; ) {
                var e = this.cues_[a];
                if (e === b || e.originalCue_ && e.originalCue_ === b) {
                    this.cues_.splice(a, 1);
                    this.cues.setCues_(this.cues_);
                    break
                }
            }
        }
        ;
        return d
    }(Df);
    nd.prototype.allowedEvents_ = {
        cuechange: "cuechange"
    };
    var si = function(n) {
        function d(c) {
            void 0 === c && (c = {});
            var b = Ea(c, {
                kind: gm[c.kind] || ""
            });
            c = n.call(this, b) || this;
            var a = !1;
            Object.defineProperty(sa(c), "enabled", {
                get: function() {
                    return a
                },
                set: function(e) {
                    "boolean" === typeof e && e !== a && (a = e,
                    this.trigger("enabledchange"))
                }
            });
            b.enabled && (c.enabled = b.enabled);
            c.loaded_ = !0;
            return c
        }
        ia(d, n);
        return d
    }(Df)
      , ti = function(n) {
        function d(c) {
            void 0 === c && (c = {});
            var b = Ea(c, {
                kind: fm[c.kind] || ""
            });
            c = n.call(this, b) || this;
            var a = !1;
            Object.defineProperty(sa(c), "selected", {
                get: function() {
                    return a
                },
                set: function(e) {
                    "boolean" === typeof e && e !== a && (a = e,
                    this.trigger("selectedchange"))
                }
            });
            b.selected && (c.selected = b.selected);
            return c
        }
        ia(d, n);
        return d
    }(Df)
      , Jc = function(n) {
        function d(c) {
            void 0 === c && (c = {});
            var b = n.call(this) || this;
            var a = new nd(c);
            b.kind = a.kind;
            b.src = a.src;
            b.srclang = a.language;
            b.label = a.label;
            b["default"] = a["default"];
            Object.defineProperties(sa(b), {
                readyState: {
                    get: function() {
                        return e
                    }
                },
                track: {
                    get: function() {
                        return a
                    }
                }
            });
            var e = 0;
            a.addEventListener("loadeddata", function() {
                e = 2;
                b.trigger({
                    type: "load",
                    target: sa(b)
                })
            });
            return b
        }
        ia(d, n);
        return d
    }(Ta);
    Jc.prototype.allowedEvents_ = {
        load: "load"
    };
    Jc.NONE = 0;
    Jc.LOADING = 1;
    Jc.LOADED = 2;
    Jc.ERROR = 3;
    var xb = {
        audio: {
            ListClass: cm,
            TrackClass: si,
            capitalName: "Audio"
        },
        video: {
            ListClass: dm,
            TrackClass: ti,
            capitalName: "Video"
        },
        text: {
            ListClass: mi,
            TrackClass: nd,
            capitalName: "Text"
        }
    };
    Object.keys(xb).forEach(function(n) {
        xb[n].getterName = n + "Tracks";
        xb[n].privateName = n + "Tracks_"
    });
    var Kc = {
        remoteText: {
            ListClass: mi,
            TrackClass: nd,
            capitalName: "RemoteText",
            getterName: "remoteTextTracks",
            privateName: "remoteTextTracks_"
        },
        remoteTextEl: {
            ListClass: em,
            TrackClass: Jc,
            capitalName: "RemoteTextTrackEls",
            getterName: "remoteTextTrackEls",
            privateName: "remoteTextTrackEls_"
        }
    }
      , hb = Fb({}, xb, Kc);
    Kc.names = Object.keys(Kc);
    xb.names = Object.keys(xb);
    hb.names = [].concat(Kc.names).concat(xb.names);
    var jm = {}
      , ui = "undefined" !== typeof Yd ? Yd : "undefined" !== typeof window ? window : {};
    if ("undefined" !== typeof document)
        var Gf = document;
    else
        (Gf = ui["__GLOBAL_DOCUMENT_CACHE@4"]) || (Gf = ui["__GLOBAL_DOCUMENT_CACHE@4"] = jm);
    var vi = Gf
      , $e = Object.create || function() {
        function n() {}
        return function(d) {
            if (1 !== arguments.length)
                throw Error("Object.create shim only accepts one parameter.");
            n.prototype = d;
            return new n
        }
    }();
    sb.prototype = $e(Error.prototype);
    sb.prototype.constructor = sb;
    sb.Errors = {
        BadSignature: {
            code: 0,
            message: "Malformed WebVTT signature."
        },
        BadTimeStamp: {
            code: 1,
            message: "Malformed time stamp."
        }
    };
    bd.prototype = {
        set: function(n, d) {
            this.get(n) || "" === d || (this.values[n] = d)
        },
        get: function(n, d, c) {
            return c ? this.has(n) ? this.values[n] : d[c] : this.has(n) ? this.values[n] : d
        },
        has: function(n) {
            return n in this.values
        },
        alt: function(n, d, c) {
            for (var b = 0; b < c.length; ++b)
                if (d === c[b]) {
                    this.set(n, d);
                    break
                }
        },
        integer: function(n, d) {
            /^-?\d+$/.test(d) && this.set(n, parseInt(d, 10))
        },
        percent: function(n, d) {
            return d.match(/^([\d]{1,3})(\.[\d]*)?%$/) && (d = parseFloat(d),
            0 <= d && 100 >= d) ? (this.set(n, d),
            !0) : !1
        }
    };
    var af = vi.createElement && vi.createElement("textarea")
      , yl = {
        c: "span",
        i: "i",
        b: "b",
        u: "u",
        ruby: "ruby",
        rt: "rt",
        v: "span",
        lang: "span"
    }
      , qh = {
        white: "rgba(255,255,255,1)",
        lime: "rgba(0,255,0,1)",
        cyan: "rgba(0,255,255,1)",
        red: "rgba(255,0,0,1)",
        yellow: "rgba(255,255,0,1)",
        magenta: "rgba(255,0,255,1)",
        blue: "rgba(0,0,255,1)",
        black: "rgba(0,0,0,1)"
    }
      , zl = {
        v: "title",
        lang: "lang"
    }
      , ph = {
        rt: "ruby"
    }
      , rh = [[1470, 1470], [1472, 1472], [1475, 1475], [1478, 1478], [1488, 1514], [1520, 1524], [1544, 1544], [1547, 1547], [1549, 1549], [1563, 1563], [1566, 1610], [1645, 1647], [1649, 1749], [1765, 1766], [1774, 1775], [1786, 1805], [1807, 1808], [1810, 1839], [1869, 1957], [1969, 1969], [1984, 2026], [2036, 2037], [2042, 2042], [2048, 2069], [2074, 2074], [2084, 2084], [2088, 2088], [2096, 2110], [2112, 2136], [2142, 2142], [2208, 2208], [2210, 2220], [8207, 8207], [64285, 64285], [64287, 64296], [64298, 64310], [64312, 64316], [64318, 64318], [64320, 64321], [64323, 64324], [64326, 64449], [64467, 64829], [64848, 64911], [64914, 64967], [65008, 65020], [65136, 65140], [65142, 65276], [67584, 67589], [67592, 67592], [67594, 67637], [67639, 67640], [67644, 67644], [67647, 67669], [67671, 67679], [67840, 67867], [67872, 67897], [67903, 67903], [67968, 68023], [68030, 68031], [68096, 68096], [68112, 68115], [68117, 68119], [68121, 68147], [68160, 68167], [68176, 68184], [68192, 68223], [68352, 68405], [68416, 68437], [68440, 68466], [68472, 68479], [68608, 68680], [126464, 126467], [126469, 126495], [126497, 126498], [126500, 126500], [126503, 126503], [126505, 126514], [126516, 126519], [126521, 126521], [126523, 126523], [126530, 126530], [126535, 126535], [126537, 126537], [126539, 126539], [126541, 126543], [126545, 126546], [126548, 126548], [126551, 126551], [126553, 126553], [126555, 126555], [126557, 126557], [126559, 126559], [126561, 126562], [126564, 126564], [126567, 126570], [126572, 126578], [126580, 126583], [126585, 126588], [126590, 126590], [126592, 126601], [126603, 126619], [126625, 126627], [126629, 126633], [126635, 126651], [1114109, 1114109]];
    bf.prototype.applyStyles = function(n, d) {
        d = d || this.div;
        for (var c in n)
            n.hasOwnProperty(c) && (d.style[c] = n[c])
    }
    ;
    bf.prototype.formatStyle = function(n, d) {
        return 0 === n ? 0 : n + d
    }
    ;
    Ld.prototype = $e(bf.prototype);
    Ld.prototype.constructor = Ld;
    fb.prototype.move = function(n, d) {
        d = void 0 !== d ? d : this.lineHeight;
        switch (n) {
        case "+x":
            this.left += d;
            this.right += d;
            break;
        case "-x":
            this.left -= d;
            this.right -= d;
            break;
        case "+y":
            this.top += d;
            this.bottom += d;
            break;
        case "-y":
            this.top -= d,
            this.bottom -= d
        }
    }
    ;
    fb.prototype.overlaps = function(n) {
        return this.left < n.right && this.right > n.left && this.top < n.bottom && this.bottom > n.top
    }
    ;
    fb.prototype.overlapsAny = function(n) {
        for (var d = 0; d < n.length; d++)
            if (this.overlaps(n[d]))
                return !0;
        return !1
    }
    ;
    fb.prototype.within = function(n) {
        return this.top >= n.top && this.bottom <= n.bottom && this.left >= n.left && this.right <= n.right
    }
    ;
    fb.prototype.overlapsOppositeAxis = function(n, d) {
        switch (d) {
        case "+x":
            return this.left < n.left;
        case "-x":
            return this.right > n.right;
        case "+y":
            return this.top < n.top;
        case "-y":
            return this.bottom > n.bottom
        }
    }
    ;
    fb.prototype.intersectPercentage = function(n) {
        return Math.max(0, Math.min(this.right, n.right) - Math.max(this.left, n.left)) * Math.max(0, Math.min(this.bottom, n.bottom) - Math.max(this.top, n.top)) / (this.height * this.width)
    }
    ;
    fb.prototype.toCSSCompatValues = function(n) {
        return {
            top: this.top - n.top,
            bottom: n.bottom - this.bottom,
            left: this.left - n.left,
            right: n.right - this.right,
            height: this.height,
            width: this.width
        }
    }
    ;
    fb.getSimpleBoxPosition = function(n) {
        var d = n.div ? n.div.offsetHeight : n.tagName ? n.offsetHeight : 0
          , c = n.div ? n.div.offsetWidth : n.tagName ? n.offsetWidth : 0
          , b = n.div ? n.div.offsetTop : n.tagName ? n.offsetTop : 0;
        n = n.div ? n.div.getBoundingClientRect() : n.tagName ? n.getBoundingClientRect() : n;
        return {
            left: n.left,
            right: n.right,
            top: n.top || b,
            height: n.height || d,
            bottom: n.bottom || b + (n.height || d),
            width: n.width || c
        }
    }
    ;
    vc.StringDecoder = function() {
        return {
            decode: function(n) {
                if (!n)
                    return "";
                if ("string" !== typeof n)
                    throw Error("Error - expected string data.");
                return decodeURIComponent(encodeURIComponent(n))
            }
        }
    }
    ;
    vc.convertCueToDOMTree = function(n, d) {
        return n && d ? oh(n, d) : null
    }
    ;
    vc.processCues = function(n, d, c) {
        if (!n || !d || !c)
            return null;
        for (; c.firstChild; )
            c.removeChild(c.firstChild);
        var b = n.document.createElement("div");
        b.style.position = "absolute";
        b.style.left = "0";
        b.style.right = "0";
        b.style.top = "0";
        b.style.bottom = "0";
        b.style.margin = "1.5%";
        c.appendChild(b);
        if (function(h) {
            for (var g = 0; g < h.length; g++)
                if (h[g].hasBeenReset || !h[g].displayState)
                    return !0;
            return !1
        }(d)) {
            var a = []
              , e = fb.getSimpleBoxPosition(b)
              , l = {
                font: Math.round(5 * e.height) / 100 + "px sans-serif"
            };
            (function() {
                for (var h, g, q = 0; q < d.length; q++) {
                    g = d[q];
                    h = new Ld(n,g,l);
                    b.appendChild(h.div);
                    var p = void 0
                      , f = void 0
                      , m = h
                      , k = e
                      , r = a
                      , u = new fb(m)
                      , t = m.cue;
                    if ("number" === typeof t.line && (t.snapToLines || 0 <= t.line && 100 >= t.line))
                        var x = t.line;
                    else if (t.track && t.track.textTrackList && t.track.textTrackList.mediaElement) {
                        x = t.track;
                        for (var F = x.textTrackList, K = 0, M = 0; M < F.length && F[M] !== x; M++)
                            "showing" === F[M].mode && K++;
                        x = -1 * ++K
                    } else
                        x = -1;
                    F = [];
                    if (t.snapToLines) {
                        switch (t.vertical) {
                        case "":
                            F = ["+y", "-y"];
                            f = "height";
                            break;
                        case "rl":
                            F = ["+x", "-x"];
                            f = "width";
                            break;
                        case "lr":
                            F = ["-x", "+x"],
                            f = "width"
                        }
                        K = u.lineHeight;
                        M = K * Math.round(x);
                        f = k[f] + K;
                        var P = F[0];
                        Math.abs(M) > f && (M = (0 > M ? -1 : 1) * Math.ceil(f / K) * K);
                        0 > x && (M += "" === t.vertical ? k.height : k.width,
                        F = F.reverse());
                        u.move(P, M)
                    } else {
                        u = u.lineHeight / k.height * 100;
                        switch (t.lineAlign) {
                        case "center":
                            x -= u / 2;
                            break;
                        case "end":
                            x -= u
                        }
                        switch (t.vertical) {
                        case "":
                            m.applyStyles({
                                top: m.formatStyle(x, "%")
                            });
                            break;
                        case "rl":
                            m.applyStyles({
                                left: m.formatStyle(x, "%")
                            });
                            break;
                        case "lr":
                            m.applyStyles({
                                right: m.formatStyle(x, "%")
                            })
                        }
                        F = ["+y", "-x", "+x", "-y"];
                        u = new fb(m)
                    }
                    a: {
                        t = u;
                        u = F;
                        f = new fb(t);
                        x = 1;
                        for (F = 0; F < u.length; F++) {
                            for (; t.overlapsOppositeAxis(k, u[F]) || t.within(k) && t.overlapsAny(r); )
                                t.move(u[F]);
                            if (t.within(k)) {
                                p = t;
                                break a
                            }
                            K = t.intersectPercentage(k);
                            x > K && (p = new fb(t),
                            x = K);
                            t = new fb(f)
                        }
                        p = p || f
                    }
                    m.move(p.toCSSCompatValues(k));
                    g.displayState = h.div;
                    a.push(fb.getSimpleBoxPosition(h))
                }
            }
            )()
        } else
            for (c = 0; c < d.length; c++)
                b.appendChild(d[c].displayState)
    }
    ;
    vc.Parser = function(n, d, c) {
        c || (c = d,
        d = {});
        d || (d = {});
        this.window = n;
        this.vttjs = d;
        this.state = "INITIAL";
        this.buffer = "";
        this.decoder = c || new TextDecoder("utf8");
        this.regionList = []
    }
    ;
    vc.Parser.prototype = {
        reportOrThrowError: function(n) {
            if (n instanceof sb)
                this.onparsingerror && this.onparsingerror(n);
            else
                throw n;
        },
        parse: function(n) {
            function d() {
                for (var q = e.buffer, p = 0; p < q.length && "\r" !== q[p] && "\n" !== q[p]; )
                    ++p;
                var f = q.substr(0, p);
                "\r" === q[p] && ++p;
                "\n" === q[p] && ++p;
                e.buffer = q.substr(p);
                return f
            }
            function c(q) {
                var p = new bd;
                cd(q, function(f, m) {
                    switch (f) {
                    case "id":
                        p.set(f, m);
                        break;
                    case "width":
                        p.percent(f, m);
                        break;
                    case "lines":
                        p.integer(f, m);
                        break;
                    case "regionanchor":
                    case "viewportanchor":
                        m = m.split(",");
                        if (2 !== m.length)
                            break;
                        var k = new bd;
                        k.percent("x", m[0]);
                        k.percent("y", m[1]);
                        if (!k.has("x") || !k.has("y"))
                            break;
                        p.set(f + "X", k.get("x"));
                        p.set(f + "Y", k.get("y"));
                        break;
                    case "scroll":
                        p.alt(f, m, ["up"])
                    }
                }, /=/, /\s/);
                p.has("id") && (q = new (e.vttjs.VTTRegion || e.window.VTTRegion),
                q.width = p.get("width", 100),
                q.lines = p.get("lines", 3),
                q.regionAnchorX = p.get("regionanchorX", 0),
                q.regionAnchorY = p.get("regionanchorY", 100),
                q.viewportAnchorX = p.get("viewportanchorX", 0),
                q.viewportAnchorY = p.get("viewportanchorY", 100),
                q.scroll = p.get("scroll", ""),
                e.onregion && e.onregion(q),
                e.regionList.push({
                    id: p.get("id"),
                    region: q
                }))
            }
            function b(q) {
                var p = new bd;
                cd(q, function(f, m) {
                    switch (f) {
                    case "MPEGT":
                        p.integer(f + "S", m);
                        break;
                    case "LOCA":
                        p.set(f + "L", Ze(m))
                    }
                }, /[^\d]:/, /,/);
                e.ontimestampmap && e.ontimestampmap({
                    MPEGTS: p.get("MPEGTS"),
                    LOCAL: p.get("LOCAL")
                })
            }
            function a(q) {
                q.match(/X-TIMESTAMP-MAP/) ? cd(q, function(p, f) {
                    switch (p) {
                    case "X-TIMESTAMP-MAP":
                        b(f)
                    }
                }, /=/) : cd(q, function(p, f) {
                    switch (p) {
                    case "Region":
                        c(f)
                    }
                }, /:/)
            }
            var e = this;
            n && (e.buffer += e.decoder.decode(n, {
                stream: !0
            }));
            try {
                if ("INITIAL" === e.state) {
                    if (!/\r\n|\n/.test(e.buffer))
                        return this;
                    var l = d();
                    var h = l.match(/^WEBVTT([ \t].*)?$/);
                    if (!h || !h[0])
                        throw new sb(sb.Errors.BadSignature);
                    e.state = "HEADER"
                }
                for (n = !1; e.buffer; ) {
                    if (!/\r\n|\n/.test(e.buffer))
                        return this;
                    n ? n = !1 : l = d();
                    switch (e.state) {
                    case "HEADER":
                        /:/.test(l) ? a(l) : l || (e.state = "ID");
                        continue;
                    case "NOTE":
                        l || (e.state = "ID");
                        continue;
                    case "ID":
                        if (/^NOTE($|[ \t])/.test(l)) {
                            e.state = "NOTE";
                            break
                        }
                        if (!l)
                            continue;
                        e.cue = new (e.vttjs.VTTCue || e.window.VTTCue)(0,0,"");
                        try {
                            e.cue.align = "center"
                        } catch (q) {
                            e.cue.align = "middle"
                        }
                        e.state = "CUE";
                        if (-1 === l.indexOf("--\x3e")) {
                            e.cue.id = l;
                            continue
                        }
                    case "CUE":
                        try {
                            xl(l, e.cue, e.regionList)
                        } catch (q) {
                            e.reportOrThrowError(q);
                            e.cue = null;
                            e.state = "BADCUE";
                            continue
                        }
                        e.state = "CUETEXT";
                        continue;
                    case "CUETEXT":
                        var g = -1 !== l.indexOf("--\x3e");
                        if (!l || g && (n = !0)) {
                            e.oncue && e.oncue(e.cue);
                            e.cue = null;
                            e.state = "ID";
                            continue
                        }
                        e.cue.text && (e.cue.text += "\n");
                        e.cue.text += l.replace(/\u2028/g, "\n").replace(/u2029/g, "\n");
                        continue;
                    case "BADCUE":
                        l || (e.state = "ID")
                    }
                }
            } catch (q) {
                e.reportOrThrowError(q);
                if ("CUETEXT" === e.state && e.cue && e.oncue)
                    e.oncue(e.cue);
                e.cue = null;
                e.state = "INITIAL" === e.state ? "BADWEBVTT" : "BADCUE"
            }
            return this
        },
        flush: function() {
            try {
                this.buffer += this.decoder.decode();
                if (this.cue || "HEADER" === this.state)
                    this.buffer += "\n\n",
                    this.parse();
                if ("INITIAL" === this.state)
                    throw new sb(sb.Errors.BadSignature);
            } catch (n) {
                this.reportOrThrowError(n)
            }
            this.onflush && this.onflush();
            return this
        }
    };
    var Dl = {
        "": 1,
        lr: 1,
        rl: 1
    }
      , Cl = {
        start: 1,
        center: 1,
        end: 1,
        left: 1,
        right: 1,
        auto: 1,
        "line-left": 1,
        "line-right": 1
    };
    sh.prototype.getCueAsHTML = function() {
        return WebVTT.convertCueToDOMTree(window, this.text)
    }
    ;
    var km = {
        "": !0,
        up: !0
    }
      , lm = function() {
        var n = 100
          , d = 3
          , c = 0
          , b = 100
          , a = 0
          , e = 100
          , l = "";
        Object.defineProperties(this, {
            width: {
                enumerable: !0,
                get: function() {
                    return n
                },
                set: function(h) {
                    if (!dd(h))
                        throw Error("Width must be between 0 and 100.");
                    n = h
                }
            },
            lines: {
                enumerable: !0,
                get: function() {
                    return d
                },
                set: function(h) {
                    if ("number" !== typeof h)
                        throw new TypeError("Lines must be set to a number.");
                    d = h
                }
            },
            regionAnchorY: {
                enumerable: !0,
                get: function() {
                    return b
                },
                set: function(h) {
                    if (!dd(h))
                        throw Error("RegionAnchorX must be between 0 and 100.");
                    b = h
                }
            },
            regionAnchorX: {
                enumerable: !0,
                get: function() {
                    return c
                },
                set: function(h) {
                    if (!dd(h))
                        throw Error("RegionAnchorY must be between 0 and 100.");
                    c = h
                }
            },
            viewportAnchorY: {
                enumerable: !0,
                get: function() {
                    return e
                },
                set: function(h) {
                    if (!dd(h))
                        throw Error("ViewportAnchorY must be between 0 and 100.");
                    e = h
                }
            },
            viewportAnchorX: {
                enumerable: !0,
                get: function() {
                    return a
                },
                set: function(h) {
                    if (!dd(h))
                        throw Error("ViewportAnchorX must be between 0 and 100.");
                    a = h
                }
            },
            scroll: {
                enumerable: !0,
                get: function() {
                    return l
                },
                set: function(h) {
                    h = "string" !== typeof h ? !1 : km[h.toLowerCase()] ? h.toLowerCase() : !1;
                    !1 === h ? console.warn("Scroll: an invalid or illegal string was specified.") : l = h
                }
            }
        })
    }
      , od = ha(function(n) {
        n = n.exports = {
            WebVTT: vc,
            VTTCue: sh,
            VTTRegion: lm
        };
        wb.vttjs = n;
        wb.WebVTT = n.WebVTT;
        var d = n.VTTCue
          , c = n.VTTRegion
          , b = wb.VTTCue
          , a = wb.VTTRegion;
        n.shim = function() {
            wb.VTTCue = d;
            wb.VTTRegion = c
        }
        ;
        n.restore = function() {
            wb.VTTCue = b;
            wb.VTTRegion = a
        }
        ;
        wb.VTTCue || n.shim()
    });
    od.WebVTT;
    od.VTTCue;
    od.VTTRegion;
    var Ba = function(n) {
        function d(b, a) {
            void 0 === b && (b = {});
            void 0 === a && (a = function() {}
            );
            b.reportTouchActivity = !1;
            var e = n.call(this, null, b, a) || this;
            e.onDurationChange_ = function(l) {
                return e.onDurationChange(l)
            }
            ;
            e.trackProgress_ = function(l) {
                return e.trackProgress(l)
            }
            ;
            e.trackCurrentTime_ = function(l) {
                return e.trackCurrentTime(l)
            }
            ;
            e.stopTrackingCurrentTime_ = function(l) {
                return e.stopTrackingCurrentTime(l)
            }
            ;
            e.disposeSourceHandler_ = function(l) {
                return e.disposeSourceHandler(l)
            }
            ;
            e.queuedHanders_ = new Set;
            e.hasStarted_ = !1;
            e.on("playing", function() {
                this.hasStarted_ = !0
            });
            e.on("loadstart", function() {
                this.hasStarted_ = !1
            });
            hb.names.forEach(function(l) {
                l = hb[l];
                b && b[l.getterName] && (e[l.privateName] = b[l.getterName])
            });
            e.featuresProgressEvents || e.manualProgressOn();
            e.featuresTimeupdateEvents || e.manualTimeUpdatesOn();
            ["Text", "Audio", "Video"].forEach(function(l) {
                !1 === b["native" + l + "Tracks"] && (e["featuresNative" + l + "Tracks"] = !1)
            });
            if (!1 === b.nativeCaptions || !1 === b.nativeTextTracks)
                e.featuresNativeTextTracks = !1;
            else if (!0 === b.nativeCaptions || !0 === b.nativeTextTracks)
                e.featuresNativeTextTracks = !0;
            e.featuresNativeTextTracks || e.emulateTextTracks();
            e.preloadTextTracks = !1 !== b.preloadTextTracks;
            e.autoRemoteTextTracks_ = new hb.text.ListClass;
            e.initTrackListeners();
            b.nativeControlsForTouch || e.emitTapEvents();
            e.constructor && (e.name_ = e.constructor.name || "Unknown Tech");
            return e
        }
        ia(d, n);
        var c = d.prototype;
        c.triggerSourceset = function(b) {
            var a = this;
            if (!this.isReady_)
                this.one("ready", function() {
                    return a.setTimeout(function() {
                        return a.triggerSourceset(b)
                    }, 1)
                });
            this.trigger({
                src: b,
                type: "sourceset"
            })
        }
        ;
        c.manualProgressOn = function() {
            this.on("durationchange", this.onDurationChange_);
            this.manualProgress = !0;
            this.one("ready", this.trackProgress_)
        }
        ;
        c.manualProgressOff = function() {
            this.manualProgress = !1;
            this.stopTrackingProgress();
            this.off("durationchange", this.onDurationChange_)
        }
        ;
        c.trackProgress = function(b) {
            this.stopTrackingProgress();
            this.progressInterval = this.setInterval(Fa(this, function() {
                var a = this.bufferedPercent();
                this.bufferedPercent_ !== a && this.trigger("progress");
                this.bufferedPercent_ = a;
                1 === a && this.stopTrackingProgress()
            }), 500)
        }
        ;
        c.onDurationChange = function(b) {
            this.duration_ = this.duration()
        }
        ;
        c.buffered = function() {
            return jc(0, 0)
        }
        ;
        c.bufferedPercent = function() {
            return lh(this.buffered(), this.duration_)
        }
        ;
        c.stopTrackingProgress = function() {
            this.clearInterval(this.progressInterval)
        }
        ;
        c.manualTimeUpdatesOn = function() {
            this.manualTimeUpdates = !0;
            this.on("play", this.trackCurrentTime_);
            this.on("pause", this.stopTrackingCurrentTime_)
        }
        ;
        c.manualTimeUpdatesOff = function() {
            this.manualTimeUpdates = !1;
            this.stopTrackingCurrentTime();
            this.off("play", this.trackCurrentTime_);
            this.off("pause", this.stopTrackingCurrentTime_)
        }
        ;
        c.trackCurrentTime = function() {
            this.currentTimeInterval && this.stopTrackingCurrentTime();
            this.currentTimeInterval = this.setInterval(function() {
                this.trigger({
                    type: "timeupdate",
                    target: this,
                    manuallyTriggered: !0
                })
            }, 250)
        }
        ;
        c.stopTrackingCurrentTime = function() {
            this.clearInterval(this.currentTimeInterval);
            this.trigger({
                type: "timeupdate",
                target: this,
                manuallyTriggered: !0
            })
        }
        ;
        c.dispose = function() {
            this.clearTracks(xb.names);
            this.manualProgress && this.manualProgressOff();
            this.manualTimeUpdates && this.manualTimeUpdatesOff();
            n.prototype.dispose.call(this)
        }
        ;
        c.clearTracks = function(b) {
            var a = this;
            b = [].concat(b);
            b.forEach(function(e) {
                for (var l = a[e + "Tracks"]() || [], h = l.length; h--; ) {
                    var g = l[h];
                    "text" === e && a.removeRemoteTextTrack(g);
                    l.removeTrack(g)
                }
            })
        }
        ;
        c.cleanupAutoTextTracks = function() {
            for (var b = this.autoRemoteTextTracks_ || [], a = b.length; a--; )
                this.removeRemoteTextTrack(b[a])
        }
        ;
        c.reset = function() {}
        ;
        c.crossOrigin = function() {}
        ;
        c.setCrossOrigin = function() {}
        ;
        c.error = function(b) {
            void 0 !== b && (this.error_ = new eb(b),
            this.trigger("error"));
            return this.error_
        }
        ;
        c.played = function() {
            return this.hasStarted_ ? jc(0, 0) : jc()
        }
        ;
        c.play = function() {}
        ;
        c.setScrubbing = function() {}
        ;
        c.scrubbing = function() {}
        ;
        c.setCurrentTime = function() {
            this.manualTimeUpdates && this.trigger({
                type: "timeupdate",
                target: this,
                manuallyTriggered: !0
            })
        }
        ;
        c.initTrackListeners = function() {
            var b = this;
            xb.names.forEach(function(a) {
                var e = function() {
                    b.trigger(a + "trackchange")
                }
                  , l = b[xb[a].getterName]();
                l.addEventListener("removetrack", e);
                l.addEventListener("addtrack", e);
                b.on("dispose", function() {
                    l.removeEventListener("removetrack", e);
                    l.removeEventListener("addtrack", e)
                })
            })
        }
        ;
        c.addWebVttScript_ = function() {
            var b = this;
            if (!window.WebVTT)
                if (document.body.contains(this.el()))
                    if (!this.options_["vtt.js"] && Z(od) && 0 < Object.keys(od).length)
                        this.trigger("vttjsloaded");
                    else {
                        var a = document.createElement("script");
                        a.src = this.options_["vtt.js"] || "https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js";
                        a.onload = function() {
                            b.trigger("vttjsloaded")
                        }
                        ;
                        a.onerror = function() {
                            b.trigger("vttjserror")
                        }
                        ;
                        this.on("dispose", function() {
                            a.onload = null;
                            a.onerror = null
                        });
                        window.WebVTT = !0;
                        this.el().parentNode.appendChild(a)
                    }
                else
                    this.ready(this.addWebVttScript_)
        }
        ;
        c.emulateTextTracks = function() {
            var b = this
              , a = this.textTracks()
              , e = this.remoteTextTracks()
              , l = function(p) {
                return a.addTrack(p.track)
            }
              , h = function(p) {
                return a.removeTrack(p.track)
            };
            e.on("addtrack", l);
            e.on("removetrack", h);
            this.addWebVttScript_();
            var g = function() {
                return b.trigger("texttrackchange")
            }
              , q = function() {
                g();
                for (var p = 0; p < a.length; p++) {
                    var f = a[p];
                    f.removeEventListener("cuechange", g);
                    "showing" === f.mode && f.addEventListener("cuechange", g)
                }
            };
            q();
            a.addEventListener("change", q);
            a.addEventListener("addtrack", q);
            a.addEventListener("removetrack", q);
            this.on("dispose", function() {
                e.off("addtrack", l);
                e.off("removetrack", h);
                a.removeEventListener("change", q);
                a.removeEventListener("addtrack", q);
                a.removeEventListener("removetrack", q);
                for (var p = 0; p < a.length; p++)
                    a[p].removeEventListener("cuechange", g)
            })
        }
        ;
        c.addTextTrack = function(b, a, e) {
            if (!b)
                throw Error("TextTrack kind is required but was not provided");
            var l = void 0;
            void 0 === l && (l = {});
            var h = this.textTracks();
            l.kind = b;
            a && (l.label = a);
            e && (l.language = e);
            l.tech = this;
            b = new hb.text.TrackClass(l);
            h.addTrack(b);
            return b
        }
        ;
        c.createRemoteTextTrack = function(b) {
            b = Ea(b, {
                tech: this
            });
            return new Kc.remoteTextEl.TrackClass(b)
        }
        ;
        c.addRemoteTextTrack = function(b, a) {
            var e = this;
            void 0 === b && (b = {});
            var l = this.createRemoteTextTrack(b);
            !0 !== a && !1 !== a && (va.warn('Calling addRemoteTextTrack without explicitly setting the "manualCleanup" parameter to `true` is deprecated and default to `false` in future version of video.js'),
            a = !0);
            this.remoteTextTrackEls().addTrackElement_(l);
            this.remoteTextTracks().addTrack(l.track);
            !0 !== a && this.ready(function() {
                return e.autoRemoteTextTracks_.addTrack(l.track)
            });
            return l
        }
        ;
        c.removeRemoteTextTrack = function(b) {
            var a = this.remoteTextTrackEls().getTrackElementByTrack_(b);
            this.remoteTextTrackEls().removeTrackElement_(a);
            this.remoteTextTracks().removeTrack(b);
            this.autoRemoteTextTracks_.removeTrack(b)
        }
        ;
        c.getVideoPlaybackQuality = function() {
            return {}
        }
        ;
        c.requestPictureInPicture = function() {
            var b = this.options_.Promise || window.Promise;
            if (b)
                return b.reject()
        }
        ;
        c.disablePictureInPicture = function() {
            return !0
        }
        ;
        c.setDisablePictureInPicture = function() {}
        ;
        c.requestVideoFrameCallback = function(b) {
            var a = this
              , e = Ob++;
            !this.isReady_ || this.paused() ? (this.queuedHanders_.add(e),
            this.one("playing", function() {
                a.queuedHanders_.has(e) && (a.queuedHanders_["delete"](e),
                b())
            })) : this.requestNamedAnimationFrame(e, b);
            return e
        }
        ;
        c.cancelVideoFrameCallback = function(b) {
            if (this.queuedHanders_.has(b))
                this.queuedHanders_["delete"](b);
            else
                this.cancelNamedAnimationFrame(b)
        }
        ;
        c.setPoster = function() {}
        ;
        c.playsinline = function() {}
        ;
        c.setPlaysinline = function() {}
        ;
        c.overrideNativeAudioTracks = function() {}
        ;
        c.overrideNativeVideoTracks = function() {}
        ;
        c.canPlayType = function() {
            return ""
        }
        ;
        d.canPlayType = function() {
            return ""
        }
        ;
        d.canPlaySource = function(b, a) {
            return d.canPlayType(b.type)
        }
        ;
        d.isTech = function(b) {
            return b.prototype instanceof d || b instanceof d || b === d
        }
        ;
        d.registerTech = function(b, a) {
            d.techs_ || (d.techs_ = {});
            if (!d.isTech(a))
                throw Error("Tech " + b + " must be a Tech");
            if (!d.canPlayType)
                throw Error("Techs must have a static canPlayType method on them");
            if (!d.canPlaySource)
                throw Error("Techs must have a static canPlaySource method on them");
            b = Ka(b);
            d.techs_[b] = a;
            d.techs_[ce(b)] = a;
            "Tech" !== b && d.defaultTechOrder_.push(b);
            return a
        }
        ;
        d.getTech = function(b) {
            if (b) {
                if (d.techs_ && d.techs_[b])
                    return d.techs_[b];
                b = Ka(b);
                if (window && window.videojs && window.videojs[b])
                    return va.warn("The " + b + " tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)"),
                    window.videojs[b]
            }
        }
        ;
        return d
    }(aa);
    hb.names.forEach(function(n) {
        var d = hb[n];
        Ba.prototype[d.getterName] = function() {
            this[d.privateName] = this[d.privateName] || new d.ListClass;
            return this[d.privateName]
        }
    });
    Ba.prototype.featuresVolumeControl = !0;
    Ba.prototype.featuresMuteControl = !0;
    Ba.prototype.featuresFullscreenResize = !1;
    Ba.prototype.featuresPlaybackRate = !1;
    Ba.prototype.featuresProgressEvents = !1;
    Ba.prototype.featuresSourceset = !1;
    Ba.prototype.featuresTimeupdateEvents = !1;
    Ba.prototype.featuresNativeTextTracks = !1;
    Ba.prototype.featuresVideoFrameCallback = !1;
    Ba.withSourceHandlers = function(n) {
        n.registerSourceHandler = function(d, c) {
            var b = n.sourceHandlers;
            b || (b = n.sourceHandlers = []);
            void 0 === c && (c = b.length);
            b.splice(c, 0, d)
        }
        ;
        n.canPlayType = function(d) {
            for (var c = n.sourceHandlers || [], b, a = 0; a < c.length; a++)
                if (b = c[a].canPlayType(d))
                    return b;
            return ""
        }
        ;
        n.selectSourceHandler = function(d, c) {
            for (var b = n.sourceHandlers || [], a, e = 0; e < b.length; e++)
                if (a = b[e].canHandleSource(d, c))
                    return b[e];
            return null
        }
        ;
        n.canPlaySource = function(d, c) {
            var b = n.selectSourceHandler(d, c);
            return b ? b.canHandleSource(d, c) : ""
        }
        ;
        ["seekable", "seeking", "duration"].forEach(function(d) {
            var c = this[d];
            "function" === typeof c && (this[d] = function() {
                return this.sourceHandler_ && this.sourceHandler_[d] ? this.sourceHandler_[d].apply(this.sourceHandler_, arguments) : c.apply(this, arguments)
            }
            )
        }, n.prototype);
        n.prototype.setSource = function(d) {
            var c = n.selectSourceHandler(d, this.options_);
            c || (n.nativeSourceHandler ? c = n.nativeSourceHandler : va.error("No source handler found for the current source."));
            this.disposeSourceHandler();
            this.off("dispose", this.disposeSourceHandler_);
            c !== n.nativeSourceHandler && (this.currentSource_ = d);
            this.sourceHandler_ = c.handleSource(d, this, this.options_);
            this.one("dispose", this.disposeSourceHandler_)
        }
        ;
        n.prototype.disposeSourceHandler = function() {
            this.currentSource_ && (this.clearTracks(["audio", "video"]),
            this.currentSource_ = null);
            this.cleanupAutoTextTracks();
            this.sourceHandler_ && (this.sourceHandler_.dispose && this.sourceHandler_.dispose(),
            this.sourceHandler_ = null)
        }
    }
    ;
    aa.registerComponent("Tech", Ba);
    Ba.registerTech("Tech", Ba);
    Ba.defaultTechOrder_ = [];
    var lc = {}
      , ef = {}
      , Md = {}
      , mm = {
        buffered: 1,
        currentTime: 1,
        duration: 1,
        muted: 1,
        played: 1,
        paused: 1,
        seekable: 1,
        volume: 1,
        ended: 1
    }
      , nm = {
        setCurrentTime: 1,
        setMuted: 1,
        setVolume: 1
    }
      , wi = {
        play: 1,
        pause: 1
    }
      , om = {
        opus: "video/ogg",
        ogv: "video/ogg",
        mp4: "video/mp4",
        mov: "video/mp4",
        m4v: "video/mp4",
        mkv: "video/x-matroska",
        m4a: "audio/mp4",
        mp3: "audio/mpeg",
        aac: "audio/aac",
        caf: "audio/x-caf",
        flac: "audio/flac",
        oga: "audio/ogg",
        wav: "audio/wav",
        m3u8: "application/x-mpegURL",
        mpd: "application/dash+xml",
        jpg: "image/jpeg",
        jpeg: "image/jpeg",
        gif: "image/gif",
        png: "image/png",
        svg: "image/svg+xml",
        webp: "image/webp"
    }
      , Nd = function(n) {
        void 0 === n && (n = "");
        n = Ff(n);
        return om[n.toLowerCase()] || ""
    }
      , pm = function(n, d) {
        if (!d)
            return "";
        if (n.cache_.source.src === d && n.cache_.source.type)
            return n.cache_.source.type;
        var c = n.cache_.sources.filter(function(a) {
            return a.src === d
        });
        if (c.length)
            return c[0].type;
        n = n.$$("source");
        for (c = 0; c < n.length; c++) {
            var b = n[c];
            if (b.type && b.src && b.src === d)
                return b.type
        }
        return Nd(d)
    }
      , qm = function c(d) {
        if (Array.isArray(d)) {
            var b = [];
            d.forEach(function(a) {
                a = c(a);
                Array.isArray(a) ? b = b.concat(a) : wa(a) && b.push(a)
            });
            d = b
        } else
            d = "string" === typeof d && d.trim() ? [uh({
                src: d
            })] : wa(d) && "string" === typeof d.src && d.src && d.src.trim() ? [uh(d)] : [];
        return d
    }
      , rm = function(d) {
        function c(b, a, e) {
            var l = Ea({
                createEl: !1
            }, a);
            e = d.call(this, b, l, e) || this;
            if (a.playerOptions.sources && 0 !== a.playerOptions.sources.length)
                b.src(a.playerOptions.sources);
            else
                for (l = 0,
                a = a.playerOptions.techOrder; l < a.length; l++) {
                    var h = Ka(a[l])
                      , g = Ba.getTech(h);
                    h || (g = aa.getComponent(h));
                    if (g && g.isSupported()) {
                        b.loadTech_(h);
                        break
                    }
                }
            return e
        }
        ia(c, d);
        return c
    }(aa);
    aa.registerComponent("MediaLoader", rm);
    var ee = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.options_.controlText && l.controlText(l.options_.controlText);
            l.handleMouseOver_ = function(h) {
                return l.handleMouseOver(h)
            }
            ;
            l.handleMouseOut_ = function(h) {
                return l.handleMouseOut(h)
            }
            ;
            l.handleClick_ = function(h) {
                return l.handleClick(h)
            }
            ;
            l.handleKeyDown_ = function(h) {
                return l.handleKeyDown(h)
            }
            ;
            l.emitTapEvents();
            l.enable();
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function(a, e, l) {
            void 0 === a && (a = "div");
            void 0 === e && (e = {});
            void 0 === l && (l = {});
            e = W({
                className: this.buildCSSClass(),
                tabIndex: 0
            }, e);
            "button" === a && va.error("Creating a ClickableComponent with an HTML element of " + a + " is not supported; use a Button instead.");
            l = W({
                role: "button"
            }, l);
            this.tabIndex_ = e.tabIndex;
            a = ta(a, e, l);
            a.appendChild(ta("span", {
                className: "vjs-icon-placeholder"
            }, {
                "aria-hidden": !0
            }));
            this.createControlTextEl(a);
            return a
        }
        ;
        b.dispose = function() {
            this.controlTextEl_ = null;
            d.prototype.dispose.call(this)
        }
        ;
        b.createControlTextEl = function(a) {
            this.controlTextEl_ = ta("span", {
                className: "vjs-control-text"
            }, {
                "aria-live": "polite"
            });
            a && a.appendChild(this.controlTextEl_);
            this.controlText(this.controlText_, a);
            return this.controlTextEl_
        }
        ;
        b.controlText = function(a, e) {
            void 0 === e && (e = this.el());
            if (void 0 === a)
                return this.controlText_ || "Need Text";
            var l = this.localize(a);
            this.controlText_ = a;
            yb(this.controlTextEl_, l);
            this.nonIconControl || this.player_.options_.noUITitleAttributes || e.setAttribute("title", l)
        }
        ;
        b.buildCSSClass = function() {
            return "vjs-control vjs-button " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.enable = function() {
            this.enabled_ || (this.enabled_ = !0,
            this.removeClass("vjs-disabled"),
            this.el_.setAttribute("aria-disabled", "false"),
            "undefined" !== typeof this.tabIndex_ && this.el_.setAttribute("tabIndex", this.tabIndex_),
            this.on(["tap", "click"], this.handleClick_),
            this.on("keydown", this.handleKeyDown_))
        }
        ;
        b.disable = function() {
            this.enabled_ = !1;
            this.addClass("vjs-disabled");
            this.el_.setAttribute("aria-disabled", "true");
            "undefined" !== typeof this.tabIndex_ && this.el_.removeAttribute("tabIndex");
            this.off("mouseover", this.handleMouseOver_);
            this.off("mouseout", this.handleMouseOut_);
            this.off(["tap", "click"], this.handleClick_);
            this.off("keydown", this.handleKeyDown_)
        }
        ;
        b.handleLanguagechange = function() {
            this.controlText(this.controlText_)
        }
        ;
        b.handleClick = function(a) {
            this.options_.clickHandler && this.options_.clickHandler.call(this, arguments)
        }
        ;
        b.handleKeyDown = function(a) {
            ra.isEventKey(a, "Space") || ra.isEventKey(a, "Enter") ? (a.preventDefault(),
            a.stopPropagation(),
            this.trigger("click")) : d.prototype.handleKeyDown.call(this, a)
        }
        ;
        return c
    }(aa);
    aa.registerComponent("ClickableComponent", ee);
    var sm = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.update();
            l.update_ = function(h) {
                return l.update(h)
            }
            ;
            a.on("posterchange", l.update_);
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.dispose = function() {
            this.player().off("posterchange", this.update_);
            d.prototype.dispose.call(this)
        }
        ;
        b.createEl = function() {
            return ta("div", {
                className: "vjs-poster",
                tabIndex: -1
            })
        }
        ;
        b.update = function(a) {
            a = this.player().poster();
            this.setSrc(a);
            a ? this.show() : this.hide()
        }
        ;
        b.setSrc = function(a) {
            var e = "";
            a && (e = 'url("' + a + '")');
            this.el_.style.backgroundImage = e
        }
        ;
        b.handleClick = function(a) {
            this.player_.controls() && (a = this.player_.usingPlugin("eme") && this.player_.eme.sessions && 0 < this.player_.eme.sessions.length,
            !this.player_.tech(!0) || (ld || kd) && a || this.player_.tech(!0).focus(),
            this.player_.paused() ? Gb(this.player_.play()) : this.player_.pause())
        }
        ;
        return c
    }(ee);
    aa.registerComponent("PosterImage", sm);
    var tm = {
        monospace: "monospace",
        sansSerif: "sans-serif",
        serif: "serif",
        monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace',
        monospaceSerif: '"Courier New", monospace',
        proportionalSansSerif: "sans-serif",
        proportionalSerif: "serif",
        casual: '"Comic Sans MS", Impact, fantasy',
        script: '"Monotype Corsiva", cursive',
        smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif'
    }
      , um = function(d) {
        function c(a, e, l) {
            var h = d.call(this, a, e, l) || this;
            var g = function(q) {
                return h.updateDisplay(q)
            };
            a.on("loadstart", function(q) {
                return h.toggleDisplay(q)
            });
            a.on("texttrackchange", g);
            a.on("loadedmetadata", function(q) {
                return h.preselectTrack(q)
            });
            a.ready(Fa(sa(h), function() {
                if (a.tech_ && a.tech_.featuresNativeTextTracks)
                    this.hide();
                else {
                    a.on("fullscreenchange", g);
                    a.on("playerresize", g);
                    window.addEventListener("orientationchange", g);
                    a.on("dispose", function() {
                        return window.removeEventListener("orientationchange", g)
                    });
                    for (var q = this.options_.playerOptions.tracks || [], p = 0; p < q.length; p++)
                        this.player_.addRemoteTextTrack(q[p], !0);
                    this.preselectTrack()
                }
            }));
            return h
        }
        ia(c, d);
        var b = c.prototype;
        b.preselectTrack = function() {
            for (var a = {
                captions: 1,
                subtitles: 1
            }, e = this.player_.textTracks(), l = this.player_.cache_.selectedLanguage, h, g, q, p = 0; p < e.length; p++) {
                var f = e[p];
                l && l.enabled && l.language && l.language === f.language && f.kind in a ? f.kind === l.kind ? q = f : q || (q = f) : l && !l.enabled ? g = h = q = null : f["default"] && ("descriptions" !== f.kind || h ? f.kind in a && !g && (g = f) : h = f)
            }
            q ? q.mode = "showing" : g ? g.mode = "showing" : h && (h.mode = "showing")
        }
        ;
        b.toggleDisplay = function() {
            this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks ? this.hide() : this.show()
        }
        ;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-text-track-display"
            }, {
                translate: "yes",
                "aria-live": "off",
                "aria-atomic": "true"
            })
        }
        ;
        b.clearDisplay = function() {
            "function" === typeof window.WebVTT && window.WebVTT.processCues(window, [], this.el_)
        }
        ;
        b.updateDisplay = function() {
            var a = this.player_.textTracks()
              , e = this.options_.allowMultipleShowingTracks;
            this.clearDisplay();
            if (e) {
                e = [];
                for (var l = 0; l < a.length; ++l) {
                    var h = a[l];
                    "showing" === h.mode && e.push(h)
                }
                this.updateForTrack(e)
            } else {
                l = e = null;
                for (h = a.length; h--; ) {
                    var g = a[h];
                    "showing" === g.mode && ("descriptions" === g.kind ? e = g : l = g)
                }
                l ? ("off" !== this.getAttribute("aria-live") && this.setAttribute("aria-live", "off"),
                this.updateForTrack(l)) : e && ("assertive" !== this.getAttribute("aria-live") && this.setAttribute("aria-live", "assertive"),
                this.updateForTrack(e))
            }
        }
        ;
        b.updateDisplayState = function(a) {
            var e = this.player_.textTrackSettings.getValues();
            a = a.activeCues;
            for (var l = a.length; l--; ) {
                var h = a[l];
                if (h) {
                    h = h.displayState;
                    e.color && (h.firstChild.style.color = e.color);
                    if (e.textOpacity) {
                        var g = ff(e.color || "#fff", e.textOpacity);
                        try {
                            h.firstChild.style.color = g
                        } catch (q) {}
                    }
                    e.backgroundColor && (h.firstChild.style.backgroundColor = e.backgroundColor);
                    if (e.backgroundOpacity) {
                        g = ff(e.backgroundColor || "#000", e.backgroundOpacity);
                        try {
                            h.firstChild.style.backgroundColor = g
                        } catch (q) {}
                    }
                    if (e.windowColor)
                        if (e.windowOpacity) {
                            g = ff(e.windowColor, e.windowOpacity);
                            try {
                                h.style.backgroundColor = g
                            } catch (q) {}
                        } else
                            h.style.backgroundColor = e.windowColor;
                    e.edgeStyle && ("dropshadow" === e.edgeStyle ? h.firstChild.style.textShadow = "2px 2px 3px #222, 2px 2px 4px #222, 2px 2px 5px #222" : "raised" === e.edgeStyle ? h.firstChild.style.textShadow = "1px 1px #222, 2px 2px #222, 3px 3px #222" : "depressed" === e.edgeStyle ? h.firstChild.style.textShadow = "1px 1px #ccc, 0 1px #ccc, -1px -1px #222, 0 -1px #222" : "uniform" === e.edgeStyle && (h.firstChild.style.textShadow = "0 0 4px #222, 0 0 4px #222, 0 0 4px #222, 0 0 4px #222"));
                    e.fontPercent && 1 !== e.fontPercent && (g = window.parseFloat(h.style.fontSize),
                    h.style.fontSize = g * e.fontPercent + "px",
                    h.style.height = "auto",
                    h.style.top = "auto");
                    e.fontFamily && "default" !== e.fontFamily && ("small-caps" === e.fontFamily ? h.firstChild.style.fontVariant = "small-caps" : h.firstChild.style.fontFamily = tm[e.fontFamily])
                }
            }
        }
        ;
        b.updateForTrack = function(a) {
            Array.isArray(a) || (a = [a]);
            if ("function" === typeof window.WebVTT && !a.every(function(q) {
                return !q.activeCues
            })) {
                for (var e = [], l = 0; l < a.length; ++l)
                    for (var h = a[l], g = 0; g < h.activeCues.length; ++g)
                        e.push(h.activeCues[g]);
                window.WebVTT.processCues(window, e, this.el_);
                for (e = 0; e < a.length; ++e) {
                    l = a[e];
                    for (h = 0; h < l.activeCues.length; ++h)
                        g = l.activeCues[h].displayState,
                        Mb(g, "vjs-text-track-cue"),
                        Mb(g, "vjs-text-track-cue-" + (l.language ? l.language : e)),
                        l.language && g.setAttribute("lang", l.language);
                    this.player_.textTrackSettings && this.updateDisplayState(l)
                }
            }
        }
        ;
        return c
    }(aa);
    aa.registerComponent("TextTrackDisplay", um);
    var vm = function(d) {
        function c() {
            return d.apply(this, arguments) || this
        }
        ia(c, d);
        c.prototype.createEl = function() {
            var b = this.player_.isAudio();
            b = this.localize(b ? "Audio Player" : "Video Player");
            b = ta("span", {
                className: "vjs-control-text",
                textContent: this.localize("{1} is loading.", [b])
            });
            var a = d.prototype.createEl.call(this, "div", {
                className: "vjs-loading-spinner",
                dir: "ltr"
            });
            a.appendChild(b);
            return a
        }
        ;
        return c
    }(aa);
    aa.registerComponent("LoadingSpinner", vm);
    var Ab = function(d) {
        function c() {
            return d.apply(this, arguments) || this
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function(a, e, l) {
            void 0 === e && (e = {});
            void 0 === l && (l = {});
            a = "button";
            e = W({
                className: this.buildCSSClass()
            }, e);
            l = W({
                type: "button"
            }, l);
            a = ta(a, e, l);
            a.appendChild(ta("span", {
                className: "vjs-icon-placeholder"
            }, {
                "aria-hidden": !0
            }));
            this.createControlTextEl(a);
            return a
        }
        ;
        b.addChild = function(a, e) {
            void 0 === e && (e = {});
            va.warn("Adding an actionable (user controllable) child to a Button (" + this.constructor.name + ") is not supported; use a ClickableComponent instead.");
            return aa.prototype.addChild.call(this, a, e)
        }
        ;
        b.enable = function() {
            d.prototype.enable.call(this);
            this.el_.removeAttribute("disabled")
        }
        ;
        b.disable = function() {
            d.prototype.disable.call(this);
            this.el_.setAttribute("disabled", "disabled")
        }
        ;
        b.handleKeyDown = function(a) {
            ra.isEventKey(a, "Space") || ra.isEventKey(a, "Enter") ? a.stopPropagation() : d.prototype.handleKeyDown.call(this, a)
        }
        ;
        return c
    }(ee);
    aa.registerComponent("Button", Ab);
    var xi = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.mouseused_ = !1;
            l.on("mousedown", function(h) {
                return l.handleMouseDown(h)
            });
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-big-play-button"
        }
        ;
        b.handleClick = function(a) {
            var e = this.player_.play();
            if (this.mouseused_ && a.clientX && a.clientY)
                a = this.player_.usingPlugin("eme") && this.player_.eme.sessions && 0 < this.player_.eme.sessions.length,
                Gb(e),
                !this.player_.tech(!0) || (ld || kd) && a || this.player_.tech(!0).focus();
            else {
                var l = (a = this.player_.getChild("controlBar")) && a.getChild("playToggle");
                l ? (a = function() {
                    return l.focus()
                }
                ,
                ad(e) ? e.then(a, function() {}) : this.setTimeout(a, 1)) : this.player_.tech(!0).focus()
            }
        }
        ;
        b.handleKeyDown = function(a) {
            this.mouseused_ = !1;
            d.prototype.handleKeyDown.call(this, a)
        }
        ;
        b.handleMouseDown = function(a) {
            this.mouseused_ = !0
        }
        ;
        return c
    }(Ab);
    xi.prototype.controlText_ = "Play Video";
    aa.registerComponent("BigPlayButton", xi);
    var wm = function(d) {
        function c(a, e) {
            a = d.call(this, a, e) || this;
            a.controlText(e && e.controlText || a.localize("Close"));
            return a
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-close-button " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.handleClick = function(a) {
            this.trigger({
                type: "close",
                bubbles: !1
            })
        }
        ;
        b.handleKeyDown = function(a) {
            ra.isEventKey(a, "Esc") ? (a.preventDefault(),
            a.stopPropagation(),
            this.trigger("click")) : d.prototype.handleKeyDown.call(this, a)
        }
        ;
        return c
    }(Ab);
    aa.registerComponent("CloseButton", wm);
    var yi = function(d) {
        function c(a, e) {
            void 0 === e && (e = {});
            var l = d.call(this, a, e) || this;
            e.replay = void 0 === e.replay || e.replay;
            l.on(a, "play", function(h) {
                return l.handlePlay(h)
            });
            l.on(a, "pause", function(h) {
                return l.handlePause(h)
            });
            if (e.replay)
                l.on(a, "ended", function(h) {
                    return l.handleEnded(h)
                });
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-play-control " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.handleClick = function(a) {
            this.player_.paused() ? Gb(this.player_.play()) : this.player_.pause()
        }
        ;
        b.handleSeeked = function(a) {
            this.removeClass("vjs-ended");
            this.player_.paused() ? this.handlePause(a) : this.handlePlay(a)
        }
        ;
        b.handlePlay = function(a) {
            this.removeClass("vjs-ended");
            this.removeClass("vjs-paused");
            this.addClass("vjs-playing");
            this.controlText("Pause")
        }
        ;
        b.handlePause = function(a) {
            this.removeClass("vjs-playing");
            this.addClass("vjs-paused");
            this.controlText("Play")
        }
        ;
        b.handleEnded = function(a) {
            var e = this;
            this.removeClass("vjs-playing");
            this.addClass("vjs-ended");
            this.controlText("Replay");
            this.one(this.player_, "seeked", function(l) {
                return e.handleSeeked(l)
            })
        }
        ;
        return c
    }(Ab);
    yi.prototype.controlText_ = "Play";
    aa.registerComponent("PlayToggle", yi);
    var zi = function(d, c) {
        d = 0 > d ? 0 : d;
        var b = Math.floor(d % 60)
          , a = Math.floor(d / 60 % 60)
          , e = Math.floor(d / 3600)
          , l = Math.floor(c / 60 % 60);
        c = Math.floor(c / 3600);
        if (isNaN(d) || Infinity === d)
            e = a = b = "-";
        e = 0 < e || 0 < c ? e + ":" : "";
        return e + (((e || 10 <= l) && 10 > a ? "0" + a : a) + ":") + (10 > b ? "0" + b : b)
    }
      , gf = zi
      , Lc = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.on(a, ["timeupdate", "ended"], function(h) {
                return l.updateContent(h)
            });
            l.updateTextNode_();
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            var a = this.buildCSSClass()
              , e = d.prototype.createEl.call(this, "div", {
                className: a + " vjs-time-control vjs-control"
            })
              , l = ta("span", {
                className: "vjs-control-text",
                textContent: this.localize(this.labelText_) + "\u00a0"
            }, {
                role: "presentation"
            });
            e.appendChild(l);
            this.contentEl_ = ta("span", {
                className: a + "-display"
            }, {
                "aria-live": "off",
                role: "presentation"
            });
            e.appendChild(this.contentEl_);
            return e
        }
        ;
        b.dispose = function() {
            this.textNode_ = this.contentEl_ = null;
            d.prototype.dispose.call(this)
        }
        ;
        b.updateTextNode_ = function(a) {
            var e = this;
            void 0 === a && (a = 0);
            a = wc(a);
            this.formattedTime_ !== a && (this.formattedTime_ = a,
            this.requestNamedAnimationFrame("TimeDisplay#updateTextNode_", function() {
                if (e.contentEl_) {
                    var l = e.textNode_;
                    l && e.contentEl_.firstChild !== l && (l = null,
                    va.warn("TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead."));
                    e.textNode_ = document.createTextNode(e.formattedTime_);
                    e.textNode_ && (l ? e.contentEl_.replaceChild(e.textNode_, l) : e.contentEl_.appendChild(e.textNode_))
                }
            }))
        }
        ;
        b.updateContent = function(a) {}
        ;
        return c
    }(aa);
    Lc.prototype.labelText_ = "Time";
    Lc.prototype.controlText_ = "Time";
    aa.registerComponent("TimeDisplay", Lc);
    var Hf = function(d) {
        function c() {
            return d.apply(this, arguments) || this
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-current-time"
        }
        ;
        b.updateContent = function(a) {
            a = this.player_.ended() ? this.player_.duration() : this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
            this.updateTextNode_(a)
        }
        ;
        return c
    }(Lc);
    Hf.prototype.labelText_ = "Current Time";
    Hf.prototype.controlText_ = "Current Time";
    aa.registerComponent("CurrentTimeDisplay", Hf);
    var If = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            e = function(h) {
                return l.updateContent(h)
            }
            ;
            l.on(a, "durationchange", e);
            l.on(a, "loadstart", e);
            l.on(a, "loadedmetadata", e);
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-duration"
        }
        ;
        b.updateContent = function(a) {
            a = this.player_.duration();
            this.updateTextNode_(a)
        }
        ;
        return c
    }(Lc);
    If.prototype.labelText_ = "Duration";
    If.prototype.controlText_ = "Duration";
    aa.registerComponent("DurationDisplay", If);
    var xm = function(d) {
        function c() {
            return d.apply(this, arguments) || this
        }
        ia(c, d);
        c.prototype.createEl = function() {
            var b = d.prototype.createEl.call(this, "div", {
                className: "vjs-time-control vjs-time-divider"
            }, {
                "aria-hidden": !0
            })
              , a = d.prototype.createEl.call(this, "div")
              , e = d.prototype.createEl.call(this, "span", {
                textContent: "/"
            });
            a.appendChild(e);
            b.appendChild(a);
            return b
        }
        ;
        return c
    }(aa);
    aa.registerComponent("TimeDivider", xm);
    var Jf = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.on(a, "durationchange", function(h) {
                return l.updateContent(h)
            });
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-remaining-time"
        }
        ;
        b.createEl = function() {
            var a = d.prototype.createEl.call(this);
            !1 !== this.options_.displayNegative && a.insertBefore(ta("span", {}, {
                "aria-hidden": !0
            }, "-"), this.contentEl_);
            return a
        }
        ;
        b.updateContent = function(a) {
            "number" === typeof this.player_.duration() && (a = this.player_.ended() ? 0 : this.player_.remainingTimeDisplay ? this.player_.remainingTimeDisplay() : this.player_.remainingTime(),
            this.updateTextNode_(a))
        }
        ;
        return c
    }(Lc);
    Jf.prototype.labelText_ = "Remaining Time";
    Jf.prototype.controlText_ = "Remaining Time";
    aa.registerComponent("RemainingTimeDisplay", Jf);
    var ym = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.updateShowing();
            l.on(l.player(), "durationchange", function(h) {
                return l.updateShowing(h)
            });
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            var a = d.prototype.createEl.call(this, "div", {
                className: "vjs-live-control vjs-control"
            });
            this.contentEl_ = ta("div", {
                className: "vjs-live-display"
            }, {
                "aria-live": "off"
            });
            this.contentEl_.appendChild(ta("span", {
                className: "vjs-control-text",
                textContent: this.localize("Stream Type") + "\u00a0"
            }));
            this.contentEl_.appendChild(document.createTextNode(this.localize("LIVE")));
            a.appendChild(this.contentEl_);
            return a
        }
        ;
        b.dispose = function() {
            this.contentEl_ = null;
            d.prototype.dispose.call(this)
        }
        ;
        b.updateShowing = function(a) {
            Infinity === this.player().duration() ? this.show() : this.hide()
        }
        ;
        return c
    }(aa);
    aa.registerComponent("LiveDisplay", ym);
    var Ai = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.updateLiveEdgeStatus();
            l.player_.liveTracker && (l.updateLiveEdgeStatusHandler_ = function(h) {
                return l.updateLiveEdgeStatus(h)
            }
            ,
            l.on(l.player_.liveTracker, "liveedgechange", l.updateLiveEdgeStatusHandler_));
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            var a = d.prototype.createEl.call(this, "button", {
                className: "vjs-seek-to-live-control vjs-control"
            });
            this.textEl_ = ta("span", {
                className: "vjs-seek-to-live-text",
                textContent: this.localize("LIVE")
            }, {
                "aria-hidden": "true"
            });
            a.appendChild(this.textEl_);
            return a
        }
        ;
        b.updateLiveEdgeStatus = function() {
            !this.player_.liveTracker || this.player_.liveTracker.atLiveEdge() ? (this.setAttribute("aria-disabled", !0),
            this.addClass("vjs-at-live-edge"),
            this.controlText("Seek to live, currently playing live")) : (this.setAttribute("aria-disabled", !1),
            this.removeClass("vjs-at-live-edge"),
            this.controlText("Seek to live, currently behind live"))
        }
        ;
        b.handleClick = function() {
            this.player_.liveTracker.seekToLiveEdge()
        }
        ;
        b.dispose = function() {
            this.player_.liveTracker && this.off(this.player_.liveTracker, "liveedgechange", this.updateLiveEdgeStatusHandler_);
            this.textEl_ = null;
            d.prototype.dispose.call(this)
        }
        ;
        return c
    }(Ab);
    Ai.prototype.controlText_ = "Seek to live, currently playing live";
    aa.registerComponent("SeekToLive", Ai);
    var Mc = function(d, c, b) {
        d = Number(d);
        return Math.min(b, Math.max(c, isNaN(d) ? c : d))
    }
      , Kf = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.handleMouseDown_ = function(h) {
                return l.handleMouseDown(h)
            }
            ;
            l.handleMouseUp_ = function(h) {
                return l.handleMouseUp(h)
            }
            ;
            l.handleKeyDown_ = function(h) {
                return l.handleKeyDown(h)
            }
            ;
            l.handleClick_ = function(h) {
                return l.handleClick(h)
            }
            ;
            l.handleMouseMove_ = function(h) {
                return l.handleMouseMove(h)
            }
            ;
            l.update_ = function(h) {
                return l.update(h)
            }
            ;
            l.bar = l.getChild(l.options_.barName);
            l.vertical(!!l.options_.vertical);
            l.enable();
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.enabled = function() {
            return this.enabled_
        }
        ;
        b.enable = function() {
            if (!this.enabled()) {
                this.on("mousedown", this.handleMouseDown_);
                this.on("touchstart", this.handleMouseDown_);
                this.on("keydown", this.handleKeyDown_);
                this.on("click", this.handleClick_);
                this.on(this.player_, "controlsvisible", this.update);
                if (this.playerEvent)
                    this.on(this.player_, this.playerEvent, this.update);
                this.removeClass("disabled");
                this.setAttribute("tabindex", 0);
                this.enabled_ = !0
            }
        }
        ;
        b.disable = function() {
            if (this.enabled()) {
                var a = this.bar.el_.ownerDocument;
                this.off("mousedown", this.handleMouseDown_);
                this.off("touchstart", this.handleMouseDown_);
                this.off("keydown", this.handleKeyDown_);
                this.off("click", this.handleClick_);
                this.off(this.player_, "controlsvisible", this.update_);
                this.off(a, "mousemove", this.handleMouseMove_);
                this.off(a, "mouseup", this.handleMouseUp_);
                this.off(a, "touchmove", this.handleMouseMove_);
                this.off(a, "touchend", this.handleMouseUp_);
                this.removeAttribute("tabindex");
                this.addClass("disabled");
                this.playerEvent && this.off(this.player_, this.playerEvent, this.update);
                this.enabled_ = !1
            }
        }
        ;
        b.createEl = function(a, e, l) {
            void 0 === e && (e = {});
            void 0 === l && (l = {});
            e.className += " vjs-slider";
            e = W({
                tabIndex: 0
            }, e);
            l = W({
                role: "slider",
                "aria-valuenow": 0,
                "aria-valuemin": 0,
                "aria-valuemax": 100,
                tabIndex: 0
            }, l);
            return d.prototype.createEl.call(this, a, e, l)
        }
        ;
        b.handleMouseDown = function(a) {
            var e = this.bar.el_.ownerDocument;
            "mousedown" === a.type && a.preventDefault();
            "touchstart" !== a.type || Ub || a.preventDefault();
            bh();
            this.addClass("vjs-sliding");
            this.trigger("slideractive");
            this.on(e, "mousemove", this.handleMouseMove_);
            this.on(e, "mouseup", this.handleMouseUp_);
            this.on(e, "touchmove", this.handleMouseMove_);
            this.on(e, "touchend", this.handleMouseUp_);
            this.handleMouseMove(a, !0)
        }
        ;
        b.handleMouseMove = function(a) {}
        ;
        b.handleMouseUp = function() {
            var a = this.bar.el_.ownerDocument;
            ch();
            this.removeClass("vjs-sliding");
            this.trigger("sliderinactive");
            this.off(a, "mousemove", this.handleMouseMove_);
            this.off(a, "mouseup", this.handleMouseUp_);
            this.off(a, "touchmove", this.handleMouseMove_);
            this.off(a, "touchend", this.handleMouseUp_);
            this.update()
        }
        ;
        b.update = function() {
            var a = this;
            if (this.el_ && this.bar) {
                var e = this.getProgress();
                if (e === this.progress_)
                    return e;
                this.progress_ = e;
                this.requestNamedAnimationFrame("Slider#update", function() {
                    var l = a.vertical() ? "height" : "width";
                    a.bar.el().style[l] = (100 * e).toFixed(2) + "%"
                });
                return e
            }
        }
        ;
        b.getProgress = function() {
            return Number(Mc(this.getPercent(), 0, 1).toFixed(4))
        }
        ;
        b.calculateDistance = function(a) {
            a = Id(this.el_, a);
            return this.vertical() ? a.y : a.x
        }
        ;
        b.handleKeyDown = function(a) {
            ra.isEventKey(a, "Left") || ra.isEventKey(a, "Down") ? (a.preventDefault(),
            a.stopPropagation(),
            this.stepBack()) : ra.isEventKey(a, "Right") || ra.isEventKey(a, "Up") ? (a.preventDefault(),
            a.stopPropagation(),
            this.stepForward()) : d.prototype.handleKeyDown.call(this, a)
        }
        ;
        b.handleClick = function(a) {
            a.stopPropagation();
            a.preventDefault()
        }
        ;
        b.vertical = function(a) {
            if (void 0 === a)
                return this.vertical_ || !1;
            (this.vertical_ = !!a) ? this.addClass("vjs-slider-vertical") : this.addClass("vjs-slider-horizontal")
        }
        ;
        return c
    }(aa);
    aa.registerComponent("Slider", Kf);
    var zm = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.partEls_ = [];
            l.on(a, "progress", function(h) {
                return l.update(h)
            });
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            var a = d.prototype.createEl.call(this, "div", {
                className: "vjs-load-progress"
            })
              , e = ta("span", {
                className: "vjs-control-text"
            })
              , l = ta("span", {
                textContent: this.localize("Loaded")
            })
              , h = document.createTextNode(": ");
            this.percentageEl_ = ta("span", {
                className: "vjs-control-text-loaded-percentage",
                textContent: "0%"
            });
            a.appendChild(e);
            e.appendChild(l);
            e.appendChild(h);
            e.appendChild(this.percentageEl_);
            return a
        }
        ;
        b.dispose = function() {
            this.percentageEl_ = this.partEls_ = null;
            d.prototype.dispose.call(this)
        }
        ;
        b.update = function(a) {
            var e = this;
            this.requestNamedAnimationFrame("LoadProgressBar#update", function() {
                var l = e.player_.liveTracker
                  , h = e.player_.buffered()
                  , g = l && l.isLive() ? l.seekableEnd() : e.player_.duration()
                  , q = e.player_.bufferedEnd();
                l = e.partEls_;
                g = Mc(q / g * 100, 0, 100).toFixed(2) + "%";
                e.percent_ !== g && (e.el_.style.width = g,
                yb(e.percentageEl_, g),
                e.percent_ = g);
                for (g = 0; g < h.length; g++) {
                    var p = h.start(g)
                      , f = h.end(g)
                      , m = l[g];
                    m || (m = e.el_.appendChild(ta()),
                    l[g] = m);
                    if (m.dataset.start !== p || m.dataset.end !== f)
                        m.dataset.start = p,
                        m.dataset.end = f,
                        m.style.left = Mc(p / q * 100, 0, 100).toFixed(2) + "%",
                        m.style.width = Mc((f - p) / q * 100, 0, 100).toFixed(2) + "%"
                }
                for (q = l.length; q > h.length; q--)
                    e.el_.removeChild(l[q - 1]);
                l.length = h.length
            })
        }
        ;
        return c
    }(aa);
    aa.registerComponent("LoadProgressBar", zm);
    var Am = function(d) {
        function c(a, e) {
            a = d.call(this, a, e) || this;
            a.update = Vb(Fa(sa(a), a.update), 30);
            return a
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-time-tooltip"
            }, {
                "aria-hidden": "true"
            })
        }
        ;
        b.update = function(a, e, l) {
            var h = Zc(this.el_)
              , g = tc(this.player_.el())
              , q = a.width * e;
            g && h && (e = a.left - g.left + q,
            a = a.width - q + (g.right - a.right),
            g = h.width / 2,
            e < g ? g += g - e : a < g && (g = a),
            0 > g ? g = 0 : g > h.width && (g = h.width),
            g = Math.round(g),
            this.el_.style.right = "-" + g + "px",
            this.write(l))
        }
        ;
        b.write = function(a) {
            yb(this.el_, a)
        }
        ;
        b.updateTime = function(a, e, l, h) {
            var g = this;
            this.requestNamedAnimationFrame("TimeTooltip#updateTime", function() {
                var q = g.player_.duration();
                if (g.player_.liveTracker && g.player_.liveTracker.isLive()) {
                    q = g.player_.liveTracker.liveWindow();
                    var p = q - e * q;
                    q = (1 > p ? "" : "-") + wc(p, q)
                } else
                    q = wc(l, q);
                g.update(a, e, q);
                h && h()
            })
        }
        ;
        return c
    }(aa);
    aa.registerComponent("TimeTooltip", Am);
    var Lf = function(d) {
        function c(a, e) {
            a = d.call(this, a, e) || this;
            a.update = Vb(Fa(sa(a), a.update), 30);
            return a
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-play-progress vjs-slider-bar"
            }, {
                "aria-hidden": "true"
            })
        }
        ;
        b.update = function(a, e) {
            var l = this.getChild("timeTooltip");
            if (l) {
                var h = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
                l.updateTime(a, e, h)
            }
        }
        ;
        return c
    }(aa);
    Lf.prototype.options_ = {
        children: []
    };
    cb || Tb || Lf.prototype.options_.children.push("timeTooltip");
    aa.registerComponent("PlayProgressBar", Lf);
    var Bi = function(d) {
        function c(a, e) {
            a = d.call(this, a, e) || this;
            a.update = Vb(Fa(sa(a), a.update), 30);
            return a
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-mouse-display"
            })
        }
        ;
        b.update = function(a, e) {
            var l = this
              , h = e * this.player_.duration();
            this.getChild("timeTooltip").updateTime(a, e, h, function() {
                l.el_.style.left = a.width * e + "px"
            })
        }
        ;
        return c
    }(aa);
    Bi.prototype.options_ = {
        children: ["timeTooltip"]
    };
    aa.registerComponent("MouseTimeDisplay", Bi);
    var Mf = function(d) {
        function c(a, e) {
            a = d.call(this, a, e) || this;
            a.setEventHandlers_();
            return a
        }
        ia(c, d);
        var b = c.prototype;
        b.setEventHandlers_ = function() {
            var a = this;
            this.update_ = Fa(this, this.update);
            this.update = Vb(this.update_, 30);
            this.on(this.player_, ["ended", "durationchange", "timeupdate"], this.update);
            if (this.player_.liveTracker)
                this.on(this.player_.liveTracker, "liveedgechange", this.update);
            this.updateInterval = null;
            this.enableIntervalHandler_ = function(e) {
                return a.enableInterval_(e)
            }
            ;
            this.disableIntervalHandler_ = function(e) {
                return a.disableInterval_(e)
            }
            ;
            this.on(this.player_, ["playing"], this.enableIntervalHandler_);
            this.on(this.player_, ["ended", "pause", "waiting"], this.disableIntervalHandler_);
            if ("hidden"in document && "visibilityState"in document)
                this.on(document, "visibilitychange", this.toggleVisibility_)
        }
        ;
        b.toggleVisibility_ = function(a) {
            "hidden" === document.visibilityState ? (this.cancelNamedAnimationFrame("SeekBar#update"),
            this.cancelNamedAnimationFrame("Slider#update"),
            this.disableInterval_(a)) : (this.player_.ended() || this.player_.paused() || this.enableInterval_(),
            this.update())
        }
        ;
        b.enableInterval_ = function() {
            this.updateInterval || (this.updateInterval = this.setInterval(this.update, 30))
        }
        ;
        b.disableInterval_ = function(a) {
            this.player_.liveTracker && this.player_.liveTracker.isLive() && a && "ended" !== a.type || !this.updateInterval || (this.clearInterval(this.updateInterval),
            this.updateInterval = null)
        }
        ;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-progress-holder"
            }, {
                "aria-label": this.localize("Progress Bar")
            })
        }
        ;
        b.update = function(a) {
            var e = this;
            if ("hidden" !== document.visibilityState) {
                var l = d.prototype.update.call(this);
                this.requestNamedAnimationFrame("SeekBar#update", function() {
                    var h = e.player_.ended() ? e.player_.duration() : e.getCurrentTime_()
                      , g = e.player_.liveTracker
                      , q = e.player_.duration();
                    g && g.isLive() && (q = e.player_.liveTracker.liveCurrentTime());
                    e.percent_ !== l && (e.el_.setAttribute("aria-valuenow", (100 * l).toFixed(2)),
                    e.percent_ = l);
                    if (e.currentTime_ !== h || e.duration_ !== q)
                        e.el_.setAttribute("aria-valuetext", e.localize("progress bar timing: currentTime={1} duration={2}", [wc(h, q), wc(q, q)], "{1} of {2}")),
                        e.currentTime_ = h,
                        e.duration_ = q;
                    e.bar && e.bar.update(tc(e.el()), e.getProgress())
                });
                return l
            }
        }
        ;
        b.userSeek_ = function(a) {
            this.player_.liveTracker && this.player_.liveTracker.isLive() && this.player_.liveTracker.nextSeekedFromUser();
            this.player_.currentTime(a)
        }
        ;
        b.getCurrentTime_ = function() {
            return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime()
        }
        ;
        b.getPercent = function() {
            var a = this.getCurrentTime_()
              , e = this.player_.liveTracker;
            e && e.isLive() ? (a = (a - e.seekableStart()) / e.liveWindow(),
            e.atLiveEdge() && (a = 1)) : a /= this.player_.duration();
            return a
        }
        ;
        b.handleMouseDown = function(a) {
            $c(a) && (a.stopPropagation(),
            this.videoWasPlaying = !this.player_.paused(),
            this.player_.pause(),
            d.prototype.handleMouseDown.call(this, a))
        }
        ;
        b.handleMouseMove = function(a, e) {
            void 0 === e && (e = !1);
            if ($c(a)) {
                e || this.player_.scrubbing() || this.player_.scrubbing(!0);
                var l = this.calculateDistance(a);
                var h = this.player_.liveTracker;
                if (h && h.isLive()) {
                    if (.99 <= l) {
                        h.seekToLiveEdge();
                        return
                    }
                    a = h.seekableStart();
                    e = h.liveCurrentTime();
                    l = a + l * h.liveWindow();
                    l >= e && (l = e);
                    l <= a && (l = a + .1);
                    if (Infinity === l)
                        return
                } else
                    l *= this.player_.duration(),
                    l === this.player_.duration() && (l -= .1);
                this.userSeek_(l)
            }
        }
        ;
        b.enable = function() {
            d.prototype.enable.call(this);
            var a = this.getChild("mouseTimeDisplay");
            a && a.show()
        }
        ;
        b.disable = function() {
            d.prototype.disable.call(this);
            var a = this.getChild("mouseTimeDisplay");
            a && a.hide()
        }
        ;
        b.handleMouseUp = function(a) {
            d.prototype.handleMouseUp.call(this, a);
            a && a.stopPropagation();
            this.player_.scrubbing(!1);
            this.player_.trigger({
                type: "timeupdate",
                target: this,
                manuallyTriggered: !0
            });
            this.videoWasPlaying ? Gb(this.player_.play()) : this.update_()
        }
        ;
        b.stepForward = function() {
            this.userSeek_(this.player_.currentTime() + 5)
        }
        ;
        b.stepBack = function() {
            this.userSeek_(this.player_.currentTime() - 5)
        }
        ;
        b.handleAction = function(a) {
            this.player_.paused() ? this.player_.play() : this.player_.pause()
        }
        ;
        b.handleKeyDown = function(a) {
            var e = this.player_.liveTracker;
            ra.isEventKey(a, "Space") || ra.isEventKey(a, "Enter") ? (a.preventDefault(),
            a.stopPropagation(),
            this.handleAction(a)) : ra.isEventKey(a, "Home") ? (a.preventDefault(),
            a.stopPropagation(),
            this.userSeek_(0)) : ra.isEventKey(a, "End") ? (a.preventDefault(),
            a.stopPropagation(),
            e && e.isLive() ? this.userSeek_(e.liveCurrentTime()) : this.userSeek_(this.player_.duration())) : /^[0-9]$/.test(ra(a)) ? (a.preventDefault(),
            a.stopPropagation(),
            a = 10 * (ra.codes[ra(a)] - ra.codes["0"]) / 100,
            e && e.isLive() ? this.userSeek_(e.seekableStart() + e.liveWindow() * a) : this.userSeek_(this.player_.duration() * a)) : ra.isEventKey(a, "PgDn") ? (a.preventDefault(),
            a.stopPropagation(),
            this.userSeek_(this.player_.currentTime() - 60)) : ra.isEventKey(a, "PgUp") ? (a.preventDefault(),
            a.stopPropagation(),
            this.userSeek_(this.player_.currentTime() + 60)) : d.prototype.handleKeyDown.call(this, a)
        }
        ;
        b.dispose = function() {
            this.disableInterval_();
            this.off(this.player_, ["ended", "durationchange", "timeupdate"], this.update);
            this.player_.liveTracker && this.off(this.player_.liveTracker, "liveedgechange", this.update);
            this.off(this.player_, ["playing"], this.enableIntervalHandler_);
            this.off(this.player_, ["ended", "pause", "waiting"], this.disableIntervalHandler_);
            "hidden"in document && "visibilityState"in document && this.off(document, "visibilitychange", this.toggleVisibility_);
            d.prototype.dispose.call(this)
        }
        ;
        return c
    }(Kf);
    Mf.prototype.options_ = {
        children: ["loadProgressBar", "playProgressBar"],
        barName: "playProgressBar"
    };
    cb || Tb || Mf.prototype.options_.children.splice(1, 0, "mouseTimeDisplay");
    aa.registerComponent("SeekBar", Mf);
    var Ci = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.handleMouseMove = Vb(Fa(sa(l), l.handleMouseMove), 30);
            l.throttledHandleMouseSeek = Vb(Fa(sa(l), l.handleMouseSeek), 30);
            l.handleMouseUpHandler_ = function(h) {
                return l.handleMouseUp(h)
            }
            ;
            l.handleMouseDownHandler_ = function(h) {
                return l.handleMouseDown(h)
            }
            ;
            l.enable();
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-progress-control vjs-control"
            })
        }
        ;
        b.handleMouseMove = function(a) {
            var e = this.getChild("seekBar");
            if (e) {
                var l = e.getChild("playProgressBar")
                  , h = e.getChild("mouseTimeDisplay");
                if (l || h) {
                    var g = e.el()
                      , q = Zc(g);
                    a = Id(g, a).x;
                    a = Mc(a, 0, 1);
                    h && h.update(q, a);
                    l && l.update(q, e.getProgress())
                }
            }
        }
        ;
        b.handleMouseSeek = function(a) {
            var e = this.getChild("seekBar");
            e && e.handleMouseMove(a)
        }
        ;
        b.enabled = function() {
            return this.enabled_
        }
        ;
        b.disable = function() {
            this.children().forEach(function(e) {
                return e.disable && e.disable()
            });
            if (this.enabled() && (this.off(["mousedown", "touchstart"], this.handleMouseDownHandler_),
            this.off(this.el_, "mousemove", this.handleMouseMove),
            this.removeListenersAddedOnMousedownAndTouchstart(),
            this.addClass("disabled"),
            this.enabled_ = !1,
            this.player_.scrubbing())) {
                var a = this.getChild("seekBar");
                this.player_.scrubbing(!1);
                a.videoWasPlaying && Gb(this.player_.play())
            }
        }
        ;
        b.enable = function() {
            this.children().forEach(function(a) {
                return a.enable && a.enable()
            });
            this.enabled() || (this.on(["mousedown", "touchstart"], this.handleMouseDownHandler_),
            this.on(this.el_, "mousemove", this.handleMouseMove),
            this.removeClass("disabled"),
            this.enabled_ = !0)
        }
        ;
        b.removeListenersAddedOnMousedownAndTouchstart = function() {
            var a = this.el_.ownerDocument;
            this.off(a, "mousemove", this.throttledHandleMouseSeek);
            this.off(a, "touchmove", this.throttledHandleMouseSeek);
            this.off(a, "mouseup", this.handleMouseUpHandler_);
            this.off(a, "touchend", this.handleMouseUpHandler_)
        }
        ;
        b.handleMouseDown = function(a) {
            var e = this.el_.ownerDocument
              , l = this.getChild("seekBar");
            l && l.handleMouseDown(a);
            this.on(e, "mousemove", this.throttledHandleMouseSeek);
            this.on(e, "touchmove", this.throttledHandleMouseSeek);
            this.on(e, "mouseup", this.handleMouseUpHandler_);
            this.on(e, "touchend", this.handleMouseUpHandler_)
        }
        ;
        b.handleMouseUp = function(a) {
            var e = this.getChild("seekBar");
            e && e.handleMouseUp(a);
            this.removeListenersAddedOnMousedownAndTouchstart()
        }
        ;
        return c
    }(aa);
    Ci.prototype.options_ = {
        children: ["seekBar"]
    };
    aa.registerComponent("ProgressControl", Ci);
    var Di = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.on(a, ["enterpictureinpicture", "leavepictureinpicture"], function(h) {
                return l.handlePictureInPictureChange(h)
            });
            l.on(a, ["disablepictureinpicturechanged", "loadedmetadata"], function(h) {
                return l.handlePictureInPictureEnabledChange(h)
            });
            l.on(a, ["loadedmetadata", "audioonlymodechange", "audiopostermodechange"], function() {
                "audio" === a.currentType().substring(0, 5) || a.audioPosterMode() || a.audioOnlyMode() ? (a.isInPictureInPicture() && a.exitPictureInPicture(),
                l.hide()) : l.show()
            });
            l.disable();
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-picture-in-picture-control " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.handlePictureInPictureEnabledChange = function() {
            document.pictureInPictureEnabled && !1 === this.player_.disablePictureInPicture() ? this.enable() : this.disable()
        }
        ;
        b.handlePictureInPictureChange = function(a) {
            this.player_.isInPictureInPicture() ? this.controlText("Exit Picture-in-Picture") : this.controlText("Picture-in-Picture");
            this.handlePictureInPictureEnabledChange()
        }
        ;
        b.handleClick = function(a) {
            this.player_.isInPictureInPicture() ? this.player_.exitPictureInPicture() : this.player_.requestPictureInPicture()
        }
        ;
        return c
    }(Ab);
    Di.prototype.controlText_ = "Picture-in-Picture";
    aa.registerComponent("PictureInPictureToggle", Di);
    var Ei = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.on(a, "fullscreenchange", function(h) {
                return l.handleFullscreenChange(h)
            });
            !1 === document[a.fsApi_.fullscreenEnabled] && l.disable();
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-fullscreen-control " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.handleFullscreenChange = function(a) {
            this.player_.isFullscreen() ? this.controlText("Non-Fullscreen") : this.controlText("Fullscreen")
        }
        ;
        b.handleClick = function(a) {
            this.player_.isFullscreen() ? this.player_.exitFullscreen() : this.player_.requestFullscreen()
        }
        ;
        return c
    }(Ab);
    Ei.prototype.controlText_ = "Fullscreen";
    aa.registerComponent("FullscreenToggle", Ei);
    var Bm = function(d, c) {
        c.tech_ && !c.tech_.featuresVolumeControl && d.addClass("vjs-hidden");
        d.on(c, "loadstart", function() {
            c.tech_.featuresVolumeControl ? d.removeClass("vjs-hidden") : d.addClass("vjs-hidden")
        })
    }
      , Cm = function(d) {
        function c() {
            return d.apply(this, arguments) || this
        }
        ia(c, d);
        c.prototype.createEl = function() {
            var b = d.prototype.createEl.call(this, "div", {
                className: "vjs-volume-level"
            });
            b.appendChild(d.prototype.createEl.call(this, "span", {
                className: "vjs-control-text"
            }));
            return b
        }
        ;
        return c
    }(aa);
    aa.registerComponent("VolumeLevel", Cm);
    var Dm = function(d) {
        function c(a, e) {
            a = d.call(this, a, e) || this;
            a.update = Vb(Fa(sa(a), a.update), 30);
            return a
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-volume-tooltip"
            }, {
                "aria-hidden": "true"
            })
        }
        ;
        b.update = function(a, e, l, h) {
            if (!l) {
                l = tc(this.el_);
                var g = tc(this.player_.el())
                  , q = a.width * e;
                if (!g || !l)
                    return;
                e = a.left - g.left + q;
                a = a.width - q + (g.right - a.right);
                g = l.width / 2;
                e < g ? g += g - e : a < g && (g = a);
                0 > g ? g = 0 : g > l.width && (g = l.width);
                this.el_.style.right = "-" + g + "px"
            }
            this.write(h + "%")
        }
        ;
        b.write = function(a) {
            yb(this.el_, a)
        }
        ;
        b.updateVolume = function(a, e, l, h, g) {
            var q = this;
            this.requestNamedAnimationFrame("VolumeLevelTooltip#updateVolume", function() {
                q.update(a, e, l, h.toFixed(0));
                g && g()
            })
        }
        ;
        return c
    }(aa);
    aa.registerComponent("VolumeLevelTooltip", Dm);
    var Fi = function(d) {
        function c(a, e) {
            a = d.call(this, a, e) || this;
            a.update = Vb(Fa(sa(a), a.update), 30);
            return a
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-mouse-display"
            })
        }
        ;
        b.update = function(a, e, l) {
            var h = this
              , g = 100 * e;
            this.getChild("volumeLevelTooltip").updateVolume(a, e, l, g, function() {
                l ? h.el_.style.bottom = a.height * e + "px" : h.el_.style.left = a.width * e + "px"
            })
        }
        ;
        return c
    }(aa);
    Fi.prototype.options_ = {
        children: ["volumeLevelTooltip"]
    };
    aa.registerComponent("MouseVolumeLevelDisplay", Fi);
    var fe = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.on("slideractive", function(h) {
                return l.updateLastVolume_(h)
            });
            l.on(a, "volumechange", function(h) {
                return l.updateARIAAttributes(h)
            });
            a.ready(function() {
                return l.updateARIAAttributes()
            });
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-volume-bar vjs-slider-bar"
            }, {
                "aria-label": this.localize("Volume Level"),
                "aria-live": "polite"
            })
        }
        ;
        b.handleMouseDown = function(a) {
            $c(a) && d.prototype.handleMouseDown.call(this, a)
        }
        ;
        b.handleMouseMove = function(a) {
            var e = this.getChild("mouseVolumeLevelDisplay");
            if (e) {
                var l = this.el()
                  , h = tc(l)
                  , g = this.vertical();
                l = Id(l, a);
                l = g ? l.y : l.x;
                l = Mc(l, 0, 1);
                e.update(h, l, g)
            }
            $c(a) && (this.checkMuted(),
            this.player_.volume(this.calculateDistance(a)))
        }
        ;
        b.checkMuted = function() {
            this.player_.muted() && this.player_.muted(!1)
        }
        ;
        b.getPercent = function() {
            return this.player_.muted() ? 0 : this.player_.volume()
        }
        ;
        b.stepForward = function() {
            this.checkMuted();
            this.player_.volume(this.player_.volume() + .1)
        }
        ;
        b.stepBack = function() {
            this.checkMuted();
            this.player_.volume(this.player_.volume() - .1)
        }
        ;
        b.updateARIAAttributes = function(a) {
            a = this.player_.muted() ? 0 : this.volumeAsPercentage_();
            this.el_.setAttribute("aria-valuenow", a);
            this.el_.setAttribute("aria-valuetext", a + "%")
        }
        ;
        b.volumeAsPercentage_ = function() {
            return Math.round(100 * this.player_.volume())
        }
        ;
        b.updateLastVolume_ = function() {
            var a = this
              , e = this.player_.volume();
            this.one("sliderinactive", function() {
                0 === a.player_.volume() && a.player_.lastVolume_(e)
            })
        }
        ;
        return c
    }(Kf);
    fe.prototype.options_ = {
        children: ["volumeLevel"],
        barName: "volumeLevel"
    };
    cb || Tb || fe.prototype.options_.children.splice(0, 0, "mouseVolumeLevelDisplay");
    fe.prototype.playerEvent = "volumechange";
    aa.registerComponent("VolumeBar", fe);
    var Gi = function(d) {
        function c(a, e) {
            void 0 === e && (e = {});
            e.vertical = e.vertical || !1;
            if ("undefined" === typeof e.volumeBar || Z(e.volumeBar))
                e.volumeBar = e.volumeBar || {},
                e.volumeBar.vertical = e.vertical;
            var l = d.call(this, a, e) || this;
            Bm(sa(l), a);
            l.throttledHandleMouseMove = Vb(Fa(sa(l), l.handleMouseMove), 30);
            l.handleMouseUpHandler_ = function(h) {
                return l.handleMouseUp(h)
            }
            ;
            l.on("mousedown", function(h) {
                return l.handleMouseDown(h)
            });
            l.on("touchstart", function(h) {
                return l.handleMouseDown(h)
            });
            l.on("mousemove", function(h) {
                return l.handleMouseMove(h)
            });
            l.on(l.volumeBar, ["focus", "slideractive"], function() {
                l.volumeBar.addClass("vjs-slider-active");
                l.addClass("vjs-slider-active");
                l.trigger("slideractive")
            });
            l.on(l.volumeBar, ["blur", "sliderinactive"], function() {
                l.volumeBar.removeClass("vjs-slider-active");
                l.removeClass("vjs-slider-active");
                l.trigger("sliderinactive")
            });
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            var a = "vjs-volume-horizontal";
            this.options_.vertical && (a = "vjs-volume-vertical");
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-volume-control vjs-control " + a
            })
        }
        ;
        b.handleMouseDown = function(a) {
            a = this.el_.ownerDocument;
            this.on(a, "mousemove", this.throttledHandleMouseMove);
            this.on(a, "touchmove", this.throttledHandleMouseMove);
            this.on(a, "mouseup", this.handleMouseUpHandler_);
            this.on(a, "touchend", this.handleMouseUpHandler_)
        }
        ;
        b.handleMouseUp = function(a) {
            a = this.el_.ownerDocument;
            this.off(a, "mousemove", this.throttledHandleMouseMove);
            this.off(a, "touchmove", this.throttledHandleMouseMove);
            this.off(a, "mouseup", this.handleMouseUpHandler_);
            this.off(a, "touchend", this.handleMouseUpHandler_)
        }
        ;
        b.handleMouseMove = function(a) {
            this.volumeBar.handleMouseMove(a)
        }
        ;
        return c
    }(aa);
    Gi.prototype.options_ = {
        children: ["volumeBar"]
    };
    aa.registerComponent("VolumeControl", Gi);
    var Em = function(d, c) {
        c.tech_ && !c.tech_.featuresMuteControl && d.addClass("vjs-hidden");
        d.on(c, "loadstart", function() {
            c.tech_.featuresMuteControl ? d.removeClass("vjs-hidden") : d.addClass("vjs-hidden")
        })
    }
      , Hi = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            Em(sa(l), a);
            l.on(a, ["loadstart", "volumechange"], function(h) {
                return l.update(h)
            });
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-mute-control " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.handleClick = function(a) {
            a = this.player_.volume();
            var e = this.player_.lastVolume_();
            0 === a ? (this.player_.volume(.1 > e ? .1 : e),
            this.player_.muted(!1)) : this.player_.muted(this.player_.muted() ? !1 : !0)
        }
        ;
        b.update = function(a) {
            this.updateIcon_();
            this.updateControlText_()
        }
        ;
        b.updateIcon_ = function() {
            var a = this.player_.volume()
              , e = 3;
            cb && this.player_.tech_ && this.player_.tech_.el_ && this.player_.muted(this.player_.tech_.el_.muted);
            0 === a || this.player_.muted() ? e = 0 : .33 > a ? e = 1 : .67 > a && (e = 2);
            for (a = 0; 4 > a; a++)
                Yc(this.el_, "vjs-vol-" + a);
            Mb(this.el_, "vjs-vol-" + e)
        }
        ;
        b.updateControlText_ = function() {
            var a = this.player_.muted() || 0 === this.player_.volume() ? "Unmute" : "Mute";
            this.controlText() !== a && this.controlText(a)
        }
        ;
        return c
    }(Ab);
    Hi.prototype.controlText_ = "Mute";
    aa.registerComponent("MuteToggle", Hi);
    var Ii = function(d) {
        function c(a, e) {
            void 0 === e && (e = {});
            e.inline = "undefined" !== typeof e.inline ? e.inline : !0;
            if ("undefined" === typeof e.volumeControl || Z(e.volumeControl))
                e.volumeControl = e.volumeControl || {},
                e.volumeControl.vertical = !e.inline;
            var l = d.call(this, a, e) || this;
            l.handleKeyPressHandler_ = function(h) {
                return l.handleKeyPress(h)
            }
            ;
            l.on(a, ["loadstart"], function(h) {
                return l.volumePanelState_(h)
            });
            l.on(l.muteToggle, "keyup", function(h) {
                return l.handleKeyPress(h)
            });
            l.on(l.volumeControl, "keyup", function(h) {
                return l.handleVolumeControlKeyUp(h)
            });
            l.on("keydown", function(h) {
                return l.handleKeyPress(h)
            });
            l.on("mouseover", function(h) {
                return l.handleMouseOver(h)
            });
            l.on("mouseout", function(h) {
                return l.handleMouseOut(h)
            });
            l.on(l.volumeControl, ["slideractive"], l.sliderActive_);
            l.on(l.volumeControl, ["sliderinactive"], l.sliderInactive_);
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.sliderActive_ = function() {
            this.addClass("vjs-slider-active")
        }
        ;
        b.sliderInactive_ = function() {
            this.removeClass("vjs-slider-active")
        }
        ;
        b.volumePanelState_ = function() {
            this.volumeControl.hasClass("vjs-hidden") && this.muteToggle.hasClass("vjs-hidden") && this.addClass("vjs-hidden");
            this.volumeControl.hasClass("vjs-hidden") && !this.muteToggle.hasClass("vjs-hidden") && this.addClass("vjs-mute-toggle-only")
        }
        ;
        b.createEl = function() {
            var a = "vjs-volume-panel-horizontal";
            this.options_.inline || (a = "vjs-volume-panel-vertical");
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-volume-panel vjs-control " + a
            })
        }
        ;
        b.dispose = function() {
            this.handleMouseOut();
            d.prototype.dispose.call(this)
        }
        ;
        b.handleVolumeControlKeyUp = function(a) {
            ra.isEventKey(a, "Esc") && this.muteToggle.focus()
        }
        ;
        b.handleMouseOver = function(a) {
            this.addClass("vjs-hover");
            rb(document, "keyup", this.handleKeyPressHandler_)
        }
        ;
        b.handleMouseOut = function(a) {
            this.removeClass("vjs-hover");
            Za(document, "keyup", this.handleKeyPressHandler_)
        }
        ;
        b.handleKeyPress = function(a) {
            ra.isEventKey(a, "Esc") && this.handleMouseOut()
        }
        ;
        return c
    }(aa);
    Ii.prototype.options_ = {
        children: ["muteToggle", "volumeControl"]
    };
    aa.registerComponent("VolumePanel", Ii);
    var Ji = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            e && (l.menuButton_ = e.menuButton);
            l.focusedChild_ = -1;
            l.on("keydown", function(h) {
                return l.handleKeyDown(h)
            });
            l.boundHandleBlur_ = function(h) {
                return l.handleBlur(h)
            }
            ;
            l.boundHandleTapClick_ = function(h) {
                return l.handleTapClick(h)
            }
            ;
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.addEventListenerForItem = function(a) {
            a instanceof aa && (this.on(a, "blur", this.boundHandleBlur_),
            this.on(a, ["tap", "click"], this.boundHandleTapClick_))
        }
        ;
        b.removeEventListenerForItem = function(a) {
            a instanceof aa && (this.off(a, "blur", this.boundHandleBlur_),
            this.off(a, ["tap", "click"], this.boundHandleTapClick_))
        }
        ;
        b.removeChild = function(a) {
            "string" === typeof a && (a = this.getChild(a));
            this.removeEventListenerForItem(a);
            d.prototype.removeChild.call(this, a)
        }
        ;
        b.addItem = function(a) {
            (a = this.addChild(a)) && this.addEventListenerForItem(a)
        }
        ;
        b.createEl = function() {
            this.contentEl_ = ta(this.options_.contentElType || "ul", {
                className: "vjs-menu-content"
            });
            this.contentEl_.setAttribute("role", "menu");
            var a = d.prototype.createEl.call(this, "div", {
                append: this.contentEl_,
                className: "vjs-menu"
            });
            a.appendChild(this.contentEl_);
            rb(a, "click", function(e) {
                e.preventDefault();
                e.stopImmediatePropagation()
            });
            return a
        }
        ;
        b.dispose = function() {
            this.boundHandleTapClick_ = this.boundHandleBlur_ = this.contentEl_ = null;
            d.prototype.dispose.call(this)
        }
        ;
        b.handleBlur = function(a) {
            var e = a.relatedTarget || document.activeElement;
            this.children().some(function(l) {
                return l.el() === e
            }) || (a = this.menuButton_) && a.buttonPressed_ && e !== a.el().firstChild && a.unpressButton()
        }
        ;
        b.handleTapClick = function(a) {
            if (this.menuButton_) {
                this.menuButton_.unpressButton();
                var e = this.children();
                Array.isArray(e) && (e = e.filter(function(l) {
                    return l.el() === a.target
                })[0]) && "CaptionSettingsMenuItem" !== e.name() && this.menuButton_.focus()
            }
        }
        ;
        b.handleKeyDown = function(a) {
            if (ra.isEventKey(a, "Left") || ra.isEventKey(a, "Down"))
                a.preventDefault(),
                a.stopPropagation(),
                this.stepForward();
            else if (ra.isEventKey(a, "Right") || ra.isEventKey(a, "Up"))
                a.preventDefault(),
                a.stopPropagation(),
                this.stepBack()
        }
        ;
        b.stepForward = function() {
            var a = 0;
            void 0 !== this.focusedChild_ && (a = this.focusedChild_ + 1);
            this.focus(a)
        }
        ;
        b.stepBack = function() {
            var a = 0;
            void 0 !== this.focusedChild_ && (a = this.focusedChild_ - 1);
            this.focus(a)
        }
        ;
        b.focus = function(a) {
            void 0 === a && (a = 0);
            var e = this.children().slice();
            e.length && e[0].hasClass("vjs-menu-title") && e.shift();
            0 < e.length && (0 > a ? a = 0 : a >= e.length && (a = e.length - 1),
            this.focusedChild_ = a,
            e[a].el_.focus())
        }
        ;
        return c
    }(aa);
    aa.registerComponent("Menu", Ji);
    var Nf = function(d) {
        function c(a, e) {
            void 0 === e && (e = {});
            var l = d.call(this, a, e) || this;
            l.menuButton_ = new Ab(a,e);
            l.menuButton_.controlText(l.controlText_);
            l.menuButton_.el_.setAttribute("aria-haspopup", "true");
            a = Ab.prototype.buildCSSClass();
            l.menuButton_.el_.className = l.buildCSSClass() + " " + a;
            l.menuButton_.removeClass("vjs-control");
            l.addChild(l.menuButton_);
            l.update();
            l.enabled_ = !0;
            a = function(h) {
                return l.handleClick(h)
            }
            ;
            l.handleMenuKeyUp_ = function(h) {
                return l.handleMenuKeyUp(h)
            }
            ;
            l.on(l.menuButton_, "tap", a);
            l.on(l.menuButton_, "click", a);
            l.on(l.menuButton_, "keydown", function(h) {
                return l.handleKeyDown(h)
            });
            l.on(l.menuButton_, "mouseenter", function() {
                l.addClass("vjs-hover");
                l.menu.show();
                rb(document, "keyup", l.handleMenuKeyUp_)
            });
            l.on("mouseleave", function(h) {
                return l.handleMouseLeave(h)
            });
            l.on("keydown", function(h) {
                return l.handleSubmenuKeyDown(h)
            });
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.update = function() {
            var a = this.createMenu();
            this.menu && (this.menu.dispose(),
            this.removeChild(this.menu));
            this.menu = a;
            this.addChild(a);
            this.buttonPressed_ = !1;
            this.menuButton_.el_.setAttribute("aria-expanded", "false");
            this.items && this.items.length <= this.hideThreshold_ ? (this.hide(),
            this.menu.contentEl_.removeAttribute("role")) : (this.show(),
            this.menu.contentEl_.setAttribute("role", "menu"))
        }
        ;
        b.createMenu = function() {
            var a = new Ji(this.player_,{
                menuButton: this
            });
            this.hideThreshold_ = 0;
            if (this.options_.title) {
                var e = ta("li", {
                    className: "vjs-menu-title",
                    textContent: Ka(this.options_.title),
                    tabIndex: -1
                });
                e = new aa(this.player_,{
                    el: e
                });
                a.addItem(e)
            }
            if (this.items = this.createItems())
                for (e = 0; e < this.items.length; e++)
                    a.addItem(this.items[e]);
            return a
        }
        ;
        b.createItems = function() {}
        ;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: this.buildWrapperCSSClass()
            }, {})
        }
        ;
        b.buildWrapperCSSClass = function() {
            var a = "vjs-menu-button";
            a = !0 === this.options_.inline ? a + "-inline" : a + "-popup";
            var e = Ab.prototype.buildCSSClass();
            return "vjs-menu-button " + a + " " + e + " " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.buildCSSClass = function() {
            var a = "vjs-menu-button";
            a = !0 === this.options_.inline ? a + "-inline" : a + "-popup";
            return "vjs-menu-button " + a + " " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.controlText = function(a, e) {
            void 0 === e && (e = this.menuButton_.el());
            return this.menuButton_.controlText(a, e)
        }
        ;
        b.dispose = function() {
            this.handleMouseLeave();
            d.prototype.dispose.call(this)
        }
        ;
        b.handleClick = function(a) {
            this.buttonPressed_ ? this.unpressButton() : this.pressButton()
        }
        ;
        b.handleMouseLeave = function(a) {
            this.removeClass("vjs-hover");
            Za(document, "keyup", this.handleMenuKeyUp_)
        }
        ;
        b.focus = function() {
            this.menuButton_.focus()
        }
        ;
        b.blur = function() {
            this.menuButton_.blur()
        }
        ;
        b.handleKeyDown = function(a) {
            ra.isEventKey(a, "Esc") || ra.isEventKey(a, "Tab") ? (this.buttonPressed_ && this.unpressButton(),
            ra.isEventKey(a, "Tab") || (a.preventDefault(),
            this.menuButton_.focus())) : !ra.isEventKey(a, "Up") && !ra.isEventKey(a, "Down") || this.buttonPressed_ || (a.preventDefault(),
            this.pressButton())
        }
        ;
        b.handleMenuKeyUp = function(a) {
            (ra.isEventKey(a, "Esc") || ra.isEventKey(a, "Tab")) && this.removeClass("vjs-hover")
        }
        ;
        b.handleSubmenuKeyPress = function(a) {
            this.handleSubmenuKeyDown(a)
        }
        ;
        b.handleSubmenuKeyDown = function(a) {
            if (ra.isEventKey(a, "Esc") || ra.isEventKey(a, "Tab"))
                this.buttonPressed_ && this.unpressButton(),
                ra.isEventKey(a, "Tab") || (a.preventDefault(),
                this.menuButton_.focus())
        }
        ;
        b.pressButton = function() {
            this.enabled_ && (this.buttonPressed_ = !0,
            this.menu.show(),
            this.menu.lockShowing(),
            this.menuButton_.el_.setAttribute("aria-expanded", "true"),
            cb && ua() || this.menu.focus())
        }
        ;
        b.unpressButton = function() {
            this.enabled_ && (this.buttonPressed_ = !1,
            this.menu.unlockShowing(),
            this.menu.hide(),
            this.menuButton_.el_.setAttribute("aria-expanded", "false"))
        }
        ;
        b.disable = function() {
            this.unpressButton();
            this.enabled_ = !1;
            this.addClass("vjs-disabled");
            this.menuButton_.disable()
        }
        ;
        b.enable = function() {
            this.enabled_ = !0;
            this.removeClass("vjs-disabled");
            this.menuButton_.enable()
        }
        ;
        return c
    }(aa);
    aa.registerComponent("MenuButton", Nf);
    var Of = function(d) {
        function c(b, a) {
            var e = a.tracks;
            b = d.call(this, b, a) || this;
            1 >= b.items.length && b.hide();
            if (!e)
                return sa(b);
            var l = Fa(sa(b), b.update);
            e.addEventListener("removetrack", l);
            e.addEventListener("addtrack", l);
            e.addEventListener("labelchange", l);
            b.player_.on("ready", l);
            b.player_.on("dispose", function() {
                e.removeEventListener("removetrack", l);
                e.removeEventListener("addtrack", l);
                e.removeEventListener("labelchange", l)
            });
            return b
        }
        ia(c, d);
        return c
    }(Nf);
    aa.registerComponent("TrackButton", Of);
    var Fm = "Tab Esc Up Down Right Left".split(" ")
      , pd = function(d) {
        function c(a, e) {
            a = d.call(this, a, e) || this;
            a.selectable = e.selectable;
            a.isSelected_ = e.selected || !1;
            a.multiSelectable = e.multiSelectable;
            a.selected(a.isSelected_);
            a.selectable ? a.multiSelectable ? a.el_.setAttribute("role", "menuitemcheckbox") : a.el_.setAttribute("role", "menuitemradio") : a.el_.setAttribute("role", "menuitem");
            return a
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function(a, e, l) {
            this.nonIconControl = !0;
            a = d.prototype.createEl.call(this, "li", W({
                className: "vjs-menu-item",
                tabIndex: -1
            }, e), l);
            a.replaceChild(ta("span", {
                className: "vjs-menu-item-text",
                textContent: this.localize(this.options_.label)
            }), a.querySelector(".vjs-icon-placeholder"));
            return a
        }
        ;
        b.handleKeyDown = function(a) {
            Fm.some(function(e) {
                return ra.isEventKey(a, e)
            }) || d.prototype.handleKeyDown.call(this, a)
        }
        ;
        b.handleClick = function(a) {
            this.selected(!0)
        }
        ;
        b.selected = function(a) {
            this.selectable && (a ? (this.addClass("vjs-selected"),
            this.el_.setAttribute("aria-checked", "true"),
            this.controlText(", selected"),
            this.isSelected_ = !0) : (this.removeClass("vjs-selected"),
            this.el_.setAttribute("aria-checked", "false"),
            this.controlText(""),
            this.isSelected_ = !1))
        }
        ;
        return c
    }(ee);
    aa.registerComponent("MenuItem", pd);
    var qd = function(d) {
        function c(a, e) {
            var l = e.track
              , h = a.textTracks();
            e.label = l.label || l.language || "Unknown";
            e.selected = "showing" === l.mode;
            var g = d.call(this, a, e) || this;
            g.track = l;
            g.kinds = (e.kinds || [e.kind || g.track.kind]).filter(Boolean);
            var q = function() {
                for (var m = arguments.length, k = Array(m), r = 0; r < m; r++)
                    k[r] = arguments[r];
                g.handleTracksChange.apply(sa(g), k)
            }
              , p = function() {
                for (var m = arguments.length, k = Array(m), r = 0; r < m; r++)
                    k[r] = arguments[r];
                g.handleSelectedLanguageChange.apply(sa(g), k)
            };
            a.on(["loadstart", "texttrackchange"], q);
            h.addEventListener("change", q);
            h.addEventListener("selectedlanguagechange", p);
            g.on("dispose", function() {
                a.off(["loadstart", "texttrackchange"], q);
                h.removeEventListener("change", q);
                h.removeEventListener("selectedlanguagechange", p)
            });
            if (void 0 === h.onchange) {
                var f;
                g.on(["tap", "click"], function() {
                    if ("object" !== typeof window.Event)
                        try {
                            f = new window.Event("change")
                        } catch (m) {}
                    f || (f = document.createEvent("Event"),
                    f.initEvent("change", !0, !0));
                    h.dispatchEvent(f)
                })
            }
            g.handleTracksChange();
            return g
        }
        ia(c, d);
        var b = c.prototype;
        b.handleClick = function(a) {
            var e = this.track
              , l = this.player_.textTracks();
            d.prototype.handleClick.call(this, a);
            if (l)
                for (a = 0; a < l.length; a++) {
                    var h = l[a];
                    -1 !== this.kinds.indexOf(h.kind) && (h === e ? "showing" !== h.mode && (h.mode = "showing") : "disabled" !== h.mode && (h.mode = "disabled"))
                }
        }
        ;
        b.handleTracksChange = function(a) {
            a = "showing" === this.track.mode;
            a !== this.isSelected_ && this.selected(a)
        }
        ;
        b.handleSelectedLanguageChange = function(a) {
            "showing" === this.track.mode && (a = this.player_.cache_.selectedLanguage,
            a && a.enabled && a.language === this.track.language && a.kind !== this.track.kind || (this.player_.cache_.selectedLanguage = {
                enabled: !0,
                language: this.track.language,
                kind: this.track.kind
            }))
        }
        ;
        b.dispose = function() {
            this.track = null;
            d.prototype.dispose.call(this)
        }
        ;
        return c
    }(pd);
    aa.registerComponent("TextTrackMenuItem", qd);
    var Ki = function(d) {
        function c(a, e) {
            e.track = {
                player: a,
                kind: e.kind,
                kinds: e.kinds,
                "default": !1,
                mode: "disabled"
            };
            e.kinds || (e.kinds = [e.kind]);
            e.track.label = e.label ? e.label : e.kinds.join(" and ") + " off";
            e.selectable = !0;
            e.multiSelectable = !1;
            return d.call(this, a, e) || this
        }
        ia(c, d);
        var b = c.prototype;
        b.handleTracksChange = function(a) {
            a = this.player().textTracks();
            for (var e = !0, l = 0, h = a.length; l < h; l++) {
                var g = a[l];
                if (-1 < this.options_.kinds.indexOf(g.kind) && "showing" === g.mode) {
                    e = !1;
                    break
                }
            }
            e !== this.isSelected_ && this.selected(e)
        }
        ;
        b.handleSelectedLanguageChange = function(a) {
            a = this.player().textTracks();
            for (var e = !0, l = 0, h = a.length; l < h; l++) {
                var g = a[l];
                if (-1 < ["captions", "descriptions", "subtitles"].indexOf(g.kind) && "showing" === g.mode) {
                    e = !1;
                    break
                }
            }
            e && (this.player_.cache_.selectedLanguage = {
                enabled: !1
            })
        }
        ;
        return c
    }(qd);
    aa.registerComponent("OffTextTrackMenuItem", Ki);
    var Nc = function(d) {
        function c(b, a) {
            void 0 === a && (a = {});
            a.tracks = b.textTracks();
            return d.call(this, b, a) || this
        }
        ia(c, d);
        c.prototype.createItems = function(b, a) {
            void 0 === b && (b = []);
            void 0 === a && (a = qd);
            var e;
            this.label_ && (e = this.label_ + " off");
            b.push(new Ki(this.player_,{
                kinds: this.kinds_,
                kind: this.kind_,
                label: e
            }));
            this.hideThreshold_ += 1;
            e = this.player_.textTracks();
            Array.isArray(this.kinds_) || (this.kinds_ = [this.kind_]);
            for (var l = 0; l < e.length; l++) {
                var h = e[l];
                if (-1 < this.kinds_.indexOf(h.kind)) {
                    var g = new a(this.player_,{
                        track: h,
                        kinds: this.kinds_,
                        kind: this.kind_,
                        selectable: !0,
                        multiSelectable: !1
                    });
                    g.addClass("vjs-" + h.kind + "-menu-item");
                    b.push(g)
                }
            }
            return b
        }
        ;
        return c
    }(Of);
    aa.registerComponent("TextTrackButton", Nc);
    var Li = function(d) {
        function c(b, a) {
            var e = a.track
              , l = a.cue
              , h = b.currentTime();
            a.selectable = !0;
            a.multiSelectable = !1;
            a.label = l.text;
            a.selected = l.startTime <= h && h < l.endTime;
            b = d.call(this, b, a) || this;
            b.track = e;
            b.cue = l;
            return b
        }
        ia(c, d);
        c.prototype.handleClick = function(b) {
            d.prototype.handleClick.call(this);
            this.player_.currentTime(this.cue.startTime)
        }
        ;
        return c
    }(pd);
    aa.registerComponent("ChaptersTrackMenuItem", Li);
    var Pf = function(d) {
        function c(a, e, l) {
            var h = d.call(this, a, e, l) || this;
            h.selectCurrentItem_ = function() {
                h.items.forEach(function(g) {
                    g.selected(h.track_.activeCues[0] === g.cue)
                })
            }
            ;
            return h
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-chapters-button " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.buildWrapperCSSClass = function() {
            return "vjs-chapters-button " + d.prototype.buildWrapperCSSClass.call(this)
        }
        ;
        b.update = function(a) {
            a && a.track && "chapters" !== a.track.kind || (a = this.findChaptersTrack(),
            a !== this.track_ ? (this.setTrack(a),
            d.prototype.update.call(this)) : (!this.items || a && a.cues && a.cues.length !== this.items.length) && d.prototype.update.call(this))
        }
        ;
        b.setTrack = function(a) {
            if (this.track_ !== a) {
                this.updateHandler_ || (this.updateHandler_ = this.update.bind(this));
                if (this.track_) {
                    var e = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
                    e && e.removeEventListener("load", this.updateHandler_);
                    this.track_.removeEventListener("cuechange", this.selectCurrentItem_);
                    this.track_ = null
                }
                if (this.track_ = a)
                    this.track_.mode = "hidden",
                    (a = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_)) && a.addEventListener("load", this.updateHandler_),
                    this.track_.addEventListener("cuechange", this.selectCurrentItem_)
            }
        }
        ;
        b.findChaptersTrack = function() {
            for (var a = this.player_.textTracks() || [], e = a.length - 1; 0 <= e; e--) {
                var l = a[e];
                if (l.kind === this.kind_)
                    return l
            }
        }
        ;
        b.getMenuCaption = function() {
            return this.track_ && this.track_.label ? this.track_.label : this.localize(Ka(this.kind_))
        }
        ;
        b.createMenu = function() {
            this.options_.title = this.getMenuCaption();
            return d.prototype.createMenu.call(this)
        }
        ;
        b.createItems = function() {
            var a = [];
            if (!this.track_)
                return a;
            var e = this.track_.cues;
            if (!e)
                return a;
            for (var l = 0, h = e.length; l < h; l++) {
                var g = new Li(this.player_,{
                    track: this.track_,
                    cue: e[l]
                });
                a.push(g)
            }
            return a
        }
        ;
        return c
    }(Nc);
    Pf.prototype.kind_ = "chapters";
    Pf.prototype.controlText_ = "Chapters";
    aa.registerComponent("ChaptersButton", Pf);
    var Qf = function(d) {
        function c(a, e, l) {
            e = d.call(this, a, e, l) || this;
            var h = a.textTracks()
              , g = Fa(sa(e), e.handleTracksChange);
            h.addEventListener("change", g);
            e.on("dispose", function() {
                h.removeEventListener("change", g)
            });
            return e
        }
        ia(c, d);
        var b = c.prototype;
        b.handleTracksChange = function(a) {
            a = this.player().textTracks();
            for (var e = !1, l = 0, h = a.length; l < h; l++) {
                var g = a[l];
                if (g.kind !== this.kind_ && "showing" === g.mode) {
                    e = !0;
                    break
                }
            }
            e ? this.disable() : this.enable()
        }
        ;
        b.buildCSSClass = function() {
            return "vjs-descriptions-button " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.buildWrapperCSSClass = function() {
            return "vjs-descriptions-button " + d.prototype.buildWrapperCSSClass.call(this)
        }
        ;
        return c
    }(Nc);
    Qf.prototype.kind_ = "descriptions";
    Qf.prototype.controlText_ = "Descriptions";
    aa.registerComponent("DescriptionsButton", Qf);
    var Rf = function(d) {
        function c(a, e, l) {
            return d.call(this, a, e, l) || this
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-subtitles-button " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.buildWrapperCSSClass = function() {
            return "vjs-subtitles-button " + d.prototype.buildWrapperCSSClass.call(this)
        }
        ;
        return c
    }(Nc);
    Rf.prototype.kind_ = "subtitles";
    Rf.prototype.controlText_ = "Subtitles";
    aa.registerComponent("SubtitlesButton", Rf);
    var Sf = function(d) {
        function c(b, a) {
            a.track = {
                player: b,
                kind: a.kind,
                label: a.kind + " settings",
                selectable: !1,
                "default": !1,
                mode: "disabled"
            };
            a.selectable = !1;
            a.name = "CaptionSettingsMenuItem";
            b = d.call(this, b, a) || this;
            b.addClass("vjs-texttrack-settings");
            b.controlText(", opens " + a.kind + " settings dialog");
            return b
        }
        ia(c, d);
        c.prototype.handleClick = function(b) {
            this.player().getChild("textTrackSettings").open()
        }
        ;
        return c
    }(qd);
    aa.registerComponent("CaptionSettingsMenuItem", Sf);
    var Tf = function(d) {
        function c(a, e, l) {
            return d.call(this, a, e, l) || this
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-captions-button " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.buildWrapperCSSClass = function() {
            return "vjs-captions-button " + d.prototype.buildWrapperCSSClass.call(this)
        }
        ;
        b.createItems = function() {
            var a = [];
            this.player().tech_ && this.player().tech_.featuresNativeTextTracks || !this.player().getChild("textTrackSettings") || (a.push(new Sf(this.player_,{
                kind: this.kind_
            })),
            this.hideThreshold_ += 1);
            return d.prototype.createItems.call(this, a)
        }
        ;
        return c
    }(Nc);
    Tf.prototype.kind_ = "captions";
    Tf.prototype.controlText_ = "Captions";
    aa.registerComponent("CaptionsButton", Tf);
    var Mi = function(d) {
        function c() {
            return d.apply(this, arguments) || this
        }
        ia(c, d);
        c.prototype.createEl = function(b, a, e) {
            b = d.prototype.createEl.call(this, b, a, e);
            a = b.querySelector(".vjs-menu-item-text");
            "captions" === this.options_.track.kind && (a.appendChild(ta("span", {
                className: "vjs-icon-placeholder"
            }, {
                "aria-hidden": !0
            })),
            a.appendChild(ta("span", {
                className: "vjs-control-text",
                textContent: " " + this.localize("Captions")
            })));
            return b
        }
        ;
        return c
    }(qd);
    aa.registerComponent("SubsCapsMenuItem", Mi);
    var Uf = function(d) {
        function c(a, e) {
            void 0 === e && (e = {});
            a = d.call(this, a, e) || this;
            a.label_ = "subtitles";
            -1 < ["en", "en-us", "en-ca", "fr-ca"].indexOf(a.player_.language_) && (a.label_ = "captions");
            a.menuButton_.controlText(Ka(a.label_));
            return a
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-subs-caps-button " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.buildWrapperCSSClass = function() {
            return "vjs-subs-caps-button " + d.prototype.buildWrapperCSSClass.call(this)
        }
        ;
        b.createItems = function() {
            var a = [];
            this.player().tech_ && this.player().tech_.featuresNativeTextTracks || !this.player().getChild("textTrackSettings") || (a.push(new Sf(this.player_,{
                kind: this.label_
            })),
            this.hideThreshold_ += 1);
            return a = d.prototype.createItems.call(this, a, Mi)
        }
        ;
        return c
    }(Nc);
    Uf.prototype.kinds_ = ["captions", "subtitles"];
    Uf.prototype.controlText_ = "Subtitles";
    aa.registerComponent("SubsCapsButton", Uf);
    var Ni = function(d) {
        function c(a, e) {
            var l = e.track
              , h = a.audioTracks();
            e.label = l.label || l.language || "Unknown";
            e.selected = l.enabled;
            var g = d.call(this, a, e) || this;
            g.track = l;
            g.addClass("vjs-" + l.kind + "-menu-item");
            var q = function() {
                for (var p = arguments.length, f = Array(p), m = 0; m < p; m++)
                    f[m] = arguments[m];
                g.handleTracksChange.apply(sa(g), f)
            };
            h.addEventListener("change", q);
            g.on("dispose", function() {
                h.removeEventListener("change", q)
            });
            return g
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function(a, e, l) {
            a = d.prototype.createEl.call(this, a, e, l);
            e = a.querySelector(".vjs-menu-item-text");
            "main-desc" === this.options_.track.kind && (e.appendChild(ta("span", {
                className: "vjs-icon-placeholder"
            }, {
                "aria-hidden": !0
            })),
            e.appendChild(ta("span", {
                className: "vjs-control-text",
                textContent: " " + this.localize("Descriptions")
            })));
            return a
        }
        ;
        b.handleClick = function(a) {
            d.prototype.handleClick.call(this, a);
            this.track.enabled = !0;
            if (this.player_.tech_.featuresNativeAudioTracks) {
                a = this.player_.audioTracks();
                for (var e = 0; e < a.length; e++) {
                    var l = a[e];
                    l !== this.track && (l.enabled = l === this.track)
                }
            }
        }
        ;
        b.handleTracksChange = function(a) {
            this.selected(this.track.enabled)
        }
        ;
        return c
    }(pd);
    aa.registerComponent("AudioTrackMenuItem", Ni);
    var Oi = function(d) {
        function c(a, e) {
            void 0 === e && (e = {});
            e.tracks = a.audioTracks();
            return d.call(this, a, e) || this
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-audio-button " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.buildWrapperCSSClass = function() {
            return "vjs-audio-button " + d.prototype.buildWrapperCSSClass.call(this)
        }
        ;
        b.createItems = function(a) {
            void 0 === a && (a = []);
            this.hideThreshold_ = 1;
            for (var e = this.player_.audioTracks(), l = 0; l < e.length; l++)
                a.push(new Ni(this.player_,{
                    track: e[l],
                    selectable: !0,
                    multiSelectable: !1
                }));
            return a
        }
        ;
        return c
    }(Of);
    Oi.prototype.controlText_ = "Audio Track";
    aa.registerComponent("AudioTrackButton", Oi);
    var Vf = function(d) {
        function c(a, e) {
            var l = e.rate
              , h = parseFloat(l, 10);
            e.label = l;
            e.selected = h === a.playbackRate();
            e.selectable = !0;
            e.multiSelectable = !1;
            var g = d.call(this, a, e) || this;
            g.label = l;
            g.rate = h;
            g.on(a, "ratechange", function(q) {
                return g.update(q)
            });
            return g
        }
        ia(c, d);
        var b = c.prototype;
        b.handleClick = function(a) {
            d.prototype.handleClick.call(this);
            this.player().playbackRate(this.rate)
        }
        ;
        b.update = function(a) {
            this.selected(this.player().playbackRate() === this.rate)
        }
        ;
        return c
    }(pd);
    Vf.prototype.contentElType = "button";
    aa.registerComponent("PlaybackRateMenuItem", Vf);
    var Pi = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.menuButton_.el_.setAttribute("aria-describedby", l.labelElId_);
            l.updateVisibility();
            l.updateLabel();
            l.on(a, "loadstart", function(h) {
                return l.updateVisibility(h)
            });
            l.on(a, "ratechange", function(h) {
                return l.updateLabel(h)
            });
            l.on(a, "playbackrateschange", function(h) {
                return l.handlePlaybackRateschange(h)
            });
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            var a = d.prototype.createEl.call(this);
            this.labelElId_ = "vjs-playback-rate-value-label-" + this.id_;
            this.labelEl_ = ta("div", {
                className: "vjs-playback-rate-value",
                id: this.labelElId_,
                textContent: "1x"
            });
            a.appendChild(this.labelEl_);
            return a
        }
        ;
        b.dispose = function() {
            this.labelEl_ = null;
            d.prototype.dispose.call(this)
        }
        ;
        b.buildCSSClass = function() {
            return "vjs-playback-rate " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.buildWrapperCSSClass = function() {
            return "vjs-playback-rate " + d.prototype.buildWrapperCSSClass.call(this)
        }
        ;
        b.createItems = function() {
            for (var a = this.playbackRates(), e = [], l = a.length - 1; 0 <= l; l--)
                e.push(new Vf(this.player(),{
                    rate: a[l] + "x"
                }));
            return e
        }
        ;
        b.updateARIAAttributes = function() {
            this.el().setAttribute("aria-valuenow", this.player().playbackRate())
        }
        ;
        b.handleClick = function(a) {
            var e = this.player().playbackRate();
            a = this.playbackRates();
            e = (a.indexOf(e) + 1) % a.length;
            this.player().playbackRate(a[e])
        }
        ;
        b.handlePlaybackRateschange = function(a) {
            this.update()
        }
        ;
        b.playbackRates = function() {
            var a = this.player();
            return a.playbackRates && a.playbackRates() || []
        }
        ;
        b.playbackRateSupported = function() {
            return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && 0 < this.playbackRates().length
        }
        ;
        b.updateVisibility = function(a) {
            this.playbackRateSupported() ? this.removeClass("vjs-hidden") : this.addClass("vjs-hidden")
        }
        ;
        b.updateLabel = function(a) {
            this.playbackRateSupported() && (this.labelEl_.textContent = this.player().playbackRate() + "x")
        }
        ;
        return c
    }(Nf);
    Pi.prototype.controlText_ = "Playback Rate";
    aa.registerComponent("PlaybackRateMenuButton", Pi);
    var Qi = function(d) {
        function c() {
            return d.apply(this, arguments) || this
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-spacer " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.createEl = function(a, e, l) {
            void 0 === a && (a = "div");
            void 0 === e && (e = {});
            void 0 === l && (l = {});
            e.className || (e.className = this.buildCSSClass());
            return d.prototype.createEl.call(this, a, e, l)
        }
        ;
        return c
    }(aa);
    aa.registerComponent("Spacer", Qi);
    var Gm = function(d) {
        function c() {
            return d.apply(this, arguments) || this
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-custom-control-spacer " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: this.buildCSSClass(),
                textContent: "\u00a0"
            })
        }
        ;
        return c
    }(Qi);
    aa.registerComponent("CustomControlSpacer", Gm);
    var ge = function(d) {
        function c() {
            return d.apply(this, arguments) || this
        }
        ia(c, d);
        c.prototype.createEl = function() {
            return d.prototype.createEl.call(this, "div", {
                className: "vjs-control-bar",
                dir: "ltr"
            })
        }
        ;
        return c
    }(aa);
    ge.prototype.options_ = {
        children: "playToggle volumePanel currentTimeDisplay timeDivider durationDisplay progressControl liveDisplay seekToLive remainingTimeDisplay customControlSpacer playbackRateMenuButton chaptersButton descriptionsButton subsCapsButton audioTrackButton fullscreenToggle".split(" ")
    };
    "exitPictureInPicture"in document && ge.prototype.options_.children.splice(ge.prototype.options_.children.length - 1, 0, "pictureInPictureToggle");
    aa.registerComponent("ControlBar", ge);
    var Ri = function(d) {
        function c(a, e) {
            var l = d.call(this, a, e) || this;
            l.on(a, "error", function(h) {
                return l.open(h)
            });
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.buildCSSClass = function() {
            return "vjs-error-display " + d.prototype.buildCSSClass.call(this)
        }
        ;
        b.content = function() {
            var a = this.player().error();
            return a ? this.localize(a.message) : ""
        }
        ;
        return c
    }(Hc);
    Ri.prototype.options_ = Fb({}, Hc.prototype.options_, {
        pauseOnOpen: !1,
        fillAlways: !0,
        temporary: !1,
        uncloseable: !0
    });
    aa.registerComponent("ErrorDisplay", Ri);
    var Si = ["#000", "Black"]
      , Ti = ["#00F", "Blue"]
      , Ui = ["#0FF", "Cyan"]
      , Vi = ["#0F0", "Green"]
      , Wi = ["#F0F", "Magenta"]
      , Xi = ["#F00", "Red"]
      , Yi = ["#FFF", "White"]
      , Zi = ["#FF0", "Yellow"]
      , Wf = ["1", "Opaque"]
      , Xf = ["0.5", "Semi-Transparent"]
      , $i = ["0", "Transparent"]
      , nc = {
        backgroundColor: {
            selector: ".vjs-bg-color > select",
            id: "captions-background-color-%s",
            label: "Color",
            options: [Si, Yi, Xi, Vi, Ti, Zi, Wi, Ui]
        },
        backgroundOpacity: {
            selector: ".vjs-bg-opacity > select",
            id: "captions-background-opacity-%s",
            label: "Transparency",
            options: [Wf, Xf, $i]
        },
        color: {
            selector: ".vjs-fg-color > select",
            id: "captions-foreground-color-%s",
            label: "Color",
            options: [Yi, Si, Xi, Vi, Ti, Zi, Wi, Ui]
        },
        edgeStyle: {
            selector: ".vjs-edge-style > select",
            id: "%s",
            label: "Text Edge Style",
            options: [["none", "None"], ["raised", "Raised"], ["depressed", "Depressed"], ["uniform", "Uniform"], ["dropshadow", "Dropshadow"]]
        },
        fontFamily: {
            selector: ".vjs-font-family > select",
            id: "captions-font-family-%s",
            label: "Font Family",
            options: [["proportionalSansSerif", "Proportional Sans-Serif"], ["monospaceSansSerif", "Monospace Sans-Serif"], ["proportionalSerif", "Proportional Serif"], ["monospaceSerif", "Monospace Serif"], ["casual", "Casual"], ["script", "Script"], ["small-caps", "Small Caps"]]
        },
        fontPercent: {
            selector: ".vjs-font-percent > select",
            id: "captions-font-size-%s",
            label: "Font Size",
            options: [["0.50", "50%"], ["0.75", "75%"], ["1.00", "100%"], ["1.25", "125%"], ["1.50", "150%"], ["1.75", "175%"], ["2.00", "200%"], ["3.00", "300%"], ["4.00", "400%"]],
            "default": 2,
            parser: function(d) {
                return "1.00" === d ? null : Number(d)
            }
        },
        textOpacity: {
            selector: ".vjs-text-opacity > select",
            id: "captions-foreground-opacity-%s",
            label: "Transparency",
            options: [Wf, Xf]
        },
        windowColor: {
            selector: ".vjs-window-color > select",
            id: "captions-window-color-%s",
            label: "Color"
        },
        windowOpacity: {
            selector: ".vjs-window-opacity > select",
            id: "captions-window-opacity-%s",
            label: "Transparency",
            options: [$i, Xf, Wf]
        }
    };
    nc.windowColor.options = nc.backgroundColor.options;
    var Hm = function(d) {
        function c(a, e) {
            e.temporary = !1;
            var l = d.call(this, a, e) || this;
            l.updateDisplay = l.updateDisplay.bind(sa(l));
            l.fill();
            l.hasBeenOpened_ = l.hasBeenFilled_ = !0;
            l.endDialog = ta("p", {
                className: "vjs-control-text",
                textContent: l.localize("End of dialog window.")
            });
            l.el().appendChild(l.endDialog);
            l.setDefaults();
            void 0 === e.persistTextTrackSettings && (l.options_.persistTextTrackSettings = l.options_.playerOptions.persistTextTrackSettings);
            l.on(l.$(".vjs-done-button"), "click", function() {
                l.saveSettings();
                l.close()
            });
            l.on(l.$(".vjs-default-button"), "click", function() {
                l.setDefaults();
                l.updateDisplay()
            });
            ca(nc, function(h) {
                l.on(l.$(h.selector), "change", l.updateDisplay)
            });
            l.options_.persistTextTrackSettings && l.restoreSettings();
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.dispose = function() {
            this.endDialog = null;
            d.prototype.dispose.call(this)
        }
        ;
        b.createElSelect_ = function(a, e, l) {
            var h = this;
            void 0 === e && (e = "");
            void 0 === l && (l = "label");
            a = nc[a];
            var g = a.id.replace("%s", this.id_)
              , q = [e, g].join(" ").trim();
            return ["<" + l + ' id="' + g + '" class="' + ("label" === l ? "vjs-label" : "") + '">', this.localize(a.label), "</" + l + ">", '<select aria-labelledby="' + q + '">'].concat(a.options.map(function(p) {
                var f = g + "-" + p[1].replace(/\W+/g, "");
                return ['<option id="' + f + '" value="' + p[0] + '" ', 'aria-labelledby="' + q + " " + f + '">', h.localize(p[1]), "</option>"].join("")
            })).concat("</select>").join("")
        }
        ;
        b.createElFgColor_ = function() {
            var a = "captions-text-legend-" + this.id_;
            return ['<fieldset class="vjs-fg-color vjs-track-setting">', '<legend id="' + a + '">', this.localize("Text"), "</legend>", this.createElSelect_("color", a), '<span class="vjs-text-opacity vjs-opacity">', this.createElSelect_("textOpacity", a), "</span></fieldset>"].join("")
        }
        ;
        b.createElBgColor_ = function() {
            var a = "captions-background-" + this.id_;
            return ['<fieldset class="vjs-bg-color vjs-track-setting">', '<legend id="' + a + '">', this.localize("Background"), "</legend>", this.createElSelect_("backgroundColor", a), '<span class="vjs-bg-opacity vjs-opacity">', this.createElSelect_("backgroundOpacity", a), "</span></fieldset>"].join("")
        }
        ;
        b.createElWinColor_ = function() {
            var a = "captions-window-" + this.id_;
            return ['<fieldset class="vjs-window-color vjs-track-setting">', '<legend id="' + a + '">', this.localize("Window"), "</legend>", this.createElSelect_("windowColor", a), '<span class="vjs-window-opacity vjs-opacity">', this.createElSelect_("windowOpacity", a), "</span></fieldset>"].join("")
        }
        ;
        b.createElColors_ = function() {
            return ta("div", {
                className: "vjs-track-settings-colors",
                innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join("")
            })
        }
        ;
        b.createElFont_ = function() {
            return ta("div", {
                className: "vjs-track-settings-font",
                innerHTML: ['<fieldset class="vjs-font-percent vjs-track-setting">', this.createElSelect_("fontPercent", "", "legend"), '</fieldset><fieldset class="vjs-edge-style vjs-track-setting">', this.createElSelect_("edgeStyle", "", "legend"), '</fieldset><fieldset class="vjs-font-family vjs-track-setting">', this.createElSelect_("fontFamily", "", "legend"), "</fieldset>"].join("")
            })
        }
        ;
        b.createElControls_ = function() {
            var a = this.localize("restore all settings to the default values");
            return ta("div", {
                className: "vjs-track-settings-controls",
                innerHTML: ['<button type="button" class="vjs-default-button" title="' + a + '">', this.localize("Reset"), '<span class="vjs-control-text"> ' + a + "</span>", "</button>", '<button type="button" class="vjs-done-button">' + this.localize("Done") + "</button>"].join("")
            })
        }
        ;
        b.content = function() {
            return [this.createElColors_(), this.createElFont_(), this.createElControls_()]
        }
        ;
        b.label = function() {
            return this.localize("Caption Settings Dialog")
        }
        ;
        b.description = function() {
            return this.localize("Beginning of dialog window. Escape will cancel and close the window.")
        }
        ;
        b.buildCSSClass = function() {
            return d.prototype.buildCSSClass.call(this) + " vjs-text-track-settings"
        }
        ;
        b.getValues = function() {
            var a = this;
            return da(nc, function(e, l, h) {
                var g = a.$(l.selector);
                l = vh(g.options[g.options.selectedIndex].value, l.parser);
                void 0 !== l && (e[h] = l);
                return e
            }, {})
        }
        ;
        b.setValues = function(a) {
            var e = this;
            ca(nc, function(l, h) {
                var g = e.$(l.selector);
                h = a[h];
                l = l.parser;
                if (h)
                    for (var q = 0; q < g.options.length; q++)
                        if (vh(g.options[q].value, l) === h) {
                            g.selectedIndex = q;
                            break
                        }
            })
        }
        ;
        b.setDefaults = function() {
            var a = this;
            ca(nc, function(e) {
                var l = e.hasOwnProperty("default") ? e["default"] : 0;
                a.$(e.selector).selectedIndex = l
            })
        }
        ;
        b.restoreSettings = function() {
            try {
                var a = JSON.parse(window.localStorage.getItem("vjs-text-track-settings"))
            } catch (e) {
                va.warn(e)
            }
            a && this.setValues(a)
        }
        ;
        b.saveSettings = function() {
            if (this.options_.persistTextTrackSettings) {
                var a = this.getValues();
                try {
                    Object.keys(a).length ? window.localStorage.setItem("vjs-text-track-settings", JSON.stringify(a)) : window.localStorage.removeItem("vjs-text-track-settings")
                } catch (e) {
                    va.warn(e)
                }
            }
        }
        ;
        b.updateDisplay = function() {
            var a = this.player_.getChild("textTrackDisplay");
            a && a.updateDisplay()
        }
        ;
        b.conditionalBlur_ = function() {
            this.previouslyActiveEl_ = null;
            var a = this.player_.controlBar
              , e = a && a.subsCapsButton;
            a = a && a.captionsButton;
            e ? e.focus() : a && a.focus()
        }
        ;
        return c
    }(Hc);
    aa.registerComponent("TextTrackSettings", Hm);
    var Im = function(d) {
        function c(a, e) {
            var l = e.ResizeObserver || window.ResizeObserver;
            null === e.ResizeObserver && (l = !1);
            var h = Ea({
                createEl: !l,
                reportTouchActivity: !1
            }, e);
            var g = d.call(this, a, h) || this;
            g.ResizeObserver = e.ResizeObserver || window.ResizeObserver;
            g.loadListener_ = null;
            g.resizeObserver_ = null;
            g.debouncedHandler_ = Wl(function() {
                g.resizeHandler()
            }, 100, !1, sa(g));
            l ? (g.resizeObserver_ = new g.ResizeObserver(g.debouncedHandler_),
            g.resizeObserver_.observe(a.el())) : (g.loadListener_ = function() {
                if (g.el_ && g.el_.contentWindow) {
                    var q = g.debouncedHandler_
                      , p = g.unloadListener_ = function() {
                        Za(this, "resize", q);
                        Za(this, "unload", p);
                        p = null
                    }
                    ;
                    rb(g.el_.contentWindow, "unload", p);
                    rb(g.el_.contentWindow, "resize", q)
                }
            }
            ,
            g.one("load", g.loadListener_));
            return g
        }
        ia(c, d);
        var b = c.prototype;
        b.createEl = function() {
            return d.prototype.createEl.call(this, "iframe", {
                className: "vjs-resize-manager",
                tabIndex: -1,
                title: this.localize("No content")
            }, {
                "aria-hidden": "true"
            })
        }
        ;
        b.resizeHandler = function() {
            this.player_ && this.player_.trigger && this.player_.trigger("playerresize")
        }
        ;
        b.dispose = function() {
            this.debouncedHandler_ && this.debouncedHandler_.cancel();
            this.resizeObserver_ && (this.player_.el() && this.resizeObserver_.unobserve(this.player_.el()),
            this.resizeObserver_.disconnect());
            this.loadListener_ && this.off("load", this.loadListener_);
            this.el_ && this.el_.contentWindow && this.unloadListener_ && this.unloadListener_.call(this.el_.contentWindow);
            this.loadListener_ = this.debouncedHandler_ = this.resizeObserver = this.ResizeObserver = null;
            d.prototype.dispose.call(this)
        }
        ;
        return c
    }(aa);
    aa.registerComponent("ResizeManager", Im);
    var Jm = {
        trackingThreshold: 20,
        liveTolerance: 15
    }
      , Km = function(d) {
        function c(a, e) {
            e = Ea(Jm, e, {
                createEl: !1
            });
            var l = d.call(this, a, e) || this;
            l.handleVisibilityChange_ = function(h) {
                return l.handleVisibilityChange(h)
            }
            ;
            l.trackLiveHandler_ = function() {
                return l.trackLive_()
            }
            ;
            l.handlePlay_ = function(h) {
                return l.handlePlay(h)
            }
            ;
            l.handleFirstTimeupdate_ = function(h) {
                return l.handleFirstTimeupdate(h)
            }
            ;
            l.handleSeeked_ = function(h) {
                return l.handleSeeked(h)
            }
            ;
            l.seekToLiveEdge_ = function(h) {
                return l.seekToLiveEdge(h)
            }
            ;
            l.reset_();
            l.on(l.player_, "durationchange", function(h) {
                return l.handleDurationchange(h)
            });
            l.on(l.player_, "canplay", function() {
                return l.toggleTracking()
            });
            if (ld && "hidden"in document && "visibilityState"in document)
                l.on(document, "visibilitychange", l.handleVisibilityChange_);
            return l
        }
        ia(c, d);
        var b = c.prototype;
        b.handleVisibilityChange = function() {
            Infinity === this.player_.duration() && (document.hidden ? this.stopTracking() : this.startTracking())
        }
        ;
        b.trackLive_ = function() {
            var a = this.player_.seekable();
            if (a && a.length) {
                a = Number(window.performance.now().toFixed(4));
                var e = -1 === this.lastTime_ ? 0 : (a - this.lastTime_) / 1E3;
                this.lastTime_ = a;
                this.pastSeekEnd_ = this.pastSeekEnd() + e;
                a = this.liveCurrentTime();
                e = this.player_.currentTime();
                e = this.player_.paused() || this.seekedBehindLive_ || Math.abs(a - e) > this.options_.liveTolerance;
                this.timeupdateSeen_ && Infinity !== a || (e = !1);
                e !== this.behindLiveEdge_ && (this.behindLiveEdge_ = e,
                this.trigger("liveedgechange"))
            }
        }
        ;
        b.handleDurationchange = function() {
            this.toggleTracking()
        }
        ;
        b.toggleTracking = function() {
            Infinity === this.player_.duration() && this.liveWindow() >= this.options_.trackingThreshold ? (this.player_.options_.liveui && this.player_.addClass("vjs-liveui"),
            this.startTracking()) : (this.player_.removeClass("vjs-liveui"),
            this.stopTracking())
        }
        ;
        b.startTracking = function() {
            if (!this.isTracking())
                if (this.timeupdateSeen_ || (this.timeupdateSeen_ = this.player_.hasStarted()),
                this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, 30),
                this.trackLive_(),
                this.on(this.player_, ["play", "pause"], this.trackLiveHandler_),
                this.timeupdateSeen_)
                    this.on(this.player_, "seeked", this.handleSeeked_);
                else
                    this.one(this.player_, "play", this.handlePlay_),
                    this.one(this.player_, "timeupdate", this.handleFirstTimeupdate_)
        }
        ;
        b.handleFirstTimeupdate = function() {
            this.timeupdateSeen_ = !0;
            this.on(this.player_, "seeked", this.handleSeeked_)
        }
        ;
        b.handleSeeked = function() {
            var a = Math.abs(this.liveCurrentTime() - this.player_.currentTime());
            this.seekedBehindLive_ = this.nextSeekedFromUser_ && 2 < a;
            this.nextSeekedFromUser_ = !1;
            this.trackLive_()
        }
        ;
        b.handlePlay = function() {
            this.one(this.player_, "timeupdate", this.seekToLiveEdge_)
        }
        ;
        b.reset_ = function() {
            this.lastTime_ = -1;
            this.pastSeekEnd_ = 0;
            this.lastSeekEnd_ = -1;
            this.behindLiveEdge_ = !0;
            this.nextSeekedFromUser_ = this.seekedBehindLive_ = this.timeupdateSeen_ = !1;
            this.clearInterval(this.trackingInterval_);
            this.trackingInterval_ = null;
            this.off(this.player_, ["play", "pause"], this.trackLiveHandler_);
            this.off(this.player_, "seeked", this.handleSeeked_);
            this.off(this.player_, "play", this.handlePlay_);
            this.off(this.player_, "timeupdate", this.handleFirstTimeupdate_);
            this.off(this.player_, "timeupdate", this.seekToLiveEdge_)
        }
        ;
        b.nextSeekedFromUser = function() {
            this.nextSeekedFromUser_ = !0
        }
        ;
        b.stopTracking = function() {
            this.isTracking() && (this.reset_(),
            this.trigger("liveedgechange"))
        }
        ;
        b.seekableEnd = function() {
            for (var a = this.player_.seekable(), e = [], l = a ? a.length : 0; l--; )
                e.push(a.end(l));
            return e.length ? e.sort()[e.length - 1] : Infinity
        }
        ;
        b.seekableStart = function() {
            for (var a = this.player_.seekable(), e = [], l = a ? a.length : 0; l--; )
                e.push(a.start(l));
            return e.length ? e.sort()[0] : 0
        }
        ;
        b.liveWindow = function() {
            var a = this.liveCurrentTime();
            return Infinity === a ? 0 : a - this.seekableStart()
        }
        ;
        b.isLive = function() {
            return this.isTracking()
        }
        ;
        b.atLiveEdge = function() {
            return !this.behindLiveEdge()
        }
        ;
        b.liveCurrentTime = function() {
            return this.pastSeekEnd() + this.seekableEnd()
        }
        ;
        b.pastSeekEnd = function() {
            var a = this.seekableEnd();
            -1 !== this.lastSeekEnd_ && a !== this.lastSeekEnd_ && (this.pastSeekEnd_ = 0);
            this.lastSeekEnd_ = a;
            return this.pastSeekEnd_
        }
        ;
        b.behindLiveEdge = function() {
            return this.behindLiveEdge_
        }
        ;
        b.isTracking = function() {
            return "number" === typeof this.trackingInterval_
        }
        ;
        b.seekToLiveEdge = function() {
            this.seekedBehindLive_ = !1;
            this.atLiveEdge() || (this.nextSeekedFromUser_ = !1,
            this.player_.currentTime(this.liveCurrentTime()))
        }
        ;
        b.dispose = function() {
            this.off(document, "visibilitychange", this.handleVisibilityChange_);
            this.stopTracking();
            d.prototype.dispose.call(this)
        }
        ;
        return c
    }(aa);
    aa.registerComponent("LiveTracker", Km);
    var Yf = function(d) {
        var c = d.el();
        if (c.hasAttribute("src"))
            return d.triggerSourceset(c.src),
            !0;
        c = d.$$("source");
        var b = []
          , a = "";
        if (!c.length)
            return !1;
        for (var e = 0; e < c.length; e++) {
            var l = c[e].src;
            l && -1 === b.indexOf(l) && b.push(l)
        }
        if (!b.length)
            return !1;
        1 === b.length && (a = b[0]);
        d.triggerSourceset(a);
        return !0
    }
      , Lm = Object.defineProperty({}, "innerHTML", {
        get: function() {
            return this.cloneNode(!0).innerHTML
        },
        set: function(d) {
            var c = document.createElement(this.nodeName.toLowerCase());
            c.innerHTML = d;
            for (d = document.createDocumentFragment(); c.childNodes.length; )
                d.appendChild(c.childNodes[0]);
            this.innerText = "";
            window.Element.prototype.appendChild.call(this, d);
            return this.innerHTML
        }
    })
      , aj = function(d, c) {
        for (var b = {}, a = 0; a < d.length && !((b = Object.getOwnPropertyDescriptor(d[a], c)) && b.set && b.get); a++)
            ;
        b.enumerable = !0;
        b.configurable = !0;
        return b
    }
      , bj = function(d) {
        var c = d.el();
        if (!c.resetSourceWatch_) {
            var b = {}
              , a = aj([d.el(), window.HTMLMediaElement.prototype, window.Element.prototype, Lm], "innerHTML")
              , e = function(l) {
                return function() {
                    for (var h = arguments.length, g = Array(h), q = 0; q < h; q++)
                        g[q] = arguments[q];
                    h = l.apply(c, g);
                    Yf(d);
                    return h
                }
            };
            ["append", "appendChild", "insertAdjacentHTML"].forEach(function(l) {
                c[l] && (b[l] = c[l],
                c[l] = e(b[l]))
            });
            Object.defineProperty(c, "innerHTML", Ea(a, {
                set: e(a.set)
            }));
            c.resetSourceWatch_ = function() {
                c.resetSourceWatch_ = null;
                Object.keys(b).forEach(function(l) {
                    c[l] = b[l]
                });
                Object.defineProperty(c, "innerHTML", a)
            }
            ;
            d.one("sourceset", c.resetSourceWatch_)
        }
    }
      , Mm = Object.defineProperty({}, "src", {
        get: function() {
            return this.hasAttribute("src") ? pi(window.Element.prototype.getAttribute.call(this, "src")) : ""
        },
        set: function(d) {
            window.Element.prototype.setAttribute.call(this, "src", d);
            return d
        }
    })
      , Nm = function(d) {
        if (d.featuresSourceset) {
            var c = d.el();
            if (!c.resetSourceset_) {
                var b = aj([d.el(), window.HTMLMediaElement.prototype, Mm], "src")
                  , a = c.setAttribute
                  , e = c.load;
                Object.defineProperty(c, "src", Ea(b, {
                    set: function(l) {
                        l = b.set.call(c, l);
                        d.triggerSourceset(c.src);
                        return l
                    }
                }));
                c.setAttribute = function(l, h) {
                    h = a.call(c, l, h);
                    /src/i.test(l) && d.triggerSourceset(c.src);
                    return h
                }
                ;
                c.load = function() {
                    var l = e.call(c);
                    Yf(d) || (d.triggerSourceset(""),
                    bj(d));
                    return l
                }
                ;
                c.currentSrc ? d.triggerSourceset(c.currentSrc) : Yf(d) || bj(d);
                c.resetSourceset_ = function() {
                    c.resetSourceset_ = null;
                    c.load = e;
                    c.setAttribute = a;
                    Object.defineProperty(c, "src", b);
                    c.resetSourceWatch_ && c.resetSourceWatch_()
                }
            }
        }
    }
      , Zf = function(d, c, b, a) {
        void 0 === a && (a = !0);
        var e = function(h) {
            return Object.defineProperty(d, c, {
                value: h,
                enumerable: !0,
                writable: !0
            })
        }
          , l = {
            configurable: !0,
            enumerable: !0,
            get: function() {
                var h = b();
                e(h);
                return h
            }
        };
        a && (l.set = e);
        return Object.defineProperty(d, c, l)
    }
      , ma = function(d) {
        function c(a, e) {
            e = d.call(this, a, e) || this;
            var l = a.source
              , h = !1;
            e.featuresVideoFrameCallback = e.featuresVideoFrameCallback && "VIDEO" === e.el_.tagName;
            l && (e.el_.currentSrc !== l.src || a.tag && 3 === a.tag.initNetworkState_) ? e.setSource(l) : e.handleLateInit_(e.el_);
            a.enableSourceset && e.setupSourcesetHandling_();
            e.isScrubbing_ = !1;
            if (e.el_.hasChildNodes()) {
                var g = e.el_.childNodes
                  , q = g.length;
                for (l = []; q--; ) {
                    var p = g[q];
                    "track" === p.nodeName.toLowerCase() && (e.featuresNativeTextTracks ? (e.remoteTextTrackEls().addTrackElement_(p),
                    e.remoteTextTracks().addTrack(p.track),
                    e.textTracks().addTrack(p.track),
                    h || e.el_.hasAttribute("crossorigin") || !de(p.src) || (h = !0)) : l.push(p))
                }
                for (g = 0; g < l.length; g++)
                    e.el_.removeChild(l[g])
            }
            e.proxyNativeTracks_();
            e.featuresNativeTextTracks && h && va.warn("Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\nThis may prevent text tracks from loading.");
            e.restoreMetadataTracksInIOSNativePlayer_();
            (Fc || wf || ai) && !0 === a.nativeControlsForTouch && e.setControls(!0);
            e.proxyWebkitFullscreen_();
            e.triggerReady();
            return e
        }
        ia(c, d);
        var b = c.prototype;
        b.dispose = function() {
            this.el_ && this.el_.resetSourceset_ && this.el_.resetSourceset_();
            c.disposeMediaElement(this.el_);
            this.options_ = null;
            d.prototype.dispose.call(this)
        }
        ;
        b.setupSourcesetHandling_ = function() {
            Nm(this)
        }
        ;
        b.restoreMetadataTracksInIOSNativePlayer_ = function() {
            var a = this.textTracks(), e, l = function() {
                e = [];
                for (var g = 0; g < a.length; g++) {
                    var q = a[g];
                    "metadata" === q.kind && e.push({
                        track: q,
                        storedMode: q.mode
                    })
                }
            };
            l();
            a.addEventListener("change", l);
            this.on("dispose", function() {
                return a.removeEventListener("change", l)
            });
            var h = function q() {
                for (var p = 0; p < e.length; p++) {
                    var f = e[p];
                    "disabled" === f.track.mode && f.track.mode !== f.storedMode && (f.track.mode = f.storedMode)
                }
                a.removeEventListener("change", q)
            };
            this.on("webkitbeginfullscreen", function() {
                a.removeEventListener("change", l);
                a.removeEventListener("change", h);
                a.addEventListener("change", h)
            });
            this.on("webkitendfullscreen", function() {
                a.removeEventListener("change", l);
                a.addEventListener("change", l);
                a.removeEventListener("change", h)
            })
        }
        ;
        b.overrideNative_ = function(a, e) {
            var l = this;
            if (e === this["featuresNative" + a + "Tracks"]) {
                var h = a.toLowerCase();
                this[h + "TracksListeners_"] && Object.keys(this[h + "TracksListeners_"]).forEach(function(g) {
                    l.el()[h + "Tracks"].removeEventListener(g, l[h + "TracksListeners_"][g])
                });
                this["featuresNative" + a + "Tracks"] = !e;
                this[h + "TracksListeners_"] = null;
                this.proxyNativeTracksForType_(h)
            }
        }
        ;
        b.overrideNativeAudioTracks = function(a) {
            this.overrideNative_("Audio", a)
        }
        ;
        b.overrideNativeVideoTracks = function(a) {
            this.overrideNative_("Video", a)
        }
        ;
        b.proxyNativeTracksForType_ = function(a) {
            var e = this
              , l = xb[a]
              , h = this.el()[l.getterName]
              , g = this[l.getterName]();
            if (this["featuresNative" + l.capitalName + "Tracks"] && h && h.addEventListener) {
                var q = {
                    change: function(f) {
                        f = {
                            type: "change",
                            target: g,
                            currentTarget: g,
                            srcElement: g
                        };
                        g.trigger(f);
                        "text" === a && e[Kc.remoteText.getterName]().trigger(f)
                    },
                    addtrack: function(f) {
                        g.addTrack(f.track)
                    },
                    removetrack: function(f) {
                        g.removeTrack(f.track)
                    }
                }
                  , p = function() {
                    for (var f = [], m = 0; m < g.length; m++) {
                        for (var k = !1, r = 0; r < h.length; r++)
                            if (h[r] === g[m]) {
                                k = !0;
                                break
                            }
                        k || f.push(g[m])
                    }
                    for (; f.length; )
                        g.removeTrack(f.shift())
                };
                this[l.getterName + "Listeners_"] = q;
                Object.keys(q).forEach(function(f) {
                    var m = q[f];
                    h.addEventListener(f, m);
                    e.on("dispose", function(k) {
                        return h.removeEventListener(f, m)
                    })
                });
                this.on("loadstart", p);
                this.on("dispose", function(f) {
                    return e.off("loadstart", p)
                })
            }
        }
        ;
        b.proxyNativeTracks_ = function() {
            var a = this;
            xb.names.forEach(function(e) {
                a.proxyNativeTracksForType_(e)
            })
        }
        ;
        b.createEl = function() {
            var a = this.options_.tag;
            if (!a || !this.options_.playerElIngest && !this.movingMediaElementInDOM) {
                if (a) {
                    var e = a.cloneNode(!0);
                    a.parentNode && a.parentNode.insertBefore(e, a);
                    c.disposeMediaElement(a);
                    a = e
                } else
                    a = document.createElement("video"),
                    e = this.options_.tag && Nb(this.options_.tag),
                    e = Ea({}, e),
                    Fc && !0 === this.options_.nativeControlsForTouch || delete e.controls,
                    ah(a, W(e, {
                        id: this.options_.techId,
                        "class": "vjs-tech"
                    }));
                a.playerId = this.options_.playerId
            }
            "undefined" !== typeof this.options_.preload && a.setAttribute("preload", this.options_.preload);
            void 0 !== this.options_.disablePictureInPicture && (a.disablePictureInPicture = this.options_.disablePictureInPicture);
            e = ["loop", "muted", "playsinline", "autoplay"];
            for (var l = 0; l < e.length; l++) {
                var h = e[l]
                  , g = this.options_[h];
                "undefined" !== typeof g && (g ? a.setAttribute(h, h) : a.removeAttribute(h),
                a[h] = g)
            }
            return a
        }
        ;
        b.handleLateInit_ = function(a) {
            if (0 !== a.networkState && 3 !== a.networkState)
                if (0 === a.readyState) {
                    var e = !1
                      , l = function() {
                        e = !0
                    };
                    this.on("loadstart", l);
                    var h = function() {
                        e || this.trigger("loadstart")
                    };
                    this.on("loadedmetadata", h);
                    this.ready(function() {
                        this.off("loadstart", l);
                        this.off("loadedmetadata", h);
                        e || this.trigger("loadstart")
                    })
                } else {
                    var g = ["loadstart"];
                    g.push("loadedmetadata");
                    2 <= a.readyState && g.push("loadeddata");
                    3 <= a.readyState && g.push("canplay");
                    4 <= a.readyState && g.push("canplaythrough");
                    this.ready(function() {
                        g.forEach(function(q) {
                            this.trigger(q)
                        }, this)
                    })
                }
        }
        ;
        b.setScrubbing = function(a) {
            this.isScrubbing_ = a
        }
        ;
        b.scrubbing = function() {
            return this.isScrubbing_
        }
        ;
        b.setCurrentTime = function(a) {
            try {
                this.isScrubbing_ && this.el_.fastSeek && Zd ? this.el_.fastSeek(a) : this.el_.currentTime = a
            } catch (e) {
                va(e, "Video is not ready. (Video.js)")
            }
        }
        ;
        b.duration = function() {
            var a = this;
            return Infinity === this.el_.duration && Tb && Ub && 0 === this.el_.currentTime ? (this.on("timeupdate", function l() {
                0 < a.el_.currentTime && (Infinity === a.el_.duration && a.trigger("durationchange"),
                a.off("timeupdate", l))
            }),
            NaN) : this.el_.duration || NaN
        }
        ;
        b.width = function() {
            return this.el_.offsetWidth
        }
        ;
        b.height = function() {
            return this.el_.offsetHeight
        }
        ;
        b.proxyWebkitFullscreen_ = function() {
            var a = this;
            if ("webkitDisplayingFullscreen"in this.el_) {
                var e = function() {
                    this.trigger("fullscreenchange", {
                        isFullscreen: !1
                    });
                    this.el_.controls && !this.options_.nativeControlsForTouch && this.controls() && (this.el_.controls = !1)
                }
                  , l = function() {
                    "webkitPresentationMode"in this.el_ && "picture-in-picture" !== this.el_.webkitPresentationMode && (this.one("webkitendfullscreen", e),
                    this.trigger("fullscreenchange", {
                        isFullscreen: !0,
                        nativeIOSFullscreen: !0
                    }))
                };
                this.on("webkitbeginfullscreen", l);
                this.on("dispose", function() {
                    a.off("webkitbeginfullscreen", l);
                    a.off("webkitendfullscreen", e)
                })
            }
        }
        ;
        b.supportsFullScreen = function() {
            if ("function" === typeof this.el_.webkitEnterFullScreen) {
                var a = window.navigator && window.navigator.userAgent || "";
                if (/Android/.test(a) || !/Chrome|Mac OS X 10.5/.test(a))
                    return !0
            }
            return !1
        }
        ;
        b.enterFullScreen = function() {
            var a = this.el_;
            if (a.paused && a.networkState <= a.HAVE_METADATA)
                Gb(this.el_.play()),
                this.setTimeout(function() {
                    a.pause();
                    try {
                        a.webkitEnterFullScreen()
                    } catch (e) {
                        this.trigger("fullscreenerror", e)
                    }
                }, 0);
            else
                try {
                    a.webkitEnterFullScreen()
                } catch (e) {
                    this.trigger("fullscreenerror", e)
                }
        }
        ;
        b.exitFullScreen = function() {
            this.el_.webkitDisplayingFullscreen ? this.el_.webkitExitFullScreen() : this.trigger("fullscreenerror", Error("The video is not fullscreen"))
        }
        ;
        b.requestPictureInPicture = function() {
            return this.el_.requestPictureInPicture()
        }
        ;
        b.requestVideoFrameCallback = function(a) {
            return this.featuresVideoFrameCallback && !this.el_.webkitKeys ? this.el_.requestVideoFrameCallback(a) : d.prototype.requestVideoFrameCallback.call(this, a)
        }
        ;
        b.cancelVideoFrameCallback = function(a) {
            this.featuresVideoFrameCallback && !this.el_.webkitKeys ? this.el_.cancelVideoFrameCallback(a) : d.prototype.cancelVideoFrameCallback.call(this, a)
        }
        ;
        b.src = function(a) {
            if (void 0 === a)
                return this.el_.src;
            this.setSrc(a)
        }
        ;
        b.reset = function() {
            c.resetMediaElement(this.el_)
        }
        ;
        b.currentSrc = function() {
            return this.currentSource_ ? this.currentSource_.src : this.el_.currentSrc
        }
        ;
        b.setControls = function(a) {
            this.el_.controls = !!a
        }
        ;
        b.addTextTrack = function(a, e, l) {
            return this.featuresNativeTextTracks ? this.el_.addTextTrack(a, e, l) : d.prototype.addTextTrack.call(this, a, e, l)
        }
        ;
        b.createRemoteTextTrack = function(a) {
            if (!this.featuresNativeTextTracks)
                return d.prototype.createRemoteTextTrack.call(this, a);
            var e = document.createElement("track");
            a.kind && (e.kind = a.kind);
            a.label && (e.label = a.label);
            if (a.language || a.srclang)
                e.srclang = a.language || a.srclang;
            a["default"] && (e["default"] = a["default"]);
            a.id && (e.id = a.id);
            a.src && (e.src = a.src);
            return e
        }
        ;
        b.addRemoteTextTrack = function(a, e) {
            a = d.prototype.addRemoteTextTrack.call(this, a, e);
            this.featuresNativeTextTracks && this.el().appendChild(a);
            return a
        }
        ;
        b.removeRemoteTextTrack = function(a) {
            d.prototype.removeRemoteTextTrack.call(this, a);
            if (this.featuresNativeTextTracks)
                for (var e = this.$$("track"), l = e.length; l--; )
                    a !== e[l] && a !== e[l].track || this.el().removeChild(e[l])
        }
        ;
        b.getVideoPlaybackQuality = function() {
            if ("function" === typeof this.el().getVideoPlaybackQuality)
                return this.el().getVideoPlaybackQuality();
            var a = {};
            "undefined" !== typeof this.el().webkitDroppedFrameCount && "undefined" !== typeof this.el().webkitDecodedFrameCount && (a.droppedVideoFrames = this.el().webkitDroppedFrameCount,
            a.totalVideoFrames = this.el().webkitDecodedFrameCount);
            window.performance && "function" === typeof window.performance.now ? a.creationTime = window.performance.now() : window.performance && window.performance.timing && "number" === typeof window.performance.timing.navigationStart && (a.creationTime = window.Date.now() - window.performance.timing.navigationStart);
            return a
        }
        ;
        return c
    }(Ba);
    Zf(ma, "TEST_VID", function() {
        if (ea()) {
            var d = document.createElement("video")
              , c = document.createElement("track");
            c.kind = "captions";
            c.srclang = "en";
            c.label = "English";
            d.appendChild(c);
            return d
        }
    });
    ma.isSupported = function() {
        try {
            ma.TEST_VID.volume = .5
        } catch (d) {
            return !1
        }
        return !(!ma.TEST_VID || !ma.TEST_VID.canPlayType)
    }
    ;
    ma.canPlayType = function(d) {
        return ma.TEST_VID.canPlayType(d)
    }
    ;
    ma.canPlaySource = function(d, c) {
        return ma.canPlayType(d.type)
    }
    ;
    ma.canControlVolume = function() {
        try {
            var d = ma.TEST_VID.volume;
            ma.TEST_VID.volume = d / 2 + .1;
            var c = d !== ma.TEST_VID.volume;
            return c && cb ? (window.setTimeout(function() {
                ma && ma.prototype && (ma.prototype.featuresVolumeControl = d !== ma.TEST_VID.volume)
            }),
            !1) : c
        } catch (b) {
            return !1
        }
    }
    ;
    ma.canMuteVolume = function() {
        try {
            var d = ma.TEST_VID.muted;
            ma.TEST_VID.muted = !d;
            ma.TEST_VID.muted ? ma.TEST_VID.setAttribute("muted", "muted") : ma.TEST_VID.removeAttribute("muted");
            return d !== ma.TEST_VID.muted
        } catch (c) {
            return !1
        }
    }
    ;
    ma.canControlPlaybackRate = function() {
        if (Tb && Ub && 58 > ci)
            return !1;
        try {
            var d = ma.TEST_VID.playbackRate;
            ma.TEST_VID.playbackRate = d / 2 + .1;
            return d !== ma.TEST_VID.playbackRate
        } catch (c) {
            return !1
        }
    }
    ;
    ma.canOverrideAttributes = function() {
        try {
            var d = function() {};
            Object.defineProperty(document.createElement("video"), "src", {
                get: d,
                set: d
            });
            Object.defineProperty(document.createElement("audio"), "src", {
                get: d,
                set: d
            });
            Object.defineProperty(document.createElement("video"), "innerHTML", {
                get: d,
                set: d
            });
            Object.defineProperty(document.createElement("audio"), "innerHTML", {
                get: d,
                set: d
            })
        } catch (c) {
            return !1
        }
        return !0
    }
    ;
    ma.supportsNativeTextTracks = function() {
        return Zd || cb && Ub
    }
    ;
    ma.supportsNativeVideoTracks = function() {
        return !(!ma.TEST_VID || !ma.TEST_VID.videoTracks)
    }
    ;
    ma.supportsNativeAudioTracks = function() {
        return !(!ma.TEST_VID || !ma.TEST_VID.audioTracks)
    }
    ;
    ma.Events = "loadstart suspend abort error emptied stalled loadedmetadata loadeddata canplay canplaythrough playing waiting seeking seeked ended durationchange timeupdate progress play pause ratechange resize volumechange".split(" ");
    [["featuresMuteControl", "canMuteVolume"], ["featuresPlaybackRate", "canControlPlaybackRate"], ["featuresSourceset", "canOverrideAttributes"], ["featuresNativeTextTracks", "supportsNativeTextTracks"], ["featuresNativeVideoTracks", "supportsNativeVideoTracks"], ["featuresNativeAudioTracks", "supportsNativeAudioTracks"]].forEach(function(d) {
        var c = d[1];
        Zf(ma.prototype, d[0], function() {
            return ma[c]()
        }, !0)
    });
    ma.prototype.featuresVolumeControl = ma.canControlVolume();
    ma.prototype.movingMediaElementInDOM = !cb;
    ma.prototype.featuresFullscreenResize = !0;
    ma.prototype.featuresProgressEvents = !0;
    ma.prototype.featuresTimeupdateEvents = !0;
    ma.prototype.featuresVideoFrameCallback = !(!ma.TEST_VID || !ma.TEST_VID.requestVideoFrameCallback);
    var he;
    ma.patchCanPlayType = function() {
        4 <= tf && !bi && !Ub && (he = ma.TEST_VID && ma.TEST_VID.constructor.prototype.canPlayType,
        ma.TEST_VID.constructor.prototype.canPlayType = function(d) {
            var c = /^application\/(?:x-|vnd\.apple\.)mpegurl/i;
            return d && c.test(d) ? "maybe" : he.call(this, d)
        }
        )
    }
    ;
    ma.unpatchCanPlayType = function() {
        var d = ma.TEST_VID.constructor.prototype.canPlayType;
        he && (ma.TEST_VID.constructor.prototype.canPlayType = he);
        return d
    }
    ;
    ma.patchCanPlayType();
    ma.disposeMediaElement = function(d) {
        if (d) {
            for (d.parentNode && d.parentNode.removeChild(d); d.hasChildNodes(); )
                d.removeChild(d.firstChild);
            d.removeAttribute("src");
            if ("function" === typeof d.load)
                try {
                    d.load()
                } catch (c) {}
        }
    }
    ;
    ma.resetMediaElement = function(d) {
        if (d) {
            for (var c = d.querySelectorAll("source"), b = c.length; b--; )
                d.removeChild(c[b]);
            d.removeAttribute("src");
            if ("function" === typeof d.load)
                try {
                    d.load()
                } catch (a) {}
        }
    }
    ;
    "muted defaultMuted autoplay controls loop playsinline".split(" ").forEach(function(d) {
        ma.prototype[d] = function() {
            return this.el_[d] || this.el_.hasAttribute(d)
        }
    });
    ["muted", "defaultMuted", "autoplay", "loop", "playsinline"].forEach(function(d) {
        ma.prototype["set" + Ka(d)] = function(c) {
            (this.el_[d] = c) ? this.el_.setAttribute(d, d) : this.el_.removeAttribute(d)
        }
    });
    "paused currentTime buffered volume poster preload error seeking seekable ended playbackRate defaultPlaybackRate disablePictureInPicture played networkState readyState videoWidth videoHeight crossOrigin".split(" ").forEach(function(d) {
        ma.prototype[d] = function() {
            return this.el_[d]
        }
    });
    "volume src poster preload playbackRate defaultPlaybackRate disablePictureInPicture crossOrigin".split(" ").forEach(function(d) {
        ma.prototype["set" + Ka(d)] = function(c) {
            this.el_[d] = c
        }
    });
    ["pause", "load", "play"].forEach(function(d) {
        ma.prototype[d] = function() {
            return this.el_[d]()
        }
    });
    Ba.withSourceHandlers(ma);
    ma.nativeSourceHandler = {};
    ma.nativeSourceHandler.canPlayType = function(d) {
        try {
            return ma.TEST_VID.canPlayType(d)
        } catch (c) {
            return ""
        }
    }
    ;
    ma.nativeSourceHandler.canHandleSource = function(d, c) {
        return d.type ? ma.nativeSourceHandler.canPlayType(d.type) : d.src ? (d = Ff(d.src),
        ma.nativeSourceHandler.canPlayType("video/" + d)) : ""
    }
    ;
    ma.nativeSourceHandler.handleSource = function(d, c, b) {
        c.setSrc(d.src)
    }
    ;
    ma.nativeSourceHandler.dispose = function() {}
    ;
    ma.registerSourceHandler(ma.nativeSourceHandler);
    Ba.registerTech("Html5", ma);
    var cj = "progress abort suspend emptied stalled loadedmetadata loadeddata timeupdate resize volumechange texttrackchange".split(" ")
      , $f = {
        canplay: "CanPlay",
        canplaythrough: "CanPlayThrough",
        playing: "Playing",
        seeked: "Seeked"
    }
      , ag = "tiny xsmall small medium large xlarge huge".split(" ")
      , ie = {};
    ag.forEach(function(d) {
        var c = "x" === d.charAt(0) ? "x-" + d.substring(1) : d;
        ie[d] = "vjs-layout-" + c
    });
    var Om = {
        tiny: 210,
        xsmall: 320,
        small: 425,
        medium: 768,
        large: 1440,
        xlarge: 2560,
        huge: Infinity
    }
      , Oa = function(d) {
        function c(a, e, l) {
            a.id = a.id || e.id || "vjs_video_" + Ob++;
            e = W(c.getTagSettings(a), e);
            e.initChildren = !1;
            e.createEl = !1;
            e.evented = !1;
            e.reportTouchActivity = !1;
            if (!e.language)
                if ("function" === typeof a.closest) {
                    var h = a.closest("[lang]");
                    h && h.getAttribute && (e.language = h.getAttribute("lang"))
                } else
                    for (h = a; h && 1 === h.nodeType; ) {
                        if (Nb(h).hasOwnProperty("lang")) {
                            e.language = h.getAttribute("lang");
                            break
                        }
                        h = h.parentNode
                    }
            var g = d.call(this, null, e, l) || this;
            g.boundDocumentFullscreenChange_ = function(p) {
                return g.documentFullscreenChange_(p)
            }
            ;
            g.boundFullWindowOnEscKey_ = function(p) {
                return g.fullWindowOnEscKey(p)
            }
            ;
            g.boundUpdateStyleEl_ = function(p) {
                return g.updateStyleEl_(p)
            }
            ;
            g.boundApplyInitTime_ = function(p) {
                return g.applyInitTime_(p)
            }
            ;
            g.boundUpdateCurrentBreakpoint_ = function(p) {
                return g.updateCurrentBreakpoint_(p)
            }
            ;
            g.boundHandleTechClick_ = function(p) {
                return g.handleTechClick_(p)
            }
            ;
            g.boundHandleTechDoubleClick_ = function(p) {
                return g.handleTechDoubleClick_(p)
            }
            ;
            g.boundHandleTechTouchStart_ = function(p) {
                return g.handleTechTouchStart_(p)
            }
            ;
            g.boundHandleTechTouchMove_ = function(p) {
                return g.handleTechTouchMove_(p)
            }
            ;
            g.boundHandleTechTouchEnd_ = function(p) {
                return g.handleTechTouchEnd_(p)
            }
            ;
            g.boundHandleTechTap_ = function(p) {
                return g.handleTechTap_(p)
            }
            ;
            g.isFullscreen_ = !1;
            g.log = Yh(g.id_);
            g.fsApi_ = Hd;
            g.isPosterFromTech_ = !1;
            g.queuedCallbacks_ = [];
            g.isReady_ = !1;
            g.hasStarted_ = !1;
            g.userActive_ = !1;
            g.debugEnabled_ = !1;
            g.audioOnlyMode_ = !1;
            g.audioPosterMode_ = !1;
            g.audioOnlyCache_ = {
                playerHeight: null,
                hiddenChildren: []
            };
            if (!g.options_ || !g.options_.techOrder || !g.options_.techOrder.length)
                throw Error("No techOrder specified. Did you overwrite videojs.options instead of just changing the properties you want to override?");
            g.tag = a;
            g.tagAttributes = a && Nb(a);
            g.language(g.options_.language);
            if (e.languages) {
                var q = {};
                Object.getOwnPropertyNames(e.languages).forEach(function(p) {
                    q[p.toLowerCase()] = e.languages[p]
                });
                g.languages_ = q
            } else
                g.languages_ = c.prototype.options_.languages;
            g.resetCache_();
            g.poster_ = e.poster || "";
            g.controls_ = !!e.controls;
            a.controls = !1;
            a.removeAttribute("controls");
            g.changingSrc_ = !1;
            g.playCallbacks_ = [];
            g.playTerminatedQueue_ = [];
            a.hasAttribute("autoplay") ? g.autoplay(!0) : g.autoplay(g.options_.autoplay);
            e.plugins && Object.keys(e.plugins).forEach(function(p) {
                if ("function" !== typeof g[p])
                    throw Error('plugin "' + p + '" does not exist');
            });
            g.scrubbing_ = !1;
            g.el_ = g.createEl();
            Xe(sa(g), {
                eventBusKey: "el_"
            });
            g.fsApi_.requestFullscreen && (rb(document, g.fsApi_.fullscreenchange, g.boundDocumentFullscreenChange_),
            g.on(g.fsApi_.fullscreenchange, g.boundDocumentFullscreenChange_));
            if (g.fluid_)
                g.on(["playerreset", "resize"], g.boundUpdateStyleEl_);
            l = Ea(g.options_);
            e.plugins && Object.keys(e.plugins).forEach(function(p) {
                g[p](e.plugins[p])
            });
            e.debug && g.debug(!0);
            g.options_.playerOptions = l;
            g.middleware_ = [];
            g.playbackRates(e.playbackRates);
            g.initChildren();
            g.isAudio("audio" === a.nodeName.toLowerCase());
            g.controls() ? g.addClass("vjs-controls-enabled") : g.addClass("vjs-controls-disabled");
            g.el_.setAttribute("role", "region");
            g.isAudio() ? g.el_.setAttribute("aria-label", g.localize("Audio Player")) : g.el_.setAttribute("aria-label", g.localize("Video Player"));
            g.isAudio() && g.addClass("vjs-audio");
            g.flexNotSupported_() && g.addClass("vjs-no-flex");
            Fc && g.addClass("vjs-touch-enabled");
            cb || g.addClass("vjs-workinghover");
            c.players[g.id_] = sa(g);
            g.addClass("vjs-v7");
            g.userActive(!0);
            g.reportUserActivity();
            g.one("play", function(p) {
                return g.listenForUserActivity_(p)
            });
            g.on("stageclick", function(p) {
                return g.handleStageClick_(p)
            });
            g.on("keydown", function(p) {
                return g.handleKeyDown(p)
            });
            g.on("languagechange", function(p) {
                return g.handleLanguagechange(p)
            });
            g.breakpoints(g.options_.breakpoints);
            g.responsive(g.options_.responsive);
            g.on("ready", function() {
                g.audioPosterMode(g.options_.audioPosterMode);
                g.audioOnlyMode(g.options_.audioOnlyMode)
            });
            return g
        }
        ia(c, d);
        var b = c.prototype;
        b.dispose = function() {
            var a = this;
            this.trigger("dispose");
            this.off("dispose");
            Za(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);
            Za(document, "keydown", this.boundFullWindowOnEscKey_);
            this.styleEl_ && this.styleEl_.parentNode && (this.styleEl_.parentNode.removeChild(this.styleEl_),
            this.styleEl_ = null);
            c.players[this.id_] = null;
            this.tag && this.tag.player && (this.tag.player = null);
            this.el_ && this.el_.player && (this.el_.player = null);
            this.tech_ && (this.tech_.dispose(),
            this.isPosterFromTech_ = !1,
            this.poster_ = "");
            this.playerElIngest_ && (this.playerElIngest_ = null);
            this.tag && (this.tag = null);
            ef[this.id()] = null;
            hb.names.forEach(function(e) {
                (e = a[hb[e].getterName]()) && e.off && e.off()
            });
            d.prototype.dispose.call(this, {
                restoreEl: this.options_.restoreEl
            })
        }
        ;
        b.createEl = function() {
            var a = this.tag
              , e = this.playerElIngest_ = a.parentNode && a.parentNode.hasAttribute && a.parentNode.hasAttribute("data-vjs-player")
              , l = "video-js" === this.tag.tagName.toLowerCase();
            if (e)
                var h = this.el_ = a.parentNode;
            else
                l || (h = this.el_ = d.prototype.createEl.call(this, "div"));
            var g = Nb(a);
            if (l) {
                h = this.el_ = a;
                for (a = this.tag = document.createElement("video"); h.children.length; )
                    a.appendChild(h.firstChild);
                ic(h, "video-js") || Mb(h, "video-js");
                h.appendChild(a);
                e = this.playerElIngest_ = h;
                Object.keys(h).forEach(function(m) {
                    try {
                        a[m] = h[m]
                    } catch (k) {}
                })
            }
            a.setAttribute("tabindex", "-1");
            g.tabindex = "-1";
            if (ld || Ub && di)
                a.setAttribute("role", "application"),
                g.role = "application";
            a.removeAttribute("width");
            a.removeAttribute("height");
            "width"in g && delete g.width;
            "height"in g && delete g.height;
            Object.getOwnPropertyNames(g).forEach(function(m) {
                l && "class" === m || h.setAttribute(m, g[m]);
                l && a.setAttribute(m, g[m])
            });
            a.playerId = a.id;
            a.id += "_html5_api";
            a.className = "vjs-tech";
            a.player = h.player = this;
            this.addClass("vjs-paused");
            if (!0 !== window.VIDEOJS_NO_DYNAMIC_STYLE) {
                this.styleEl_ = gi("vjs-styles-dimensions");
                var q = bc(".vjs-styles-defaults")
                  , p = bc("head");
                p.insertBefore(this.styleEl_, q ? q.nextSibling : p.firstChild)
            }
            this.fluid_ = this.fill_ = !1;
            this.width(this.options_.width);
            this.height(this.options_.height);
            this.fill(this.options_.fill);
            this.fluid(this.options_.fluid);
            this.aspectRatio(this.options_.aspectRatio);
            this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);
            q = a.getElementsByTagName("a");
            for (p = 0; p < q.length; p++) {
                var f = q.item(p);
                Mb(f, "vjs-hidden");
                f.setAttribute("hidden", "hidden")
            }
            a.initNetworkState_ = a.networkState;
            a.parentNode && !e && a.parentNode.insertBefore(h, a);
            hc(a, h);
            this.children_.unshift(a);
            this.el_.setAttribute("lang", this.language_);
            this.el_.setAttribute("translate", "no");
            return this.el_ = h
        }
        ;
        b.crossOrigin = function(a) {
            if (!a)
                return this.techGet_("crossOrigin");
            "anonymous" !== a && "use-credentials" !== a ? va.warn('crossOrigin must be "anonymous" or "use-credentials", given "' + a + '"') : this.techCall_("setCrossOrigin", a)
        }
        ;
        b.width = function(a) {
            return this.dimension("width", a)
        }
        ;
        b.height = function(a) {
            return this.dimension("height", a)
        }
        ;
        b.dimension = function(a, e) {
            var l = a + "_";
            if (void 0 === e)
                return this[l] || 0;
            if ("" === e || "auto" === e)
                this[l] = void 0,
                this.updateStyleEl_();
            else {
                var h = parseFloat(e);
                isNaN(h) ? va.error('Improper value "' + e + '" supplied for for ' + a) : (this[l] = h,
                this.updateStyleEl_())
            }
        }
        ;
        b.fluid = function(a) {
            var e = this;
            if (void 0 === a)
                return !!this.fluid_;
            this.fluid_ = !!a;
            Pb(this) && this.off(["playerreset", "resize"], this.boundUpdateStyleEl_);
            a ? (this.addClass("vjs-fluid"),
            this.fill(!1),
            Xl(this, function() {
                e.on(["playerreset", "resize"], e.boundUpdateStyleEl_)
            })) : this.removeClass("vjs-fluid");
            this.updateStyleEl_()
        }
        ;
        b.fill = function(a) {
            if (void 0 === a)
                return !!this.fill_;
            this.fill_ = !!a;
            a ? (this.addClass("vjs-fill"),
            this.fluid(!1)) : this.removeClass("vjs-fill")
        }
        ;
        b.aspectRatio = function(a) {
            if (void 0 === a)
                return this.aspectRatio_;
            if (!/^\d+:\d+$/.test(a))
                throw Error("Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.");
            this.aspectRatio_ = a;
            this.fluid(!0);
            this.updateStyleEl_()
        }
        ;
        b.updateStyleEl_ = function() {
            if (!0 === window.VIDEOJS_NO_DYNAMIC_STYLE) {
                var a = "number" === typeof this.width_ ? this.width_ : this.options_.width
                  , e = "number" === typeof this.height_ ? this.height_ : this.options_.height
                  , l = this.tech_ && this.tech_.el();
                l && (0 <= a && (l.width = a),
                0 <= e && (l.height = e))
            } else {
                a = (void 0 !== this.aspectRatio_ && "auto" !== this.aspectRatio_ ? this.aspectRatio_ : 0 < this.videoWidth() ? this.videoWidth() + ":" + this.videoHeight() : "16:9").split(":");
                var h = a[1] / a[0];
                a = void 0 !== this.width_ ? this.width_ : void 0 !== this.height_ ? this.height_ / h : this.videoWidth() || 300;
                e = void 0 !== this.height_ ? this.height_ : a * h;
                l = /^[^a-zA-Z]/.test(this.id()) ? "dimensions-" + this.id() : this.id() + "-dimensions";
                this.addClass(l);
                hi(this.styleEl_, "\n      ." + l + " {\n        width: " + a + "px;\n        height: " + e + "px;\n      }\n\n      ." + l + ".vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: " + 100 * h + "%;\n      }\n    ")
            }
        }
        ;
        b.loadTech_ = function(a, e) {
            var l = this;
            this.tech_ && this.unloadTech_();
            var h = Ka(a)
              , g = a.charAt(0).toLowerCase() + a.slice(1);
            "Html5" !== h && this.tag && (Ba.getTech("Html5").disposeMediaElement(this.tag),
            this.tag = this.tag.player = null);
            this.techName_ = h;
            this.isReady_ = !1;
            var q = this.autoplay();
            if ("string" === typeof this.autoplay() || !0 === this.autoplay() && this.options_.normalizeAutoplay)
                q = !1;
            var p = {
                source: e,
                autoplay: q,
                nativeControlsForTouch: this.options_.nativeControlsForTouch,
                playerId: this.id(),
                techId: this.id() + "_" + g + "_api",
                playsinline: this.options_.playsinline,
                preload: this.options_.preload,
                loop: this.options_.loop,
                disablePictureInPicture: this.options_.disablePictureInPicture,
                muted: this.options_.muted,
                poster: this.poster(),
                language: this.language(),
                playerElIngest: this.playerElIngest_ || !1,
                "vtt.js": this.options_["vtt.js"],
                canOverridePoster: !!this.options_.techCanOverridePoster,
                enableSourceset: this.options_.enableSourceset,
                Promise: this.options_.Promise
            };
            hb.names.forEach(function(f) {
                f = hb[f];
                p[f.getterName] = l[f.privateName]
            });
            W(p, this.options_[h]);
            W(p, this.options_[g]);
            W(p, this.options_[a.toLowerCase()]);
            this.tag && (p.tag = this.tag);
            e && e.src === this.cache_.src && 0 < this.cache_.currentTime && (p.startTime = this.cache_.currentTime);
            a = Ba.getTech(a);
            if (!a)
                throw Error("No Tech named '" + h + "' exists! '" + h + "' should be registered using videojs.registerTech()'");
            this.tech_ = new a(p);
            this.tech_.ready(Fa(this, this.handleTechReady_), !0);
            li.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);
            cj.forEach(function(f) {
                l.on(l.tech_, f, function(m) {
                    return l["handleTech" + Ka(f) + "_"](m)
                })
            });
            Object.keys($f).forEach(function(f) {
                l.on(l.tech_, f, function(m) {
                    if (0 === l.tech_.playbackRate() && l.tech_.seeking())
                        l.queuedCallbacks_.push({
                            callback: l["handleTech" + $f[f] + "_"].bind(l),
                            event: m
                        });
                    else
                        l["handleTech" + $f[f] + "_"](m)
                })
            });
            this.on(this.tech_, "loadstart", function(f) {
                return l.handleTechLoadStart_(f)
            });
            this.on(this.tech_, "sourceset", function(f) {
                return l.handleTechSourceset_(f)
            });
            this.on(this.tech_, "waiting", function(f) {
                return l.handleTechWaiting_(f)
            });
            this.on(this.tech_, "ended", function(f) {
                return l.handleTechEnded_(f)
            });
            this.on(this.tech_, "seeking", function(f) {
                return l.handleTechSeeking_(f)
            });
            this.on(this.tech_, "play", function(f) {
                return l.handleTechPlay_(f)
            });
            this.on(this.tech_, "firstplay", function(f) {
                return l.handleTechFirstPlay_(f)
            });
            this.on(this.tech_, "pause", function(f) {
                return l.handleTechPause_(f)
            });
            this.on(this.tech_, "durationchange", function(f) {
                return l.handleTechDurationChange_(f)
            });
            this.on(this.tech_, "fullscreenchange", function(f, m) {
                return l.handleTechFullscreenChange_(f, m)
            });
            this.on(this.tech_, "fullscreenerror", function(f, m) {
                return l.handleTechFullscreenError_(f, m)
            });
            this.on(this.tech_, "enterpictureinpicture", function(f) {
                return l.handleTechEnterPictureInPicture_(f)
            });
            this.on(this.tech_, "leavepictureinpicture", function(f) {
                return l.handleTechLeavePictureInPicture_(f)
            });
            this.on(this.tech_, "error", function(f) {
                return l.handleTechError_(f)
            });
            this.on(this.tech_, "posterchange", function(f) {
                return l.handleTechPosterChange_(f)
            });
            this.on(this.tech_, "textdata", function(f) {
                return l.handleTechTextData_(f)
            });
            this.on(this.tech_, "ratechange", function(f) {
                return l.handleTechRateChange_(f)
            });
            this.on(this.tech_, "loadedmetadata", this.boundUpdateStyleEl_);
            this.usingNativeControls(this.techGet_("controls"));
            this.controls() && !this.usingNativeControls() && this.addTechControlsListeners_();
            this.tech_.el().parentNode === this.el() || "Html5" === h && this.tag || hc(this.tech_.el(), this.el());
            this.tag && (this.tag = this.tag.player = null)
        }
        ;
        b.unloadTech_ = function() {
            var a = this;
            hb.names.forEach(function(e) {
                e = hb[e];
                a[e.privateName] = a[e.getterName]()
            });
            this.textTracksJson_ = li.textTracksToJson(this.tech_);
            this.isReady_ = !1;
            this.tech_.dispose();
            this.tech_ = !1;
            this.isPosterFromTech_ && (this.poster_ = "",
            this.trigger("posterchange"));
            this.isPosterFromTech_ = !1
        }
        ;
        b.tech = function(a) {
            void 0 === a && va.warn("Using the tech directly can be dangerous. I hope you know what you're doing.\nSee https://github.com/videojs/video.js/issues/2617 for more info.\n");
            return this.tech_
        }
        ;
        b.addTechControlsListeners_ = function() {
            this.removeTechControlsListeners_();
            this.on(this.tech_, "click", this.boundHandleTechClick_);
            this.on(this.tech_, "dblclick", this.boundHandleTechDoubleClick_);
            this.on(this.tech_, "touchstart", this.boundHandleTechTouchStart_);
            this.on(this.tech_, "touchmove", this.boundHandleTechTouchMove_);
            this.on(this.tech_, "touchend", this.boundHandleTechTouchEnd_);
            this.on(this.tech_, "tap", this.boundHandleTechTap_)
        }
        ;
        b.removeTechControlsListeners_ = function() {
            this.off(this.tech_, "tap", this.boundHandleTechTap_);
            this.off(this.tech_, "touchstart", this.boundHandleTechTouchStart_);
            this.off(this.tech_, "touchmove", this.boundHandleTechTouchMove_);
            this.off(this.tech_, "touchend", this.boundHandleTechTouchEnd_);
            this.off(this.tech_, "click", this.boundHandleTechClick_);
            this.off(this.tech_, "dblclick", this.boundHandleTechDoubleClick_)
        }
        ;
        b.handleTechReady_ = function() {
            this.triggerReady();
            this.cache_.volume && this.techCall_("setVolume", this.cache_.volume);
            this.handleTechPosterChange_();
            this.handleTechDurationChange_()
        }
        ;
        b.handleTechLoadStart_ = function() {
            this.removeClass("vjs-ended");
            this.removeClass("vjs-seeking");
            this.error(null);
            this.handleTechDurationChange_();
            this.paused() ? (this.hasStarted(!1),
            this.trigger("loadstart")) : (this.trigger("loadstart"),
            this.trigger("firstplay"));
            this.manualAutoplay_(!0 === this.autoplay() && this.options_.normalizeAutoplay ? "play" : this.autoplay())
        }
        ;
        b.manualAutoplay_ = function(a) {
            var e = this;
            if (this.tech_ && "string" === typeof a) {
                var l = function() {
                    var g = e.muted();
                    e.muted(!0);
                    var q = function() {
                        e.muted(g)
                    };
                    e.playTerminatedQueue_.push(q);
                    var p = e.play();
                    if (ad(p))
                        return p["catch"](function(f) {
                            q();
                            throw Error("Rejection at manualAutoplay. Restoring muted value. " + (f ? f : ""));
                        })
                };
                if ("any" !== a || this.muted())
                    var h = "muted" !== a || this.muted() ? this.play() : l();
                else
                    h = this.play(),
                    ad(h) && (h = h["catch"](l));
                if (ad(h))
                    return h.then(function() {
                        e.trigger({
                            type: "autoplay-success",
                            autoplay: a
                        })
                    })["catch"](function() {
                        e.trigger({
                            type: "autoplay-failure",
                            autoplay: a
                        })
                    })
            }
        }
        ;
        b.updateSourceCaches_ = function(a) {
            void 0 === a && (a = "");
            var e = a
              , l = "";
            "string" !== typeof e && (e = a.src,
            l = a.type);
            this.cache_.source = this.cache_.source || {};
            this.cache_.sources = this.cache_.sources || [];
            e && !l && (l = pm(this, e));
            this.cache_.source = Ea({}, a, {
                src: e,
                type: l
            });
            a = this.cache_.sources.filter(function(f) {
                return f.src && f.src === e
            });
            l = [];
            for (var h = this.$$("source"), g = [], q = 0; q < h.length; q++) {
                var p = Nb(h[q]);
                l.push(p);
                p.src && p.src === e && g.push(p.src)
            }
            g.length && !a.length ? this.cache_.sources = l : a.length || (this.cache_.sources = [this.cache_.source]);
            this.cache_.src = e
        }
        ;
        b.handleTechSourceset_ = function(a) {
            var e = this;
            if (!this.changingSrc_) {
                var l = function(q) {
                    return e.updateSourceCaches_(q)
                }
                  , h = this.currentSource().src
                  , g = a.src;
                h && !/^blob:/.test(h) && /^blob:/.test(g) && (!this.lastSource_ || this.lastSource_.tech !== g && this.lastSource_.player !== h) && (l = function() {}
                );
                l(g);
                a.src || this.tech_.any(["sourceset", "loadstart"], function(q) {
                    "sourceset" !== q.type && (q = e.techGet("currentSrc"),
                    e.lastSource_.tech = q,
                    e.updateSourceCaches_(q))
                })
            }
            this.lastSource_ = {
                player: this.currentSource().src,
                tech: a.src
            };
            this.trigger({
                src: a.src,
                type: "sourceset"
            })
        }
        ;
        b.hasStarted = function(a) {
            if (void 0 === a)
                return this.hasStarted_;
            a !== this.hasStarted_ && ((this.hasStarted_ = a) ? (this.addClass("vjs-has-started"),
            this.trigger("firstplay")) : this.removeClass("vjs-has-started"))
        }
        ;
        b.handleTechPlay_ = function() {
            this.removeClass("vjs-ended");
            this.removeClass("vjs-paused");
            this.addClass("vjs-playing");
            this.hasStarted(!0);
            this.trigger("play")
        }
        ;
        b.handleTechRateChange_ = function() {
            0 < this.tech_.playbackRate() && 0 === this.cache_.lastPlaybackRate && (this.queuedCallbacks_.forEach(function(a) {
                return a.callback(a.event)
            }),
            this.queuedCallbacks_ = []);
            this.cache_.lastPlaybackRate = this.tech_.playbackRate();
            this.trigger("ratechange")
        }
        ;
        b.handleTechWaiting_ = function() {
            var a = this;
            this.addClass("vjs-waiting");
            this.trigger("waiting");
            var e = this.currentTime();
            this.on("timeupdate", function h() {
                e !== a.currentTime() && (a.removeClass("vjs-waiting"),
                a.off("timeupdate", h))
            })
        }
        ;
        b.handleTechCanPlay_ = function() {
            this.removeClass("vjs-waiting");
            this.trigger("canplay")
        }
        ;
        b.handleTechCanPlayThrough_ = function() {
            this.removeClass("vjs-waiting");
            this.trigger("canplaythrough")
        }
        ;
        b.handleTechPlaying_ = function() {
            this.removeClass("vjs-waiting");
            this.trigger("playing")
        }
        ;
        b.handleTechSeeking_ = function() {
            this.addClass("vjs-seeking");
            this.trigger("seeking")
        }
        ;
        b.handleTechSeeked_ = function() {
            this.removeClass("vjs-seeking");
            this.removeClass("vjs-ended");
            this.trigger("seeked")
        }
        ;
        b.handleTechFirstPlay_ = function() {
            this.options_.starttime && (va.warn("Passing the `starttime` option to the player will be deprecated in 6.0"),
            this.currentTime(this.options_.starttime));
            this.addClass("vjs-has-started");
            this.trigger("firstplay")
        }
        ;
        b.handleTechPause_ = function() {
            this.removeClass("vjs-playing");
            this.addClass("vjs-paused");
            this.trigger("pause")
        }
        ;
        b.handleTechEnded_ = function() {
            this.addClass("vjs-ended");
            this.removeClass("vjs-waiting");
            this.options_.loop ? (this.currentTime(0),
            this.play()) : this.paused() || this.pause();
            this.trigger("ended")
        }
        ;
        b.handleTechDurationChange_ = function() {
            this.duration(this.techGet_("duration"))
        }
        ;
        b.handleTechClick_ = function(a) {
            !this.controls_ || void 0 !== this.options_ && void 0 !== this.options_.userActions && void 0 !== this.options_.userActions.click && !1 === this.options_.userActions.click || (void 0 !== this.options_ && void 0 !== this.options_.userActions && "function" === typeof this.options_.userActions.click ? this.options_.userActions.click.call(this, a) : this.paused() ? Gb(this.play()) : this.pause())
        }
        ;
        b.handleTechDoubleClick_ = function(a) {
            this.controls_ && (Array.prototype.some.call(this.$$(".vjs-control-bar, .vjs-modal-dialog"), function(e) {
                return e.contains(a.target)
            }) || void 0 !== this.options_ && void 0 !== this.options_.userActions && void 0 !== this.options_.userActions.doubleClick && !1 === this.options_.userActions.doubleClick || (void 0 !== this.options_ && void 0 !== this.options_.userActions && "function" === typeof this.options_.userActions.doubleClick ? this.options_.userActions.doubleClick.call(this, a) : this.isFullscreen() ? this.exitFullscreen() : this.requestFullscreen()))
        }
        ;
        b.handleTechTap_ = function() {
            this.userActive(!this.userActive())
        }
        ;
        b.handleTechTouchStart_ = function() {
            this.userWasActive = this.userActive()
        }
        ;
        b.handleTechTouchMove_ = function() {
            this.userWasActive && this.reportUserActivity()
        }
        ;
        b.handleTechTouchEnd_ = function(a) {
            a.cancelable && a.preventDefault()
        }
        ;
        b.handleStageClick_ = function() {
            this.reportUserActivity()
        }
        ;
        b.toggleFullscreenClass_ = function() {
            this.isFullscreen() ? this.addClass("vjs-fullscreen") : this.removeClass("vjs-fullscreen")
        }
        ;
        b.documentFullscreenChange_ = function(a) {
            a = a.target.player;
            if (!a || a === this) {
                a = this.el();
                var e = document[this.fsApi_.fullscreenElement] === a;
                !e && a.matches ? e = a.matches(":" + this.fsApi_.fullscreen) : !e && a.msMatchesSelector && (e = a.msMatchesSelector(":" + this.fsApi_.fullscreen));
                this.isFullscreen(e)
            }
        }
        ;
        b.handleTechFullscreenChange_ = function(a, e) {
            var l = this;
            e && (e.nativeIOSFullscreen && (this.addClass("vjs-ios-native-fs"),
            this.tech_.one("webkitendfullscreen", function() {
                l.removeClass("vjs-ios-native-fs")
            })),
            this.isFullscreen(e.isFullscreen))
        }
        ;
        b.handleTechFullscreenError_ = function(a, e) {
            this.trigger("fullscreenerror", e)
        }
        ;
        b.togglePictureInPictureClass_ = function() {
            this.isInPictureInPicture() ? this.addClass("vjs-picture-in-picture") : this.removeClass("vjs-picture-in-picture")
        }
        ;
        b.handleTechEnterPictureInPicture_ = function(a) {
            this.isInPictureInPicture(!0)
        }
        ;
        b.handleTechLeavePictureInPicture_ = function(a) {
            this.isInPictureInPicture(!1)
        }
        ;
        b.handleTechError_ = function() {
            var a = this.tech_.error();
            this.error(a)
        }
        ;
        b.handleTechTextData_ = function() {
            var a = null;
            1 < arguments.length && (a = arguments[1]);
            this.trigger("textdata", a)
        }
        ;
        b.getCache = function() {
            return this.cache_
        }
        ;
        b.resetCache_ = function() {
            this.cache_ = {
                currentTime: 0,
                initTime: 0,
                inactivityTimeout: this.options_.inactivityTimeout,
                duration: NaN,
                lastVolume: 1,
                lastPlaybackRate: this.defaultPlaybackRate(),
                media: null,
                src: "",
                source: {},
                sources: [],
                playbackRates: [],
                volume: 1
            }
        }
        ;
        b.techCall_ = function(a, e) {
            this.ready(function() {
                if (a in nm)
                    return this.tech_[a](this.middleware_.reduce(df(a), e));
                if (a in wi)
                    return th(this.middleware_, this.tech_, a, e);
                try {
                    if (this.tech_)
                        this.tech_[a](e)
                } catch (l) {
                    throw va(l),
                    l;
                }
            }, !0)
        }
        ;
        b.techGet_ = function(a) {
            if (this.tech_ && this.tech_.isReady_) {
                if (a in mm) {
                    var e = this.tech_;
                    return this.middleware_.reduceRight(df(a), e[a]())
                }
                if (a in wi)
                    return th(this.middleware_, this.tech_, a);
                try {
                    return this.tech_[a]()
                } catch (l) {
                    if (void 0 === this.tech_[a])
                        throw va("Video.js: " + a + " method not defined for " + this.techName_ + " playback technology.", l),
                        l;
                    if ("TypeError" === l.name)
                        throw va("Video.js: " + a + " unavailable on " + this.techName_ + " playback technology element.", l),
                        this.tech_.isReady_ = !1,
                        l;
                    va(l);
                    throw l;
                }
            }
        }
        ;
        b.play = function() {
            var a = this
              , e = this.options_.Promise || window.Promise;
            return e ? new e(function(l) {
                a.play_(l)
            }
            ) : this.play_()
        }
        ;
        b.play_ = function(a) {
            var e = this;
            void 0 === a && (a = Gb);
            this.playCallbacks_.push(a);
            a = !(this.changingSrc_ || !this.src() && !this.currentSrc());
            this.waitToPlay_ && (this.off(["ready", "loadstart"], this.waitToPlay_),
            this.waitToPlay_ = null);
            this.isReady_ && a ? (a = this.techGet_("play"),
            null === a ? this.runPlayTerminatedQueue_() : this.runPlayCallbacks_(a)) : (this.waitToPlay_ = function(l) {
                e.play_()
            }
            ,
            this.one(["ready", "loadstart"], this.waitToPlay_),
            a || !Zd && !cb || this.load())
        }
        ;
        b.runPlayTerminatedQueue_ = function() {
            var a = this.playTerminatedQueue_.slice(0);
            this.playTerminatedQueue_ = [];
            a.forEach(function(e) {
                e()
            })
        }
        ;
        b.runPlayCallbacks_ = function(a) {
            var e = this.playCallbacks_.slice(0);
            this.playCallbacks_ = [];
            this.playTerminatedQueue_ = [];
            e.forEach(function(l) {
                l(a)
            })
        }
        ;
        b.pause = function() {
            this.techCall_("pause")
        }
        ;
        b.paused = function() {
            return !1 === this.techGet_("paused") ? !1 : !0
        }
        ;
        b.played = function() {
            return this.techGet_("played") || jc(0, 0)
        }
        ;
        b.scrubbing = function(a) {
            if ("undefined" === typeof a)
                return this.scrubbing_;
            this.scrubbing_ = !!a;
            this.techCall_("setScrubbing", this.scrubbing_);
            a ? this.addClass("vjs-scrubbing") : this.removeClass("vjs-scrubbing")
        }
        ;
        b.currentTime = function(a) {
            if ("undefined" !== typeof a)
                0 > a && (a = 0),
                this.isReady_ && !this.changingSrc_ && this.tech_ && this.tech_.isReady_ ? (this.techCall_("setCurrentTime", a),
                this.cache_.initTime = 0) : (this.cache_.initTime = a,
                this.off("canplay", this.boundApplyInitTime_),
                this.one("canplay", this.boundApplyInitTime_));
            else
                return this.cache_.currentTime = this.techGet_("currentTime") || 0,
                this.cache_.currentTime
        }
        ;
        b.applyInitTime_ = function() {
            this.currentTime(this.cache_.initTime)
        }
        ;
        b.duration = function(a) {
            if (void 0 === a)
                return void 0 !== this.cache_.duration ? this.cache_.duration : NaN;
            a = parseFloat(a);
            0 > a && (a = Infinity);
            a !== this.cache_.duration && (this.cache_.duration = a,
            Infinity === a ? this.addClass("vjs-live") : this.removeClass("vjs-live"),
            isNaN(a) || this.trigger("durationchange"))
        }
        ;
        b.remainingTime = function() {
            return this.duration() - this.currentTime()
        }
        ;
        b.remainingTimeDisplay = function() {
            return Math.floor(this.duration()) - Math.floor(this.currentTime())
        }
        ;
        b.buffered = function() {
            var a = this.techGet_("buffered");
            a && a.length || (a = jc(0, 0));
            return a
        }
        ;
        b.bufferedPercent = function() {
            return lh(this.buffered(), this.duration())
        }
        ;
        b.bufferedEnd = function() {
            var a = this.buffered()
              , e = this.duration();
            a = a.end(a.length - 1);
            a > e && (a = e);
            return a
        }
        ;
        b.volume = function(a) {
            if (void 0 !== a)
                a = Math.max(0, Math.min(1, parseFloat(a))),
                this.cache_.volume = a,
                this.techCall_("setVolume", a),
                0 < a && this.lastVolume_(a);
            else
                return a = parseFloat(this.techGet_("volume")),
                isNaN(a) ? 1 : a
        }
        ;
        b.muted = function(a) {
            if (void 0 !== a)
                this.techCall_("setMuted", a);
            else
                return this.techGet_("muted") || !1
        }
        ;
        b.defaultMuted = function(a) {
            return void 0 !== a ? this.techCall_("setDefaultMuted", a) : this.techGet_("defaultMuted") || !1
        }
        ;
        b.lastVolume_ = function(a) {
            if (void 0 !== a && 0 !== a)
                this.cache_.lastVolume = a;
            else
                return this.cache_.lastVolume
        }
        ;
        b.supportsFullScreen = function() {
            return this.techGet_("supportsFullScreen") || !1
        }
        ;
        b.isFullscreen = function(a) {
            if (void 0 !== a) {
                var e = this.isFullscreen_;
                this.isFullscreen_ = !!a;
                this.isFullscreen_ !== e && this.fsApi_.prefixed && this.trigger("fullscreenchange");
                this.toggleFullscreenClass_()
            } else
                return this.isFullscreen_
        }
        ;
        b.requestFullscreen = function(a) {
            var e = this.options_.Promise || window.Promise;
            if (e) {
                var l = this;
                return new e(function(h, g) {
                    function q() {
                        l.off("fullscreenerror", f);
                        l.off("fullscreenchange", p)
                    }
                    function p() {
                        q();
                        h()
                    }
                    function f(k, r) {
                        q();
                        g(r)
                    }
                    l.one("fullscreenchange", p);
                    l.one("fullscreenerror", f);
                    var m = l.requestFullscreenHelper_(a);
                    m && (m.then(q, q),
                    m.then(h, g))
                }
                )
            }
            return this.requestFullscreenHelper_()
        }
        ;
        b.requestFullscreenHelper_ = function(a) {
            var e = this;
            if (!this.fsApi_.prefixed) {
                var l = this.options_.fullscreen && this.options_.fullscreen.options || {};
                void 0 !== a && (l = a)
            }
            if (this.fsApi_.requestFullscreen)
                return (a = this.el_[this.fsApi_.requestFullscreen](l)) && a.then(function() {
                    return e.isFullscreen(!0)
                }, function() {
                    return e.isFullscreen(!1)
                }),
                a;
            this.tech_.supportsFullScreen() && !0 === !this.options_.preferFullWindow ? this.techCall_("enterFullScreen") : this.enterFullWindow()
        }
        ;
        b.exitFullscreen = function() {
            var a = this.options_.Promise || window.Promise;
            if (a) {
                var e = this;
                return new a(function(l, h) {
                    function g() {
                        e.off("fullscreenerror", p);
                        e.off("fullscreenchange", q)
                    }
                    function q() {
                        g();
                        l()
                    }
                    function p(m, k) {
                        g();
                        h(k)
                    }
                    e.one("fullscreenchange", q);
                    e.one("fullscreenerror", p);
                    var f = e.exitFullscreenHelper_();
                    f && (f.then(g, g),
                    f.then(l, h))
                }
                )
            }
            return this.exitFullscreenHelper_()
        }
        ;
        b.exitFullscreenHelper_ = function() {
            var a = this;
            if (this.fsApi_.requestFullscreen) {
                var e = document[this.fsApi_.exitFullscreen]();
                e && Gb(e.then(function() {
                    return a.isFullscreen(!1)
                }));
                return e
            }
            this.tech_.supportsFullScreen() && !0 === !this.options_.preferFullWindow ? this.techCall_("exitFullScreen") : this.exitFullWindow()
        }
        ;
        b.enterFullWindow = function() {
            this.isFullscreen(!0);
            this.isFullWindow = !0;
            this.docOrigOverflow = document.documentElement.style.overflow;
            rb(document, "keydown", this.boundFullWindowOnEscKey_);
            document.documentElement.style.overflow = "hidden";
            Mb(document.body, "vjs-full-window");
            this.trigger("enterFullWindow")
        }
        ;
        b.fullWindowOnEscKey = function(a) {
            ra.isEventKey(a, "Esc") && !0 === this.isFullscreen() && (this.isFullWindow ? this.exitFullWindow() : this.exitFullscreen())
        }
        ;
        b.exitFullWindow = function() {
            this.isFullscreen(!1);
            this.isFullWindow = !1;
            Za(document, "keydown", this.boundFullWindowOnEscKey_);
            document.documentElement.style.overflow = this.docOrigOverflow;
            Yc(document.body, "vjs-full-window");
            this.trigger("exitFullWindow")
        }
        ;
        b.disablePictureInPicture = function(a) {
            if (void 0 === a)
                return this.techGet_("disablePictureInPicture");
            this.techCall_("setDisablePictureInPicture", a);
            this.options_.disablePictureInPicture = a;
            this.trigger("disablepictureinpicturechanged")
        }
        ;
        b.isInPictureInPicture = function(a) {
            if (void 0 !== a)
                this.isInPictureInPicture_ = !!a,
                this.togglePictureInPictureClass_();
            else
                return !!this.isInPictureInPicture_
        }
        ;
        b.requestPictureInPicture = function() {
            if ("pictureInPictureEnabled"in document && !1 === this.disablePictureInPicture())
                return this.techGet_("requestPictureInPicture")
        }
        ;
        b.exitPictureInPicture = function() {
            if ("pictureInPictureEnabled"in document)
                return document.exitPictureInPicture()
        }
        ;
        b.handleKeyDown = function(a) {
            var e = this.options_.userActions;
            if (e && e.hotkeys) {
                var l = this.el_.ownerDocument.activeElement;
                var h = l.tagName.toLowerCase();
                if (l.isContentEditable)
                    l = !0;
                else {
                    var g = "button checkbox hidden radio reset submit".split(" ");
                    l = "input" === h ? -1 === g.indexOf(l.type) : -1 !== ["textarea"].indexOf(h)
                }
                l || ("function" === typeof e.hotkeys ? e.hotkeys.call(this, a) : this.handleHotkeys(a))
            }
        }
        ;
        b.handleHotkeys = function(a) {
            var e = this.options_.userActions ? this.options_.userActions.hotkeys : {}
              , l = e.fullscreenKey
              , h = e.muteKey;
            h = void 0 === h ? function(g) {
                return ra.isEventKey(g, "m")
            }
            : h;
            e = e.playPauseKey;
            e = void 0 === e ? function(g) {
                return ra.isEventKey(g, "k") || ra.isEventKey(g, "Space")
            }
            : e;
            (void 0 === l ? function(g) {
                return ra.isEventKey(g, "f")
            }
            : l).call(this, a) ? (a.preventDefault(),
            a.stopPropagation(),
            l = aa.getComponent("FullscreenToggle"),
            !1 !== document[this.fsApi_.fullscreenEnabled] && l.prototype.handleClick.call(this, a)) : h.call(this, a) ? (a.preventDefault(),
            a.stopPropagation(),
            aa.getComponent("MuteToggle").prototype.handleClick.call(this, a)) : e.call(this, a) && (a.preventDefault(),
            a.stopPropagation(),
            aa.getComponent("PlayToggle").prototype.handleClick.call(this, a))
        }
        ;
        b.canPlayType = function(a) {
            for (var e, l = 0, h = this.options_.techOrder; l < h.length; l++) {
                e = h[l];
                var g = Ba.getTech(e);
                g || (g = aa.getComponent(e));
                if (!g)
                    va.error('The "' + e + '" tech is undefined. Skipped browser support check for that tech.');
                else if (g.isSupported() && (e = g.canPlayType(a)))
                    return e
            }
            return ""
        }
        ;
        b.selectSource = function(a) {
            var e = this
              , l = this.options_.techOrder.map(function(p) {
                return [p, Ba.getTech(p)]
            }).filter(function(p) {
                var f = p[0];
                if (p = p[1])
                    return p.isSupported();
                va.error('The "' + f + '" tech is undefined. Skipped browser support check for that tech.');
                return !1
            })
              , h = function(p, f, m) {
                var k;
                p.some(function(r) {
                    return f.some(function(u) {
                        if (k = m(r, u))
                            return !0
                    })
                });
                return k
            }
              , g = function(p) {
                return function(f, m) {
                    return p(m, f)
                }
            }
              , q = function(p, f) {
                var m = p[0];
                if (p[1].canPlaySource(f, e.options_[m.toLowerCase()]))
                    return {
                        source: f,
                        tech: m
                    }
            };
            return (this.options_.sourceOrder ? h(a, l, g(q)) : h(l, a, q)) || !1
        }
        ;
        b.handleSrc_ = function(a, e) {
            var l = this;
            if ("undefined" === typeof a)
                return this.cache_.src || "";
            this.resetRetryOnError_ && this.resetRetryOnError_();
            var h = qm(a);
            if (h.length) {
                if (this.changingSrc_ = !0,
                e || (this.cache_.sources = h),
                this.updateSourceCaches_(h[0]),
                El(this, h[0], function(p, f) {
                    l.middleware_ = f;
                    e || (l.cache_.sources = h);
                    l.updateSourceCaches_(p);
                    if (l.src_(p)) {
                        if (1 < h.length)
                            return l.handleSrc_(h.slice(1));
                        l.changingSrc_ = !1;
                        l.setTimeout(function() {
                            this.error({
                                code: 4,
                                message: this.options_.notSupportedMessage
                            })
                        }, 0);
                        l.triggerReady()
                    } else
                        Fl(f, l.tech_)
                }),
                this.options_.retryOnError && 1 < h.length) {
                    var g = function() {
                        l.error(null);
                        l.handleSrc_(h.slice(1), !0)
                    }
                      , q = function() {
                        l.off("error", g)
                    };
                    this.one("error", g);
                    this.one("playing", q);
                    this.resetRetryOnError_ = function() {
                        l.off("error", g);
                        l.off("playing", q)
                    }
                }
            } else
                this.setTimeout(function() {
                    this.error({
                        code: 4,
                        message: this.options_.notSupportedMessage
                    })
                }, 0)
        }
        ;
        b.src = function(a) {
            return this.handleSrc_(a, !1)
        }
        ;
        b.src_ = function(a) {
            var e = this
              , l = this.selectSource([a]);
            if (!l)
                return !0;
            if (!Yl(l.tech, this.techName_))
                return this.changingSrc_ = !0,
                this.loadTech_(l.tech, l.source),
                this.tech_.ready(function() {
                    e.changingSrc_ = !1
                }),
                !1;
            this.ready(function() {
                this.tech_.constructor.prototype.hasOwnProperty("setSource") ? this.techCall_("setSource", a) : this.techCall_("src", a.src);
                this.changingSrc_ = !1
            }, !0);
            return !1
        }
        ;
        b.load = function() {
            this.techCall_("load")
        }
        ;
        b.reset = function() {
            var a = this
              , e = this.options_.Promise || window.Promise;
            this.paused() || !e ? this.doReset_() : (e = this.play(),
            Gb(e.then(function() {
                return a.doReset_()
            })))
        }
        ;
        b.doReset_ = function() {
            this.tech_ && this.tech_.clearTracks("text");
            this.resetCache_();
            this.poster("");
            this.loadTech_(this.options_.techOrder[0], null);
            this.techCall_("reset");
            this.resetControlBarUI_();
            Pb(this) && this.trigger("playerreset")
        }
        ;
        b.resetControlBarUI_ = function() {
            this.resetProgressBar_();
            this.resetPlaybackRate_();
            this.resetVolumeBar_()
        }
        ;
        b.resetProgressBar_ = function() {
            this.currentTime(0);
            var a = this.controlBar || {}
              , e = a.durationDisplay;
            a = a.remainingTimeDisplay;
            e && e.updateContent();
            a && a.updateContent()
        }
        ;
        b.resetPlaybackRate_ = function() {
            this.playbackRate(this.defaultPlaybackRate());
            this.handleTechRateChange_()
        }
        ;
        b.resetVolumeBar_ = function() {
            this.volume(1);
            this.trigger("volumechange")
        }
        ;
        b.currentSources = function() {
            var a = this.currentSource()
              , e = [];
            0 !== Object.keys(a).length && e.push(a);
            return this.cache_.sources || e
        }
        ;
        b.currentSource = function() {
            return this.cache_.source || {}
        }
        ;
        b.currentSrc = function() {
            return this.currentSource() && this.currentSource().src || ""
        }
        ;
        b.currentType = function() {
            return this.currentSource() && this.currentSource().type || ""
        }
        ;
        b.preload = function(a) {
            if (void 0 !== a)
                this.techCall_("setPreload", a),
                this.options_.preload = a;
            else
                return this.techGet_("preload")
        }
        ;
        b.autoplay = function(a) {
            if (void 0 === a)
                return this.options_.autoplay || !1;
            if ("string" === typeof a && /(any|play|muted)/.test(a) || !0 === a && this.options_.normalizeAutoplay) {
                this.options_.autoplay = a;
                this.manualAutoplay_("string" === typeof a ? a : "play");
                var e = !1
            } else
                this.options_.autoplay = a ? !0 : !1;
            e = "undefined" === typeof e ? this.options_.autoplay : e;
            this.tech_ && this.techCall_("setAutoplay", e)
        }
        ;
        b.playsinline = function(a) {
            return void 0 !== a ? (this.techCall_("setPlaysinline", a),
            this.options_.playsinline = a,
            this) : this.techGet_("playsinline")
        }
        ;
        b.loop = function(a) {
            if (void 0 !== a)
                this.techCall_("setLoop", a),
                this.options_.loop = a;
            else
                return this.techGet_("loop")
        }
        ;
        b.poster = function(a) {
            if (void 0 === a)
                return this.poster_;
            a || (a = "");
            a !== this.poster_ && (this.poster_ = a,
            this.techCall_("setPoster", a),
            this.isPosterFromTech_ = !1,
            this.trigger("posterchange"))
        }
        ;
        b.handleTechPosterChange_ = function() {
            if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {
                var a = this.tech_.poster() || "";
                a !== this.poster_ && (this.poster_ = a,
                this.isPosterFromTech_ = !0,
                this.trigger("posterchange"))
            }
        }
        ;
        b.controls = function(a) {
            if (void 0 === a)
                return !!this.controls_;
            a = !!a;
            this.controls_ !== a && (this.controls_ = a,
            this.usingNativeControls() && this.techCall_("setControls", a),
            this.controls_ ? (this.removeClass("vjs-controls-disabled"),
            this.addClass("vjs-controls-enabled"),
            this.trigger("controlsenabled"),
            this.usingNativeControls() || this.addTechControlsListeners_()) : (this.removeClass("vjs-controls-enabled"),
            this.addClass("vjs-controls-disabled"),
            this.trigger("controlsdisabled"),
            this.usingNativeControls() || this.removeTechControlsListeners_()))
        }
        ;
        b.usingNativeControls = function(a) {
            if (void 0 === a)
                return !!this.usingNativeControls_;
            a = !!a;
            this.usingNativeControls_ !== a && ((this.usingNativeControls_ = a) ? (this.addClass("vjs-using-native-controls"),
            this.trigger("usingnativecontrols")) : (this.removeClass("vjs-using-native-controls"),
            this.trigger("usingcustomcontrols")))
        }
        ;
        b.error = function(a) {
            var e = this;
            if (void 0 === a)
                return this.error_ || null;
            cc("beforeerror").forEach(function(h) {
                h = h(e, a);
                wa(h) && !Array.isArray(h) || "string" === typeof h || "number" === typeof h || null === h ? a = h : e.log.error("please return a value that MediaError expects in beforeerror hooks")
            });
            if (this.options_.suppressNotSupportedError && a && 4 === a.code) {
                var l = function() {
                    this.error(a)
                };
                this.options_.suppressNotSupportedError = !1;
                this.any(["click", "touchstart"], l);
                this.one("loadstart", function() {
                    this.off(["click", "touchstart"], l)
                })
            } else
                null === a ? (this.error_ = a,
                this.removeClass("vjs-error"),
                this.errorDisplay && this.errorDisplay.close()) : (this.error_ = new eb(a),
                this.addClass("vjs-error"),
                va.error("(CODE:" + this.error_.code + " " + eb.errorTypes[this.error_.code] + ")", this.error_.message, this.error_),
                this.trigger("error"),
                cc("error").forEach(function(h) {
                    return h(e, e.error_)
                }))
        }
        ;
        b.reportUserActivity = function(a) {
            this.userActivity_ = !0
        }
        ;
        b.userActive = function(a) {
            if (void 0 === a)
                return this.userActive_;
            a = !!a;
            if (a !== this.userActive_)
                if (this.userActive_ = a)
                    this.userActivity_ = !0,
                    this.removeClass("vjs-user-inactive"),
                    this.addClass("vjs-user-active"),
                    this.trigger("useractive");
                else {
                    if (this.tech_)
                        this.tech_.one("mousemove", function(e) {
                            e.stopPropagation();
                            e.preventDefault()
                        });
                    this.userActivity_ = !1;
                    this.removeClass("vjs-user-active");
                    this.addClass("vjs-user-inactive");
                    this.trigger("userinactive")
                }
        }
        ;
        b.listenForUserActivity_ = function() {
            var a, e, l, h = Fa(this, this.reportUserActivity), g = function(p) {
                h();
                this.clearInterval(a)
            };
            this.on("mousedown", function() {
                h();
                this.clearInterval(a);
                a = this.setInterval(h, 250)
            });
            this.on("mousemove", function(p) {
                if (p.screenX !== e || p.screenY !== l)
                    e = p.screenX,
                    l = p.screenY,
                    h()
            });
            this.on("mouseup", g);
            this.on("mouseleave", g);
            !(g = this.getChild("controlBar")) || cb || Tb || (g.on("mouseenter", function(p) {
                0 !== this.player().options_.inactivityTimeout && (this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout);
                this.player().options_.inactivityTimeout = 0
            }),
            g.on("mouseleave", function(p) {
                this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout
            }));
            this.on("keydown", h);
            this.on("keyup", h);
            var q;
            this.setInterval(function() {
                if (this.userActivity_) {
                    this.userActivity_ = !1;
                    this.userActive(!0);
                    this.clearTimeout(q);
                    var p = this.options_.inactivityTimeout;
                    0 >= p || (q = this.setTimeout(function() {
                        this.userActivity_ || this.userActive(!1)
                    }, p))
                }
            }, 250)
        }
        ;
        b.playbackRate = function(a) {
            if (void 0 !== a)
                this.techCall_("setPlaybackRate", a);
            else
                return this.tech_ && this.tech_.featuresPlaybackRate ? this.cache_.lastPlaybackRate || this.techGet_("playbackRate") : 1
        }
        ;
        b.defaultPlaybackRate = function(a) {
            return void 0 !== a ? this.techCall_("setDefaultPlaybackRate", a) : this.tech_ && this.tech_.featuresPlaybackRate ? this.techGet_("defaultPlaybackRate") : 1
        }
        ;
        b.isAudio = function(a) {
            if (void 0 !== a)
                this.isAudio_ = !!a;
            else
                return !!this.isAudio_
        }
        ;
        b.enableAudioOnlyUI_ = function() {
            var a = this;
            this.addClass("vjs-audio-only-mode");
            var e = this.children()
              , l = this.getChild("ControlBar")
              , h = l && l.currentHeight();
            e.forEach(function(g) {
                g !== l && g.el_ && !g.hasClass("vjs-hidden") && (g.hide(),
                a.audioOnlyCache_.hiddenChildren.push(g))
            });
            this.audioOnlyCache_.playerHeight = this.currentHeight();
            this.height(h);
            this.trigger("audioonlymodechange")
        }
        ;
        b.disableAudioOnlyUI_ = function() {
            this.removeClass("vjs-audio-only-mode");
            this.audioOnlyCache_.hiddenChildren.forEach(function(a) {
                return a.show()
            });
            this.height(this.audioOnlyCache_.playerHeight);
            this.trigger("audioonlymodechange")
        }
        ;
        b.audioOnlyMode = function(a) {
            var e = this;
            if ("boolean" !== typeof a || a === this.audioOnlyMode_)
                return this.audioOnlyMode_;
            this.audioOnlyMode_ = a;
            var l = this.options_.Promise || window.Promise;
            if (l)
                return a ? (a = [],
                this.isInPictureInPicture() && a.push(this.exitPictureInPicture()),
                this.isFullscreen() && a.push(this.exitFullscreen()),
                this.audioPosterMode() && a.push(this.audioPosterMode(!1)),
                l.all(a).then(function() {
                    return e.enableAudioOnlyUI_()
                })) : l.resolve().then(function() {
                    return e.disableAudioOnlyUI_()
                });
            a ? (this.isInPictureInPicture() && this.exitPictureInPicture(),
            this.isFullscreen() && this.exitFullscreen(),
            this.enableAudioOnlyUI_()) : this.disableAudioOnlyUI_()
        }
        ;
        b.enablePosterModeUI_ = function() {
            (this.tech_ && this.tech_).hide();
            this.addClass("vjs-audio-poster-mode");
            this.trigger("audiopostermodechange")
        }
        ;
        b.disablePosterModeUI_ = function() {
            (this.tech_ && this.tech_).show();
            this.removeClass("vjs-audio-poster-mode");
            this.trigger("audiopostermodechange")
        }
        ;
        b.audioPosterMode = function(a) {
            var e = this;
            if ("boolean" !== typeof a || a === this.audioPosterMode_)
                return this.audioPosterMode_;
            this.audioPosterMode_ = a;
            var l = this.options_.Promise || window.Promise;
            if (l)
                return a ? this.audioOnlyMode() ? this.audioOnlyMode(!1).then(function() {
                    e.enablePosterModeUI_()
                }) : l.resolve().then(function() {
                    e.enablePosterModeUI_()
                }) : l.resolve().then(function() {
                    e.disablePosterModeUI_()
                });
            a ? (this.audioOnlyMode() && this.audioOnlyMode(!1),
            this.enablePosterModeUI_()) : this.disablePosterModeUI_()
        }
        ;
        b.addTextTrack = function(a, e, l) {
            if (this.tech_)
                return this.tech_.addTextTrack(a, e, l)
        }
        ;
        b.addRemoteTextTrack = function(a, e) {
            if (this.tech_)
                return this.tech_.addRemoteTextTrack(a, e)
        }
        ;
        b.removeRemoteTextTrack = function(a) {
            void 0 === a && (a = {});
            var e = a.track;
            e || (e = a);
            if (this.tech_)
                return this.tech_.removeRemoteTextTrack(e)
        }
        ;
        b.getVideoPlaybackQuality = function() {
            return this.techGet_("getVideoPlaybackQuality")
        }
        ;
        b.videoWidth = function() {
            return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0
        }
        ;
        b.videoHeight = function() {
            return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0
        }
        ;
        b.language = function(a) {
            if (void 0 === a)
                return this.language_;
            this.language_ !== String(a).toLowerCase() && (this.language_ = String(a).toLowerCase(),
            Pb(this) && this.trigger("languagechange"))
        }
        ;
        b.languages = function() {
            return Ea(c.prototype.options_.languages, this.languages_)
        }
        ;
        b.toJSON = function() {
            var a = Ea(this.options_)
              , e = a.tracks;
            a.tracks = [];
            for (var l = 0; l < e.length; l++) {
                var h = e[l];
                h = Ea(h);
                h.player = void 0;
                a.tracks[l] = h
            }
            return a
        }
        ;
        b.createModal = function(a, e) {
            var l = this;
            e = e || {};
            e.content = a || "";
            var h = new Hc(this,e);
            this.addChild(h);
            h.on("dispose", function() {
                l.removeChild(h)
            });
            h.open();
            return h
        }
        ;
        b.updateCurrentBreakpoint_ = function() {
            if (this.responsive())
                for (var a = this.currentBreakpoint(), e = this.currentWidth(), l = 0; l < ag.length; l++) {
                    var h = ag[l];
                    if (e <= this.breakpoints_[h]) {
                        if (a === h)
                            break;
                        a && this.removeClass(ie[a]);
                        this.addClass(ie[h]);
                        this.breakpoint_ = h;
                        break
                    }
                }
        }
        ;
        b.removeCurrentBreakpoint_ = function() {
            var a = this.currentBreakpointClass();
            this.breakpoint_ = "";
            a && this.removeClass(a)
        }
        ;
        b.breakpoints = function(a) {
            if (void 0 === a)
                return W(this.breakpoints_);
            this.breakpoint_ = "";
            this.breakpoints_ = W({}, Om, a);
            this.updateCurrentBreakpoint_();
            return W(this.breakpoints_)
        }
        ;
        b.responsive = function(a) {
            if (void 0 === a)
                return this.responsive_;
            a = !!a;
            if (a !== this.responsive_)
                return (this.responsive_ = a) ? (this.on("playerresize", this.boundUpdateCurrentBreakpoint_),
                this.updateCurrentBreakpoint_()) : (this.off("playerresize", this.boundUpdateCurrentBreakpoint_),
                this.removeCurrentBreakpoint_()),
                a
        }
        ;
        b.currentBreakpoint = function() {
            return this.breakpoint_
        }
        ;
        b.currentBreakpointClass = function() {
            return ie[this.breakpoint_] || ""
        }
        ;
        b.loadMedia = function(a, e) {
            var l = this;
            if (a && "object" === typeof a) {
                this.reset();
                this.cache_.media = Ea(a);
                a = this.cache_.media;
                var h = a.poster
                  , g = a.src
                  , q = a.textTracks;
                !a.artwork && h && (this.cache_.media.artwork = [{
                    src: h,
                    type: Nd(h)
                }]);
                g && this.src(g);
                h && this.poster(h);
                Array.isArray(q) && q.forEach(function(p) {
                    return l.addRemoteTextTrack(p, !1)
                });
                this.ready(e)
            }
        }
        ;
        b.getMedia = function() {
            if (!this.cache_.media) {
                var a = this.poster()
                  , e = this.currentSources()
                  , l = Array.prototype.map.call(this.remoteTextTracks(), function(h) {
                    return {
                        kind: h.kind,
                        label: h.label,
                        language: h.language,
                        src: h.src
                    }
                });
                e = {
                    src: e,
                    textTracks: l
                };
                a && (e.poster = a,
                e.artwork = [{
                    src: e.poster,
                    type: Nd(e.poster)
                }]);
                return e
            }
            return Ea(this.cache_.media)
        }
        ;
        c.getTagSettings = function(a) {
            var e = {
                sources: [],
                tracks: []
            }
              , l = Nb(a)
              , h = l["data-setup"];
            ic(a, "vjs-fill") && (l.fill = !0);
            ic(a, "vjs-fluid") && (l.fluid = !0);
            if (null !== h) {
                var g = null;
                try {
                    var q = JSON.parse(h || "{}", void 0)
                } catch (p) {
                    g = p
                }
                q = [g, q];
                h = q[0];
                q = q[1];
                h && va.error(h);
                W(l, q)
            }
            W(e, l);
            if (a.hasChildNodes())
                for (a = a.childNodes,
                l = 0,
                h = a.length; l < h; l++)
                    q = a[l],
                    g = q.nodeName.toLowerCase(),
                    "source" === g ? e.sources.push(Nb(q)) : "track" === g && e.tracks.push(Nb(q));
            return e
        }
        ;
        b.flexNotSupported_ = function() {
            var a = document.createElement("i");
            return !("flexBasis"in a.style || "webkitFlexBasis"in a.style || "mozFlexBasis"in a.style || "msFlexBasis"in a.style || "msFlexOrder"in a.style)
        }
        ;
        b.debug = function(a) {
            if (void 0 === a)
                return this.debugEnabled_;
            a ? (this.trigger("debugon"),
            this.previousLogLevel_ = this.log.level,
            this.log.level("debug"),
            this.debugEnabled_ = !0) : (this.trigger("debugoff"),
            this.log.level(this.previousLogLevel_),
            this.previousLogLevel_ = void 0,
            this.debugEnabled_ = !1)
        }
        ;
        b.playbackRates = function(a) {
            if (void 0 === a)
                return this.cache_.playbackRates;
            Array.isArray(a) && a.every(function(e) {
                return "number" === typeof e
            }) && (this.cache_.playbackRates = a,
            this.trigger("playbackrateschange"))
        }
        ;
        return c
    }(aa);
    hb.names.forEach(function(d) {
        var c = hb[d];
        Oa.prototype[c.getterName] = function() {
            if (this.tech_)
                return this.tech_[c.getterName]();
            this[c.privateName] = this[c.privateName] || new c.ListClass;
            return this[c.privateName]
        }
    });
    Oa.prototype.crossorigin = Oa.prototype.crossOrigin;
    Oa.players = {};
    var rd = window.navigator;
    Oa.prototype.options_ = {
        techOrder: Ba.defaultTechOrder_,
        html5: {},
        inactivityTimeout: 2E3,
        playbackRates: [],
        liveui: !1,
        children: "mediaLoader posterImage textTrackDisplay loadingSpinner bigPlayButton liveTracker controlBar errorDisplay textTrackSettings resizeManager".split(" "),
        language: rd && (rd.languages && rd.languages[0] || rd.userLanguage || rd.language) || "en",
        languages: {},
        notSupportedMessage: "No compatible source was found for this media.",
        normalizeAutoplay: !1,
        fullscreen: {
            options: {
                navigationUI: "hide"
            }
        },
        breakpoints: {},
        responsive: !1,
        audioOnlyMode: !1,
        audioPosterMode: !1
    };
    ["ended", "seeking", "seekable", "networkState", "readyState"].forEach(function(d) {
        Oa.prototype[d] = function() {
            return this.techGet_(d)
        }
    });
    cj.forEach(function(d) {
        Oa.prototype["handleTech" + Ka(d) + "_"] = function() {
            return this.trigger(d)
        }
    });
    aa.registerComponent("Player", Oa);
    var dj = ha(function(d) {
        function c(b, a) {
            d.exports = c = Object.setPrototypeOf || function(e, l) {
                e.__proto__ = l;
                return e
            }
            ;
            return c(b, a)
        }
        d.exports = c
    })
      , Pm = function() {
        if ("undefined" === typeof Reflect || !Reflect.construct || Reflect.construct.sham)
            return !1;
        if ("function" === typeof Proxy)
            return !0;
        try {
            return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})),
            !0
        } catch (d) {
            return !1
        }
    }
      , Qm = ha(function(d) {
        function c(b, a, e) {
            Pm() ? d.exports = c = Reflect.construct : d.exports = c = function(l, h, g) {
                var q = [null];
                q.push.apply(q, h);
                l = new (Function.bind.apply(l, q));
                g && dj(l, g.prototype);
                return l
            }
            ;
            return c.apply(null, arguments)
        }
        d.exports = c
    })
      , Wb = {}
      , je = function(d) {
        return Wb.hasOwnProperty(d) ? Wb[d] : void 0
    }
      , ke = function(d, c, b) {
        b = (b ? "before" : "") + "pluginsetup";
        d.trigger(b, c);
        d.trigger(b + ":" + c.name, c)
    }
      , Rm = function(d, c) {
        var b = function() {
            ke(this, {
                name: d,
                plugin: c,
                instance: null
            }, !0);
            var a = c.apply(this, arguments);
            this.activePlugins_ = this.activePlugins_ || {};
            this.activePlugins_[d] = !0;
            ke(this, {
                name: d,
                plugin: c,
                instance: a
            });
            return a
        };
        Object.keys(c).forEach(function(a) {
            b[a] = c[a]
        });
        return b
    }
      , ej = function(d, c) {
        c.prototype.name = d;
        return function() {
            ke(this, {
                name: d,
                plugin: c,
                instance: null
            }, !0);
            for (var b = arguments.length, a = Array(b), e = 0; e < b; e++)
                a[e] = arguments[e];
            var l = Qm(c, [this].concat(a));
            this[d] = function() {
                return l
            }
            ;
            ke(this, l.getEventHash());
            return l
        }
    }
      , Hb = function() {
        function d(b) {
            if (this.constructor === d)
                throw Error("Plugin must be sub-classed; not directly instantiated.");
            this.player = b;
            this.log || (this.log = this.player.log.createLogger(this.name));
            Xe(this);
            delete this.trigger;
            jh(this, this.constructor.defaultState);
            var a = this.name;
            b.activePlugins_ = b.activePlugins_ || {};
            b.activePlugins_[a] = !0;
            this.dispose = this.dispose.bind(this);
            b.on("dispose", this.dispose)
        }
        var c = d.prototype;
        c.version = function() {
            return this.constructor.VERSION
        }
        ;
        c.getEventHash = function(b) {
            void 0 === b && (b = {});
            b.name = this.name;
            b.plugin = this.constructor;
            b.instance = this;
            return b
        }
        ;
        c.trigger = function(b, a) {
            void 0 === a && (a = {});
            return uc(this.eventBusEl_, b, this.getEventHash(a))
        }
        ;
        c.handleStateChanged = function(b) {}
        ;
        c.dispose = function() {
            var b = this.name
              , a = this.player;
            this.trigger("dispose");
            this.off();
            a.off("dispose", this.dispose);
            a.activePlugins_[b] = !1;
            this.player = this.state = null;
            a[b] = ej(b, Wb[b])
        }
        ;
        d.isBasic = function(b) {
            b = "string" === typeof b ? je(b) : b;
            return "function" === typeof b && !d.prototype.isPrototypeOf(b.prototype)
        }
        ;
        d.registerPlugin = function(b, a) {
            if ("string" !== typeof b)
                throw Error('Illegal plugin name, "' + b + '", must be a string, was ' + typeof b + ".");
            if (Wb.hasOwnProperty(b))
                va.warn('A plugin named "' + b + '" already exists. You may want to avoid re-registering plugins!');
            else if (Oa.prototype.hasOwnProperty(b))
                throw Error('Illegal plugin name, "' + b + '", cannot share a name with an existing player method!');
            if ("function" !== typeof a)
                throw Error('Illegal plugin for "' + b + '", must be a function, was ' + typeof a + ".");
            Wb[b] = a;
            "plugin" !== b && (d.isBasic(a) ? Oa.prototype[b] = Rm(b, a) : Oa.prototype[b] = ej(b, a));
            return a
        }
        ;
        d.deregisterPlugin = function(b) {
            if ("plugin" === b)
                throw Error("Cannot de-register base plugin.");
            Wb.hasOwnProperty(b) && (delete Wb[b],
            delete Oa.prototype[b])
        }
        ;
        d.getPlugins = function(b) {
            void 0 === b && (b = Object.keys(Wb));
            var a;
            b.forEach(function(e) {
                var l = je(e);
                l && (a = a || {},
                a[e] = l)
            });
            return a
        }
        ;
        d.getPluginVersion = function(b) {
            return (b = je(b)) && b.VERSION || ""
        }
        ;
        return d
    }();
    Hb.getPlugin = je;
    Hb.BASE_PLUGIN_NAME = "plugin";
    Hb.registerPlugin("plugin", Hb);
    Oa.prototype.usingPlugin = function(d) {
        return !!this.activePlugins_ && !0 === this.activePlugins_[d]
    }
    ;
    Oa.prototype.hasPlugin = function(d) {
        return !!Wb.hasOwnProperty(d)
    }
    ;
    var Sm = function(d, c) {
        if ("function" !== typeof c && null !== c)
            throw new TypeError("Super expression must either be null or a function");
        d.prototype = Object.create(c && c.prototype, {
            constructor: {
                value: d,
                writable: !0,
                configurable: !0
            }
        });
        c && dj(d, c)
    }
      , wh = function(d) {
        return 0 === d.indexOf("#") ? d.slice(1) : d
    };
    N.hooks_ = Sb;
    N.hooks = cc;
    N.hook = function(d, c) {
        cc(d, c)
    }
    ;
    N.hookOnce = function(d, c) {
        cc(d, [].concat(c).map(function(b) {
            return function e() {
                Wh(d, e);
                return b.apply(void 0, arguments)
            }
        }))
    }
    ;
    N.removeHook = Wh;
    if (!0 !== window.VIDEOJS_NO_DYNAMIC_STYLE && ea()) {
        var le = bc(".vjs-styles-defaults");
        if (!le) {
            le = gi("vjs-styles-defaults");
            var bg = bc("head");
            bg && bg.insertBefore(le, bg.firstChild);
            hi(le, "\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    ")
        }
    }
    Te(1, N);
    N.VERSION = "7.20.3";
    N.options = Oa.prototype.options_;
    N.getPlayers = function() {
        return Oa.players
    }
    ;
    N.getPlayer = function(d) {
        var c = Oa.players;
        if ("string" === typeof d) {
            d = wh(d);
            var b = c[d];
            if (b)
                return b;
            d = bc("#" + d)
        }
        if (ka(d) && (b = d,
        d = b.player,
        b = b.playerId,
        d || c[b]))
            return d || c[b]
    }
    ;
    N.getAllPlayers = function() {
        return Object.keys(Oa.players).map(function(d) {
            return Oa.players[d]
        }).filter(Boolean)
    }
    ;
    N.players = Oa.players;
    N.getComponent = aa.getComponent;
    N.registerComponent = function(d, c) {
        Ba.isTech(c) && va.warn("The " + d + " tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)");
        aa.registerComponent.call(aa, d, c)
    }
    ;
    N.getTech = Ba.getTech;
    N.registerTech = Ba.registerTech;
    N.use = function(d, c) {
        lc[d] = lc[d] || [];
        lc[d].push(c)
    }
    ;
    Object.defineProperty(N, "middleware", {
        value: {},
        writeable: !1,
        enumerable: !0
    });
    Object.defineProperty(N.middleware, "TERMINATOR", {
        value: Md,
        writeable: !1,
        enumerable: !0
    });
    N.browser = Ul;
    N.TOUCH_ENABLED = Fc;
    N.extend = function(d, c) {
        void 0 === c && (c = {});
        var b = function() {
            d.apply(this, arguments)
        }
          , a = {};
        "object" === typeof c ? (c.constructor !== Object.prototype.constructor && (b = c.constructor),
        a = c) : "function" === typeof c && (b = c);
        Sm(b, d);
        d && (b.super_ = d);
        for (var e in a)
            a.hasOwnProperty(e) && (b.prototype[e] = a[e]);
        return b
    }
    ;
    N.mergeOptions = Ea;
    N.bind = Fa;
    N.registerPlugin = Hb.registerPlugin;
    N.deregisterPlugin = Hb.deregisterPlugin;
    N.plugin = function(d, c) {
        va.warn("videojs.plugin() is deprecated; use videojs.registerPlugin() instead");
        return Hb.registerPlugin(d, c)
    }
    ;
    N.getPlugins = Hb.getPlugins;
    N.getPlugin = Hb.getPlugin;
    N.getPluginVersion = Hb.getPluginVersion;
    N.addLanguage = function(d, c) {
        var b;
        d = ("" + d).toLowerCase();
        N.options.languages = Ea(N.options.languages, (b = {},
        b[d] = c,
        b));
        return N.options.languages[d]
    }
    ;
    N.log = va;
    N.createLogger = Yh;
    N.createTimeRange = N.createTimeRanges = jc;
    N.formatTime = wc;
    N.setFormatTime = function(d) {
        gf = d
    }
    ;
    N.resetFormatTime = function() {
        gf = zi
    }
    ;
    N.parseUrl = Ef;
    N.isCrossOrigin = de;
    N.EventTarget = Ta;
    N.on = rb;
    N.one = Kd;
    N.off = Za;
    N.trigger = uc;
    N.xhr = vb;
    N.TextTrack = nd;
    N.AudioTrack = si;
    N.VideoTrack = ti;
    "isEl isTextNode createEl hasClass addClass removeClass toggleClass setAttributes getAttributes emptyEl appendContent insertContent".split(" ").forEach(function(d) {
        N[d] = function() {
            va.warn("videojs." + d + "() is deprecated; use videojs.dom." + d + "() instead");
            return fi[d].apply(null, arguments)
        }
    });
    N.computedStyle = pa;
    N.dom = fi;
    N.url = im;
    N.defineLazyProperty = Zf;
    N.addLanguage("en", {
        "Non-Fullscreen": "Exit Fullscreen"
    });
    var me = ha(function(d, c) {
        (function(b) {
            var a = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/?#]*\/)*[^;?#]*)?(;[^?#]*)?(\?[^#]*)?(#[^]*)?$/
              , e = /^([^\/?#]*)([^]*)$/
              , l = /(?:\/|^)\.(?=\/)/g
              , h = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g
              , g = {
                buildAbsoluteURL: function(q, p, f) {
                    f = f || {};
                    q = q.trim();
                    p = p.trim();
                    if (!p) {
                        if (!f.alwaysNormalize)
                            return q;
                        f = g.parseURL(q);
                        if (!f)
                            throw Error("Error trying to parse base URL.");
                        f.path = g.normalizePath(f.path);
                        return g.buildURLFromParts(f)
                    }
                    var m = g.parseURL(p);
                    if (!m)
                        throw Error("Error trying to parse relative URL.");
                    if (m.scheme) {
                        if (!f.alwaysNormalize)
                            return p;
                        m.path = g.normalizePath(m.path);
                        return g.buildURLFromParts(m)
                    }
                    p = g.parseURL(q);
                    if (!p)
                        throw Error("Error trying to parse base URL.");
                    !p.netLoc && p.path && "/" !== p.path[0] && (q = e.exec(p.path),
                    p.netLoc = q[1],
                    p.path = q[2]);
                    p.netLoc && !p.path && (p.path = "/");
                    q = {
                        scheme: p.scheme,
                        netLoc: m.netLoc,
                        path: null,
                        params: m.params,
                        query: m.query,
                        fragment: m.fragment
                    };
                    m.netLoc || (q.netLoc = p.netLoc,
                    "/" !== m.path[0] && (m.path ? (p = p.path,
                    p = p.substring(0, p.lastIndexOf("/") + 1) + m.path,
                    q.path = g.normalizePath(p)) : (q.path = p.path,
                    m.params || (q.params = p.params,
                    m.query || (q.query = p.query)))));
                    null === q.path && (q.path = f.alwaysNormalize ? g.normalizePath(m.path) : m.path);
                    return g.buildURLFromParts(q)
                },
                parseURL: function(q) {
                    return (q = a.exec(q)) ? {
                        scheme: q[1] || "",
                        netLoc: q[2] || "",
                        path: q[3] || "",
                        params: q[4] || "",
                        query: q[5] || "",
                        fragment: q[6] || ""
                    } : null
                },
                normalizePath: function(q) {
                    for (q = q.split("").reverse().join("").replace(l, ""); q.length !== (q = q.replace(h, "")).length; )
                        ;
                    return q.split("").reverse().join("")
                },
                buildURLFromParts: function(q) {
                    return q.scheme + q.netLoc + q.path + q.params + q.query + q.fragment
                }
            };
            d.exports = g
        }
        )()
    })
      , cg = function() {
        function d() {
            this.listeners = {}
        }
        var c = d.prototype;
        c.on = function(b, a) {
            this.listeners[b] || (this.listeners[b] = []);
            this.listeners[b].push(a)
        }
        ;
        c.off = function(b, a) {
            if (!this.listeners[b])
                return !1;
            a = this.listeners[b].indexOf(a);
            this.listeners[b] = this.listeners[b].slice(0);
            this.listeners[b].splice(a, 1);
            return -1 < a
        }
        ;
        c.trigger = function(b) {
            var a = this.listeners[b];
            if (a)
                if (2 === arguments.length)
                    for (var e = a.length, l = 0; l < e; ++l)
                        a[l].call(this, arguments[1]);
                else {
                    e = Array.prototype.slice.call(arguments, 1);
                    l = a.length;
                    for (var h = 0; h < l; ++h)
                        a[h].apply(this, e)
                }
        }
        ;
        c.dispose = function() {
            this.listeners = {}
        }
        ;
        c.pipe = function(b) {
            this.on("data", function(a) {
                b.push(a)
            })
        }
        ;
        return d
    }()
      , Tm = function(d) {
        function c() {
            var b = d.call(this) || this;
            b.buffer = "";
            return b
        }
        ia(c, d);
        c.prototype.push = function(b) {
            this.buffer += b;
            for (b = this.buffer.indexOf("\n"); -1 < b; b = this.buffer.indexOf("\n"))
                this.trigger("data", this.buffer.substring(0, b)),
                this.buffer = this.buffer.substring(b + 1)
        }
        ;
        return c
    }(cg)
      , Um = String.fromCharCode(9)
      , dg = function(d) {
        d = /([0-9.]*)?@?([0-9.]*)?/.exec(d || "");
        var c = {};
        d[1] && (c.length = parseInt(d[1], 10));
        d[2] && (c.offset = parseInt(d[2], 10));
        return c
    }
      , Bb = function(d) {
        d = d.split(/(?:^|,)((?:[^=]*)=(?:"[^"]*"|[^,]*))/);
        for (var c = {}, b = d.length, a; b--; )
            "" !== d[b] && (a = /([^=]*)=(.*)/.exec(d[b]).slice(1),
            a[0] = a[0].replace(/^\s+|\s+$/g, ""),
            a[1] = a[1].replace(/^\s+|\s+$/g, ""),
            a[1] = a[1].replace(/^['"](.*)['"]$/g, "$1"),
            c[a[0]] = a[1]);
        return c
    }
      , Vm = function(d) {
        function c() {
            var a = d.call(this) || this;
            a.customParsers = [];
            a.tagMappers = [];
            return a
        }
        ia(c, d);
        var b = c.prototype;
        b.push = function(a) {
            var e = this, l, h;
            a = a.trim();
            0 !== a.length && ("#" !== a[0] ? this.trigger("data", {
                type: "uri",
                uri: a
            }) : this.tagMappers.reduce(function(g, q) {
                q = q(a);
                return q === a ? g : g.concat([q])
            }, [a]).forEach(function(g) {
                for (var q = 0; q < e.customParsers.length; q++)
                    if (e.customParsers[q].call(e, g))
                        return;
                0 !== g.indexOf("#EXT") ? e.trigger("data", {
                    type: "comment",
                    text: g.slice(1)
                }) : (g = g.replace("\r", ""),
                (l = /^#EXTM3U/.exec(g)) ? e.trigger("data", {
                    type: "tag",
                    tagType: "m3u"
                }) : (l = /^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "inf"
                },
                l[1] && (h.duration = parseFloat(l[1])),
                l[2] && (h.title = l[2]),
                e.trigger("data", h)) : (l = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "targetduration"
                },
                l[1] && (h.duration = parseInt(l[1], 10)),
                e.trigger("data", h)) : (l = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "version"
                },
                l[1] && (h.version = parseInt(l[1], 10)),
                e.trigger("data", h)) : (l = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "media-sequence"
                },
                l[1] && (h.number = parseInt(l[1], 10)),
                e.trigger("data", h)) : (l = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "discontinuity-sequence"
                },
                l[1] && (h.number = parseInt(l[1], 10)),
                e.trigger("data", h)) : (l = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "playlist-type"
                },
                l[1] && (h.playlistType = l[1]),
                e.trigger("data", h)) : (l = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(g)) ? (h = Fb(dg(l[1]), {
                    type: "tag",
                    tagType: "byterange"
                }),
                e.trigger("data", h)) : (l = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "allow-cache"
                },
                l[1] && (h.allowed = !/NO/.test(l[1])),
                e.trigger("data", h)) : (l = /^#EXT-X-MAP:?(.*)$/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "map"
                },
                l[1] && (g = Bb(l[1]),
                g.URI && (h.uri = g.URI),
                g.BYTERANGE && (h.byterange = dg(g.BYTERANGE))),
                e.trigger("data", h)) : (l = /^#EXT-X-STREAM-INF:?(.*)$/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "stream-inf"
                },
                l[1] && (h.attributes = Bb(l[1]),
                h.attributes.RESOLUTION && (g = h.attributes.RESOLUTION.split("x"),
                q = {},
                g[0] && (q.width = parseInt(g[0], 10)),
                g[1] && (q.height = parseInt(g[1], 10)),
                h.attributes.RESOLUTION = q),
                h.attributes.BANDWIDTH && (h.attributes.BANDWIDTH = parseInt(h.attributes.BANDWIDTH, 10)),
                h.attributes["PROGRAM-ID"] && (h.attributes["PROGRAM-ID"] = parseInt(h.attributes["PROGRAM-ID"], 10))),
                e.trigger("data", h)) : (l = /^#EXT-X-MEDIA:?(.*)$/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "media"
                },
                l[1] && (h.attributes = Bb(l[1])),
                e.trigger("data", h)) : (l = /^#EXT-X-ENDLIST/.exec(g)) ? e.trigger("data", {
                    type: "tag",
                    tagType: "endlist"
                }) : (l = /^#EXT-X-DISCONTINUITY/.exec(g)) ? e.trigger("data", {
                    type: "tag",
                    tagType: "discontinuity"
                }) : (l = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "program-date-time"
                },
                l[1] && (h.dateTimeString = l[1],
                h.dateTimeObject = new Date(l[1])),
                e.trigger("data", h)) : (l = /^#EXT-X-KEY:?(.*)$/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "key"
                },
                l[1] && (h.attributes = Bb(l[1]),
                h.attributes.IV && ("0x" === h.attributes.IV.substring(0, 2).toLowerCase() && (h.attributes.IV = h.attributes.IV.substring(2)),
                h.attributes.IV = h.attributes.IV.match(/.{8}/g),
                h.attributes.IV[0] = parseInt(h.attributes.IV[0], 16),
                h.attributes.IV[1] = parseInt(h.attributes.IV[1], 16),
                h.attributes.IV[2] = parseInt(h.attributes.IV[2], 16),
                h.attributes.IV[3] = parseInt(h.attributes.IV[3], 16),
                h.attributes.IV = new Uint32Array(h.attributes.IV))),
                e.trigger("data", h)) : (l = /^#EXT-X-START:?(.*)$/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "start"
                },
                l[1] && (h.attributes = Bb(l[1]),
                h.attributes["TIME-OFFSET"] = parseFloat(h.attributes["TIME-OFFSET"]),
                h.attributes.PRECISE = /YES/.test(h.attributes.PRECISE)),
                e.trigger("data", h)) : (l = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "cue-out-cont"
                },
                h.data = l[1] ? l[1] : "",
                e.trigger("data", h)) : (l = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "cue-out"
                },
                h.data = l[1] ? l[1] : "",
                e.trigger("data", h)) : (l = /^#EXT-X-CUE-IN:?(.*)?$/.exec(g)) ? (h = {
                    type: "tag",
                    tagType: "cue-in"
                },
                h.data = l[1] ? l[1] : "",
                e.trigger("data", h)) : (l = /^#EXT-X-SKIP:(.*)$/.exec(g)) && l[1] ? (h = {
                    type: "tag",
                    tagType: "skip"
                },
                h.attributes = Bb(l[1]),
                h.attributes.hasOwnProperty("SKIPPED-SEGMENTS") && (h.attributes["SKIPPED-SEGMENTS"] = parseInt(h.attributes["SKIPPED-SEGMENTS"], 10)),
                h.attributes.hasOwnProperty("RECENTLY-REMOVED-DATERANGES") && (h.attributes["RECENTLY-REMOVED-DATERANGES"] = h.attributes["RECENTLY-REMOVED-DATERANGES"].split(Um)),
                e.trigger("data", h)) : (l = /^#EXT-X-PART:(.*)$/.exec(g)) && l[1] ? (h = {
                    type: "tag",
                    tagType: "part"
                },
                h.attributes = Bb(l[1]),
                ["DURATION"].forEach(function(p) {
                    h.attributes.hasOwnProperty(p) && (h.attributes[p] = parseFloat(h.attributes[p]))
                }),
                ["INDEPENDENT", "GAP"].forEach(function(p) {
                    h.attributes.hasOwnProperty(p) && (h.attributes[p] = /YES/.test(h.attributes[p]))
                }),
                h.attributes.hasOwnProperty("BYTERANGE") && (h.attributes.byterange = dg(h.attributes.BYTERANGE)),
                e.trigger("data", h)) : (l = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(g)) && l[1] ? (h = {
                    type: "tag",
                    tagType: "server-control"
                },
                h.attributes = Bb(l[1]),
                ["CAN-SKIP-UNTIL", "PART-HOLD-BACK", "HOLD-BACK"].forEach(function(p) {
                    h.attributes.hasOwnProperty(p) && (h.attributes[p] = parseFloat(h.attributes[p]))
                }),
                ["CAN-SKIP-DATERANGES", "CAN-BLOCK-RELOAD"].forEach(function(p) {
                    h.attributes.hasOwnProperty(p) && (h.attributes[p] = /YES/.test(h.attributes[p]))
                }),
                e.trigger("data", h)) : (l = /^#EXT-X-PART-INF:(.*)$/.exec(g)) && l[1] ? (h = {
                    type: "tag",
                    tagType: "part-inf"
                },
                h.attributes = Bb(l[1]),
                ["PART-TARGET"].forEach(function(p) {
                    h.attributes.hasOwnProperty(p) && (h.attributes[p] = parseFloat(h.attributes[p]))
                }),
                e.trigger("data", h)) : (l = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(g)) && l[1] ? (h = {
                    type: "tag",
                    tagType: "preload-hint"
                },
                h.attributes = Bb(l[1]),
                ["BYTERANGE-START", "BYTERANGE-LENGTH"].forEach(function(p) {
                    h.attributes.hasOwnProperty(p) && (h.attributes[p] = parseInt(h.attributes[p], 10),
                    h.attributes.byterange = h.attributes.byterange || {},
                    h.attributes.byterange["BYTERANGE-LENGTH" === p ? "length" : "offset"] = h.attributes[p],
                    delete h.attributes[p])
                }),
                e.trigger("data", h)) : (l = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(g)) && l[1] ? (h = {
                    type: "tag",
                    tagType: "rendition-report"
                },
                h.attributes = Bb(l[1]),
                ["LAST-MSN", "LAST-PART"].forEach(function(p) {
                    h.attributes.hasOwnProperty(p) && (h.attributes[p] = parseInt(h.attributes[p], 10))
                }),
                e.trigger("data", h)) : e.trigger("data", {
                    type: "tag",
                    data: g.slice(4)
                }))
            }))
        }
        ;
        b.addParser = function(a) {
            var e = this
              , l = a.expression
              , h = a.customType
              , g = a.dataParser
              , q = a.segment;
            "function" !== typeof g && (g = function(p) {
                return p
            }
            );
            this.customParsers.push(function(p) {
                if (l.exec(p))
                    return e.trigger("data", {
                        type: "custom",
                        data: g(p),
                        customType: h,
                        segment: q
                    }),
                    !0
            })
        }
        ;
        b.addTagMapper = function(a) {
            var e = a.expression
              , l = a.map;
            this.tagMappers.push(function(h) {
                return e.test(h) ? l(h) : h
            })
        }
        ;
        return c
    }(cg)
      , Wm = function(d) {
        return d.toLowerCase().replace(/-(\w)/g, function(c) {
            return c[1].toUpperCase()
        })
    }
      , Oc = function(d) {
        var c = {};
        Object.keys(d).forEach(function(b) {
            c[Wm(b)] = d[b]
        });
        return c
    }
      , eg = function(d) {
        var c = d.serverControl
          , b = d.targetDuration;
        d = d.partTargetDuration;
        if (c) {
            var a = b && 3 * b
              , e = d && 2 * d;
            b && !c.hasOwnProperty("holdBack") && (c.holdBack = a,
            this.trigger("info", {
                message: "#EXT-X-SERVER-CONTROL defaulting HOLD-BACK to targetDuration * 3 (" + a + ")."
            }));
            a && c.holdBack < a && (this.trigger("warn", {
                message: "#EXT-X-SERVER-CONTROL clamping HOLD-BACK (" + c.holdBack + ") to targetDuration * 3 (" + a + ")"
            }),
            c.holdBack = a);
            d && !c.hasOwnProperty("partHoldBack") && (c.partHoldBack = 3 * d,
            this.trigger("info", {
                message: "#EXT-X-SERVER-CONTROL defaulting PART-HOLD-BACK to partTargetDuration * 3 (" + c.partHoldBack + ")."
            }));
            d && c.partHoldBack < e && (this.trigger("warn", {
                message: "#EXT-X-SERVER-CONTROL clamping PART-HOLD-BACK (" + c.partHoldBack + ") to partTargetDuration * 2 (" + e + ")."
            }),
            c.partHoldBack = e)
        }
    }
      , Xm = function(d) {
        function c() {
            var a = d.call(this) || this;
            a.lineStream = new Tm;
            a.parseStream = new Vm;
            a.lineStream.pipe(a.parseStream);
            var e = sa(a), l = [], h = {}, g, q, p = !1, f = function() {}, m = {
                AUDIO: {},
                VIDEO: {},
                "CLOSED-CAPTIONS": {},
                SUBTITLES: {}
            }, k = 0;
            a.manifest = {
                allowCache: !0,
                discontinuityStarts: [],
                segments: []
            };
            var r = 0
              , u = 0;
            a.on("end", function() {
                h.uri || !h.parts && !h.preloadHints || (!h.map && g && (h.map = g),
                !h.key && q && (h.key = q),
                h.timeline || "number" !== typeof k || (h.timeline = k),
                a.manifest.preloadSegment = h)
            });
            a.parseStream.on("data", function(t) {
                var x, F;
                ({
                    tag: function() {
                        ({
                            version: function() {
                                t.version && (this.manifest.version = t.version)
                            },
                            "allow-cache": function() {
                                this.manifest.allowCache = t.allowed;
                                "allowed"in t || (this.trigger("info", {
                                    message: "defaulting allowCache to YES"
                                }),
                                this.manifest.allowCache = !0)
                            },
                            byterange: function() {
                                var K = {};
                                "length"in t && (h.byterange = K,
                                K.length = t.length,
                                "offset"in t || (t.offset = r));
                                "offset"in t && (h.byterange = K,
                                K.offset = t.offset);
                                r = K.offset + K.length
                            },
                            endlist: function() {
                                this.manifest.endList = !0
                            },
                            inf: function() {
                                "mediaSequence"in this.manifest || (this.manifest.mediaSequence = 0,
                                this.trigger("info", {
                                    message: "defaulting media sequence to zero"
                                }));
                                "discontinuitySequence"in this.manifest || (this.manifest.discontinuitySequence = 0,
                                this.trigger("info", {
                                    message: "defaulting discontinuity sequence to zero"
                                }));
                                0 < t.duration && (h.duration = t.duration);
                                0 === t.duration && (h.duration = .01,
                                this.trigger("info", {
                                    message: "updating zero segment duration to a small value"
                                }));
                                this.manifest.segments = l
                            },
                            key: function() {
                                if (t.attributes)
                                    if ("NONE" === t.attributes.METHOD)
                                        q = null;
                                    else if (t.attributes.URI)
                                        if ("com.apple.streamingkeydelivery" === t.attributes.KEYFORMAT)
                                            this.manifest.contentProtection = this.manifest.contentProtection || {},
                                            this.manifest.contentProtection["com.apple.fps.1_0"] = {
                                                attributes: t.attributes
                                            };
                                        else if ("com.microsoft.playready" === t.attributes.KEYFORMAT)
                                            this.manifest.contentProtection = this.manifest.contentProtection || {},
                                            this.manifest.contentProtection["com.microsoft.playready"] = {
                                                uri: t.attributes.URI
                                            };
                                        else if ("urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed" === t.attributes.KEYFORMAT)
                                            if (-1 === ["SAMPLE-AES", "SAMPLE-AES-CTR", "SAMPLE-AES-CENC"].indexOf(t.attributes.METHOD))
                                                this.trigger("warn", {
                                                    message: "invalid key method provided for Widevine"
                                                });
                                            else if ("SAMPLE-AES-CENC" === t.attributes.METHOD && this.trigger("warn", {
                                                message: "SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead"
                                            }),
                                            "data:text/plain;base64," !== t.attributes.URI.substring(0, 23))
                                                this.trigger("warn", {
                                                    message: "invalid key URI provided for Widevine"
                                                });
                                            else if (t.attributes.KEYID && "0x" === t.attributes.KEYID.substring(0, 2)) {
                                                this.manifest.contentProtection = this.manifest.contentProtection || {};
                                                var K = this.manifest.contentProtection
                                                  , M = {
                                                    schemeIdUri: t.attributes.KEYFORMAT,
                                                    keyId: t.attributes.KEYID.substring(2)
                                                };
                                                var P = t.attributes.URI.split(",")[1];
                                                P = window.atob ? window.atob(P) : Buffer.from(P, "base64").toString("binary");
                                                for (var I = new Uint8Array(P.length), L = 0; L < P.length; L++)
                                                    I[L] = P.charCodeAt(L);
                                                K["com.widevine.alpha"] = {
                                                    attributes: M,
                                                    pssh: I
                                                }
                                            } else
                                                this.trigger("warn", {
                                                    message: "invalid key ID provided for Widevine"
                                                });
                                        else
                                            t.attributes.METHOD || this.trigger("warn", {
                                                message: "defaulting key method to AES-128"
                                            }),
                                            q = {
                                                method: t.attributes.METHOD || "AES-128",
                                                uri: t.attributes.URI
                                            },
                                            "undefined" !== typeof t.attributes.IV && (q.iv = t.attributes.IV);
                                    else
                                        this.trigger("warn", {
                                            message: "ignoring key declaration without URI"
                                        });
                                else
                                    this.trigger("warn", {
                                        message: "ignoring key declaration without attribute list"
                                    })
                            },
                            "media-sequence": function() {
                                isFinite(t.number) ? this.manifest.mediaSequence = t.number : this.trigger("warn", {
                                    message: "ignoring invalid media sequence: " + t.number
                                })
                            },
                            "discontinuity-sequence": function() {
                                isFinite(t.number) ? k = this.manifest.discontinuitySequence = t.number : this.trigger("warn", {
                                    message: "ignoring invalid discontinuity sequence: " + t.number
                                })
                            },
                            "playlist-type": function() {
                                /VOD|EVENT/.test(t.playlistType) ? this.manifest.playlistType = t.playlistType : this.trigger("warn", {
                                    message: "ignoring unknown playlist type: " + t.playlist
                                })
                            },
                            map: function() {
                                g = {};
                                t.uri && (g.uri = t.uri);
                                t.byterange && (g.byterange = t.byterange);
                                q && (g.key = q)
                            },
                            "stream-inf": function() {
                                this.manifest.playlists = l;
                                this.manifest.mediaGroups = this.manifest.mediaGroups || m;
                                t.attributes ? (h.attributes || (h.attributes = {}),
                                Fb(h.attributes, t.attributes)) : this.trigger("warn", {
                                    message: "ignoring empty stream-inf attributes"
                                })
                            },
                            media: function() {
                                this.manifest.mediaGroups = this.manifest.mediaGroups || m;
                                if (t.attributes && t.attributes.TYPE && t.attributes["GROUP-ID"] && t.attributes.NAME) {
                                    var K = this.manifest.mediaGroups[t.attributes.TYPE];
                                    K[t.attributes["GROUP-ID"]] = K[t.attributes["GROUP-ID"]] || {};
                                    x = K[t.attributes["GROUP-ID"]];
                                    F = {
                                        "default": /yes/i.test(t.attributes.DEFAULT)
                                    };
                                    F.autoselect = F["default"] ? !0 : /yes/i.test(t.attributes.AUTOSELECT);
                                    t.attributes.LANGUAGE && (F.language = t.attributes.LANGUAGE);
                                    t.attributes.URI && (F.uri = t.attributes.URI);
                                    t.attributes["INSTREAM-ID"] && (F.instreamId = t.attributes["INSTREAM-ID"]);
                                    t.attributes.CHARACTERISTICS && (F.characteristics = t.attributes.CHARACTERISTICS);
                                    t.attributes.FORCED && (F.forced = /yes/i.test(t.attributes.FORCED));
                                    x[t.attributes.NAME] = F
                                } else
                                    this.trigger("warn", {
                                        message: "ignoring incomplete or missing media group"
                                    })
                            },
                            discontinuity: function() {
                                k += 1;
                                h.discontinuity = !0;
                                this.manifest.discontinuityStarts.push(l.length)
                            },
                            "program-date-time": function() {
                                "undefined" === typeof this.manifest.dateTimeString && (this.manifest.dateTimeString = t.dateTimeString,
                                this.manifest.dateTimeObject = t.dateTimeObject);
                                h.dateTimeString = t.dateTimeString;
                                h.dateTimeObject = t.dateTimeObject
                            },
                            targetduration: function() {
                                !isFinite(t.duration) || 0 > t.duration ? this.trigger("warn", {
                                    message: "ignoring invalid target duration: " + t.duration
                                }) : (this.manifest.targetDuration = t.duration,
                                eg.call(this, this.manifest))
                            },
                            start: function() {
                                !t.attributes || isNaN(t.attributes["TIME-OFFSET"]) ? this.trigger("warn", {
                                    message: "ignoring start declaration without appropriate attribute list"
                                }) : this.manifest.start = {
                                    timeOffset: t.attributes["TIME-OFFSET"],
                                    precise: t.attributes.PRECISE
                                }
                            },
                            "cue-out": function() {
                                h.cueOut = t.data
                            },
                            "cue-out-cont": function() {
                                h.cueOutCont = t.data
                            },
                            "cue-in": function() {
                                h.cueIn = t.data
                            },
                            skip: function() {
                                this.manifest.skip = Oc(t.attributes);
                                this.warnOnMissingAttributes_("#EXT-X-SKIP", t.attributes, ["SKIPPED-SEGMENTS"])
                            },
                            part: function() {
                                var K = this;
                                p = !0;
                                var M = this.manifest.segments.length
                                  , P = Oc(t.attributes);
                                h.parts = h.parts || [];
                                h.parts.push(P);
                                P.byterange && (P.byterange.hasOwnProperty("offset") || (P.byterange.offset = u),
                                u = P.byterange.offset + P.byterange.length);
                                this.warnOnMissingAttributes_("#EXT-X-PART #" + (h.parts.length - 1) + " for segment #" + M, t.attributes, ["URI", "DURATION"]);
                                this.manifest.renditionReports && this.manifest.renditionReports.forEach(function(I, L) {
                                    I.hasOwnProperty("lastPart") || K.trigger("warn", {
                                        message: "#EXT-X-RENDITION-REPORT #" + L + " lacks required attribute(s): LAST-PART"
                                    })
                                })
                            },
                            "server-control": function() {
                                var K = this.manifest.serverControl = Oc(t.attributes);
                                K.hasOwnProperty("canBlockReload") || (K.canBlockReload = !1,
                                this.trigger("info", {
                                    message: "#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false"
                                }));
                                eg.call(this, this.manifest);
                                K.canSkipDateranges && !K.hasOwnProperty("canSkipUntil") && this.trigger("warn", {
                                    message: "#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set"
                                })
                            },
                            "preload-hint": function() {
                                var K = this.manifest.segments.length
                                  , M = Oc(t.attributes)
                                  , P = M.type && "PART" === M.type;
                                h.preloadHints = h.preloadHints || [];
                                h.preloadHints.push(M);
                                M.byterange && !M.byterange.hasOwnProperty("offset") && (M.byterange.offset = P ? u : 0,
                                P && (u = M.byterange.offset + M.byterange.length));
                                P = h.preloadHints.length - 1;
                                this.warnOnMissingAttributes_("#EXT-X-PRELOAD-HINT #" + P + " for segment #" + K, t.attributes, ["TYPE", "URI"]);
                                if (M.type)
                                    for (var I = 0; I < h.preloadHints.length - 1; I++) {
                                        var L = h.preloadHints[I];
                                        L.type && L.type === M.type && this.trigger("warn", {
                                            message: "#EXT-X-PRELOAD-HINT #" + P + " for segment #" + K + " has the same TYPE " + M.type + " as preload hint #" + I
                                        })
                                    }
                            },
                            "rendition-report": function() {
                                var K = Oc(t.attributes);
                                this.manifest.renditionReports = this.manifest.renditionReports || [];
                                this.manifest.renditionReports.push(K);
                                K = this.manifest.renditionReports.length - 1;
                                var M = ["LAST-MSN", "URI"];
                                p && M.push("LAST-PART");
                                this.warnOnMissingAttributes_("#EXT-X-RENDITION-REPORT #" + K, t.attributes, M)
                            },
                            "part-inf": function() {
                                this.manifest.partInf = Oc(t.attributes);
                                this.warnOnMissingAttributes_("#EXT-X-PART-INF", t.attributes, ["PART-TARGET"]);
                                this.manifest.partInf.partTarget && (this.manifest.partTargetDuration = this.manifest.partInf.partTarget);
                                eg.call(this, this.manifest)
                            }
                        }[t.tagType] || f).call(e)
                    },
                    uri: function() {
                        h.uri = t.uri;
                        l.push(h);
                        !this.manifest.targetDuration || "duration"in h || (this.trigger("warn", {
                            message: "defaulting segment duration to the target duration"
                        }),
                        h.duration = this.manifest.targetDuration);
                        q && (h.key = q);
                        h.timeline = k;
                        g && (h.map = g);
                        u = 0;
                        h = {}
                    },
                    comment: function() {},
                    custom: function() {
                        t.segment ? (h.custom = h.custom || {},
                        h.custom[t.customType] = t.data) : (this.manifest.custom = this.manifest.custom || {},
                        this.manifest.custom[t.customType] = t.data)
                    }
                })[t.type].call(e)
            });
            return a
        }
        ia(c, d);
        var b = c.prototype;
        b.warnOnMissingAttributes_ = function(a, e, l) {
            var h = [];
            l.forEach(function(g) {
                e.hasOwnProperty(g) || h.push(g)
            });
            h.length && this.trigger("warn", {
                message: a + " lacks required attribute(s): " + h.join(", ")
            })
        }
        ;
        b.push = function(a) {
            this.lineStream.push(a)
        }
        ;
        b.end = function() {
            this.lineStream.push("\n");
            this.trigger("end")
        }
        ;
        b.addParser = function(a) {
            this.parseStream.addParser(a)
        }
        ;
        b.addTagMapper = function(a) {
            this.parseStream.addTagMapper(a)
        }
        ;
        return c
    }(cg)
      , oc = {
        mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,
        webm: /^(vp0?[89]|av0?1|opus|vorbis)/,
        ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,
        video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,
        audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,
        text: /^(stpp.ttml.im1t)/,
        muxerVideo: /^(avc0?1)/,
        muxerAudio: /^(mp4a)/,
        muxerText: /a^/
    }
      , Ym = ["video", "audio", "text"]
      , fj = ["Video", "Audio", "Text"]
      , gj = function(d) {
        return d ? d.replace(/avc1\.(\d+)\.(\d+)/i, function(c, b, a) {
            c = ("00" + Number(b).toString(16)).slice(-2);
            a = ("00" + Number(a).toString(16)).slice(-2);
            return "avc1." + c + "00" + a
        }) : d
    }
      , Ib = function(d) {
        void 0 === d && (d = "");
        var c = [];
        d.split(",").forEach(function(b) {
            b = b.trim();
            var a;
            Ym.forEach(function(e) {
                var l = oc[e].exec(b.toLowerCase());
                if (l && !(1 >= l.length)) {
                    a = e;
                    l = b.substring(0, l[1].length);
                    var h = b.replace(l, "");
                    c.push({
                        type: l,
                        details: h,
                        mediaType: e
                    })
                }
            });
            a || c.push({
                type: b,
                details: "",
                mediaType: "unknown"
            })
        });
        return c
    }
      , Zm = function(d, c) {
        if (!d.mediaGroups.AUDIO || !c)
            return null;
        d = d.mediaGroups.AUDIO[c];
        if (!d)
            return null;
        for (var b in d)
            if (c = d[b],
            c["default"] && c.playlists)
                return Ib(c.playlists[0].attributes.CODECS);
        return null
    }
      , hj = function(d) {
        void 0 === d && (d = "");
        return oc.audio.test(d.trim().toLowerCase())
    }
      , $m = function(d) {
        void 0 === d && (d = "");
        return oc.text.test(d.trim().toLowerCase())
    }
      , sd = function(d) {
        if (d && "string" === typeof d) {
            var c = d.toLowerCase().split(",").map(function(e) {
                return gj(e.trim())
            })
              , b = "video";
            1 === c.length && hj(c[0]) ? b = "audio" : 1 === c.length && $m(c[0]) && (b = "application");
            var a = "mp4";
            c.every(function(e) {
                return oc.mp4.test(e)
            }) ? a = "mp4" : c.every(function(e) {
                return oc.webm.test(e)
            }) ? a = "webm" : c.every(function(e) {
                return oc.ogg.test(e)
            }) && (a = "ogg");
            return b + "/" + a + ';codecs="' + d + '"'
        }
    }
      , ne = function(d) {
        void 0 === d && (d = "");
        return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(sd(d)) || !1
    }
      , fg = function(d) {
        void 0 === d && (d = "");
        return d.toLowerCase().split(",").every(function(c) {
            c = c.trim();
            for (var b = 0; b < fj.length; b++)
                if (oc["muxer" + fj[b]].test(c))
                    return !0;
            return !1
        })
    }
      , an = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i
      , bn = /^application\/dash\+xml/i
      , ij = function(d) {
        return an.test(d) ? "hls" : bn.test(d) ? "dash" : "application/vnd.videojs.vhs+json" === d ? "vhs-json" : null
    }
      , jj = function(d) {
        return "function" === ArrayBuffer.isView ? ArrayBuffer.isView(d) : d && d.buffer instanceof ArrayBuffer
    }
      , qa = function(d) {
        if (d instanceof Uint8Array)
            return d;
        Array.isArray(d) || jj(d) || d instanceof ArrayBuffer || (d = "number" !== typeof d || "number" === typeof d && d !== d ? 0 : [d]);
        return new Uint8Array(d && d.buffer || d,d && d.byteOffset || 0,d && d.byteLength || 0)
    }
      , Wa = window.BigInt || Number
      , gg = [Wa("0x1"), Wa("0x100"), Wa("0x10000"), Wa("0x1000000"), Wa("0x100000000"), Wa("0x10000000000"), Wa("0x1000000000000"), Wa("0x100000000000000"), Wa("0x10000000000000000")]
      , cn = function(d, c) {
        var b = void 0 === c ? {} : c;
        c = b.signed;
        c = void 0 === c ? !1 : c;
        b = b.le;
        var a = void 0 === b ? !1 : b;
        d = qa(d);
        b = a ? "reduce" : "reduceRight";
        b = (d[b] ? d[b] : Array.prototype[b]).call(d, function(e, l, h) {
            h = a ? h : Math.abs(h + 1 - d.length);
            return e + Wa(l) * gg[h]
        }, Wa(0));
        c && (c = gg[d.length] / Wa(2) - Wa(1),
        b = Wa(b),
        b > c && (b = b - c - c - Wa(2)));
        return Number(b)
    }
      , dn = function(d, c) {
        c = (void 0 === c ? {} : c).le;
        c = void 0 === c ? !1 : c;
        if ("bigint" !== typeof d && "number" !== typeof d || "number" === typeof d && d !== d)
            d = 0;
        d = Wa(d);
        for (var b = Math.ceil(d.toString(2).length / 8), a = new Uint8Array(new ArrayBuffer(b)), e = 0; e < b; e++) {
            var l = c ? e : Math.abs(e + 1 - a.length);
            a[l] = Number(d / gg[e] & Wa(255));
            0 > d && (a[l] = Math.abs(~a[l]),
            a[l] -= 0 === e ? 1 : 2)
        }
        return a
    }
      , kj = function(d, c) {
        "string" !== typeof d && d && "function" === typeof d.toString && (d = d.toString());
        if ("string" !== typeof d)
            return new Uint8Array;
        c || (d = unescape(encodeURIComponent(d)));
        c = new Uint8Array(d.length);
        for (var b = 0; b < d.length; b++)
            c[b] = d.charCodeAt(b);
        return c
    }
      , en = function() {
        for (var d = arguments.length, c = Array(d), b = 0; b < d; b++)
            c[b] = arguments[b];
        c = c.filter(function(l) {
            return l && (l.byteLength || l.length) && "string" !== typeof l
        });
        if (1 >= c.length)
            return qa(c[0]);
        d = c.reduce(function(l, h, g) {
            return l + (h.byteLength || h.length)
        }, 0);
        var a = new Uint8Array(d)
          , e = 0;
        c.forEach(function(l) {
            l = qa(l);
            a.set(l, e);
            e += l.byteLength
        });
        return a
    }
      , Ha = function(d, c, b) {
        b = void 0 === b ? {} : b;
        var a = b.offset
          , e = void 0 === a ? 0 : a;
        b = b.mask;
        var l = void 0 === b ? [] : b;
        d = qa(d);
        c = qa(c);
        b = c.every ? c.every : Array.prototype.every;
        return c.length && d.length - e >= c.length && b.call(c, function(h, g) {
            return h === (l[g] ? l[g] & d[e + g] : d[e + g])
        })
    }
      , hg = function(d, c) {
        if (/^[a-z]+:/i.test(c))
            return c;
        /^data:/.test(d) && (d = window.location && window.location.href || "");
        var b = "function" === typeof window.URL
          , a = /^\/\//.test(d)
          , e = !window.location && !/\/\//i.test(d);
        b ? d = new window.URL(d,window.location || "http://example.com") : /\/\//i.test(d) || (d = me.buildAbsoluteURL(window.location && window.location.href || "", d));
        return b ? (d = new URL(c,d),
        e ? d.href.slice(18) : a ? d.href.slice(d.protocol.length) : d.href) : me.buildAbsoluteURL(d, c)
    }
      , fn = function(d, c, b) {
        c.forEach(function(a) {
            for (var e in d.mediaGroups[a])
                for (var l in d.mediaGroups[a][e])
                    b(d.mediaGroups[a][e][l], a, e, l)
        })
    }
      , gn = Od({
        HTML: "text/html",
        isHTML: function(d) {
            return d === gn.HTML
        },
        XML_APPLICATION: "application/xml",
        XML_TEXT: "text/xml",
        XML_XHTML_APPLICATION: "application/xhtml+xml",
        XML_SVG_IMAGE: "image/svg+xml"
    })
      , lj = Od({
        HTML: "http://www.w3.org/1999/xhtml",
        isHTML: function(d) {
            return d === lj.HTML
        },
        SVG: "http://www.w3.org/2000/svg",
        XML: "http://www.w3.org/XML/1998/namespace",
        XMLNS: "http://www.w3.org/2000/xmlns/"
    })
      , oe = lj
      , zc = oe
      , nb = {}
      , zb = nb.ELEMENT_NODE = 1
      , Cc = nb.ATTRIBUTE_NODE = 2
      , Sd = nb.TEXT_NODE = 3
      , Kh = nb.CDATA_SECTION_NODE = 4
      , Oh = nb.ENTITY_REFERENCE_NODE = 5
      , hn = nb.ENTITY_NODE = 6
      , Nh = nb.PROCESSING_INSTRUCTION_NODE = 7
      , Lh = nb.COMMENT_NODE = 8
      , Jh = nb.DOCUMENT_NODE = 9
      , Mh = nb.DOCUMENT_TYPE_NODE = 10
      , Qb = nb.DOCUMENT_FRAGMENT_NODE = 11
      , jn = nb.NOTATION_NODE = 12
      , $a = {}
      , Ra = {};
    $a.INDEX_SIZE_ERR = (Ra[1] = "Index size error",
    1);
    $a.DOMSTRING_SIZE_ERR = (Ra[2] = "DOMString size error",
    2);
    var kn = $a.HIERARCHY_REQUEST_ERR = (Ra[3] = "Hierarchy request error",
    3);
    $a.WRONG_DOCUMENT_ERR = (Ra[4] = "Wrong document",
    4);
    $a.INVALID_CHARACTER_ERR = (Ra[5] = "Invalid character",
    5);
    $a.NO_DATA_ALLOWED_ERR = (Ra[6] = "No data allowed",
    6);
    $a.NO_MODIFICATION_ALLOWED_ERR = (Ra[7] = "No modification allowed",
    7);
    var Kl = $a.NOT_FOUND_ERR = (Ra[8] = "Not found",
    8);
    $a.NOT_SUPPORTED_ERR = (Ra[9] = "Not supported",
    9);
    var mj = $a.INUSE_ATTRIBUTE_ERR = (Ra[10] = "Attribute in use",
    10);
    $a.INVALID_STATE_ERR = (Ra[11] = "Invalid state",
    11);
    $a.SYNTAX_ERR = (Ra[12] = "Syntax error",
    12);
    $a.INVALID_MODIFICATION_ERR = (Ra[13] = "Invalid modification",
    13);
    $a.NAMESPACE_ERR = (Ra[14] = "Invalid namespace",
    14);
    $a.INVALID_ACCESS_ERR = (Ra[15] = "Invalid access",
    15);
    xc.prototype = Error.prototype;
    ed($a, xc);
    dc.prototype = {
        length: 0,
        item: function(d) {
            return this[d] || null
        },
        toString: function(d, c) {
            for (var b = [], a = 0; a < this.length; a++)
                Bc(this[a], b, d, c);
            return b.join("")
        }
    };
    yc.prototype.item = function(d) {
        hf(this);
        return this[d]
    }
    ;
    mb(yc, dc);
    Pd.prototype = {
        length: 0,
        item: dc.prototype.item,
        getNamedItem: function(d) {
            for (var c = this.length; c--; ) {
                var b = this[c];
                if (b.nodeName == d)
                    return b
            }
        },
        setNamedItem: function(d) {
            var c = d.ownerElement;
            if (c && c != this._ownerElement)
                throw new xc(mj);
            c = this.getNamedItem(d.nodeName);
            Ah(this._ownerElement, this, d, c);
            return c
        },
        setNamedItemNS: function(d) {
            var c = d.ownerElement;
            if (c && c != this._ownerElement)
                throw new xc(mj);
            c = this.getNamedItemNS(d.namespaceURI, d.localName);
            Ah(this._ownerElement, this, d, c);
            return c
        },
        removeNamedItem: function(d) {
            d = this.getNamedItem(d);
            Bh(this._ownerElement, this, d);
            return d
        },
        removeNamedItemNS: function(d, c) {
            d = this.getNamedItemNS(d, c);
            Bh(this._ownerElement, this, d);
            return d
        },
        getNamedItemNS: function(d, c) {
            for (var b = this.length; b--; ) {
                var a = this[b];
                if (a.localName == c && a.namespaceURI == d)
                    return a
            }
            return null
        }
    };
    Ch.prototype = {
        hasFeature: function(d, c) {
            return !0
        },
        createDocument: function(d, c, b) {
            var a = new gd;
            a.implementation = this;
            a.childNodes = new dc;
            a.doctype = b || null;
            b && a.appendChild(b);
            c && (d = a.createElementNS(d, c),
            a.appendChild(d));
            return a
        },
        createDocumentType: function(d, c, b) {
            var a = new nf;
            a.name = d;
            a.nodeName = d;
            a.publicId = c || "";
            a.systemId = b || "";
            return a
        }
    };
    gb.prototype = {
        firstChild: null,
        lastChild: null,
        previousSibling: null,
        nextSibling: null,
        attributes: null,
        parentNode: null,
        childNodes: null,
        ownerDocument: null,
        nodeValue: null,
        namespaceURI: null,
        prefix: null,
        localName: null,
        insertBefore: function(d, c) {
            return Fh(this, d, c)
        },
        replaceChild: function(d, c) {
            this.insertBefore(d, c);
            c && this.removeChild(c)
        },
        removeChild: function(d) {
            return Eh(this, d)
        },
        appendChild: function(d) {
            return this.insertBefore(d, null)
        },
        hasChildNodes: function() {
            return null != this.firstChild
        },
        cloneNode: function(d) {
            return rf(this.ownerDocument || this, this, d)
        },
        normalize: function() {
            for (var d = this.firstChild; d; ) {
                var c = d.nextSibling;
                c && c.nodeType == Sd && d.nodeType == Sd ? (this.removeChild(c),
                d.appendData(c.data)) : (d.normalize(),
                d = c)
            }
        },
        isSupported: function(d, c) {
            return this.ownerDocument.implementation.hasFeature(d, c)
        },
        hasAttributes: function() {
            return 0 < this.attributes.length
        },
        lookupPrefix: function(d) {
            for (var c = this; c; ) {
                var b = c._nsMap;
                if (b)
                    for (var a in b)
                        if (b[a] == d)
                            return a;
                c = c.nodeType == Cc ? c.ownerDocument : c.parentNode
            }
            return null
        },
        lookupNamespaceURI: function(d) {
            for (var c = this; c; ) {
                var b = c._nsMap;
                if (b && d in b)
                    return b[d];
                c = c.nodeType == Cc ? c.ownerDocument : c.parentNode
            }
            return null
        },
        isDefaultNamespace: function(d) {
            return null == this.lookupPrefix(d)
        }
    };
    ed(nb, gb);
    ed(nb, gb.prototype);
    gd.prototype = {
        nodeName: "#document",
        nodeType: Jh,
        doctype: null,
        documentElement: null,
        _inc: 1,
        insertBefore: function(d, c) {
            if (d.nodeType == Qb) {
                for (var b = d.firstChild; b; ) {
                    var a = b.nextSibling;
                    this.insertBefore(b, c);
                    b = a
                }
                return d
            }
            null == this.documentElement && d.nodeType == zb && (this.documentElement = d);
            return Fh(this, d, c),
            d.ownerDocument = this,
            d
        },
        removeChild: function(d) {
            this.documentElement == d && (this.documentElement = null);
            return Eh(this, d)
        },
        importNode: function(d, c) {
            return Ph(this, d, c)
        },
        getElementById: function(d) {
            var c = null;
            fd(this.documentElement, function(b) {
                if (b.nodeType == zb && b.getAttribute("id") == d)
                    return c = b,
                    !0
            });
            return c
        },
        getElementsByClassName: function(d) {
            var c = xh(d);
            return new yc(this,function(b) {
                var a = [];
                0 < c.length && fd(b.documentElement, function(e) {
                    if (e !== b && e.nodeType === zb) {
                        var l = e.getAttribute("class");
                        if (l) {
                            var h = d === l;
                            h || (l = xh(l),
                            h = c.every(Jl(l)));
                            h && a.push(e)
                        }
                    }
                });
                return a
            }
            )
        },
        createElement: function(d) {
            var c = new Ac;
            c.ownerDocument = this;
            c.nodeName = d;
            c.tagName = d;
            c.localName = d;
            c.childNodes = new dc;
            return (c.attributes = new Pd)._ownerElement = c
        },
        createDocumentFragment: function() {
            var d = new Rd;
            d.ownerDocument = this;
            d.childNodes = new dc;
            return d
        },
        createTextNode: function(d) {
            var c = new kf;
            c.ownerDocument = this;
            c.appendData(d);
            return c
        },
        createComment: function(d) {
            var c = new lf;
            c.ownerDocument = this;
            c.appendData(d);
            return c
        },
        createCDATASection: function(d) {
            var c = new mf;
            c.ownerDocument = this;
            c.appendData(d);
            return c
        },
        createProcessingInstruction: function(d, c) {
            var b = new pf;
            b.ownerDocument = this;
            b.tagName = b.target = d;
            b.nodeValue = b.data = c;
            return b
        },
        createAttribute: function(d) {
            var c = new Qd;
            c.ownerDocument = this;
            c.name = d;
            c.nodeName = d;
            c.localName = d;
            c.specified = !0;
            return c
        },
        createEntityReference: function(d) {
            var c = new of;
            c.ownerDocument = this;
            c.nodeName = d;
            return c
        },
        createElementNS: function(d, c) {
            var b = new Ac
              , a = c.split(":")
              , e = b.attributes = new Pd;
            b.childNodes = new dc;
            b.ownerDocument = this;
            b.nodeName = c;
            b.tagName = c;
            b.namespaceURI = d;
            2 == a.length ? (b.prefix = a[0],
            b.localName = a[1]) : b.localName = c;
            return e._ownerElement = b
        },
        createAttributeNS: function(d, c) {
            var b = new Qd
              , a = c.split(":");
            b.ownerDocument = this;
            b.nodeName = c;
            b.name = c;
            b.namespaceURI = d;
            b.specified = !0;
            2 == a.length ? (b.prefix = a[0],
            b.localName = a[1]) : b.localName = c;
            return b
        }
    };
    mb(gd, gb);
    Ac.prototype = {
        nodeType: zb,
        hasAttribute: function(d) {
            return null != this.getAttributeNode(d)
        },
        getAttribute: function(d) {
            return (d = this.getAttributeNode(d)) && d.value || ""
        },
        getAttributeNode: function(d) {
            return this.attributes.getNamedItem(d)
        },
        setAttribute: function(d, c) {
            d = this.ownerDocument.createAttribute(d);
            d.value = d.nodeValue = "" + c;
            this.setAttributeNode(d)
        },
        removeAttribute: function(d) {
            (d = this.getAttributeNode(d)) && this.removeAttributeNode(d)
        },
        appendChild: function(d) {
            if (d.nodeType === Qb)
                return this.insertBefore(d, null);
            var c = d.parentNode;
            c && c.removeChild(d);
            c = this.lastChild;
            d.parentNode = this;
            d.previousSibling = c;
            d.nextSibling = null;
            c ? c.nextSibling = d : this.firstChild = d;
            this.lastChild = d;
            jf(this.ownerDocument, this, d);
            return d
        },
        setAttributeNode: function(d) {
            return this.attributes.setNamedItem(d)
        },
        setAttributeNodeNS: function(d) {
            return this.attributes.setNamedItemNS(d)
        },
        removeAttributeNode: function(d) {
            return this.attributes.removeNamedItem(d.nodeName)
        },
        removeAttributeNS: function(d, c) {
            (d = this.getAttributeNodeNS(d, c)) && this.removeAttributeNode(d)
        },
        hasAttributeNS: function(d, c) {
            return null != this.getAttributeNodeNS(d, c)
        },
        getAttributeNS: function(d, c) {
            return (d = this.getAttributeNodeNS(d, c)) && d.value || ""
        },
        setAttributeNS: function(d, c, b) {
            d = this.ownerDocument.createAttributeNS(d, c);
            d.value = d.nodeValue = "" + b;
            this.setAttributeNode(d)
        },
        getAttributeNodeNS: function(d, c) {
            return this.attributes.getNamedItemNS(d, c)
        },
        getElementsByTagName: function(d) {
            return new yc(this,function(c) {
                var b = [];
                fd(c, function(a) {
                    a === c || a.nodeType != zb || "*" !== d && a.tagName != d || b.push(a)
                });
                return b
            }
            )
        },
        getElementsByTagNameNS: function(d, c) {
            return new yc(this,function(b) {
                var a = [];
                fd(b, function(e) {
                    e === b || e.nodeType !== zb || "*" !== d && e.namespaceURI !== d || "*" !== c && e.localName != c || a.push(e)
                });
                return a
            }
            )
        }
    };
    gd.prototype.getElementsByTagName = Ac.prototype.getElementsByTagName;
    gd.prototype.getElementsByTagNameNS = Ac.prototype.getElementsByTagNameNS;
    mb(Ac, gb);
    Qd.prototype.nodeType = Cc;
    mb(Qd, gb);
    hd.prototype = {
        data: "",
        substringData: function(d, c) {
            return this.data.substring(d, d + c)
        },
        appendData: function(d) {
            this.nodeValue = this.data = d = this.data + d;
            this.length = d.length
        },
        insertData: function(d, c) {
            this.replaceData(d, 0, c)
        },
        appendChild: function(d) {
            throw Error(Ra[kn]);
        },
        deleteData: function(d, c) {
            this.replaceData(d, c, "")
        },
        replaceData: function(d, c, b) {
            var a = this.data.substring(0, d);
            d = this.data.substring(d + c);
            this.nodeValue = this.data = b = a + b + d;
            this.length = b.length
        }
    };
    mb(hd, gb);
    kf.prototype = {
        nodeName: "#text",
        nodeType: Sd,
        splitText: function(d) {
            var c = this.data
              , b = c.substring(d);
            this.data = this.nodeValue = c = c.substring(0, d);
            this.length = c.length;
            d = this.ownerDocument.createTextNode(b);
            this.parentNode && this.parentNode.insertBefore(d, this.nextSibling);
            return d
        }
    };
    mb(kf, hd);
    lf.prototype = {
        nodeName: "#comment",
        nodeType: Lh
    };
    mb(lf, hd);
    mf.prototype = {
        nodeName: "#cdata-section",
        nodeType: Kh
    };
    mb(mf, hd);
    nf.prototype.nodeType = Mh;
    mb(nf, gb);
    Gh.prototype.nodeType = jn;
    mb(Gh, gb);
    Hh.prototype.nodeType = hn;
    mb(Hh, gb);
    of.prototype.nodeType = Oh;
    mb(of, gb);
    Rd.prototype.nodeName = "#document-fragment";
    Rd.prototype.nodeType = Qb;
    mb(Rd, gb);
    pf.prototype.nodeType = Nh;
    mb(pf, gb);
    gb.prototype.toString = function(d, c) {
        var b = []
          , a = 9 == this.nodeType && this.documentElement || this
          , e = a.prefix
          , l = a.namespaceURI;
        if (l && null == e && (e = a.lookupPrefix(l),
        null == e))
            var h = [{
                namespace: l,
                prefix: null
            }];
        Bc(this, b, d, c, h);
        return b.join("")
    }
    ;
    try {
        if (Object.defineProperty) {
            var ln = function b(c) {
                switch (c.nodeType) {
                case zb:
                case Qb:
                    var a = [];
                    for (c = c.firstChild; c; )
                        7 !== c.nodeType && 8 !== c.nodeType && a.push(b(c)),
                        c = c.nextSibling;
                    return a.join("");
                default:
                    return c.nodeValue
                }
            };
            Object.defineProperty(yc.prototype, "length", {
                get: function() {
                    hf(this);
                    return this.$$length
                }
            });
            Object.defineProperty(gb.prototype, "textContent", {
                get: function() {
                    return ln(this)
                },
                set: function(c) {
                    switch (this.nodeType) {
                    case zb:
                    case Qb:
                        for (; this.firstChild; )
                            this.removeChild(this.firstChild);
                        (c || String(c)) && this.appendChild(this.ownerDocument.createTextNode(c));
                        break;
                    default:
                        this.nodeValue = this.value = this.data = c
                    }
                }
            });
            yh = function(c, b, a) {
                c["$$" + b] = a
            }
        }
    } catch (d) {}
    var td = ha(function(d, c) {
        c.XML_ENTITIES = Od({
            amp: "&",
            apos: "'",
            gt: ">",
            lt: "<",
            quot: '"'
        });
        c.HTML_ENTITIES = Od({
            lt: "<",
            gt: ">",
            amp: "&",
            quot: '"',
            apos: "'",
            Agrave: "\u00c0",
            Aacute: "\u00c1",
            Acirc: "\u00c2",
            Atilde: "\u00c3",
            Auml: "\u00c4",
            Aring: "\u00c5",
            AElig: "\u00c6",
            Ccedil: "\u00c7",
            Egrave: "\u00c8",
            Eacute: "\u00c9",
            Ecirc: "\u00ca",
            Euml: "\u00cb",
            Igrave: "\u00cc",
            Iacute: "\u00cd",
            Icirc: "\u00ce",
            Iuml: "\u00cf",
            ETH: "\u00d0",
            Ntilde: "\u00d1",
            Ograve: "\u00d2",
            Oacute: "\u00d3",
            Ocirc: "\u00d4",
            Otilde: "\u00d5",
            Ouml: "\u00d6",
            Oslash: "\u00d8",
            Ugrave: "\u00d9",
            Uacute: "\u00da",
            Ucirc: "\u00db",
            Uuml: "\u00dc",
            Yacute: "\u00dd",
            THORN: "\u00de",
            szlig: "\u00df",
            agrave: "\u00e0",
            aacute: "\u00e1",
            acirc: "\u00e2",
            atilde: "\u00e3",
            auml: "\u00e4",
            aring: "\u00e5",
            aelig: "\u00e6",
            ccedil: "\u00e7",
            egrave: "\u00e8",
            eacute: "\u00e9",
            ecirc: "\u00ea",
            euml: "\u00eb",
            igrave: "\u00ec",
            iacute: "\u00ed",
            icirc: "\u00ee",
            iuml: "\u00ef",
            eth: "\u00f0",
            ntilde: "\u00f1",
            ograve: "\u00f2",
            oacute: "\u00f3",
            ocirc: "\u00f4",
            otilde: "\u00f5",
            ouml: "\u00f6",
            oslash: "\u00f8",
            ugrave: "\u00f9",
            uacute: "\u00fa",
            ucirc: "\u00fb",
            uuml: "\u00fc",
            yacute: "\u00fd",
            thorn: "\u00fe",
            yuml: "\u00ff",
            nbsp: "\u00a0",
            iexcl: "\u00a1",
            cent: "\u00a2",
            pound: "\u00a3",
            curren: "\u00a4",
            yen: "\u00a5",
            brvbar: "\u00a6",
            sect: "\u00a7",
            uml: "\u00a8",
            copy: "\u00a9",
            ordf: "\u00aa",
            laquo: "\u00ab",
            not: "\u00ac",
            shy: "\u00ad\u00ad",
            reg: "\u00ae",
            macr: "\u00af",
            deg: "\u00b0",
            plusmn: "\u00b1",
            sup2: "\u00b2",
            sup3: "\u00b3",
            acute: "\u00b4",
            micro: "\u00b5",
            para: "\u00b6",
            middot: "\u00b7",
            cedil: "\u00b8",
            sup1: "\u00b9",
            ordm: "\u00ba",
            raquo: "\u00bb",
            frac14: "\u00bc",
            frac12: "\u00bd",
            frac34: "\u00be",
            iquest: "\u00bf",
            times: "\u00d7",
            divide: "\u00f7",
            forall: "\u2200",
            part: "\u2202",
            exist: "\u2203",
            empty: "\u2205",
            nabla: "\u2207",
            isin: "\u2208",
            notin: "\u2209",
            ni: "\u220b",
            prod: "\u220f",
            sum: "\u2211",
            minus: "\u2212",
            lowast: "\u2217",
            radic: "\u221a",
            prop: "\u221d",
            infin: "\u221e",
            ang: "\u2220",
            and: "\u2227",
            or: "\u2228",
            cap: "\u2229",
            cup: "\u222a",
            "int": "\u222b",
            there4: "\u2234",
            sim: "\u223c",
            cong: "\u2245",
            asymp: "\u2248",
            ne: "\u2260",
            equiv: "\u2261",
            le: "\u2264",
            ge: "\u2265",
            sub: "\u2282",
            sup: "\u2283",
            nsub: "\u2284",
            sube: "\u2286",
            supe: "\u2287",
            oplus: "\u2295",
            otimes: "\u2297",
            perp: "\u22a5",
            sdot: "\u22c5",
            Alpha: "\u0391",
            Beta: "\u0392",
            Gamma: "\u0393",
            Delta: "\u0394",
            Epsilon: "\u0395",
            Zeta: "\u0396",
            Eta: "\u0397",
            Theta: "\u0398",
            Iota: "\u0399",
            Kappa: "\u039a",
            Lambda: "\u039b",
            Mu: "\u039c",
            Nu: "\u039d",
            Xi: "\u039e",
            Omicron: "\u039f",
            Pi: "\u03a0",
            Rho: "\u03a1",
            Sigma: "\u03a3",
            Tau: "\u03a4",
            Upsilon: "\u03a5",
            Phi: "\u03a6",
            Chi: "\u03a7",
            Psi: "\u03a8",
            Omega: "\u03a9",
            alpha: "\u03b1",
            beta: "\u03b2",
            gamma: "\u03b3",
            delta: "\u03b4",
            epsilon: "\u03b5",
            zeta: "\u03b6",
            eta: "\u03b7",
            theta: "\u03b8",
            iota: "\u03b9",
            kappa: "\u03ba",
            lambda: "\u03bb",
            mu: "\u03bc",
            nu: "\u03bd",
            xi: "\u03be",
            omicron: "\u03bf",
            pi: "\u03c0",
            rho: "\u03c1",
            sigmaf: "\u03c2",
            sigma: "\u03c3",
            tau: "\u03c4",
            upsilon: "\u03c5",
            phi: "\u03c6",
            chi: "\u03c7",
            psi: "\u03c8",
            omega: "\u03c9",
            thetasym: "\u03d1",
            upsih: "\u03d2",
            piv: "\u03d6",
            OElig: "\u0152",
            oelig: "\u0153",
            Scaron: "\u0160",
            scaron: "\u0161",
            Yuml: "\u0178",
            fnof: "\u0192",
            circ: "\u02c6",
            tilde: "\u02dc",
            ensp: "\u2002",
            emsp: "\u2003",
            thinsp: "\u2009",
            zwnj: "\u200c",
            zwj: "\u200d",
            lrm: "\u200e",
            rlm: "\u200f",
            ndash: "\u2013",
            mdash: "\u2014",
            lsquo: "\u2018",
            rsquo: "\u2019",
            sbquo: "\u201a",
            ldquo: "\u201c",
            rdquo: "\u201d",
            bdquo: "\u201e",
            dagger: "\u2020",
            Dagger: "\u2021",
            bull: "\u2022",
            hellip: "\u2026",
            permil: "\u2030",
            prime: "\u2032",
            Prime: "\u2033",
            lsaquo: "\u2039",
            rsaquo: "\u203a",
            oline: "\u203e",
            euro: "\u20ac",
            trade: "\u2122",
            larr: "\u2190",
            uarr: "\u2191",
            rarr: "\u2192",
            darr: "\u2193",
            harr: "\u2194",
            crarr: "\u21b5",
            lceil: "\u2308",
            rceil: "\u2309",
            lfloor: "\u230a",
            rfloor: "\u230b",
            loz: "\u25ca",
            spades: "\u2660",
            clubs: "\u2663",
            hearts: "\u2665",
            diams: "\u2666"
        });
        c.entityMap = c.HTML_ENTITIES
    });
    td.XML_ENTITIES;
    td.HTML_ENTITIES;
    td.entityMap;
    var id = oe
      , ig = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/
      , nj = new RegExp("[\\-\\.0-9" + ig.source.slice(1, -1) + "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]")
      , oj = new RegExp("^" + ig.source + nj.source + "*(?::" + ig.source + nj.source + "*)?$");
    Dc.prototype = Error();
    Dc.prototype.name = Dc.name;
    Qh.prototype = {
        parse: function(d, c, b) {
            var a = this.domBuilder;
            a.startDocument();
            var e = c, l = c = {}, h;
            for (h in e)
                l[h] = e[h];
            Ll(d, c, b, a, this.errorHandler);
            a.endDocument()
        }
    };
    Rh.prototype = {
        setTagName: function(d) {
            if (!oj.test(d))
                throw Error("invalid tagName:" + d);
            this.tagName = d
        },
        addValue: function(d, c, b) {
            if (!oj.test(d))
                throw Error("invalid attribute:" + d);
            this.attributeNames[d] = this.length;
            this[this.length++] = {
                qName: d,
                value: c,
                offset: b
            }
        },
        length: 0,
        getLocalName: function(d) {
            return this[d].localName
        },
        getLocator: function(d) {
            return this[d].locator
        },
        getQName: function(d) {
            return this[d].qName
        },
        getURI: function(d) {
            return this[d].uri
        },
        getValue: function(d) {
            return this[d].value
        }
    };
    Uh.prototype.parseFromString = function(d, c) {
        var b = this.options
          , a = new Qh
          , e = b.domBuilder || new Td
          , l = b.errorHandler
          , h = b.locator
          , g = b.xmlns || {}
          , q = (c = /\/x?html?$/.test(c)) ? td.HTML_ENTITIES : td.XML_ENTITIES;
        h && e.setDocumentLocator(h);
        a.errorHandler = Rl(l, e, h);
        a.domBuilder = b.domBuilder || e;
        c && (g[""] = oe.HTML);
        g.xml = g.xml || oe.XML;
        d && "string" === typeof d ? a.parse(d, g, q) : a.errorHandler.error("invalid doc source");
        return e.doc
    }
    ;
    Td.prototype = {
        startDocument: function() {
            this.doc = (new Ch).createDocument(null, null, null);
            this.locator && (this.doc.documentURI = this.locator.systemId)
        },
        startElement: function(d, c, b, a) {
            var e = this.doc;
            c = e.createElementNS(d, b || c);
            var l = a.length;
            Ud(this, c);
            this.currentElement = c;
            this.locator && Ec(this.locator, c);
            for (var h = 0; h < l; h++) {
                d = a.getURI(h);
                var g = a.getValue(h);
                b = a.getQName(h);
                d = e.createAttributeNS(d, b);
                this.locator && Ec(a.getLocator(h), d);
                d.value = d.nodeValue = g;
                c.setAttributeNode(d)
            }
        },
        endElement: function(d, c, b) {
            d = this.currentElement;
            d.tagName;
            this.currentElement = d.parentNode
        },
        startPrefixMapping: function(d, c) {},
        endPrefixMapping: function(d) {},
        processingInstruction: function(d, c) {
            d = this.doc.createProcessingInstruction(d, c);
            this.locator && Ec(this.locator, d);
            Ud(this, d)
        },
        ignorableWhitespace: function(d, c, b) {},
        characters: function(d, c, b) {
            if (d = Vh.apply(this, arguments)) {
                var a = this.cdata ? this.doc.createCDATASection(d) : this.doc.createTextNode(d);
                this.currentElement ? this.currentElement.appendChild(a) : /^\s*$/.test(d) && this.doc.appendChild(a);
                this.locator && Ec(this.locator, a)
            }
        },
        skippedEntity: function(d) {},
        endDocument: function() {
            this.doc.normalize()
        },
        setDocumentLocator: function(d) {
            if (this.locator = d)
                d.lineNumber = 0
        },
        comment: function(d, c, b) {
            d = Vh.apply(this, arguments);
            var a = this.doc.createComment(d);
            this.locator && Ec(this.locator, a);
            Ud(this, a)
        },
        startCDATA: function() {
            this.cdata = !0
        },
        endCDATA: function() {
            this.cdata = !1
        },
        startDTD: function(d, c, b) {
            var a = this.doc.implementation;
            a && a.createDocumentType && (d = a.createDocumentType(d, c, b),
            this.locator && Ec(this.locator, d),
            Ud(this, d),
            this.doc.doctype = d)
        },
        warning: function(d) {
            console.warn("[xmldom warning]\t" + d, sf(this.locator))
        },
        error: function(d) {
            console.error("[xmldom error]\t" + d, sf(this.locator))
        },
        fatalError: function(d) {
            throw new Dc(d,this.locator);
        }
    };
    "endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g, function(d) {
        Td.prototype[d] = function() {
            return null
        }
    });
    var pj = function(d) {
        return !!d && "object" === typeof d
    }
      , ib = function c() {
        for (var b = arguments.length, a = Array(b), e = 0; e < b; e++)
            a[e] = arguments[e];
        return a.reduce(function(l, h) {
            if ("object" !== typeof h)
                return l;
            Object.keys(h).forEach(function(g) {
                Array.isArray(l[g]) && Array.isArray(h[g]) ? l[g] = l[g].concat(h[g]) : pj(l[g]) && pj(h[g]) ? l[g] = c(l[g], h[g]) : l[g] = h[g]
            });
            return l
        }, {})
    }
      , qj = function(c) {
        return Object.keys(c).map(function(b) {
            return c[b]
        })
    }
      , pe = function(c) {
        return c.reduce(function(b, a) {
            return b.concat(a)
        }, [])
    }
      , rj = function(c) {
        if (!c.length)
            return [];
        for (var b = [], a = 0; a < c.length; a++)
            b.push(c[a]);
        return b
    }
      , mn = function(c, b) {
        return c.reduce(function(a, e, l) {
            e[b] && a.push(l);
            return a
        }, [])
    }
      , jg = function(c, b) {
        for (var a = 0; a < c.length; a++)
            if (b(c[a]))
                return a;
        return -1
    }
      , nn = function(c, b) {
        return qj(c.reduce(function(a, e) {
            e.forEach(function(l) {
                a[b(l)] = l
            });
            return a
        }, {}))
    }
      , ud = function(c) {
        var b = c.baseUrl
          , a = c.source;
        a = void 0 === a ? "" : a;
        var e = c.range;
        e = void 0 === e ? "" : e;
        c = c.indexRange;
        c = void 0 === c ? "" : c;
        b = {
            uri: a,
            resolvedUri: hg((void 0 === b ? "" : b) || "", a)
        };
        if (e || c)
            e = (e ? e : c).split("-"),
            a = window.BigInt ? window.BigInt(e[0]) : parseInt(e[0], 10),
            e = window.BigInt ? window.BigInt(e[1]) : parseInt(e[1], 10),
            a < Number.MAX_SAFE_INTEGER && "bigint" === typeof a && (a = Number(a)),
            e < Number.MAX_SAFE_INTEGER && "bigint" === typeof e && (e = Number(e)),
            e = "bigint" === typeof e || "bigint" === typeof a ? window.BigInt(e) - window.BigInt(a) + window.BigInt(1) : e - a + 1,
            "bigint" === typeof e && e < Number.MAX_SAFE_INTEGER && (e = Number(e)),
            b.byterange = {
                length: e,
                offset: a
            };
        return b
    }
      , sj = function(c) {
        c && "number" !== typeof c && (c = parseInt(c, 10));
        return isNaN(c) ? null : c
    }
      , on = {
        "static": function(c) {
            var b = c.duration
              , a = c.timescale
              , e = void 0 === a ? 1 : a;
            a = c.sourceDuration;
            var l = c.periodDuration;
            c = sj(c.endNumber);
            b /= e;
            return "number" === typeof c ? {
                start: 0,
                end: c
            } : "number" === typeof l ? {
                start: 0,
                end: l / b
            } : {
                start: 0,
                end: a / b
            }
        },
        dynamic: function(c) {
            var b = c.NOW
              , a = c.clientOffset
              , e = c.availabilityStartTime
              , l = c.timescale;
            l = void 0 === l ? 1 : l;
            var h = c.duration
              , g = c.periodStart
              , q = void 0 === g ? 0 : g;
            g = c.minimumUpdatePeriod;
            var p = void 0 === g ? 0 : g;
            g = c.timeShiftBufferDepth;
            g = void 0 === g ? Infinity : g;
            c = sj(c.endNumber);
            b = (b + a) / 1E3;
            e += q;
            a = Math.ceil((b + p - e) * l / h);
            q = Math.floor((b - e) * l / h);
            return {
                start: Math.max(0, Math.floor((b - e - g) * l / h)),
                end: "number" === typeof c ? c : Math.min(a, q)
            }
        }
    }
      , pn = function(c) {
        return function(b) {
            var a = c.duration
              , e = c.timescale
              , l = c.startNumber;
            return {
                number: (void 0 === l ? 1 : l) + b,
                duration: a / (void 0 === e ? 1 : e),
                timeline: c.periodStart,
                time: b * a
            }
        }
    }
      , kg = function(c) {
        var b = c.type
          , a = c.duration
          , e = c.timescale;
        e = void 0 === e ? 1 : e;
        var l = c.periodDuration
          , h = c.sourceDuration
          , g = on[b](c)
          , q = g.end
          , p = [];
        for (g = g.start; g < q; g++)
            p.push(g);
        c = p.map(pn(c));
        "static" === b && (b = c.length - 1,
        c[b].duration = ("number" === typeof l ? l : h) - a / e * b);
        return c
    }
      , tj = function(c) {
        var b = c.baseUrl
          , a = c.initialization
          , e = void 0 === a ? {} : a;
        a = c.sourceDuration;
        var l = c.indexRange
          , h = void 0 === l ? "" : l;
        l = c.periodStart;
        var g = c.presentationTime
          , q = c.number;
        q = void 0 === q ? 0 : q;
        var p = c.duration;
        if (!b)
            throw Error("NO_BASE_URL");
        e = ud({
            baseUrl: b,
            source: e.sourceURL,
            range: e.range
        });
        b = ud({
            baseUrl: b,
            source: b,
            indexRange: h
        });
        b.map = e;
        p ? (c = kg(c),
        c.length && (b.duration = c[0].duration,
        b.timeline = c[0].timeline)) : a && (b.duration = a,
        b.timeline = l);
        b.presentationTime = g || l;
        b.number = q;
        return [b]
    }
      , lg = function(c, b, a) {
        var e = c.sidx.map ? c.sidx.map : null
          , l = c.sidx.duration
          , h = c.timeline || 0
          , g = c.sidx.byterange
          , q = g.offset + g.length;
        g = b.timescale;
        var p = b.references.filter(function(M) {
            return 1 !== M.referenceType
        })
          , f = []
          , m = c.endList ? "static" : "dynamic"
          , k = c.sidx.timeline
          , r = k
          , u = c.mediaSequence || 0;
        q = "bigint" === typeof b.firstOffset ? window.BigInt(q) + b.firstOffset : q + b.firstOffset;
        for (var t = 0; t < p.length; t++) {
            var x = b.references[t]
              , F = x.referencedSize;
            x = x.subsegmentDuration;
            var K = void 0;
            K = "bigint" === typeof q ? q + window.BigInt(F) - window.BigInt(1) : q + F - 1;
            K = tj({
                baseUrl: a,
                timescale: g,
                timeline: h,
                periodStart: k,
                presentationTime: r,
                number: u,
                duration: x,
                sourceDuration: l,
                indexRange: q + "-" + K,
                type: m
            })[0];
            e && (K.map = e);
            f.push(K);
            q = "bigint" === typeof q ? q + window.BigInt(F) : q + F;
            r += x / g;
            u++
        }
        c.segments = f;
        return c
    }
      , qn = ["AUDIO", "SUBTITLES"]
      , rn = 1 / 60
      , uj = function(c) {
        return nn(c, function(b) {
            return b.timeline
        }).sort(function(b, a) {
            return b.timeline > a.timeline ? 1 : -1
        })
    }
      , sn = function(c, b) {
        for (var a = 0; a < c.length; a++)
            if (c[a].attributes.NAME === b)
                return c[a];
        return null
    }
      , vj = function(c) {
        var b = [];
        fn(c, qn, function(a, e, l, h) {
            b = b.concat(a.playlists || [])
        });
        return b
    }
      , wj = function(c) {
        var b = c.playlist;
        b.mediaSequence = c.mediaSequence;
        b.segments.forEach(function(a, e) {
            a.number = b.mediaSequence + e
        })
    }
      , tn = function(c) {
        var b = c.oldPlaylists
          , a = c.timelineStarts;
        c.newPlaylists.forEach(function(e) {
            e.discontinuitySequence = jg(a, function(q) {
                return q.timeline === e.timeline
            });
            var l = sn(b, e.attributes.NAME);
            if (l && !e.sidx) {
                var h = e.segments[0]
                  , g = jg(l.segments, function(q) {
                    return Math.abs(q.presentationTime - h.presentationTime) < rn
                });
                -1 === g ? (wj({
                    playlist: e,
                    mediaSequence: l.mediaSequence + l.segments.length
                }),
                e.segments[0].discontinuity = !0,
                e.discontinuityStarts.unshift(0),
                (!l.segments.length && e.timeline > l.timeline || l.segments.length && e.timeline > l.segments[l.segments.length - 1].timeline) && e.discontinuitySequence--) : (l.segments[g].discontinuity && !h.discontinuity && (h.discontinuity = !0,
                e.discontinuityStarts.unshift(0),
                e.discontinuitySequence--),
                wj({
                    playlist: e,
                    mediaSequence: l.segments[g].number
                }))
            }
        })
    }
      , un = function(c) {
        var b = c.oldManifest;
        c = c.newManifest;
        var a = b.playlists.concat(vj(b))
          , e = c.playlists.concat(vj(c));
        c.timelineStarts = uj([b.timelineStarts, c.timelineStarts]);
        tn({
            oldPlaylists: a,
            newPlaylists: e,
            timelineStarts: c.timelineStarts
        });
        return c
    }
      , qe = function(c) {
        var b;
        if (b = c) {
            b = c.uri + "-";
            c = c.byterange;
            var a = "bigint" === typeof c.offset || "bigint" === typeof c.length ? window.BigInt(c.offset) + window.BigInt(c.length) - window.BigInt(1) : c.offset + c.length - 1;
            b += c.offset + "-" + a
        }
        return b
    }
      , mg = function(c) {
        return qj(c.reduce(function(b, a) {
            var e = a.attributes.id + (a.attributes.lang || "");
            if (b[e]) {
                if (a.segments) {
                    var l;
                    a.segments[0] && (a.segments[0].discontinuity = !0);
                    (l = b[e].segments).push.apply(l, a.segments)
                }
                a.attributes.contentProtection && (b[e].attributes.contentProtection = a.attributes.contentProtection)
            } else
                b[e] = a,
                b[e].attributes.timelineStarts = [];
            b[e].attributes.timelineStarts.push({
                start: a.attributes.periodStart,
                timeline: a.attributes.periodStart
            });
            return b
        }, {})).map(function(b) {
            b.discontinuityStarts = mn(b.segments || [], "discontinuity");
            return b
        })
    }
      , ng = function(c, b) {
        var a = qe(c.sidx);
        (b = a && b[a] && b[a].sidx) && lg(c, b, c.sidx.resolvedUri);
        return c
    }
      , vn = function(c, b) {
        void 0 === b && (b = {});
        if (!Object.keys(b).length)
            return c;
        for (var a in c)
            c[a] = ng(c[a], b);
        return c
    }
      , wn = function(c) {
        var b, a = c.attributes, e = c.segments, l = c.mediaSequence, h = c.discontinuityStarts;
        c = c.discontinuitySequence;
        "undefined" === typeof e && (e = [{
            uri: a.baseUrl,
            timeline: a.periodStart,
            resolvedUri: a.baseUrl || "",
            duration: a.sourceDuration,
            number: 0
        }],
        a.duration = a.sourceDuration);
        var g = (b = {
            NAME: a.id,
            BANDWIDTH: a.bandwidth
        },
        b["PROGRAM-ID"] = 1,
        b);
        a.codecs && (g.CODECS = a.codecs);
        return {
            attributes: g,
            uri: "",
            endList: "static" === a.type,
            timeline: a.periodStart,
            resolvedUri: a.baseUrl || "",
            targetDuration: a.duration,
            timelineStarts: a.timelineStarts,
            discontinuityStarts: h,
            discontinuitySequence: c,
            mediaSequence: l,
            segments: e
        }
    }
      , xn = function(c, b, a) {
        void 0 === b && (b = {});
        void 0 === a && (a = !1);
        var e;
        c = c.reduce(function(h, g) {
            var q = g.attributes.role && g.attributes.role.value || ""
              , p = g.attributes.lang || ""
              , f = g.attributes.label || "main";
            p && !g.attributes.label && (f = "" + g.attributes.lang + (q ? " (" + q + ")" : ""));
            h[f] || (h[f] = {
                language: p,
                autoselect: !0,
                "default": "main" === q,
                playlists: [],
                uri: ""
            });
            p = a;
            var m, k = g.attributes, r = g.segments, u = g.sidx, t = g.mediaSequence, x = g.discontinuitySequence, F = g.discontinuityStarts;
            r = {
                attributes: (m = {
                    NAME: k.id,
                    BANDWIDTH: k.bandwidth,
                    CODECS: k.codecs
                },
                m["PROGRAM-ID"] = 1,
                m),
                uri: "",
                endList: "static" === k.type,
                timeline: k.periodStart,
                resolvedUri: "",
                targetDuration: k.duration,
                discontinuitySequence: x,
                discontinuityStarts: F,
                timelineStarts: k.timelineStarts,
                mediaSequence: t,
                segments: r
            };
            k.contentProtection && (r.contentProtection = k.contentProtection);
            u && (r.sidx = u);
            p && (r.attributes.AUDIO = "audio",
            r.attributes.SUBTITLES = "subs");
            m = ng(r, b);
            h[f].playlists.push(m);
            "undefined" === typeof e && "main" === q && (e = g,
            e["default"] = !0);
            return h
        }, {});
        if (!e) {
            var l = Object.keys(c)[0];
            c[l]["default"] = !0
        }
        return c
    }
      , yn = function(c, b) {
        void 0 === b && (b = {});
        return c.reduce(function(a, e) {
            var l = e.attributes.lang || "text";
            a[l] || (a[l] = {
                language: l,
                "default": !1,
                autoselect: !1,
                playlists: [],
                uri: ""
            });
            a[l].playlists.push(ng(wn(e), b));
            return a
        }, {})
    }
      , zn = function(c) {
        return c.reduce(function(b, a) {
            if (!a)
                return b;
            a.forEach(function(e) {
                var l = e.language;
                b[l] = {
                    autoselect: !1,
                    "default": !1,
                    instreamId: e.channel,
                    language: l
                };
                e.hasOwnProperty("aspectRatio") && (b[l].aspectRatio = e.aspectRatio);
                e.hasOwnProperty("easyReader") && (b[l].easyReader = e.easyReader);
                e.hasOwnProperty("3D") && (b[l]["3D"] = e["3D"])
            });
            return b
        }, {})
    }
      , An = function(c) {
        var b, a = c.attributes, e = c.segments, l = c.sidx;
        c = c.discontinuityStarts;
        e = {
            attributes: (b = {
                NAME: a.id,
                AUDIO: "audio",
                SUBTITLES: "subs",
                RESOLUTION: {
                    width: a.width,
                    height: a.height
                },
                CODECS: a.codecs,
                BANDWIDTH: a.bandwidth
            },
            b["PROGRAM-ID"] = 1,
            b),
            uri: "",
            endList: "static" === a.type,
            timeline: a.periodStart,
            resolvedUri: "",
            targetDuration: a.duration,
            discontinuityStarts: c,
            timelineStarts: a.timelineStarts,
            segments: e
        };
        a.contentProtection && (e.contentProtection = a.contentProtection);
        l && (e.sidx = l);
        return e
    }
      , Bn = function(c) {
        c = c.attributes;
        return "video/mp4" === c.mimeType || "video/webm" === c.mimeType || "video" === c.contentType
    }
      , Cn = function(c) {
        c = c.attributes;
        return "audio/mp4" === c.mimeType || "audio/webm" === c.mimeType || "audio" === c.contentType
    }
      , Dn = function(c) {
        c = c.attributes;
        return "text/vtt" === c.mimeType || "text" === c.contentType
    }
      , En = function(c, b) {
        c.forEach(function(a) {
            a.mediaSequence = 0;
            a.discontinuitySequence = jg(b, function(e) {
                return e.timeline === a.timeline
            });
            a.segments && a.segments.forEach(function(e, l) {
                e.number = l
            })
        })
    }
      , xj = function(c) {
        return c ? Object.keys(c).reduce(function(b, a) {
            return b.concat(c[a].playlists)
        }, []) : []
    }
      , Fn = function(c) {
        var b, a = c.dashPlaylists, e = c.locations, l = c.sidxMapping;
        l = void 0 === l ? {} : l;
        c = c.previousManifest;
        if (!a.length)
            return {};
        var h = a[0].attributes
          , g = h.sourceDuration
          , q = h.type
          , p = h.suggestedPresentationDelay
          , f = h.minimumUpdatePeriod;
        h = mg(a.filter(Bn)).map(An);
        var m = mg(a.filter(Cn))
          , k = mg(a.filter(Dn));
        a = a.map(function(r) {
            return r.attributes.captionServices
        }).filter(Boolean);
        g = {
            allowCache: !0,
            discontinuityStarts: [],
            segments: [],
            endList: !0,
            mediaGroups: (b = {
                AUDIO: {},
                VIDEO: {}
            },
            b["CLOSED-CAPTIONS"] = {},
            b.SUBTITLES = {},
            b),
            uri: "",
            duration: g,
            playlists: vn(h, l)
        };
        0 <= f && (g.minimumUpdatePeriod = 1E3 * f);
        e && (g.locations = e);
        "dynamic" === q && (g.suggestedPresentationDelay = p);
        b = 0 === g.playlists.length;
        b = m.length ? xn(m, l, b) : null;
        l = k.length ? yn(k, l) : null;
        e = h.concat(xj(b), xj(l));
        h = e.map(function(r) {
            return r.timelineStarts
        });
        g.timelineStarts = uj(h);
        En(e, g.timelineStarts);
        b && (g.mediaGroups.AUDIO.audio = b);
        l && (g.mediaGroups.SUBTITLES.subs = l);
        a.length && (g.mediaGroups["CLOSED-CAPTIONS"].cc = zn(a));
        return c ? un({
            oldManifest: c,
            newManifest: g
        }) : g
    }
      , yj = function(c, b) {
        var a = c.type
          , e = c.minimumUpdatePeriod;
        e = void 0 === e ? 0 : e;
        var l = c.media;
        l = void 0 === l ? "" : l;
        var h = c.sourceDuration
          , g = c.timescale;
        g = void 0 === g ? 1 : g;
        var q = c.startNumber;
        q = void 0 === q ? 1 : q;
        for (var p = c.periodStart, f = [], m = -1, k = 0; k < b.length; k++) {
            var r = b[k]
              , u = r.d
              , t = r.r || 0;
            r = r.t || 0;
            0 > m && (m = r);
            r && r > m && (m = r);
            if (0 > t)
                if (t = k + 1,
                t === b.length)
                    if ("dynamic" === a && 0 < e && 0 < l.indexOf("$Number$")) {
                        t = c.timescale;
                        r = c.periodStart;
                        var x = c.minimumUpdatePeriod;
                        t = Math.ceil((((c.NOW + c.clientOffset) / 1E3 + (void 0 === x ? 0 : x) - (c.availabilityStartTime + (void 0 === r ? 0 : r))) * (void 0 === t ? 1 : t) - m) / u)
                    } else
                        t = (h * g - m) / u;
                else
                    t = (b[t].t - m) / u;
            else
                t += 1;
            t = q + f.length + t;
            for (r = q + f.length; r < t; )
                f.push({
                    number: r,
                    duration: u / g,
                    time: m,
                    timeline: p
                }),
                m += u,
                r++
        }
        return f
    }
      , zj = /\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g
      , Aj = function(c) {
        return function(b, a, e, l) {
            if ("$$" === b)
                return "$";
            if ("undefined" === typeof c[a])
                return b;
            b = "" + c[a];
            if ("RepresentationID" === a)
                return b;
            l = e ? parseInt(l, 10) : 1;
            return b.length >= l ? b : "" + Array(l - b.length + 1).join("0") + b
        }
    }
      , Gn = function(c, b) {
        return c.duration || b ? c.duration ? kg(c) : yj(c, b) : [{
            number: c.startNumber || 1,
            duration: c.sourceDuration,
            time: 0,
            timeline: c.periodStart
        }]
    }
      , Hn = function(c, b) {
        var a = {
            RepresentationID: c.id,
            Bandwidth: c.bandwidth || 0
        }
          , e = c.initialization;
        e = void 0 === e ? {
            sourceURL: "",
            range: ""
        } : e;
        var l = ud({
            baseUrl: c.baseUrl,
            source: e.sourceURL.replace(zj, Aj(a)),
            range: e.range
        });
        return Gn(c, b).map(function(h) {
            a.Number = h.number;
            a.Time = h.time;
            var g = (c.media || "").replace(zj, Aj(a))
              , q = c.periodStart + (h.time - (c.presentationTimeOffset || 0)) / (c.timescale || 1);
            return {
                uri: g,
                timeline: h.timeline,
                duration: h.duration,
                resolvedUri: hg(c.baseUrl || "", g),
                map: l,
                number: h.number,
                presentationTime: q
            }
        })
    }
      , In = function(c, b) {
        var a = c.duration
          , e = c.segmentUrls;
        e = void 0 === e ? [] : e;
        var l = c.periodStart;
        if (!a && !b || a && b)
            throw Error("SEGMENT_TIME_UNSPECIFIED");
        var h = e.map(function(q) {
            var p = c.baseUrl
              , f = c.initialization;
            f = void 0 === f ? {} : f;
            f = ud({
                baseUrl: p,
                source: f.sourceURL,
                range: f.range
            });
            q = ud({
                baseUrl: p,
                source: q.media,
                range: q.mediaRange
            });
            q.map = f;
            return q
        }), g;
        a && (g = kg(c));
        b && (g = yj(c, b));
        return g.map(function(q, p) {
            if (h[p]) {
                p = h[p];
                var f = c.timescale || 1
                  , m = c.presentationTimeOffset || 0;
                p.timeline = q.timeline;
                p.duration = q.duration;
                p.number = q.number;
                p.presentationTime = l + (q.time - m) / f;
                return p
            }
        }).filter(function(q) {
            return q
        })
    }
      , Jn = function(c) {
        var b = c.attributes;
        c = c.segmentInfo;
        if (c.template) {
            var a = Hn;
            var e = ib(b, c.template)
        } else
            c.base ? (a = tj,
            e = ib(b, c.base)) : c.list && (a = In,
            e = ib(b, c.list));
        b = {
            attributes: b
        };
        if (!a)
            return b;
        a = a(e, c.segmentTimeline);
        if (e.duration) {
            var l = e
              , h = l.timescale;
            e.duration = l.duration / (void 0 === h ? 1 : h)
        } else
            e.duration = a.length ? a.reduce(function(g, q) {
                return Math.max(g, Math.ceil(q.duration))
            }, 0) : 0;
        b.attributes = e;
        b.segments = a;
        c.base && e.indexRange && (b.sidx = a[0],
        b.segments = []);
        return b
    }
      , La = function(c, b) {
        return rj(c.childNodes).filter(function(a) {
            return a.tagName === b
        })
    }
      , og = function(c) {
        return c.textContent.trim()
    }
      , Pc = function(c) {
        c = /P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/.exec(c);
        if (!c)
            return 0;
        c = c.slice(1);
        var b = c[1]
          , a = c[2]
          , e = c[3]
          , l = c[4]
          , h = c[5];
        return 31536E3 * parseFloat(c[0] || 0) + 2592E3 * parseFloat(b || 0) + 86400 * parseFloat(a || 0) + 3600 * parseFloat(e || 0) + 60 * parseFloat(l || 0) + parseFloat(h || 0)
    }
      , Bj = {
        mediaPresentationDuration: function(c) {
            return Pc(c)
        },
        availabilityStartTime: function(c) {
            /^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/.test(c) && (c += "Z");
            return Date.parse(c) / 1E3
        },
        minimumUpdatePeriod: function(c) {
            return Pc(c)
        },
        suggestedPresentationDelay: function(c) {
            return Pc(c)
        },
        type: function(c) {
            return c
        },
        timeShiftBufferDepth: function(c) {
            return Pc(c)
        },
        start: function(c) {
            return Pc(c)
        },
        width: function(c) {
            return parseInt(c, 10)
        },
        height: function(c) {
            return parseInt(c, 10)
        },
        bandwidth: function(c) {
            return parseInt(c, 10)
        },
        startNumber: function(c) {
            return parseInt(c, 10)
        },
        timescale: function(c) {
            return parseInt(c, 10)
        },
        presentationTimeOffset: function(c) {
            return parseInt(c, 10)
        },
        duration: function(c) {
            var b = parseInt(c, 10);
            return isNaN(b) ? Pc(c) : b
        },
        d: function(c) {
            return parseInt(c, 10)
        },
        t: function(c) {
            return parseInt(c, 10)
        },
        r: function(c) {
            return parseInt(c, 10)
        },
        DEFAULT: function(c) {
            return c
        }
    }
      , ab = function(c) {
        return c && c.attributes ? rj(c.attributes).reduce(function(b, a) {
            b[a.name] = (Bj[a.name] || Bj.DEFAULT)(a.value);
            return b
        }, {}) : {}
    }
      , Kn = {
        "urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b": "org.w3.clearkey",
        "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed": "com.widevine.alpha",
        "urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95": "com.microsoft.playready",
        "urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb": "com.adobe.primetime"
    }
      , re = function(c, b) {
        return b.length ? pe(c.map(function(a) {
            return b.map(function(e) {
                return hg(a, og(e))
            })
        })) : c
    }
      , pg = function(c) {
        var b = La(c, "SegmentTemplate")[0]
          , a = La(c, "SegmentList")[0]
          , e = a && La(a, "SegmentURL").map(function(q) {
            return ib({
                tag: "SegmentURL"
            }, ab(q))
        });
        c = La(c, "SegmentBase")[0];
        var l = a || b;
        l = l && La(l, "SegmentTimeline")[0];
        var h = a || c || b;
        h = h && La(h, "Initialization")[0];
        (b = b && ab(b)) && h ? b.initialization = h && ab(h) : b && b.initialization && (b.initialization = {
            sourceURL: b.initialization
        });
        var g = {
            template: b,
            segmentTimeline: l && La(l, "S").map(function(q) {
                return ab(q)
            }),
            list: a && ib(ab(a), {
                segmentUrls: e,
                initialization: ab(h)
            }),
            base: c && ib(ab(c), {
                initialization: ab(h)
            })
        };
        Object.keys(g).forEach(function(q) {
            g[q] || delete g[q]
        });
        return g
    }
      , Ln = function(c, b, a) {
        return function(e) {
            var l = La(e, "BaseURL");
            l = re(b, l);
            var h = ib(c, ab(e))
              , g = pg(e);
            return l.map(function(q) {
                return {
                    segmentInfo: ib(a, g),
                    attributes: ib(h, {
                        baseUrl: q
                    })
                }
            })
        }
    }
      , Mn = function(c) {
        return c.reduce(function(b, a) {
            var e = ab(a);
            e.schemeIdUri && (e.schemeIdUri = e.schemeIdUri.toLowerCase());
            var l = Kn[e.schemeIdUri];
            if (l && (b[l] = {
                attributes: e
            },
            a = La(a, "cenc:pssh")[0])) {
                a = og(a);
                l = b[l];
                if (e = a) {
                    a = window.atob ? window.atob(a) : Buffer.from(a, "base64").toString("binary");
                    e = new Uint8Array(a.length);
                    for (var h = 0; h < a.length; h++)
                        e[h] = a.charCodeAt(h)
                }
                l.pssh = e
            }
            return b
        }, {})
    }
      , Nn = function(c) {
        if ("urn:scte:dash:cc:cea-608:2015" === c.schemeIdUri)
            return ("string" !== typeof c.value ? [] : c.value.split(";")).map(function(b) {
                var a = b;
                if (/^CC\d=/.test(b)) {
                    b = b.split("=");
                    var e = b[0];
                    a = b[1]
                } else
                    /^CC\d$/.test(b) && (e = b);
                return {
                    channel: e,
                    language: a
                }
            });
        if ("urn:scte:dash:cc:cea-708:2015" === c.schemeIdUri)
            return ("string" !== typeof c.value ? [] : c.value.split(";")).map(function(b) {
                var a = {
                    channel: void 0,
                    language: void 0,
                    aspectRatio: 1,
                    easyReader: 0,
                    "3D": 0
                };
                if (/=/.test(b)) {
                    var e = b.split("=")
                      , l = e[1];
                    a.channel = e[0];
                    a.language = b;
                    (void 0 === l ? "" : l).split(",").forEach(function(h) {
                        var g = h.split(":");
                        h = g[0];
                        g = g[1];
                        "lang" === h ? a.language = g : "er" === h ? a.easyReader = Number(g) : "war" === h ? a.aspectRatio = Number(g) : "3D" === h && (a["3D"] = Number(g))
                    })
                } else
                    a.language = b;
                a.channel && (a.channel = "SERVICE" + a.channel);
                return a
            })
    }
      , On = function(c, b, a) {
        return function(e) {
            var l = ab(e)
              , h = re(b, La(e, "BaseURL"))
              , g = La(e, "Role")[0];
            g = {
                role: ab(g)
            };
            l = ib(c, l, g);
            g = La(e, "Accessibility")[0];
            (g = Nn(ab(g))) && (l = ib(l, {
                captionServices: g
            }));
            (g = La(e, "Label")[0]) && g.childNodes.length && (g = g.childNodes[0].nodeValue.trim(),
            l = ib(l, {
                label: g
            }));
            g = Mn(La(e, "ContentProtection"));
            Object.keys(g).length && (l = ib(l, {
                contentProtection: g
            }));
            g = pg(e);
            e = La(e, "Representation");
            g = ib(a, g);
            return pe(e.map(Ln(l, h, g)))
        }
    }
      , Pn = function(c, b) {
        return function(a, e) {
            e = re(b, La(a.node, "BaseURL"));
            var l = ib(c, {
                periodStart: a.attributes.start
            });
            "number" === typeof a.attributes.duration && (l.periodDuration = a.attributes.duration);
            var h = La(a.node, "AdaptationSet");
            a = pg(a.node);
            return pe(h.map(On(l, e, a)))
        }
    }
      , Qn = function(c, b) {
        void 0 === b && (b = {});
        var a = b;
        b = a.manifestUri;
        b = void 0 === b ? "" : b;
        var e = a.NOW;
        e = void 0 === e ? Date.now() : e;
        a = a.clientOffset;
        a = void 0 === a ? 0 : a;
        var l = La(c, "Period");
        if (!l.length)
            throw Error("INVALID_NUMBER_OF_PERIOD");
        var h = La(c, "Location")
          , g = ab(c);
        c = re([b], La(c, "BaseURL"));
        g.type = g.type || "static";
        g.sourceDuration = g.mediaPresentationDuration || 0;
        g.NOW = e;
        g.clientOffset = a;
        h.length && (g.locations = h.map(og));
        var q = [];
        l.forEach(function(p, f) {
            var m = ab(p);
            f = (f = q[f - 1]) ? f.attributes : null;
            var k = g.type;
            m.start = "number" === typeof m.start ? m.start : f && "number" === typeof f.start && "number" === typeof f.duration ? f.start + f.duration : f || "static" !== k ? null : 0;
            q.push({
                node: p,
                attributes: m
            })
        });
        return {
            locations: g.locations,
            representationInfo: pe(q.map(Pn(g, c)))
        }
    }
      , Cj = function(c) {
        if ("" === c)
            throw Error("DASH_EMPTY_MANIFEST");
        var b = new Uh, a;
        try {
            var e = (a = b.parseFromString(c, "application/xml")) && "MPD" === a.documentElement.tagName ? a.documentElement : null
        } catch (l) {}
        if (!e || e && 0 < e.getElementsByTagName("parsererror").length)
            throw Error("DASH_INVALID_XML");
        return e
    }
      , Rn = function(c) {
        c = La(c, "UTCTiming")[0];
        if (!c)
            return null;
        c = ab(c);
        switch (c.schemeIdUri) {
        case "urn:mpeg:dash:utc:http-head:2014":
        case "urn:mpeg:dash:utc:http-head:2012":
            c.method = "HEAD";
            break;
        case "urn:mpeg:dash:utc:http-xsdate:2014":
        case "urn:mpeg:dash:utc:http-iso:2014":
        case "urn:mpeg:dash:utc:http-xsdate:2012":
        case "urn:mpeg:dash:utc:http-iso:2012":
            c.method = "GET";
            break;
        case "urn:mpeg:dash:utc:direct:2014":
        case "urn:mpeg:dash:utc:direct:2012":
            c.method = "DIRECT";
            c.value = Date.parse(c.value);
            break;
        default:
            throw Error("UNSUPPORTED_UTC_TIMING_SCHEME");
        }
        return c
    }
      , Sn = Math.pow(2, 32)
      , Dj = function(c) {
        c = new DataView(c.buffer,c.byteOffset,c.byteLength);
        return c.getBigUint64 ? (c = c.getBigUint64(0),
        c < Number.MAX_SAFE_INTEGER ? Number(c) : c) : c.getUint32(0) * Sn + c.getUint32(4)
    }
      , Tn = qa([73, 68, 51])
      , vd = function e(b, a) {
        void 0 === a && (a = 0);
        b = qa(b);
        if (10 > b.length - a || !Ha(b, Tn, {
            offset: a
        }))
            return a;
        var l = a;
        var h = a;
        void 0 === h && (h = 0);
        a = qa(b);
        var g = a[h + 6] << 21 | a[h + 7] << 14 | a[h + 8] << 7 | a[h + 9];
        a = (a[h + 5] & 16) >> 4 ? g + 20 : g + 10;
        return e(b, l + a)
    }
      , Ej = function(b) {
        return "string" === typeof b ? kj(b) : b
    }
      , Un = function(b) {
        return Array.isArray(b) ? b.map(function(a) {
            return Ej(a)
        }) : [Ej(b)]
    }
      , Vn = function h(a, e, l) {
        void 0 === l && (l = !1);
        e = Un(e);
        a = qa(a);
        var g = [];
        if (!e.length)
            return g;
        for (var q = 0; q < a.length; ) {
            var p = (a[q] << 24 | a[q + 1] << 16 | a[q + 2] << 8 | a[q + 3]) >>> 0
              , f = a.subarray(q + 4, q + 8);
            if (0 === p)
                break;
            p = q + p;
            if (p > a.length) {
                if (l)
                    break;
                p = a.length
            }
            q = a.subarray(q + 8, p);
            Ha(f, e[0]) && (1 === e.length ? g.push(q) : g.push.apply(g, h(q, e.slice(1), l)));
            q = p
        }
        return g
    }
      , Fj = qa([26, 69, 223, 163])
      , Gj = qa([66, 130]);
    qa([24, 83, 128, 103]);
    qa([21, 73, 169, 102]);
    qa([22, 84, 174, 107]);
    qa([174]);
    qa([215]);
    qa([35, 227, 131]);
    qa([174]);
    qa([131]);
    qa([136]);
    qa([134]);
    qa([99, 162]);
    qa([224]);
    qa([225]);
    qa([31, 67, 182, 117]);
    qa([231]);
    qa([42, 215, 177]);
    qa([160]);
    qa([155]);
    qa([161]);
    qa([163]);
    var qg = [128, 64, 32, 16, 8, 4, 2, 1]
      , se = function(a, e, l, h) {
        void 0 === l && (l = !0);
        void 0 === h && (h = !1);
        var g = 1;
        for (var q = 0; q < qg.length && !(a[e] & qg[q]); q++)
            g++;
        q = a.subarray(e, e + g);
        l && (q = Array.prototype.slice.call(a, e, e + g),
        q[0] ^= qg[g - 1]);
        return {
            length: g,
            value: cn(q, {
                signed: h
            }),
            bytes: q
        }
    }
      , Hj = function l(e) {
        return "string" === typeof e ? e.match(/.{1,2}/g).map(function(h) {
            return l(h)
        }) : "number" === typeof e ? dn(e) : e
    }
      , Wn = function(e) {
        return Array.isArray(e) ? e.map(function(l) {
            return Hj(l)
        }) : [Hj(e)]
    }
      , Xn = function q(l, h, g) {
        if (g >= h.length)
            return h.length;
        var p = se(h, g, !1);
        if (Ha(l.bytes, p.bytes))
            return g;
        var f = se(h, g + p.length);
        return q(l, h, g + f.length + f.value + p.length)
    }
      , Ij = function q(h, g) {
        g = Wn(g);
        h = qa(h);
        var p = [];
        if (!g.length)
            return p;
        for (var f = 0; f < h.length; ) {
            var m = se(h, f, !1)
              , k = se(h, f + m.length)
              , r = f + m.length + k.length;
            127 === k.value && (k.value = Xn(m, h, r),
            k.value !== h.length && (k.value -= r));
            r = h.subarray(r, r + k.value > h.length ? h.length : r + k.value);
            Ha(g[0], m.bytes) && (1 === g.length ? p.push(r) : p = p.concat(q(r, g.slice(1))));
            f += m.length + k.length + r.length
        }
        return p
    }
      , Yn = qa([0, 0, 0, 1])
      , Zn = qa([0, 0, 1])
      , $n = qa([0, 0, 3])
      , Jj = function(h, g, q, p) {
        void 0 === p && (p = Infinity);
        h = qa(h);
        q = [].concat(q);
        for (var f = 0, m, k = 0; f < h.length && (k < p || m); ) {
            var r = void 0;
            Ha(h.subarray(f), Yn) ? r = 4 : Ha(h.subarray(f), Zn) && (r = 3);
            if (r) {
                k++;
                if (m) {
                    h = h.subarray(m, f);
                    g = [];
                    for (q = 1; q < h.length - 2; )
                        Ha(h.subarray(q, q + 3), $n) && (g.push(q + 2),
                        q++),
                        q++;
                    if (0 !== g.length) {
                        p = h.length - g.length;
                        f = new Uint8Array(p);
                        for (q = m = 0; q < p; m++,
                        q++)
                            m === g[0] && (m++,
                            g.shift()),
                            f[q] = h[m];
                        h = f
                    }
                    return h
                }
                var u = void 0;
                "h264" === g ? u = h[f + r] & 31 : "h265" === g && (u = h[f + r] >> 1 & 63);
                -1 !== q.indexOf(u) && (m = f + r);
                f += r + ("h264" === g ? 1 : 2)
            } else
                f++
        }
        return h.subarray(0, 0)
    }
      , jb = {
        webm: qa([119, 101, 98, 109]),
        matroska: qa([109, 97, 116, 114, 111, 115, 107, 97]),
        flac: qa([102, 76, 97, 67]),
        ogg: qa([79, 103, 103, 83]),
        ac3: qa([11, 119]),
        riff: qa([82, 73, 70, 70]),
        avi: qa([65, 86, 73]),
        wav: qa([87, 65, 86, 69]),
        "3gp": qa([102, 116, 121, 112, 51, 103]),
        mp4: qa([102, 116, 121, 112]),
        fmp4: qa([115, 116, 121, 112]),
        mov: qa([102, 116, 121, 112, 113, 116]),
        moov: qa([109, 111, 111, 118]),
        moof: qa([109, 111, 111, 102])
    }
      , Qc = {
        aac: function(h) {
            var g = vd(h);
            return Ha(h, [255, 16], {
                offset: g,
                mask: [255, 22]
            })
        },
        mp3: function(h) {
            var g = vd(h);
            return Ha(h, [255, 2], {
                offset: g,
                mask: [255, 6]
            })
        },
        webm: function(h) {
            h = Ij(h, [Fj, Gj])[0];
            return Ha(h, jb.webm)
        },
        mkv: function(h) {
            h = Ij(h, [Fj, Gj])[0];
            return Ha(h, jb.matroska)
        },
        mp4: function(h) {
            if (Qc["3gp"](h) || Qc.mov(h))
                return !1;
            if (Ha(h, jb.mp4, {
                offset: 4
            }) || Ha(h, jb.fmp4, {
                offset: 4
            }) || Ha(h, jb.moof, {
                offset: 4
            }) || Ha(h, jb.moov, {
                offset: 4
            }))
                return !0
        },
        mov: function(h) {
            return Ha(h, jb.mov, {
                offset: 4
            })
        },
        "3gp": function(h) {
            return Ha(h, jb["3gp"], {
                offset: 4
            })
        },
        ac3: function(h) {
            var g = vd(h);
            return Ha(h, jb.ac3, {
                offset: g
            })
        },
        ts: function(h) {
            if (189 > h.length && 1 <= h.length)
                return 71 === h[0];
            for (var g = 0; g + 188 < h.length && 188 > g; ) {
                if (71 === h[g] && 71 === h[g + 188])
                    return !0;
                g += 1
            }
            return !1
        },
        flac: function(h) {
            var g = vd(h);
            return Ha(h, jb.flac, {
                offset: g
            })
        },
        ogg: function(h) {
            return Ha(h, jb.ogg)
        },
        avi: function(h) {
            return Ha(h, jb.riff) && Ha(h, jb.avi, {
                offset: 8
            })
        },
        wav: function(h) {
            return Ha(h, jb.riff) && Ha(h, jb.wav, {
                offset: 8
            })
        },
        h264: function(h) {
            return Jj(h, "h264", 7, 3).length
        },
        h265: function(h) {
            return Jj(h, "h265", [32, 33], 3).length
        }
    }
      , rg = Object.keys(Qc).filter(function(h) {
        return "ts" !== h && "h264" !== h && "h265" !== h
    }).concat(["ts", "h264", "h265"]);
    rg.forEach(function(h) {
        var g = Qc[h];
        Qc[h] = function(q) {
            return g(qa(q))
        }
    });
    var ao = Qc, sg = function(h) {
        h = qa(h);
        for (var g = 0; g < rg.length; g++) {
            var q = rg[g];
            if (ao[q](h))
                return q
        }
        return ""
    }, Cb = function(h, g) {
        if (/^[a-z]+:/i.test(g))
            return g;
        /^data:/.test(h) && (h = window.location && window.location.href || "");
        var q = "function" === typeof window.URL
          , p = /^\/\//.test(h)
          , f = !window.location && !/\/\//i.test(h);
        q ? h = new window.URL(h,window.location || "http://example.com") : /\/\//i.test(h) || (h = me.buildAbsoluteURL(window.location && window.location.href || "", h));
        return q ? (h = new URL(g,h),
        f ? h.href.slice(18) : p ? h.href.slice(h.protocol.length) : h.href) : me.buildAbsoluteURL(h, g)
    }, te = function(h, g, q) {
        return h && q && q.responseURL && g !== q.responseURL ? q.responseURL : g
    }, Db = function(h) {
        return N.log.debug ? N.log.debug.bind(N, "VHS:", h + " >") : function() {}
    }, ec = 1 / 30, Jb = 3 * ec, Kj = function(h, g) {
        var q = [], p;
        if (h && h.length)
            for (p = 0; p < h.length; p++)
                g(h.start(p), h.end(p)) && q.push([h.start(p), h.end(p)]);
        return N.createTimeRanges(q)
    }, Rc = function(h, g) {
        return Kj(h, function(q, p) {
            return q - Jb <= g && p + Jb >= g
        })
    }, ue = function(h, g) {
        return Kj(h, function(q) {
            return q - ec >= g
        })
    }, bo = function(h, g) {
        var q = null
          , p = null
          , f = 0
          , m = []
          , k = [];
        if (!(h && h.length && g && g.length))
            return N.createTimeRange();
        for (var r = h.length; r--; )
            m.push({
                time: h.start(r),
                type: "start"
            }),
            m.push({
                time: h.end(r),
                type: "end"
            });
        for (r = g.length; r--; )
            m.push({
                time: g.start(r),
                type: "start"
            }),
            m.push({
                time: g.end(r),
                type: "end"
            });
        m.sort(function(u, t) {
            return u.time - t.time
        });
        for (r = 0; r < m.length; r++)
            "start" === m[r].type ? (f++,
            2 === f && (q = m[r].time)) : "end" === m[r].type && (f--,
            1 === f && (p = m[r].time)),
            null !== q && null !== p && (k.push([q, p]),
            p = q = null);
        return N.createTimeRanges(k)
    }, Lj = function(h) {
        var g = [];
        if (!h || !h.length)
            return "";
        for (var q = 0; q < h.length; q++)
            g.push(h.start(q) + " => " + h.end(q));
        return g.join(", ")
    }, pc = function(h) {
        for (var g = [], q = 0; q < h.length; q++)
            g.push({
                start: h.start(q),
                end: h.end(q)
            });
        return g
    }, co = function(h, g) {
        if (h === g)
            return !1;
        if (!h && g || !g && h || h.length !== g.length)
            return !0;
        for (var q = 0; q < h.length; q++)
            if (h.start(q) !== g.start(q) || h.end(q) !== g.end(q))
                return !0;
        return !1
    }, Mj = function(h) {
        if (h && h.length && h.end)
            return h.end(h.length - 1)
    }, tg = function(h, g) {
        var q = 0;
        if (!h || !h.length)
            return q;
        for (var p = 0; p < h.length; p++) {
            var f = h.start(p)
              , m = h.end(p);
            g > m || (q = g > f && g <= m ? q + (m - g) : q + (m - f))
        }
        return q
    }, Nj = N.createTimeRange, ug = function(h, g) {
        if (!g.preload)
            return g.duration;
        var q = 0;
        (g.parts || []).forEach(function(p) {
            q += p.duration
        });
        (g.preloadHints || []).forEach(function(p) {
            "PART" === p.type && (q += h.partTargetDuration)
        });
        return q
    }, vg = function(h) {
        return (h.segments || []).reduce(function(g, q, p) {
            q.parts ? q.parts.forEach(function(f, m) {
                g.push({
                    duration: f.duration,
                    segmentIndex: p,
                    partIndex: m,
                    part: f,
                    segment: q
                })
            }) : g.push({
                duration: q.duration,
                segmentIndex: p,
                partIndex: null,
                segment: q,
                part: null
            });
            return g
        }, [])
    }, Oj = function(h) {
        return (h = h.segments && h.segments.length && h.segments[h.segments.length - 1]) && h.parts || []
    }, Pj = function(h) {
        var g = h.preloadSegment;
        if (g)
            return h = g.parts,
            g = (g.preloadHints || []).reduce(function(q, p) {
                return q + ("PART" === p.type ? 1 : 0)
            }, 0),
            g += h && h.length ? h.length : 0
    }, Qj = function(h, g) {
        return g.endList ? 0 : h && h.suggestedPresentationDelay ? h.suggestedPresentationDelay : (h = 0 < Oj(g).length) && g.serverControl && g.serverControl.partHoldBack ? g.serverControl.partHoldBack : h && g.partTargetDuration ? 3 * g.partTargetDuration : g.serverControl && g.serverControl.holdBack ? g.serverControl.holdBack : g.targetDuration ? 3 * g.targetDuration : 0
    }, eo = function(h, g) {
        var q = 0;
        g -= h.mediaSequence;
        var p = h.segments[g];
        if (p) {
            if ("undefined" !== typeof p.start)
                return {
                    result: p.start,
                    precise: !0
                };
            if ("undefined" !== typeof p.end)
                return {
                    result: p.end - p.duration,
                    precise: !0
                }
        }
        for (; g--; ) {
            p = h.segments[g];
            if ("undefined" !== typeof p.end)
                return {
                    result: q + p.end,
                    precise: !0
                };
            q += ug(h, p);
            if ("undefined" !== typeof p.start)
                return {
                    result: q + p.start,
                    precise: !0
                }
        }
        return {
            result: q,
            precise: !1
        }
    }, Rj = function(h, g, q) {
        "undefined" === typeof g && (g = h.mediaSequence + h.segments.length);
        if (g < h.mediaSequence)
            return 0;
        var p = eo(h, g);
        if (p.precise)
            return p.result;
        a: {
            var f = 0;
            for (var m = g - h.mediaSequence; m < h.segments.length; m++) {
                g = h.segments[m];
                if ("undefined" !== typeof g.start) {
                    h = g.start - f;
                    f = !0;
                    break a
                }
                f += ug(h, g);
                if ("undefined" !== typeof g.end) {
                    h = g.end - f;
                    f = !0;
                    break a
                }
            }
            h = -1;
            f = !1
        }
        return f ? h : p.result + q
    }, Sj = function(h, g, q) {
        if (!h)
            return 0;
        "number" !== typeof q && (q = 0);
        if ("undefined" === typeof g) {
            if (h.totalDuration)
                return h.totalDuration;
            if (!h.endList)
                return window.Infinity
        }
        return Rj(h, g, q)
    }, wd = function(h) {
        var g = h.defaultDuration
          , q = h.durationList
          , p = h.startIndex
          , f = h.endIndex;
        h = 0;
        p > f && (f = [f, p],
        p = f[0],
        f = f[1]);
        if (0 > p) {
            for (; p < Math.min(0, f); p++)
                h += g;
            p = 0
        }
        for (g = p; g < f; g++)
            h += q[g].duration;
        return h
    }, Tj = function(h, g, q, p) {
        if (!h || !h.segments)
            return null;
        if (h.endList)
            return Sj(h);
        if (null === g)
            return null;
        g = Rj(h, h.mediaSequence + h.segments.length, g || 0);
        q && (p = "number" === typeof p ? p : Qj(null, h),
        g -= p);
        return Math.max(0, g)
    }, Uj = function(h) {
        return h.excludeUntil && h.excludeUntil > Date.now()
    }, wg = function(h) {
        return h.excludeUntil && Infinity === h.excludeUntil
    }, ve = function(h) {
        var g = Uj(h);
        return !h.disabled && !g
    }, Vj = function(h, g) {
        return g.attributes && g.attributes[h]
    }, xg = function(h, g) {
        if (1 === h.playlists.length)
            return !0;
        var q = g.attributes.BANDWIDTH || Number.MAX_VALUE;
        return 0 === h.playlists.filter(function(p) {
            return ve(p) ? (p.attributes.BANDWIDTH || 0) < q : !1
        }).length
    }, yg = function(h, g) {
        return !h && !g || !h && g || h && !g ? !1 : h === g || h.id && g.id && h.id === g.id || h.resolvedUri && g.resolvedUri && h.resolvedUri === g.resolvedUri || h.uri && g.uri && h.uri === g.uri ? !0 : !1
    }, Wj = function(h, g) {
        h = h && h.mediaGroups && h.mediaGroups.AUDIO || {};
        var q = !1, p;
        for (p in h) {
            for (var f in h[p])
                if (q = g(h[p][f]))
                    break;
            if (q)
                break
        }
        return !!q
    }, xd = function(h) {
        if (!h || !h.playlists || !h.playlists.length)
            return Wj(h, function(f) {
                return f.playlists && f.playlists.length || f.uri
            });
        for (var g = function(f) {
            var m = h.playlists[f];
            return (f = m.attributes && m.attributes.CODECS) && f.split(",").every(function(k) {
                return hj(k)
            }) || Wj(h, function(k) {
                return yg(m, k)
            }) ? "continue" : {
                v: !1
            }
        }, q = 0; q < h.playlists.length; q++) {
            var p = g(q);
            if ("continue" !== p && "object" === typeof p)
                return p.v
        }
        return !0
    }, ob = {
        liveEdgeDelay: Qj,
        duration: Sj,
        seekable: function(h, g, q) {
            var p = g || 0;
            h = Tj(h, g, !0, q);
            return null === h ? Nj() : Nj(p, h)
        },
        getMediaInfoForTime: function(h) {
            var g = h.playlist
              , q = h.currentTime
              , p = h.startingSegmentIndex
              , f = h.startingPartIndex
              , m = h.startTime;
            h = h.experimentalExactManifestTimings;
            for (var k = q - m, r = vg(g), u = 0, t = 0; t < r.length; t++) {
                var x = r[t];
                if (p === x.segmentIndex && ("number" !== typeof f || "number" !== typeof x.partIndex || f === x.partIndex)) {
                    u = t;
                    break
                }
            }
            if (0 > k) {
                if (0 < u)
                    for (p = u - 1; 0 <= p; p--) {
                        f = r[p];
                        k += f.duration;
                        if (h) {
                            if (0 > k)
                                continue
                        } else if (0 >= k + ec)
                            continue;
                        return {
                            partIndex: f.partIndex,
                            segmentIndex: f.segmentIndex,
                            startTime: m - wd({
                                defaultDuration: g.targetDuration,
                                durationList: r,
                                startIndex: u,
                                endIndex: p
                            })
                        }
                    }
                return {
                    partIndex: r[0] && r[0].partIndex || null,
                    segmentIndex: r[0] && r[0].segmentIndex || 0,
                    startTime: q
                }
            }
            if (0 > u) {
                for (; 0 > u; u++)
                    if (k -= g.targetDuration,
                    0 > k)
                        return {
                            partIndex: r[0] && r[0].partIndex || null,
                            segmentIndex: r[0] && r[0].segmentIndex || 0,
                            startTime: q
                        };
                u = 0
            }
            for (p = u; p < r.length; p++) {
                f = r[p];
                k -= f.duration;
                if (h) {
                    if (0 < k)
                        continue
                } else if (0 <= k - ec)
                    continue;
                return {
                    partIndex: f.partIndex,
                    segmentIndex: f.segmentIndex,
                    startTime: m + wd({
                        defaultDuration: g.targetDuration,
                        durationList: r,
                        startIndex: u,
                        endIndex: p
                    })
                }
            }
            return {
                segmentIndex: r[r.length - 1].segmentIndex,
                partIndex: r[r.length - 1].partIndex,
                startTime: q
            }
        },
        isEnabled: ve,
        isDisabled: function(h) {
            return h.disabled
        },
        isBlacklisted: Uj,
        isIncompatible: wg,
        playlistEnd: Tj,
        isAes: function(h) {
            for (var g = 0; g < h.segments.length; g++)
                if (h.segments[g].key)
                    return !0;
            return !1
        },
        hasAttribute: Vj,
        estimateSegmentRequestTime: function(h, g, q, p) {
            void 0 === p && (p = 0);
            return Vj("BANDWIDTH", q) ? (h * q.attributes.BANDWIDTH - 8 * p) / g : NaN
        },
        isLowestEnabledRendition: xg,
        isAudioOnly: xd,
        playlistMatch: yg,
        segmentDurationWithParts: ug
    }, Xj = N.log, fo = function(h) {
        var g = h.onwarn
          , q = h.oninfo
          , p = h.manifestString
          , f = h.customTagParsers;
        f = void 0 === f ? [] : f;
        var m = h.customTagMappers;
        m = void 0 === m ? [] : m;
        h = h.experimentalLLHLS;
        var k = new Xm;
        if (g)
            k.on("warn", g);
        if (q)
            k.on("info", q);
        f.forEach(function(u) {
            return k.addParser(u)
        });
        m.forEach(function(u) {
            return k.addTagMapper(u)
        });
        k.push(p);
        k.end();
        var r = k.manifest;
        h || ("preloadSegment skip serverControl renditionReports partInf partTargetDuration".split(" ").forEach(function(u) {
            r.hasOwnProperty(u) && delete r[u]
        }),
        r.segments && r.segments.forEach(function(u) {
            ["parts", "preloadHints"].forEach(function(t) {
                u.hasOwnProperty(t) && delete u[t]
            })
        }));
        r.targetDuration || (q = 10,
        r.segments && r.segments.length && (q = r.segments.reduce(function(u, t) {
            return Math.max(u, t.duration)
        }, 0)),
        g && g("manifest has no targetDuration defaulting to " + q),
        r.targetDuration = q);
        q = Oj(r);
        q.length && !r.partTargetDuration && (q = q.reduce(function(u, t) {
            return Math.max(u, t.duration)
        }, 0),
        g && (g("manifest has no partTargetDuration defaulting to " + q),
        Xj.error("LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.")),
        r.partTargetDuration = q);
        return r
    }, yd = function(h, g) {
        h.mediaGroups && ["AUDIO", "SUBTITLES"].forEach(function(q) {
            if (h.mediaGroups[q])
                for (var p in h.mediaGroups[q])
                    for (var f in h.mediaGroups[q][p])
                        g(h.mediaGroups[q][p][f], q, p, f)
        })
    }, Yj = function(h) {
        var g = h.playlist
          , q = h.uri;
        g.id = h.id;
        g.playlistErrors_ = 0;
        q && (g.uri = q);
        g.attributes = g.attributes || {}
    }, go = function(h) {
        for (var g = h.playlists.length; g--; ) {
            var q = h.playlists[g];
            Yj({
                playlist: q,
                id: g + "-" + q.uri
            });
            q.resolvedUri = Cb(h.uri, q.uri);
            h.playlists[q.id] = q;
            h.playlists[q.uri] = q;
            q.attributes.BANDWIDTH || Xj.warn("Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.")
        }
    }, ho = function(h) {
        yd(h, function(g) {
            g.uri && (g.resolvedUri = Cb(h.uri, g.uri))
        })
    }, io = function(h, g) {
        h = "0-" + g;
        var q = {
            mediaGroups: {
                AUDIO: {},
                VIDEO: {},
                "CLOSED-CAPTIONS": {},
                SUBTITLES: {}
            },
            uri: window.location.href,
            resolvedUri: window.location.href,
            playlists: [{
                uri: g,
                id: h,
                resolvedUri: g,
                attributes: {}
            }]
        };
        q.playlists[h] = q.playlists[0];
        q.playlists[g] = q.playlists[0];
        return q
    }, Zj = function(h, g) {
        h.uri = g;
        for (g = 0; g < h.playlists.length; g++)
            h.playlists[g].uri || (h.playlists[g].uri = "placeholder-uri-" + g);
        var q = xd(h);
        yd(h, function(p, f, m, k) {
            var r = "placeholder-uri-" + f + "-" + m + "-" + k;
            if (!p.playlists || !p.playlists.length) {
                if (q && "AUDIO" === f && !p.uri)
                    for (f = 0; f < h.playlists.length; f++)
                        if (k = h.playlists[f],
                        k.attributes && k.attributes.AUDIO && k.attributes.AUDIO === m)
                            return;
                p.playlists = [Fb({}, p)]
            }
            p.playlists.forEach(function(u, t) {
                var x = t + "-" + r;
                u.uri ? u.resolvedUri = u.resolvedUri || Cb(h.uri, u.uri) : (u.uri = 0 === t ? r : x,
                u.resolvedUri = u.uri);
                u.id = u.id || x;
                u.attributes = u.attributes || {};
                h.playlists[u.id] = u;
                h.playlists[u.uri] = u
            })
        });
        go(h);
        ho(h)
    }, we = N.mergeOptions, jo = function(h, g) {
        if (g.endList || !g.serverControl)
            return h;
        var q = {};
        if (g.serverControl.canBlockReload) {
            var p = g.preloadSegment
              , f = g.mediaSequence + g.segments.length;
            if (p) {
                p = p.parts || [];
                var m = Pj(g) - 1;
                -1 < m && m !== p.length - 1 && (q._HLS_part = m);
                (-1 < m || p.length) && f--
            }
            q._HLS_msn = f
        }
        g.serverControl && g.serverControl.canSkipUntil && (q._HLS_skip = g.serverControl.canSkipDateranges ? "v2" : "YES");
        if (Object.keys(q).length) {
            var k = new window.URL(h);
            ["_HLS_skip", "_HLS_msn", "_HLS_part"].forEach(function(r) {
                q.hasOwnProperty(r) && k.searchParams.set(r, q[r])
            });
            h = k.toString()
        }
        return h
    }, ko = function(h, g) {
        if (!h)
            return g;
        var q = we(h, g);
        h.preloadHints && !g.preloadHints && delete q.preloadHints;
        if (h.parts && !g.parts)
            delete q.parts;
        else if (h.parts && g.parts)
            for (var p = 0; p < g.parts.length; p++)
                h.parts && h.parts[p] && (q.parts[p] = we(h.parts[p], g.parts[p]));
        !h.skipped && g.skipped && (q.skipped = !1);
        h.preload && !g.preload && (q.preload = !1);
        return q
    }, lo = function(h, g, q) {
        h = h.slice();
        g = g.slice();
        q = q || 0;
        for (var p = [], f, m = 0; m < g.length; m++) {
            var k = h[m + q]
              , r = g[m];
            k ? (f = k.map || f,
            p.push(ko(k, r))) : (f && !r.map && (r.map = f),
            p.push(r))
        }
        return p
    }, ak = function(h, g) {
        !h.resolvedUri && h.uri && (h.resolvedUri = Cb(g, h.uri));
        h.key && !h.key.resolvedUri && (h.key.resolvedUri = Cb(g, h.key.uri));
        h.map && !h.map.resolvedUri && (h.map.resolvedUri = Cb(g, h.map.uri));
        h.map && h.map.key && !h.map.key.resolvedUri && (h.map.key.resolvedUri = Cb(g, h.map.key.uri));
        h.parts && h.parts.length && h.parts.forEach(function(q) {
            q.resolvedUri || (q.resolvedUri = Cb(g, q.uri))
        });
        h.preloadHints && h.preloadHints.length && h.preloadHints.forEach(function(q) {
            q.resolvedUri || (q.resolvedUri = Cb(g, q.uri))
        })
    }, bk = function(h) {
        var g = h.segments || []
          , q = h.preloadSegment;
        if (q && q.parts && q.parts.length) {
            if (q.preloadHints)
                for (var p = 0; p < q.preloadHints.length; p++)
                    if ("MAP" === q.preloadHints[p].type)
                        return g;
            q.duration = h.targetDuration;
            q.preload = !0;
            g.push(q)
        }
        return g
    }, ck = function(h, g) {
        return h === g || h.segments && g.segments && h.segments.length === g.segments.length && h.endList === g.endList && h.mediaSequence === g.mediaSequence && h.preloadSegment === g.preloadSegment
    }, zg = function(h, g, q) {
        void 0 === q && (q = ck);
        var p = we(h, {})
          , f = p.playlists[g.id];
        if (!f || q(f, g))
            return null;
        g.segments = bk(g);
        var m = we(f, g);
        m.preloadSegment && !g.preloadSegment && delete m.preloadSegment;
        if (f.segments) {
            if (g.skip)
                for (g.segments = g.segments || [],
                q = 0; q < g.skip.skippedSegments; q++)
                    g.segments.unshift({
                        skipped: !0
                    });
            m.segments = lo(f.segments, g.segments, g.mediaSequence - f.mediaSequence)
        }
        m.segments.forEach(function(k) {
            ak(k, m.resolvedUri)
        });
        for (f = 0; f < p.playlists.length; f++)
            p.playlists[f].id === g.id && (p.playlists[f] = m);
        p.playlists[g.id] = m;
        p.playlists[g.uri] = m;
        yd(h, function(k, r, u, t) {
            if (k.playlists)
                for (r = 0; r < k.playlists.length; r++)
                    g.id === k.playlists[r].id && (k.playlists[r] = m)
        });
        return p
    }, Ag = function(h, g) {
        var q = h.segments || []
          , p = (q = q[q.length - 1]) && q.parts && q.parts[q.parts.length - 1];
        q = p && p.duration || q && q.duration;
        return g && q ? 1E3 * q : 500 * (h.partTargetDuration || h.targetDuration || 10)
    }, Sc = function(h) {
        function g(p, f, m) {
            void 0 === m && (m = {});
            var k = h.call(this) || this;
            if (!p)
                throw Error("A non-empty playlist URL or object is required");
            k.logger_ = Db("PlaylistLoader");
            var r = m;
            m = r.withCredentials;
            r = r.handleManifestRedirects;
            k.src = p;
            k.vhs_ = f;
            k.withCredentials = void 0 === m ? !1 : m;
            k.handleManifestRedirects = void 0 === r ? !1 : r;
            p = f.options_;
            k.customTagParsers = p && p.customTagParsers || [];
            k.customTagMappers = p && p.customTagMappers || [];
            k.experimentalLLHLS = p && p.experimentalLLHLS || !1;
            N.browser.IE_VERSION && (k.experimentalLLHLS = !1);
            k.state = "HAVE_NOTHING";
            k.handleMediaupdatetimeout_ = k.handleMediaupdatetimeout_.bind(sa(k));
            k.on("mediaupdatetimeout", k.handleMediaupdatetimeout_);
            return k
        }
        ia(g, h);
        var q = g.prototype;
        q.handleMediaupdatetimeout_ = function() {
            var p = this;
            if ("HAVE_METADATA" === this.state) {
                var f = this.media()
                  , m = Cb(this.master.uri, f.uri);
                this.experimentalLLHLS && (m = jo(m, f));
                this.state = "HAVE_CURRENT_METADATA";
                this.request = this.vhs_.xhr({
                    uri: m,
                    withCredentials: this.withCredentials
                }, function(k, r) {
                    if (p.request) {
                        if (k)
                            return p.playlistRequestError(p.request, p.media(), "HAVE_METADATA");
                        p.haveMetadata({
                            playlistString: p.request.responseText,
                            url: p.media().uri,
                            id: p.media().id
                        })
                    }
                })
            }
        }
        ;
        q.playlistRequestError = function(p, f, m) {
            var k = f.uri;
            f = f.id;
            this.request = null;
            m && (this.state = m);
            this.error = {
                playlist: this.master.playlists[f],
                status: p.status,
                message: "HLS playlist request error at URL: " + k + ".",
                responseText: p.responseText,
                code: 500 <= p.status ? 4 : 2
            };
            this.trigger("error")
        }
        ;
        q.parseManifest_ = function(p) {
            var f = this
              , m = p.url;
            return fo({
                onwarn: function(k) {
                    return f.logger_("m3u8-parser warn for " + m + ": " + k.message)
                },
                oninfo: function(k) {
                    return f.logger_("m3u8-parser info for " + m + ": " + k.message)
                },
                manifestString: p.manifestString,
                customTagParsers: this.customTagParsers,
                customTagMappers: this.customTagMappers,
                experimentalLLHLS: this.experimentalLLHLS
            })
        }
        ;
        q.haveMetadata = function(p) {
            var f = p.playlistString
              , m = p.playlistObject
              , k = p.url;
            p = p.id;
            this.request = null;
            this.state = "HAVE_METADATA";
            f = m || this.parseManifest_({
                url: k,
                manifestString: f
            });
            f.lastRequest = Date.now();
            Yj({
                playlist: f,
                uri: k,
                id: p
            });
            k = zg(this.master, f);
            this.targetDuration = f.partTargetDuration || f.targetDuration;
            this.pendingMedia_ = null;
            k ? (this.master = k,
            this.media_ = this.master.playlists[p]) : this.trigger("playlistunchanged");
            this.updateMediaUpdateTimeout_(Ag(this.media(), !!k));
            this.trigger("loadedplaylist")
        }
        ;
        q.dispose = function() {
            this.trigger("dispose");
            this.stopRequest();
            window.clearTimeout(this.mediaUpdateTimeout);
            window.clearTimeout(this.finalRenditionTimeout);
            this.off()
        }
        ;
        q.stopRequest = function() {
            if (this.request) {
                var p = this.request;
                this.request = null;
                p.onreadystatechange = null;
                p.abort()
            }
        }
        ;
        q.media = function(p, f) {
            var m = this;
            if (!p)
                return this.media_;
            if ("HAVE_NOTHING" === this.state)
                throw Error("Cannot switch media playlist from " + this.state);
            if ("string" === typeof p) {
                if (!this.master.playlists[p])
                    throw Error("Unknown playlist URI: " + p);
                p = this.master.playlists[p]
            }
            window.clearTimeout(this.finalRenditionTimeout);
            if (f)
                f = (p.partTargetDuration || p.targetDuration) / 2 * 1E3 || 5E3,
                this.finalRenditionTimeout = window.setTimeout(this.media.bind(this, p, !1), f);
            else {
                var k = this.state;
                f = !this.media_ || p.id !== this.media_.id;
                var r = this.master.playlists[p.id];
                if (r && r.endList || p.endList && p.segments.length)
                    this.request && (this.request.onreadystatechange = null,
                    this.request.abort(),
                    this.request = null),
                    this.state = "HAVE_METADATA",
                    this.media_ = p,
                    f && (this.trigger("mediachanging"),
                    "HAVE_MASTER" === k ? this.trigger("loadedmetadata") : this.trigger("mediachange"));
                else if (this.updateMediaUpdateTimeout_(Ag(p, !0)),
                f) {
                    this.state = "SWITCHING_MEDIA";
                    if (this.request) {
                        if (p.resolvedUri === this.request.url)
                            return;
                        this.request.onreadystatechange = null;
                        this.request.abort();
                        this.request = null
                    }
                    this.media_ && this.trigger("mediachanging");
                    this.pendingMedia_ = p;
                    this.request = this.vhs_.xhr({
                        uri: p.resolvedUri,
                        withCredentials: this.withCredentials
                    }, function(u, t) {
                        if (m.request) {
                            p.lastRequest = Date.now();
                            p.resolvedUri = te(m.handleManifestRedirects, p.resolvedUri, t);
                            if (u)
                                return m.playlistRequestError(m.request, p, k);
                            m.haveMetadata({
                                playlistString: t.responseText,
                                url: p.uri,
                                id: p.id
                            });
                            "HAVE_MASTER" === k ? m.trigger("loadedmetadata") : m.trigger("mediachange")
                        }
                    })
                }
            }
        }
        ;
        q.pause = function() {
            this.mediaUpdateTimeout && (window.clearTimeout(this.mediaUpdateTimeout),
            this.mediaUpdateTimeout = null);
            this.stopRequest();
            "HAVE_NOTHING" === this.state && (this.started = !1);
            "SWITCHING_MEDIA" === this.state ? this.state = this.media_ ? "HAVE_METADATA" : "HAVE_MASTER" : "HAVE_CURRENT_METADATA" === this.state && (this.state = "HAVE_METADATA")
        }
        ;
        q.load = function(p) {
            var f = this;
            this.mediaUpdateTimeout && (window.clearTimeout(this.mediaUpdateTimeout),
            this.mediaUpdateTimeout = null);
            var m = this.media();
            p ? this.mediaUpdateTimeout = window.setTimeout(function() {
                f.mediaUpdateTimeout = null;
                f.load()
            }, m ? (m.partTargetDuration || m.targetDuration) / 2 * 1E3 : 5E3) : this.started ? m && !m.endList ? this.trigger("mediaupdatetimeout") : this.trigger("loadedplaylist") : this.start()
        }
        ;
        q.updateMediaUpdateTimeout_ = function(p) {
            var f = this;
            this.mediaUpdateTimeout && (window.clearTimeout(this.mediaUpdateTimeout),
            this.mediaUpdateTimeout = null);
            this.media() && !this.media().endList && (this.mediaUpdateTimeout = window.setTimeout(function() {
                f.mediaUpdateTimeout = null;
                f.trigger("mediaupdatetimeout");
                f.updateMediaUpdateTimeout_(p)
            }, p))
        }
        ;
        q.start = function() {
            var p = this;
            this.started = !0;
            "object" === typeof this.src ? (this.src.uri || (this.src.uri = window.location.href),
            this.src.resolvedUri = this.src.uri,
            setTimeout(function() {
                p.setupInitialPlaylist(p.src)
            }, 0)) : this.request = this.vhs_.xhr({
                uri: this.src,
                withCredentials: this.withCredentials
            }, function(f, m) {
                if (p.request) {
                    p.request = null;
                    if (f)
                        return p.error = {
                            status: m.status,
                            message: "HLS playlist request error at URL: " + p.src + ".",
                            responseText: m.responseText,
                            code: 2
                        },
                        "HAVE_NOTHING" === p.state && (p.started = !1),
                        p.trigger("error");
                    p.src = te(p.handleManifestRedirects, p.src, m);
                    f = p.parseManifest_({
                        manifestString: m.responseText,
                        url: p.src
                    });
                    p.setupInitialPlaylist(f)
                }
            })
        }
        ;
        q.srcUri = function() {
            return "string" === typeof this.src ? this.src : this.src.uri
        }
        ;
        q.setupInitialPlaylist = function(p) {
            this.state = "HAVE_MASTER";
            if (p.playlists)
                this.master = p,
                Zj(this.master, this.srcUri()),
                p.playlists.forEach(function(m) {
                    m.segments = bk(m);
                    m.segments.forEach(function(k) {
                        ak(k, m.resolvedUri)
                    })
                }),
                this.trigger("loadedplaylist"),
                this.request || this.media(this.master.playlists[0]);
            else {
                var f = this.srcUri() || window.location.href;
                this.master = io(p, f);
                this.haveMetadata({
                    playlistObject: p,
                    url: f,
                    id: this.master.playlists[0].id
                });
                this.trigger("loadedmetadata")
            }
        }
        ;
        return g
    }(N.EventTarget), mo = N.xhr, no = N.mergeOptions, Bg = function(h, g, q, p) {
        var f = "arraybuffer" === h.responseType ? h.response : h.responseText;
        !g && f && (h.responseTime = Date.now(),
        h.roundTripTime = h.responseTime - h.requestTime,
        h.bytesReceived = f.byteLength || f.length,
        h.bandwidth || (h.bandwidth = Math.floor(h.bytesReceived / h.roundTripTime * 8E3)));
        q.headers && (h.responseHeaders = q.headers);
        g && "ETIMEDOUT" === g.code && (h.timedout = !0);
        g || h.aborted || 200 === q.statusCode || 206 === q.statusCode || 0 === q.statusCode || (g = Error("XHR Failed with a response of: " + (h && (f || h.responseText))));
        p(g, h)
    }, dk = function() {
        var h = function f(q, p) {
            q = no({
                timeout: 45E3
            }, q);
            var m = f.beforeRequest || N.Vhs.xhr.beforeRequest;
            m && "function" === typeof m && (m = m(q)) && (q = m);
            var k = (!0 === N.Vhs.xhr.original ? mo : N.Vhs.xhr)(q, function(u, t) {
                return Bg(k, u, t, p)
            })
              , r = k.abort;
            k.abort = function() {
                k.aborted = !0;
                return r.apply(k, arguments)
            }
            ;
            k.uri = q.uri;
            k.requestTime = Date.now();
            return k
        };
        h.original = !0;
        return h
    }, Cg = function(h) {
        var g = {};
        if (h.byterange) {
            var q = h.byterange;
            h = q.offset;
            q = "bigint" === typeof q.offset || "bigint" === typeof q.length ? window.BigInt(q.offset) + window.BigInt(q.length) - window.BigInt(1) : q.offset + q.length - 1;
            g.Range = "bytes=" + h + "-" + q
        }
        return g
    }, oo = function(h, g) {
        h = h.toString(16);
        return "00".substring(0, 2 - h.length) + h + (g % 2 ? " " : "")
    }, po = function(h) {
        return 32 <= h && 126 > h ? String.fromCharCode(h) : "."
    }, ek = function(h) {
        var g = {};
        Object.keys(h).forEach(function(q) {
            var p = h[q];
            jj(p) ? g[q] = {
                bytes: p.buffer,
                byteOffset: p.byteOffset,
                byteLength: p.byteLength
            } : g[q] = p
        });
        return g
    }, xe = function(h) {
        var g = h.byterange || {
            length: Infinity,
            offset: 0
        };
        return [g.length, g.offset, h.resolvedUri].join()
    }, fk = function(h) {
        h = Array.prototype.slice.call(h);
        for (var g = "", q, p, f = 0; f < h.length / 16; f++)
            q = h.slice(16 * f, 16 * f + 16).map(oo).join(""),
            p = h.slice(16 * f, 16 * f + 16).map(po).join(""),
            g += q + " " + p + "\n";
        return g
    }, qo = Object.freeze({
        __proto__: null,
        createTransferableMessage: ek,
        initSegmentId: xe,
        segmentKeyId: function(h) {
            return h.resolvedUri
        },
        hexDump: fk,
        tagDump: function(h) {
            return fk(h.bytes)
        },
        textRanges: function(h) {
            var g = "", q;
            for (q = 0; q < h.length; q++) {
                var p = h;
                var f = q;
                p = p.start(f) + "-" + p.end(f);
                g += p + " "
            }
            return g
        }
    }), ro = function(h, g) {
        try {
            var q = new Date(h)
        } catch (k) {
            return null
        }
        if (!g || !g.segments || 0 === g.segments.length)
            return null;
        h = g.segments[0];
        if (q < h.dateTimeObject)
            return null;
        for (var p = 0; p < g.segments.length - 1 && !(h = g.segments[p],
        q < g.segments[p + 1].dateTimeObject); p++)
            ;
        p = g.segments[g.segments.length - 1];
        var f = p.dateTimeObject;
        if (p.videoTimingInfo) {
            var m = p.videoTimingInfo;
            m = m.transmuxedPresentationEnd - m.transmuxedPresentationStart - m.transmuxerPrependedSeconds
        } else
            m = p.duration + .25 * p.duration;
        m = new Date(f.getTime() + 1E3 * m);
        if (q > m)
            return null;
        q > f && (h = p);
        return {
            segment: h,
            estimatedStart: h.videoTimingInfo ? h.videoTimingInfo.transmuxedPresentationStart : ob.duration(g, g.mediaSequence + g.segments.indexOf(h)),
            type: h.videoTimingInfo ? "accurate" : "estimate"
        }
    }, so = function(h, g) {
        if (!g || !g.segments || 0 === g.segments.length)
            return null;
        for (var q = 0, p, f = 0; f < g.segments.length && !(p = g.segments[f],
        q = p.videoTimingInfo ? p.videoTimingInfo.transmuxedPresentationEnd : q + p.duration,
        h <= q); f++)
            ;
        g = g.segments[g.segments.length - 1];
        if (g.videoTimingInfo && g.videoTimingInfo.transmuxedPresentationEnd < h)
            return null;
        if (h > q) {
            if (h > q + .25 * g.duration)
                return null;
            p = g
        }
        return {
            segment: p,
            estimatedStart: p.videoTimingInfo ? p.videoTimingInfo.transmuxedPresentationStart : q - p.duration,
            type: p.videoTimingInfo ? "accurate" : "estimate"
        }
    }, to = function(h, g) {
        try {
            var q = new Date(h);
            var p = new Date(g)
        } catch (f) {}
        h = q.getTime();
        return (p.getTime() - h) / 1E3
    }, uo = function(h) {
        if (!h.segments || 0 === h.segments.length)
            return !1;
        for (var g = 0; g < h.segments.length; g++)
            if (!h.segments[g].dateTimeObject)
                return !1;
        return !0
    }, vo = function(h) {
        var g = h.playlist
          , q = h.time;
        q = void 0 === q ? void 0 : q;
        h = h.callback;
        if (!h)
            throw Error("getProgramTime: callback must be provided");
        if (!g || void 0 === q)
            return h({
                message: "getProgramTime: playlist and time must be provided"
            });
        var p = so(q, g);
        if (!p)
            return h({
                message: "valid programTime was not found"
            });
        if ("estimate" === p.type)
            return h({
                message: "Accurate programTime could not be determined. Please seek to e.seekTime and try again",
                seekTime: p.estimatedStart
            });
        g = {
            mediaSeconds: q
        };
        p = p.segment;
        p.dateTimeObject ? (q -= p.videoTimingInfo.transmuxedPresentationStart + p.videoTimingInfo.transmuxerPrependedSeconds,
        q = new Date(p.dateTimeObject.getTime() + 1E3 * q)) : q = null;
        q && (g.programDateTime = q.toISOString());
        return h(null, g)
    }, wo = function q(g) {
        var p = g.programTime
          , f = g.playlist
          , m = g.retryCount
          , k = void 0 === m ? 2 : m
          , r = g.seekTo;
        m = g.pauseAfterSeek;
        var u = void 0 === m ? !0 : m
          , t = g.tech
          , x = g.callback;
        if (!x)
            throw Error("seekToProgramTime: callback must be provided");
        if ("undefined" === typeof p || !f || !r)
            return x({
                message: "seekToProgramTime: programTime, seekTo and playlist must be provided"
            });
        if (!f.endList && !t.hasStarted_)
            return x({
                message: "player must be playing a live stream to start buffering"
            });
        if (!uo(f))
            return x({
                message: "programDateTime tags must be provided in the manifest " + f.resolvedUri
            });
        g = ro(p, f);
        if (!g)
            return x({
                message: p + " was not found in the stream"
            });
        m = g.segment;
        var F = to(m.dateTimeObject, p);
        if ("estimate" === g.type) {
            if (0 === k)
                return x({
                    message: p + " is not buffered yet. Try again"
                });
            r(g.estimatedStart + F);
            t.one("seeked", function() {
                q({
                    programTime: p,
                    playlist: f,
                    retryCount: k - 1,
                    seekTo: r,
                    pauseAfterSeek: u,
                    tech: t,
                    callback: x
                })
            })
        } else
            g = m.start + F,
            t.one("seeked", function() {
                return x(null, t.currentTime())
            }),
            u && t.pause(),
            r(g)
    }, gk = function(g, q) {
        if (4 === g.readyState)
            return q()
    }, xo = function(g, q, p) {
        var f = [], m, k = !1, r = function(x, F, K, M) {
            F.abort();
            k = !0;
            return p(x, F, K, M)
        }, u = function(x, F) {
            if (!k) {
                if (x)
                    return r(x, F, "", f);
                var K = F.responseText.substring(f && f.byteLength || 0, F.responseText.length);
                f = en(f, kj(K, !0));
                m = m || vd(f);
                if (10 > f.length || m && f.length < m + 2)
                    return gk(F, function() {
                        return r(x, F, "", f)
                    });
                K = sg(f);
                return "ts" === K && 188 > f.length || !K && 376 > f.length ? gk(F, function() {
                    return r(x, F, "", f)
                }) : r(null, F, K, f)
            }
        }, t = q({
            uri: g,
            beforeSend: function(x) {
                x.overrideMimeType("text/plain; charset=x-user-defined");
                x.addEventListener("progress", function(F) {
                    F.total;
                    F.loaded;
                    return Bg(x, null, {
                        statusCode: x.status
                    }, u)
                })
            }
        }, function(x, F) {
            return Bg(t, x, F, u)
        });
        return t
    }, hk = N.mergeOptions, ik = function(g, q) {
        if (!ck(g, q) || g.sidx && q.sidx && (g.sidx.offset !== q.sidx.offset || g.sidx.length !== q.sidx.length) || !g.sidx && q.sidx || g.sidx && !q.sidx || g.segments && !q.segments || !g.segments && q.segments)
            return !1;
        if (!g.segments && !q.segments)
            return !0;
        for (var p = 0; p < g.segments.length; p++) {
            var f = g.segments[p]
              , m = q.segments[p];
            if (f.uri !== m.uri)
                return !1;
            if (f.byterange || m.byterange)
                if (f = f.byterange,
                m = m.byterange,
                f && !m || !f && m || f.offset !== m.offset || f.length !== m.length)
                    return !1
        }
        return !0
    }, yo = function(g, q, p) {
        for (var f = !0, m = hk(g, {
            duration: q.duration,
            minimumUpdatePeriod: q.minimumUpdatePeriod,
            timelineStarts: q.timelineStarts
        }), k = 0; k < q.playlists.length; k++) {
            var r = q.playlists[k];
            if (r.sidx) {
                var u = qe(r.sidx);
                p && p[u] && p[u].sidx && lg(r, p[u].sidx, r.sidx.resolvedUri)
            }
            if (r = zg(m, r, ik))
                m = r,
                f = !1
        }
        yd(q, function(t, x, F, K) {
            if (t.playlists && t.playlists.length) {
                var M = t.playlists[0].id;
                if (t = zg(m, t.playlists[0], ik))
                    m = t,
                    m.mediaGroups[x][F][K].playlists[0] = m.playlists[M],
                    f = !1
            }
        });
        q.minimumUpdatePeriod !== g.minimumUpdatePeriod && (f = !1);
        return f ? null : m
    }, jk = function(g, q) {
        var p = {}, f;
        for (f in g) {
            var m = g[f].sidx;
            if (m) {
                var k = qe(m);
                if (!q[k])
                    break;
                var r = q[k].sidxInfo;
                (!r.map && !m.map || r.map && m.map && r.map.byterange.offset === m.map.byterange.offset && r.map.byterange.length === m.map.byterange.length) && r.uri === m.uri && r.byterange.offset === m.byterange.offset && r.byterange.length === m.byterange.length && (p[k] = q[k])
            }
        }
        return p
    }, zo = function(g, q) {
        var p = jk(g.playlists, q);
        yd(g, function(f, m, k, r) {
            f.playlists && f.playlists.length && (p = hk(p, jk(f.playlists, q)))
        });
        return p
    }, Dg = function(g) {
        function q(f, m, k, r) {
            void 0 === k && (k = {});
            var u = g.call(this) || this;
            u.masterPlaylistLoader_ = r || sa(u);
            r || (u.isMaster_ = !0);
            r = k;
            k = r.withCredentials;
            r = r.handleManifestRedirects;
            u.vhs_ = m;
            u.withCredentials = void 0 === k ? !1 : k;
            u.handleManifestRedirects = void 0 === r ? !1 : r;
            if (!f)
                throw Error("A non-empty playlist URL or object is required");
            u.on("minimumUpdatePeriod", function() {
                u.refreshXml_()
            });
            u.on("mediaupdatetimeout", function() {
                u.refreshMedia_(u.media().id)
            });
            u.state = "HAVE_NOTHING";
            u.loadedPlaylists_ = {};
            u.logger_ = Db("DashPlaylistLoader");
            u.isMaster_ ? (u.masterPlaylistLoader_.srcUrl = f,
            u.masterPlaylistLoader_.sidxMapping_ = {}) : u.childPlaylist_ = f;
            return u
        }
        ia(q, g);
        var p = q.prototype;
        p.requestErrored_ = function(f, m, k) {
            if (!this.request)
                return !0;
            this.request = null;
            if (f)
                return this.error = "object" !== typeof f || f instanceof Error ? {
                    status: m.status,
                    message: "DASH request error at URL: " + m.uri,
                    response: m.response,
                    code: 2
                } : f,
                k && (this.state = k),
                this.trigger("error"),
                !0
        }
        ;
        p.addSidxSegments_ = function(f, m, k) {
            var r = this
              , u = f.sidx && qe(f.sidx);
            if (f.sidx && u && !this.masterPlaylistLoader_.sidxMapping_[u]) {
                var t = te(this.handleManifestRedirects, f.sidx.resolvedUri)
                  , x = function(F, K) {
                    if (!r.requestErrored_(F, K, m)) {
                        F = r.masterPlaylistLoader_.sidxMapping_;
                        try {
                            var M = qa(K.response).subarray(8)
                              , P = new DataView(M.buffer,M.byteOffset,M.byteLength)
                              , I = {
                                version: M[0],
                                flags: new Uint8Array(M.subarray(1, 4)),
                                references: [],
                                referenceId: P.getUint32(4),
                                timescale: P.getUint32(8)
                            }
                              , L = 12;
                            0 === I.version ? (I.earliestPresentationTime = P.getUint32(L),
                            I.firstOffset = P.getUint32(L + 4),
                            L += 8) : (I.earliestPresentationTime = Dj(M.subarray(L)),
                            I.firstOffset = Dj(M.subarray(L + 8)),
                            L += 16);
                            L += 2;
                            var V = P.getUint16(L);
                            for (L += 2; 0 < V; L += 12,
                            V--)
                                I.references.push({
                                    referenceType: (M[L] & 128) >>> 7,
                                    referencedSize: P.getUint32(L) & 2147483647,
                                    subsegmentDuration: P.getUint32(L + 4),
                                    startsWithSap: !!(M[L + 8] & 128),
                                    sapType: (M[L + 8] & 112) >>> 4,
                                    sapDeltaTime: P.getUint32(L + 8) & 268435455
                                });
                            var Y = I
                        } catch (fa) {
                            r.requestErrored_(fa, K, m);
                            return
                        }
                        F[u] = {
                            sidxInfo: f.sidx,
                            sidx: Y
                        };
                        lg(f, Y, f.sidx.resolvedUri);
                        return k(!0)
                    }
                };
                this.request = xo(t, this.vhs_.xhr, function(F, K, M, P) {
                    if (F)
                        return x(F, K);
                    if (!M || "mp4" !== M)
                        return x({
                            status: K.status,
                            message: "Unsupported " + (M || "unknown") + " container type for sidx segment at URL: " + t,
                            response: "",
                            playlist: f,
                            internal: !0,
                            blacklistDuration: Infinity,
                            code: 2
                        }, K);
                    var I = f.sidx.byterange;
                    M = I.offset;
                    I = I.length;
                    if (P.length >= I + M)
                        return x(F, {
                            response: P.subarray(M, M + I),
                            status: K.status,
                            uri: K.uri
                        });
                    r.request = r.vhs_.xhr({
                        uri: t,
                        responseType: "arraybuffer",
                        headers: Cg({
                            byterange: f.sidx.byterange
                        })
                    }, x)
                })
            } else
                this.mediaRequest_ = window.setTimeout(function() {
                    return k(!1)
                }, 0)
        }
        ;
        p.dispose = function() {
            this.trigger("dispose");
            this.stopRequest();
            this.loadedPlaylists_ = {};
            window.clearTimeout(this.minimumUpdatePeriodTimeout_);
            window.clearTimeout(this.mediaRequest_);
            window.clearTimeout(this.mediaUpdateTimeout);
            this.minimumUpdatePeriodTimeout_ = this.mediaRequest_ = this.mediaUpdateTimeout = null;
            this.masterPlaylistLoader_.createMupOnMedia_ && (this.off("loadedmetadata", this.masterPlaylistLoader_.createMupOnMedia_),
            this.masterPlaylistLoader_.createMupOnMedia_ = null);
            this.off()
        }
        ;
        p.hasPendingRequest = function() {
            return this.request || this.mediaRequest_
        }
        ;
        p.stopRequest = function() {
            if (this.request) {
                var f = this.request;
                this.request = null;
                f.onreadystatechange = null;
                f.abort()
            }
        }
        ;
        p.media = function(f) {
            var m = this;
            if (!f)
                return this.media_;
            if ("HAVE_NOTHING" === this.state)
                throw Error("Cannot switch media playlist from " + this.state);
            var k = this.state;
            if ("string" === typeof f) {
                if (!this.masterPlaylistLoader_.master.playlists[f])
                    throw Error("Unknown playlist URI: " + f);
                f = this.masterPlaylistLoader_.master.playlists[f]
            }
            var r = !this.media_ || f.id !== this.media_.id;
            r && this.loadedPlaylists_[f.id] && this.loadedPlaylists_[f.id].endList ? (this.state = "HAVE_METADATA",
            this.media_ = f,
            r && (this.trigger("mediachanging"),
            this.trigger("mediachange"))) : r && (this.media_ && this.trigger("mediachanging"),
            this.addSidxSegments_(f, k, function(u) {
                m.haveMetadata({
                    startingState: k,
                    playlist: f
                })
            }))
        }
        ;
        p.haveMetadata = function(f) {
            var m = f.startingState;
            f = f.playlist;
            this.state = "HAVE_METADATA";
            this.loadedPlaylists_[f.id] = f;
            this.mediaRequest_ = null;
            this.refreshMedia_(f.id);
            "HAVE_MASTER" === m ? this.trigger("loadedmetadata") : this.trigger("mediachange")
        }
        ;
        p.pause = function() {
            this.masterPlaylistLoader_.createMupOnMedia_ && (this.off("loadedmetadata", this.masterPlaylistLoader_.createMupOnMedia_),
            this.masterPlaylistLoader_.createMupOnMedia_ = null);
            this.stopRequest();
            window.clearTimeout(this.mediaUpdateTimeout);
            this.mediaUpdateTimeout = null;
            this.isMaster_ && (window.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_),
            this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null);
            "HAVE_NOTHING" === this.state && (this.started = !1)
        }
        ;
        p.load = function(f) {
            var m = this;
            window.clearTimeout(this.mediaUpdateTimeout);
            this.mediaUpdateTimeout = null;
            var k = this.media();
            f ? this.mediaUpdateTimeout = window.setTimeout(function() {
                return m.load()
            }, k ? k.targetDuration / 2 * 1E3 : 5E3) : this.started ? k && !k.endList ? (this.isMaster_ && !this.minimumUpdatePeriodTimeout_ && (this.trigger("minimumUpdatePeriod"),
            this.updateMinimumUpdatePeriodTimeout_()),
            this.trigger("mediaupdatetimeout")) : this.trigger("loadedplaylist") : this.start()
        }
        ;
        p.start = function() {
            var f = this;
            this.started = !0;
            this.isMaster_ ? this.requestMaster_(function(m, k) {
                f.haveMaster_();
                f.hasPendingRequest() || f.media_ || f.media(f.masterPlaylistLoader_.master.playlists[0])
            }) : this.mediaRequest_ = window.setTimeout(function() {
                return f.haveMaster_()
            }, 0)
        }
        ;
        p.requestMaster_ = function(f) {
            var m = this;
            this.request = this.vhs_.xhr({
                uri: this.masterPlaylistLoader_.srcUrl,
                withCredentials: this.withCredentials
            }, function(k, r) {
                if (m.requestErrored_(k, r))
                    "HAVE_NOTHING" === m.state && (m.started = !1);
                else {
                    var u = r.responseText !== m.masterPlaylistLoader_.masterXml_;
                    m.masterPlaylistLoader_.masterXml_ = r.responseText;
                    m.masterLoaded_ = r.responseHeaders && r.responseHeaders.date ? Date.parse(r.responseHeaders.date) : Date.now();
                    m.masterPlaylistLoader_.srcUrl = te(m.handleManifestRedirects, m.masterPlaylistLoader_.srcUrl, r);
                    if (u)
                        m.handleMaster_(),
                        m.syncClientServerClock_(function() {
                            return f(r, u)
                        });
                    else
                        return f(r, u)
                }
            })
        }
        ;
        p.syncClientServerClock_ = function(f) {
            var m = this
              , k = Rn(Cj(this.masterPlaylistLoader_.masterXml_));
            if (null === k)
                return this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now(),
                f();
            if ("DIRECT" === k.method)
                return this.masterPlaylistLoader_.clientOffset_ = k.value - Date.now(),
                f();
            this.request = this.vhs_.xhr({
                uri: Cb(this.masterPlaylistLoader_.srcUrl, k.value),
                method: k.method,
                withCredentials: this.withCredentials
            }, function(r, u) {
                if (m.request) {
                    if (r)
                        return m.masterPlaylistLoader_.clientOffset_ = m.masterLoaded_ - Date.now(),
                        f();
                    r = "HEAD" === k.method ? u.responseHeaders && u.responseHeaders.date ? Date.parse(u.responseHeaders.date) : m.masterLoaded_ : Date.parse(u.responseText);
                    m.masterPlaylistLoader_.clientOffset_ = r - Date.now();
                    f()
                }
            })
        }
        ;
        p.haveMaster_ = function() {
            this.state = "HAVE_MASTER";
            this.isMaster_ ? this.trigger("loadedplaylist") : this.media_ || this.media(this.childPlaylist_)
        }
        ;
        p.handleMaster_ = function() {
            this.mediaRequest_ = null;
            var f = this.masterPlaylistLoader_.master
              , m = this.masterPlaylistLoader_.masterXml_;
            var k = this.masterPlaylistLoader_.srcUrl;
            var r = {
                manifestUri: k,
                clientOffset: this.masterPlaylistLoader_.clientOffset_,
                sidxMapping: this.masterPlaylistLoader_.sidxMapping_,
                previousManifest: f
            };
            void 0 === r && (r = {});
            m = Qn(Cj(m), r);
            var u = m.representationInfo.map(Jn);
            r = Fn({
                dashPlaylists: u,
                locations: m.locations,
                sidxMapping: r.sidxMapping,
                previousManifest: r.previousManifest
            });
            Zj(r, k);
            k = r;
            f && (k = yo(f, k, this.masterPlaylistLoader_.sidxMapping_));
            this.masterPlaylistLoader_.master = k ? k : f;
            (r = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0]) && r !== this.masterPlaylistLoader_.srcUrl && (this.masterPlaylistLoader_.srcUrl = r);
            (!f || k && k.minimumUpdatePeriod !== f.minimumUpdatePeriod) && this.updateMinimumUpdatePeriodTimeout_();
            return !!k
        }
        ;
        p.updateMinimumUpdatePeriodTimeout_ = function() {
            var f = this.masterPlaylistLoader_;
            f.createMupOnMedia_ && (f.off("loadedmetadata", f.createMupOnMedia_),
            f.createMupOnMedia_ = null);
            f.minimumUpdatePeriodTimeout_ && (window.clearTimeout(f.minimumUpdatePeriodTimeout_),
            f.minimumUpdatePeriodTimeout_ = null);
            var m = f.master && f.master.minimumUpdatePeriod;
            0 === m && (f.media() ? m = 1E3 * f.media().targetDuration : (f.createMupOnMedia_ = f.updateMinimumUpdatePeriodTimeout_,
            f.one("loadedmetadata", f.createMupOnMedia_)));
            "number" !== typeof m || 0 >= m ? 0 > m && this.logger_("found invalid minimumUpdatePeriod of " + m + ", not setting a timeout") : this.createMUPTimeout_(m)
        }
        ;
        p.createMUPTimeout_ = function(f) {
            var m = this.masterPlaylistLoader_;
            m.minimumUpdatePeriodTimeout_ = window.setTimeout(function() {
                m.minimumUpdatePeriodTimeout_ = null;
                m.trigger("minimumUpdatePeriod");
                m.createMUPTimeout_(f)
            }, f)
        }
        ;
        p.refreshXml_ = function() {
            var f = this;
            this.requestMaster_(function(m, k) {
                k && (f.media_ && (f.media_ = f.masterPlaylistLoader_.master.playlists[f.media_.id]),
                f.masterPlaylistLoader_.sidxMapping_ = zo(f.masterPlaylistLoader_.master, f.masterPlaylistLoader_.sidxMapping_),
                f.addSidxSegments_(f.media(), f.state, function(r) {
                    f.refreshMedia_(f.media().id)
                }))
            })
        }
        ;
        p.refreshMedia_ = function(f) {
            var m = this;
            if (!f)
                throw Error("refreshMedia_ must take a media id");
            this.media_ && this.isMaster_ && this.handleMaster_();
            var k = this.masterPlaylistLoader_.master.playlists
              , r = !this.media_ || this.media_ !== k[f];
            r ? this.media_ = k[f] : this.trigger("playlistunchanged");
            this.mediaUpdateTimeout || function t() {
                m.media().endList || (m.mediaUpdateTimeout = window.setTimeout(function() {
                    m.trigger("mediaupdatetimeout");
                    t()
                }, Ag(m.media(), !!r)))
            }();
            this.trigger("loadedplaylist")
        }
        ;
        return q
    }(N.EventTarget), Ua = {
        GOAL_BUFFER_LENGTH: 30,
        MAX_GOAL_BUFFER_LENGTH: 60,
        BACK_BUFFER_LENGTH: 30,
        GOAL_BUFFER_LENGTH_RATE: 1,
        INITIAL_BANDWIDTH: 4194304,
        BANDWIDTH_VARIANCE: 1.2,
        BUFFER_LOW_WATER_LINE: 0,
        MAX_BUFFER_LOW_WATER_LINE: 30,
        EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,
        BUFFER_LOW_WATER_LINE_RATE: 1,
        BUFFER_HIGH_WATER_LINE: 30
    }, kk = function(g) {
        g.on = g.addEventListener;
        g.off = g.removeEventListener;
        return g
    }, Ao = function(g) {
        try {
            return URL.createObjectURL(new Blob([g],{
                type: "application/javascript"
            }))
        } catch (p) {
            var q = new BlobBuilder;
            q.append(g);
            return URL.createObjectURL(q.getBlob())
        }
    }, lk = function(g) {
        return function() {
            var q = Ao(g)
              , p = kk(new Worker(q));
            p.objURL = q;
            var f = p.terminate;
            p.on = p.addEventListener;
            p.off = p.removeEventListener;
            p.terminate = function() {
                URL.revokeObjectURL(q);
                return f.call(this)
            }
            ;
            return p
        }
    }, mk = function(g) {
        return "var browserWorkerPolyFill = " + kk.toString() + ";\nbrowserWorkerPolyFill(self);\n" + g
    }, nk = function(g) {
        return g.toString().replace(/^function.+?{/, "").slice(0, -1)
    }, dp = mk(nk(function() {
        var g = function() {
            this.init = function() {
                var G = {};
                this.on = function(J, B) {
                    G[J] || (G[J] = []);
                    G[J] = G[J].concat(B)
                }
                ;
                this.off = function(J, B) {
                    if (!G[J])
                        return !1;
                    B = G[J].indexOf(B);
                    G[J] = G[J].slice();
                    G[J].splice(B, 1);
                    return -1 < B
                }
                ;
                this.trigger = function(J) {
                    var B, A;
                    if (B = G[J])
                        if (2 === arguments.length) {
                            var E = B.length;
                            for (A = 0; A < E; ++A)
                                B[A].call(this, arguments[1])
                        } else {
                            var w = [];
                            for (A = 1; A < arguments.length; ++A)
                                w.push(arguments[A]);
                            E = B.length;
                            for (A = 0; A < E; ++A)
                                B[A].apply(this, w)
                        }
                }
                ;
                this.dispose = function() {
                    G = {}
                }
            }
        };
        g.prototype.pipe = function(G) {
            this.on("data", function(J) {
                G.push(J)
            });
            this.on("done", function(J) {
                G.flush(J)
            });
            this.on("partialdone", function(J) {
                G.partialFlush(J)
            });
            this.on("endedtimeline", function(J) {
                G.endTimeline(J)
            });
            this.on("reset", function(J) {
                G.reset(J)
            });
            return G
        }
        ;
        g.prototype.push = function(G) {
            this.trigger("data", G)
        }
        ;
        g.prototype.flush = function(G) {
            this.trigger("done", G)
        }
        ;
        g.prototype.partialFlush = function(G) {
            this.trigger("partialdone", G)
        }
        ;
        g.prototype.endTimeline = function(G) {
            this.trigger("endedtimeline", G)
        }
        ;
        g.prototype.reset = function(G) {
            this.trigger("reset", G)
        }
        ;
        var q = Math.pow(2, 32), p = function(G) {
            G = new DataView(G.buffer,G.byteOffset,G.byteLength);
            return G.getBigUint64 ? (G = G.getBigUint64(0),
            G < Number.MAX_SAFE_INTEGER ? Number(G) : G) : G.getUint32(0) * q + G.getUint32(4)
        }, f, m, k, r, u, t, x, F, K, M, P, I, L, V, Y, fa;
        (function() {
            var G;
            k = {
                avc1: [],
                avcC: [],
                btrt: [],
                dinf: [],
                dref: [],
                esds: [],
                ftyp: [],
                hdlr: [],
                mdat: [],
                mdhd: [],
                mdia: [],
                mfhd: [],
                minf: [],
                moof: [],
                moov: [],
                mp4a: [],
                mvex: [],
                mvhd: [],
                pasp: [],
                sdtp: [],
                smhd: [],
                stbl: [],
                stco: [],
                stsc: [],
                stsd: [],
                stsz: [],
                stts: [],
                styp: [],
                tfdt: [],
                tfhd: [],
                traf: [],
                trak: [],
                trun: [],
                trex: [],
                tkhd: [],
                vmhd: []
            };
            if ("undefined" !== typeof Uint8Array) {
                for (G in k)
                    k.hasOwnProperty(G) && (k[G] = [G.charCodeAt(0), G.charCodeAt(1), G.charCodeAt(2), G.charCodeAt(3)]);
                r = new Uint8Array([105, 115, 111, 109]);
                t = new Uint8Array([97, 118, 99, 49]);
                u = new Uint8Array([0, 0, 0, 1]);
                x = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]);
                F = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                K = {
                    video: x,
                    audio: F
                };
                I = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]);
                P = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                V = L = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                Y = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
                fa = L;
                M = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
            }
        }
        )();
        var ja = function(G) {
            var J = [], B = 0, A;
            for (A = 1; A < arguments.length; A++)
                J.push(arguments[A]);
            for (A = J.length; A--; )
                B += J[A].byteLength;
            var E = new Uint8Array(B + 8);
            (new DataView(E.buffer,E.byteOffset,E.byteLength)).setUint32(0, E.byteLength);
            E.set(G, 4);
            A = 0;
            for (B = 8; A < J.length; A++)
                E.set(J[A], B),
                B += J[A].byteLength;
            return E
        };
        var U = function() {
            return ja(k.dinf, ja(k.dref, I))
        };
        var la = function(G) {
            return ja(k.esds, new Uint8Array([0, 0, 0, 0, 3, 25, 0, 0, 0, 4, 17, 64, 21, 0, 6, 0, 0, 0, 218, 192, 0, 0, 218, 192, 5, 2, G.audioobjecttype << 3 | G.samplingfrequencyindex >>> 1, G.samplingfrequencyindex << 7 | G.channelcount << 3, 6, 1, 2]))
        };
        var oa = function() {
            return ja(k.ftyp, r, u, r, t)
        };
        var Ma = function(G) {
            return ja(k.hdlr, K[G])
        };
        var Pa = function(G) {
            var J = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 1, 95, 144, G.duration >>> 24 & 255, G.duration >>> 16 & 255, G.duration >>> 8 & 255, G.duration & 255, 85, 196, 0, 0]);
            G.samplerate && (J[12] = G.samplerate >>> 24 & 255,
            J[13] = G.samplerate >>> 16 & 255,
            J[14] = G.samplerate >>> 8 & 255,
            J[15] = G.samplerate & 255);
            return ja(k.mdhd, J)
        };
        var bb = function(G) {
            return ja(k.mdia, Pa(G), Ma(G.type), kb(G))
        };
        var Va = function(G) {
            return ja(k.mfhd, new Uint8Array([0, 0, 0, 0, (G & 4278190080) >> 24, (G & 16711680) >> 16, (G & 65280) >> 8, G & 255]))
        };
        var kb = function(G) {
            return ja(k.minf, "video" === G.type ? ja(k.vmhd, M) : ja(k.smhd, P), U(), Bo(G))
        };
        var pb = function(G) {
            for (var J = G.length, B = []; J--; )
                B[J] = Co(G[J]);
            return ja.apply(null, [k.moov, Tc(4294967295)].concat(B).concat(Xb(G)))
        };
        var Xb = function(G) {
            for (var J = G.length, B = []; J--; )
                B[J] = Do(G[J]);
            return ja.apply(null, [k.mvex].concat(B))
        };
        var Tc = function(G) {
            G = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 95, 144, (G & 4278190080) >> 24, (G & 16711680) >> 16, (G & 65280) >> 8, G & 255, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
            return ja(k.mvhd, G)
        };
        var Eg = function(G) {
            G = G.samples || [];
            var J = new Uint8Array(4 + G.length), B;
            for (B = 0; B < G.length; B++) {
                var A = G[B].flags;
                J[B + 4] = A.dependsOn << 4 | A.isDependedOn << 2 | A.hasRedundancy
            }
            return ja(k.sdtp, J)
        };
        var Bo = function(G) {
            return ja(k.stbl, f(G), ja(k.stts, fa), ja(k.stsc, V), ja(k.stsz, Y), ja(k.stco, L))
        };
        (function() {
            f = function(B) {
                return ja(k.stsd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]), "video" === B.type ? G(B) : J(B))
            }
            ;
            var G = function(B) {
                var A = B.sps || [], E = B.pps || [], w = [], v = [], z;
                for (z = 0; z < A.length; z++)
                    w.push((A[z].byteLength & 65280) >>> 8),
                    w.push(A[z].byteLength & 255),
                    w = w.concat(Array.prototype.slice.call(A[z]));
                for (z = 0; z < E.length; z++)
                    v.push((E[z].byteLength & 65280) >>> 8),
                    v.push(E[z].byteLength & 255),
                    v = v.concat(Array.prototype.slice.call(E[z]));
                A = [k.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (B.width & 65280) >> 8, B.width & 255, (B.height & 65280) >> 8, B.height & 255, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 19, 118, 105, 100, 101, 111, 106, 115, 45, 99, 111, 110, 116, 114, 105, 98, 45, 104, 108, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), ja(k.avcC, new Uint8Array([1, B.profileIdc, B.profileCompatibility, B.levelIdc, 255].concat([A.length], w, [E.length], v))), ja(k.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192]))];
                B.sarRatio && (E = B.sarRatio[0],
                B = B.sarRatio[1],
                A.push(ja(k.pasp, new Uint8Array([(E & 4278190080) >> 24, (E & 16711680) >> 16, (E & 65280) >> 8, E & 255, (B & 4278190080) >> 24, (B & 16711680) >> 16, (B & 65280) >> 8, B & 255]))));
                return ja.apply(null, A)
            };
            var J = function(B) {
                return ja(k.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, (B.channelcount & 65280) >> 8, B.channelcount & 255, (B.samplesize & 65280) >> 8, B.samplesize & 255, 0, 0, 0, 0, (B.samplerate & 65280) >> 8, B.samplerate & 255, 0, 0]), la(B))
            }
        }
        )();
        var Eo = function(G) {
            G = new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, (G.id & 4278190080) >> 24, (G.id & 16711680) >> 16, (G.id & 65280) >> 8, G.id & 255, 0, 0, 0, 0, (G.duration & 4278190080) >> 24, (G.duration & 16711680) >> 16, (G.duration & 65280) >> 8, G.duration & 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, (G.width & 65280) >> 8, G.width & 255, 0, 0, (G.height & 65280) >> 8, G.height & 255, 0, 0]);
            return ja(k.tkhd, G)
        };
        var Fo = function(G) {
            var J = ja(k.tfhd, new Uint8Array([0, 0, 0, 58, (G.id & 4278190080) >> 24, (G.id & 16711680) >> 16, (G.id & 65280) >> 8, G.id & 255, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));
            var B = Math.floor(G.baseMediaDecodeTime / q);
            var A = Math.floor(G.baseMediaDecodeTime % q);
            B = ja(k.tfdt, new Uint8Array([1, 0, 0, 0, B >>> 24 & 255, B >>> 16 & 255, B >>> 8 & 255, B & 255, A >>> 24 & 255, A >>> 16 & 255, A >>> 8 & 255, A & 255]));
            if ("audio" === G.type)
                return G = m(G, 92),
                ja(k.traf, J, B, G);
            A = Eg(G);
            G = m(G, A.length + 92);
            return ja(k.traf, J, B, G, A)
        };
        var Co = function(G) {
            G.duration = G.duration || 4294967295;
            return ja(k.trak, Eo(G), bb(G))
        };
        var Do = function(G) {
            var J = new Uint8Array([0, 0, 0, 0, (G.id & 4278190080) >> 24, (G.id & 16711680) >> 16, (G.id & 65280) >> 8, G.id & 255, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
            "video" !== G.type && (J[J.length - 1] = 0);
            return ja(k.trex, J)
        };
        (function() {
            var G = function(A, E) {
                var w = 0
                  , v = 0
                  , z = 0
                  , y = 0;
                A.length && (void 0 !== A[0].duration && (w = 1),
                void 0 !== A[0].size && (v = 2),
                void 0 !== A[0].flags && (z = 4),
                void 0 !== A[0].compositionTimeOffset && (y = 8));
                return [0, 0, w | v | z | y, 1, (A.length & 4278190080) >>> 24, (A.length & 16711680) >>> 16, (A.length & 65280) >>> 8, A.length & 255, (E & 4278190080) >>> 24, (E & 16711680) >>> 16, (E & 65280) >>> 8, E & 255]
            };
            var J = function(A, E) {
                var w;
                A = A.samples || [];
                E += 20 + 16 * A.length;
                var v = G(A, E);
                E = new Uint8Array(v.length + 16 * A.length);
                E.set(v);
                v = v.length;
                for (w = 0; w < A.length; w++) {
                    var z = A[w];
                    E[v++] = (z.duration & 4278190080) >>> 24;
                    E[v++] = (z.duration & 16711680) >>> 16;
                    E[v++] = (z.duration & 65280) >>> 8;
                    E[v++] = z.duration & 255;
                    E[v++] = (z.size & 4278190080) >>> 24;
                    E[v++] = (z.size & 16711680) >>> 16;
                    E[v++] = (z.size & 65280) >>> 8;
                    E[v++] = z.size & 255;
                    E[v++] = z.flags.isLeading << 2 | z.flags.dependsOn;
                    E[v++] = z.flags.isDependedOn << 6 | z.flags.hasRedundancy << 4 | z.flags.paddingValue << 1 | z.flags.isNonSyncSample;
                    E[v++] = z.flags.degradationPriority & 61440;
                    E[v++] = z.flags.degradationPriority & 15;
                    E[v++] = (z.compositionTimeOffset & 4278190080) >>> 24;
                    E[v++] = (z.compositionTimeOffset & 16711680) >>> 16;
                    E[v++] = (z.compositionTimeOffset & 65280) >>> 8;
                    E[v++] = z.compositionTimeOffset & 255
                }
                return ja(k.trun, E)
            };
            var B = function(A, E) {
                var w;
                A = A.samples || [];
                E += 20 + 8 * A.length;
                var v = G(A, E);
                E = new Uint8Array(v.length + 8 * A.length);
                E.set(v);
                v = v.length;
                for (w = 0; w < A.length; w++) {
                    var z = A[w];
                    E[v++] = (z.duration & 4278190080) >>> 24;
                    E[v++] = (z.duration & 16711680) >>> 16;
                    E[v++] = (z.duration & 65280) >>> 8;
                    E[v++] = z.duration & 255;
                    E[v++] = (z.size & 4278190080) >>> 24;
                    E[v++] = (z.size & 16711680) >>> 16;
                    E[v++] = (z.size & 65280) >>> 8;
                    E[v++] = z.size & 255
                }
                return ja(k.trun, E)
            };
            m = function(A, E) {
                return "audio" === A.type ? B(A, E) : J(A, E)
            }
        }
        )();
        var zd = {
            ftyp: oa,
            mdat: function(G) {
                return ja(k.mdat, G)
            },
            moof: function(G, J) {
                for (var B = [], A = J.length; A--; )
                    B[A] = Fo(J[A]);
                return ja.apply(null, [k.moof, Va(G)].concat(B))
            },
            moov: pb,
            initSegment: function(G) {
                var J = oa();
                G = pb(G);
                var B = new Uint8Array(J.byteLength + G.byteLength);
                B.set(J);
                B.set(G, J.byteLength);
                return B
            }
        }, ok = function(G, J) {
            var B = {
                size: 0,
                flags: {
                    isLeading: 0,
                    dependsOn: 1,
                    isDependedOn: 0,
                    hasRedundancy: 0,
                    degradationPriority: 0,
                    isNonSyncSample: 1
                }
            };
            B.dataOffset = J;
            B.compositionTimeOffset = G.pts - G.dts;
            B.duration = G.duration;
            B.size = 4 * G.length;
            B.size += G.byteLength;
            G.keyFrame && (B.flags.dependsOn = 2,
            B.flags.isNonSyncSample = 0);
            return B
        }, Ad = {
            groupNalsIntoFrames: function(G) {
                var J, B = [], A = [];
                A.byteLength = 0;
                A.nalCount = 0;
                A.duration = 0;
                for (J = B.byteLength = 0; J < G.length; J++) {
                    var E = G[J];
                    "access_unit_delimiter_rbsp" === E.nalUnitType ? (B.length && (B.duration = E.dts - B.dts,
                    A.byteLength += B.byteLength,
                    A.nalCount += B.length,
                    A.duration += B.duration,
                    A.push(B)),
                    B = [E],
                    B.byteLength = E.data.byteLength,
                    B.pts = E.pts,
                    B.dts = E.dts) : ("slice_layer_without_partitioning_rbsp_idr" === E.nalUnitType && (B.keyFrame = !0),
                    B.duration = E.dts - B.dts,
                    B.byteLength += E.data.byteLength,
                    B.push(E))
                }
                A.length && (!B.duration || 0 >= B.duration) && (B.duration = A[A.length - 1].duration);
                A.byteLength += B.byteLength;
                A.nalCount += B.length;
                A.duration += B.duration;
                A.push(B);
                return A
            },
            groupFramesIntoGops: function(G) {
                var J, B = [], A = [];
                B.byteLength = 0;
                B.nalCount = 0;
                B.duration = 0;
                B.pts = G[0].pts;
                B.dts = G[0].dts;
                A.byteLength = 0;
                A.nalCount = 0;
                A.duration = 0;
                A.pts = G[0].pts;
                A.dts = G[0].dts;
                for (J = 0; J < G.length; J++) {
                    var E = G[J];
                    E.keyFrame ? (B.length && (A.push(B),
                    A.byteLength += B.byteLength,
                    A.nalCount += B.nalCount,
                    A.duration += B.duration),
                    B = [E],
                    B.nalCount = E.length,
                    B.byteLength = E.byteLength,
                    B.pts = E.pts,
                    B.dts = E.dts,
                    B.duration = E.duration) : (B.duration += E.duration,
                    B.nalCount += E.length,
                    B.byteLength += E.byteLength,
                    B.push(E))
                }
                A.length && 0 >= B.duration && (B.duration = A[A.length - 1].duration);
                A.byteLength += B.byteLength;
                A.nalCount += B.nalCount;
                A.duration += B.duration;
                A.push(B);
                return A
            },
            extendFirstKeyFrame: function(G) {
                if (!G[0][0].keyFrame && 1 < G.length) {
                    var J = G.shift();
                    G.byteLength -= J.byteLength;
                    G.nalCount -= J.nalCount;
                    G[0][0].dts = J.dts;
                    G[0][0].pts = J.pts;
                    G[0][0].duration += J.duration
                }
                return G
            },
            generateSampleTable: function(G, J) {
                var B, A = J || 0, E = [];
                for (J = 0; J < G.length; J++) {
                    var w = G[J];
                    for (B = 0; B < w.length; B++) {
                        var v = w[B];
                        v = ok(v, A);
                        A += v.size;
                        E.push(v)
                    }
                }
                return E
            },
            concatenateNalData: function(G) {
                var J, B, A, E = 0, w = new Uint8Array(G.byteLength + 4 * G.nalCount), v = new DataView(w.buffer);
                for (J = 0; J < G.length; J++) {
                    var z = G[J];
                    for (B = 0; B < z.length; B++) {
                        var y = z[B];
                        for (A = 0; A < y.length; A++) {
                            var C = y[A];
                            v.setUint32(E, C.data.byteLength);
                            E += 4;
                            w.set(C.data, E);
                            E += C.data.byteLength
                        }
                    }
                }
                return w
            },
            generateSampleTableForFrame: function(G, J) {
                var B = [];
                G = ok(G, J || 0);
                B.push(G);
                return B
            },
            concatenateNalDataForFrame: function(G) {
                var J, B = 0, A = new Uint8Array(G.byteLength + 4 * G.length), E = new DataView(A.buffer);
                for (J = 0; J < G.length; J++) {
                    var w = G[J];
                    E.setUint32(B, w.data.byteLength);
                    B += 4;
                    A.set(w.data, B);
                    B += w.data.byteLength
                }
                return A
            }
        }, fc = [33, 16, 5, 32, 164, 27], Fg = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252], za = function(G) {
            for (var J = []; G--; )
                J.push(0);
            return J
        }, Go = function(G) {
            return Object.keys(G).reduce(function(J, B) {
                J[B] = new Uint8Array(G[B].reduce(function(A, E) {
                    return A.concat(E)
                }, []));
                return J
            }, {})
        }, Gg;
        var pk = function(G) {
            return 9E4 * G
        };
        var qk = function(G, J) {
            return G * J
        };
        var Hg = function(G) {
            return G / 9E4
        };
        var rk = function(G, J) {
            return G / J
        };
        var ya = {
            ONE_SECOND_IN_TS: 9E4,
            secondsToVideoTs: pk,
            secondsToAudioTs: qk,
            videoTsToSeconds: Hg,
            audioTsToSeconds: rk,
            audioTsToVideoTs: function(G, J) {
                return pk(rk(G, J))
            },
            videoTsToAudioTs: function(G, J) {
                return qk(Hg(G), J)
            },
            metadataTsToSeconds: function(G, J, B) {
                return Hg(B ? G : G - J)
            }
        }
          , ye = {
            prefixWithSilence: function(G, J, B, A) {
                var E, w = E = 0;
                if (J.length) {
                    var v = ya.audioTsToVideoTs(G.baseMediaDecodeTime, G.samplerate);
                    var z = Math.ceil(ya.ONE_SECOND_IN_TS / (G.samplerate / 1024));
                    B && A && (E = v - Math.max(B, A),
                    E = Math.floor(E / z),
                    w = E * z);
                    if (!(1 > E || w > ya.ONE_SECOND_IN_TS / 2)) {
                        Gg || (B = {
                            96E3: [fc, [227, 64], za(154), [56]],
                            88200: [fc, [231], za(170), [56]],
                            64E3: [fc, [248, 192], za(240), [56]],
                            48E3: [fc, [255, 192], za(268), [55, 148, 128], za(54), [112]],
                            44100: [fc, [255, 192], za(268), [55, 163, 128], za(84), [112]],
                            32E3: [fc, [255, 192], za(268), [55, 234], za(226), [112]],
                            24E3: [fc, [255, 192], za(268), [55, 255, 128], za(268), [111, 112], za(126), [224]],
                            16E3: [fc, [255, 192], za(268), [55, 255, 128], za(268), [111, 255], za(269), [223, 108], za(195), [1, 192]],
                            12E3: [Fg, za(268), [3, 127, 248], za(268), [6, 255, 240], za(268), [13, 255, 224], za(268), [27, 253, 128], za(259), [56]],
                            11025: [Fg, za(268), [3, 127, 248], za(268), [6, 255, 240], za(268), [13, 255, 224], za(268), [27, 255, 192], za(268), [55, 175, 128], za(108), [112]],
                            8E3: [Fg, za(268), [3, 121, 16], za(47), [7]]
                        },
                        Gg = Go(B));
                        B = Gg[G.samplerate];
                        B || (B = J[0].data);
                        for (A = 0; A < E; A++)
                            v = J[0],
                            J.splice(0, 0, {
                                data: B,
                                dts: v.dts - z,
                                pts: v.pts - z
                            });
                        G.baseMediaDecodeTime -= Math.floor(ya.videoTsToAudioTs(w, G.samplerate));
                        return w
                    }
                }
            },
            trimAdtsFramesByEarliestDts: function(G, J, B) {
                if (J.minSegmentDts >= B)
                    return G;
                J.minSegmentDts = Infinity;
                return G.filter(function(A) {
                    return A.dts >= B ? (J.minSegmentDts = Math.min(J.minSegmentDts, A.dts),
                    J.minSegmentPts = J.minSegmentDts,
                    !0) : !1
                })
            },
            generateSampleTable: function(G) {
                var J, B = [];
                for (J = 0; J < G.length; J++) {
                    var A = G[J];
                    B.push({
                        size: A.data.byteLength,
                        duration: 1024
                    })
                }
                return B
            },
            concatenateFrameData: function(G) {
                var J, B = 0;
                var A = Uint8Array;
                var E = 0;
                for (J = 0; J < G.length; J++) {
                    var w = G[J];
                    E += w.data.byteLength
                }
                w = new A(E);
                for (A = 0; A < G.length; A++)
                    J = G[A],
                    w.set(J.data, B),
                    B += J.data.byteLength;
                return w
            }
        }
          , Ho = ya.ONE_SECOND_IN_TS
          , Eb = {
            clearDtsInfo: function(G) {
                delete G.minSegmentDts;
                delete G.maxSegmentDts;
                delete G.minSegmentPts;
                delete G.maxSegmentPts
            },
            calculateTrackBaseMediaDecodeTime: function(G, J) {
                var B = G.minSegmentDts;
                J || (B -= G.timelineStartInfo.dts);
                J = G.timelineStartInfo.baseMediaDecodeTime;
                J = Math.max(0, J + B);
                "audio" === G.type && (G = G.samplerate / Ho,
                J = Math.floor(J * G));
                return J
            },
            collectDtsInfo: function(G, J) {
                "number" === typeof J.pts && (void 0 === G.timelineStartInfo.pts && (G.timelineStartInfo.pts = J.pts),
                G.minSegmentPts = void 0 === G.minSegmentPts ? J.pts : Math.min(G.minSegmentPts, J.pts),
                G.maxSegmentPts = void 0 === G.maxSegmentPts ? J.pts : Math.max(G.maxSegmentPts, J.pts));
                "number" === typeof J.dts && (void 0 === G.timelineStartInfo.dts && (G.timelineStartInfo.dts = J.dts),
                G.minSegmentDts = void 0 === G.minSegmentDts ? J.dts : Math.min(G.minSegmentDts, J.dts),
                G.maxSegmentDts = void 0 === G.maxSegmentDts ? J.dts : Math.max(G.maxSegmentDts, J.dts))
            }
        }
          , Bd = {
            parseSei: function(G) {
                for (var J = 0, B = {
                    payloadType: -1,
                    payloadSize: 0
                }, A = 0, E = 0; J < G.byteLength && 128 !== G[J]; ) {
                    for (; 255 === G[J]; )
                        A += 255,
                        J++;
                    for (A += G[J++]; 255 === G[J]; )
                        E += 255,
                        J++;
                    E += G[J++];
                    if (!B.payload && 4 === A)
                        if ("GA94" === String.fromCharCode(G[J + 3], G[J + 4], G[J + 5], G[J + 6])) {
                            B.payloadType = A;
                            B.payloadSize = E;
                            B.payload = G.subarray(J, J + E);
                            break
                        } else
                            B.payload = void 0;
                    J += E;
                    E = A = 0
                }
                return B
            },
            parseUserData: function(G) {
                return 181 !== G.payload[0] || 49 !== (G.payload[1] << 8 | G.payload[2]) || "GA94" !== String.fromCharCode(G.payload[3], G.payload[4], G.payload[5], G.payload[6]) || 3 !== G.payload[7] ? null : G.payload.subarray(8, G.payload.length - 1)
            },
            parseCaptionPackets: function(G, J) {
                var B = [], A;
                if (!(J[0] & 64))
                    return B;
                var E = J[0] & 31;
                for (A = 0; A < E; A++) {
                    var w = 3 * A;
                    var v = {
                        type: J[w + 2] & 3,
                        pts: G
                    };
                    J[w + 2] & 4 && (v.ccData = J[w + 3] << 8 | J[w + 4],
                    B.push(v))
                }
                return B
            },
            discardEmulationPreventionBytes: function(G) {
                for (var J = G.byteLength, B = [], A = 1, E; A < J - 2; )
                    0 === G[A] && 0 === G[A + 1] && 3 === G[A + 2] ? (B.push(A + 2),
                    A += 2) : A++;
                if (0 === B.length)
                    return G;
                J -= B.length;
                E = new Uint8Array(J);
                var w = 0;
                for (A = 0; A < J; w++,
                A++)
                    w === B[0] && (w++,
                    B.shift()),
                    E[A] = G[w];
                return E
            },
            USER_DATA_REGISTERED_ITU_T_T35: 4
        }
          , qb = function B(J) {
            J = J || {};
            B.prototype.init.call(this);
            this.parse708captions_ = "boolean" === typeof J.parse708captions ? J.parse708captions : !0;
            this.captionPackets_ = [];
            this.ccStreams_ = [new Ia(0,0), new Ia(0,1), new Ia(1,0), new Ia(1,1)];
            this.parse708captions_ && (this.cc708Stream_ = new Ca({
                captionServices: J.captionServices
            }));
            this.reset();
            this.ccStreams_.forEach(function(A) {
                A.on("data", this.trigger.bind(this, "data"));
                A.on("partialdone", this.trigger.bind(this, "partialdone"));
                A.on("done", this.trigger.bind(this, "done"))
            }, this);
            this.parse708captions_ && (this.cc708Stream_.on("data", this.trigger.bind(this, "data")),
            this.cc708Stream_.on("partialdone", this.trigger.bind(this, "partialdone")),
            this.cc708Stream_.on("done", this.trigger.bind(this, "done")))
        };
        qb.prototype = new g;
        qb.prototype.push = function(J) {
            if ("sei_rbsp" === J.nalUnitType) {
                var B = Bd.parseSei(J.escapedRBSP);
                B.payload && B.payloadType === Bd.USER_DATA_REGISTERED_ITU_T_T35 && (B = Bd.parseUserData(B)) && (J.dts < this.latestDts_ ? this.ignoreNextEqualDts_ = !0 : J.dts === this.latestDts_ && this.ignoreNextEqualDts_ ? (this.numSameDts_--,
                this.numSameDts_ || (this.ignoreNextEqualDts_ = !1)) : (B = Bd.parseCaptionPackets(J.pts, B),
                this.captionPackets_ = this.captionPackets_.concat(B),
                this.latestDts_ !== J.dts && (this.numSameDts_ = 0),
                this.numSameDts_++,
                this.latestDts_ = J.dts))
            }
        }
        ;
        qb.prototype.flushCCStreams = function(J) {
            this.ccStreams_.forEach(function(B) {
                return "flush" === J ? B.flush() : B.partialFlush()
            }, this)
        }
        ;
        qb.prototype.flushStream = function(J) {
            this.captionPackets_.length && (this.captionPackets_.forEach(function(B, A) {
                B.presortIndex = A
            }),
            this.captionPackets_.sort(function(B, A) {
                return B.pts === A.pts ? B.presortIndex - A.presortIndex : B.pts - A.pts
            }),
            this.captionPackets_.forEach(function(B) {
                2 > B.type ? this.dispatchCea608Packet(B) : this.dispatchCea708Packet(B)
            }, this),
            this.captionPackets_.length = 0);
            this.flushCCStreams(J)
        }
        ;
        qb.prototype.flush = function() {
            return this.flushStream("flush")
        }
        ;
        qb.prototype.partialFlush = function() {
            return this.flushStream("partialFlush")
        }
        ;
        qb.prototype.reset = function() {
            this.latestDts_ = null;
            this.ignoreNextEqualDts_ = !1;
            this.numSameDts_ = 0;
            this.activeCea608Channel_ = [null, null];
            this.ccStreams_.forEach(function(J) {
                J.reset()
            })
        }
        ;
        qb.prototype.dispatchCea608Packet = function(J) {
            this.setsTextOrXDSActive(J) ? this.activeCea608Channel_[J.type] = null : this.setsChannel1Active(J) ? this.activeCea608Channel_[J.type] = 0 : this.setsChannel2Active(J) && (this.activeCea608Channel_[J.type] = 1);
            null !== this.activeCea608Channel_[J.type] && this.ccStreams_[(J.type << 1) + this.activeCea608Channel_[J.type]].push(J)
        }
        ;
        qb.prototype.setsChannel1Active = function(J) {
            return 4096 === (J.ccData & 30720)
        }
        ;
        qb.prototype.setsChannel2Active = function(J) {
            return 6144 === (J.ccData & 30720)
        }
        ;
        qb.prototype.setsTextOrXDSActive = function(J) {
            return 256 === (J.ccData & 28928) || 4138 === (J.ccData & 30974) || 6186 === (J.ccData & 30974)
        }
        ;
        qb.prototype.dispatchCea708Packet = function(J) {
            this.parse708captions_ && this.cc708Stream_.push(J)
        }
        ;
        var Io = {
            127: 9834,
            4128: 32,
            4129: 160,
            4133: 8230,
            4138: 352,
            4140: 338,
            4144: 9608,
            4145: 8216,
            4146: 8217,
            4147: 8220,
            4148: 8221,
            4149: 8226,
            4153: 8482,
            4154: 353,
            4156: 339,
            4157: 8480,
            4159: 376,
            4214: 8539,
            4215: 8540,
            4216: 8541,
            4217: 8542,
            4218: 9168,
            4219: 9124,
            4220: 9123,
            4221: 9135,
            4222: 9126,
            4223: 9121,
            4256: 12600
        }
          , ze = function(J) {
            return 32 <= J && 127 >= J || 160 <= J && 255 >= J
        }
          , Yb = function(J) {
            this.windowNum = J;
            this.reset()
        };
        Yb.prototype.reset = function() {
            this.clearText();
            this.pendingNewLine = !1;
            this.winAttr = {};
            this.penAttr = {};
            this.penLoc = {};
            this.penColor = {};
            this.anchorPoint = this.anchorHorizontal = this.anchorVertical = this.relativePositioning = this.priority = this.columnLock = this.rowLock = this.visible = 0;
            this.rowCount = 1;
            this.virtualRowCount = this.rowCount + 1;
            this.columnCount = 41;
            this.penStyle = this.windowStyle = 0
        }
        ;
        Yb.prototype.getText = function() {
            return this.rows.join("\n")
        }
        ;
        Yb.prototype.clearText = function() {
            this.rows = [""];
            this.rowIdx = 0
        }
        ;
        Yb.prototype.newLine = function(J) {
            this.rows.length >= this.virtualRowCount && "function" === typeof this.beforeRowOverflow && this.beforeRowOverflow(J);
            0 < this.rows.length && (this.rows.push(""),
            this.rowIdx++);
            for (; this.rows.length > this.virtualRowCount; )
                this.rows.shift(),
                this.rowIdx--
        }
        ;
        Yb.prototype.isEmpty = function() {
            return 0 === this.rows.length ? !0 : 1 === this.rows.length ? "" === this.rows[0] : !1
        }
        ;
        Yb.prototype.addText = function(J) {
            this.rows[this.rowIdx] += J
        }
        ;
        Yb.prototype.backspace = function() {
            if (!this.isEmpty()) {
                var J = this.rows[this.rowIdx];
                this.rows[this.rowIdx] = J.substr(0, J.length - 1)
            }
        }
        ;
        var Ae = function(J, B, A) {
            this.serviceNum = J;
            this.text = "";
            this.currentWindow = new Yb(-1);
            this.windows = [];
            this.stream = A;
            "string" === typeof B && this.createTextDecoder(B)
        };
        Ae.prototype.init = function(J, B) {
            this.startPts = J;
            for (J = 0; 8 > J; J++)
                this.windows[J] = new Yb(J),
                "function" === typeof B && (this.windows[J].beforeRowOverflow = B)
        }
        ;
        Ae.prototype.setCurrentWindow = function(J) {
            this.currentWindow = this.windows[J]
        }
        ;
        Ae.prototype.createTextDecoder = function(J) {
            if ("undefined" === typeof TextDecoder)
                this.stream.trigger("log", {
                    level: "warn",
                    message: "The `encoding` option is unsupported without TextDecoder support"
                });
            else
                try {
                    this.textDecoder_ = new TextDecoder(J)
                } catch (B) {
                    this.stream.trigger("log", {
                        level: "warn",
                        message: "TextDecoder could not be created with " + J + " encoding. " + B
                    })
                }
        }
        ;
        var Ca = function A(B) {
            B = B || {};
            A.prototype.init.call(this);
            var E = this, w = B.captionServices || {}, v = {}, z;
            Object.keys(w).forEach(function(y) {
                z = w[y];
                /^SERVICE/.test(y) && (v[y] = z.encoding)
            });
            this.serviceEncodings = v;
            this.current708Packet = null;
            this.services = {};
            this.push = function(y) {
                3 === y.type ? E.new708Packet() : null === E.current708Packet && E.new708Packet();
                E.add708Bytes(y)
            }
        };
        Ca.prototype = new g;
        Ca.prototype.new708Packet = function() {
            null !== this.current708Packet && this.push708Packet();
            this.current708Packet = {
                data: [],
                ptsVals: []
            }
        }
        ;
        Ca.prototype.add708Bytes = function(B) {
            var A = B.ccData
              , E = A >>> 8;
            A &= 255;
            this.current708Packet.ptsVals.push(B.pts);
            this.current708Packet.data.push(E);
            this.current708Packet.data.push(A)
        }
        ;
        Ca.prototype.push708Packet = function() {
            var B = this.current708Packet
              , A = B.data
              , E = 0
              , w = A[E++];
            B.seq = w >> 6;
            for (B.sizeCode = w & 63; E < A.length; E++) {
                w = A[E++];
                B = w >> 5;
                var v = w & 31;
                7 === B && 0 < v && (B = w = A[E++]);
                this.pushServiceBlock(B, E, v);
                0 < v && (E += v - 1)
            }
        }
        ;
        Ca.prototype.pushServiceBlock = function(B, A, E) {
            var w = A
              , v = this.current708Packet.data
              , z = this.services[B];
            for (z || (z = this.initService(B, w)); w < A + E && w < v.length; w++)
                B = v[w],
                ze(B) ? w = this.handleText(w, z) : 24 === B ? w = this.multiByteCharacter(w, z) : 16 === B ? w = this.extendedCommands(w, z) : 128 <= B && 135 >= B ? w = this.setCurrentWindow(w, z) : 152 <= B && 159 >= B ? w = this.defineWindow(w, z) : 136 === B ? w = this.clearWindows(w, z) : 140 === B ? w = this.deleteWindows(w, z) : 137 === B ? w = this.displayWindows(w, z) : 138 === B ? w = this.hideWindows(w, z) : 139 === B ? w = this.toggleWindows(w, z) : 151 === B ? w = this.setWindowAttributes(w, z) : 144 === B ? w = this.setPenAttributes(w, z) : 145 === B ? w = this.setPenColor(w, z) : 146 === B ? w = this.setPenLocation(w, z) : 143 === B ? z = this.reset(w, z) : 8 === B ? z.currentWindow.backspace() : 12 === B ? z.currentWindow.clearText() : 13 === B ? z.currentWindow.pendingNewLine = !0 : 14 === B ? z.currentWindow.clearText() : 141 === B && w++
        }
        ;
        Ca.prototype.extendedCommands = function(B, A) {
            var E = this.current708Packet.data[++B];
            ze(E) && (B = this.handleText(B, A, {
                isExtended: !0
            }));
            return B
        }
        ;
        Ca.prototype.getPts = function(B) {
            return this.current708Packet.ptsVals[Math.floor(B / 2)]
        }
        ;
        Ca.prototype.initService = function(B, A) {
            var E = "SERVICE" + B, w = this, v;
            E in this.serviceEncodings && (v = this.serviceEncodings[E]);
            this.services[B] = new Ae(B,v,w);
            this.services[B].init(this.getPts(A), function(z) {
                w.flushDisplayed(z, w.services[B])
            });
            return this.services[B]
        }
        ;
        Ca.prototype.handleText = function(B, A, E) {
            var w = E && E.isExtended
              , v = E && E.isMultiByte;
            E = this.current708Packet.data;
            var z = w ? 4096 : 0
              , y = E[B]
              , C = E[B + 1];
            E = A.currentWindow;
            A.textDecoder_ && !w ? (v ? (w = [y, C],
            B++) : w = [y],
            A = A.textDecoder_.decode(new Uint8Array(w))) : (A = z | y,
            w = Io[A] || A,
            A = A & 4096 && A === w ? "" : String.fromCharCode(w));
            E.pendingNewLine && !E.isEmpty() && E.newLine(this.getPts(B));
            E.pendingNewLine = !1;
            E.addText(A);
            return B
        }
        ;
        Ca.prototype.multiByteCharacter = function(B, A) {
            var E = this.current708Packet.data
              , w = E[B + 2];
            ze(E[B + 1]) && ze(w) && (B = this.handleText(++B, A, {
                isMultiByte: !0
            }));
            return B
        }
        ;
        Ca.prototype.setCurrentWindow = function(B, A) {
            A.setCurrentWindow(this.current708Packet.data[B] & 7);
            return B
        }
        ;
        Ca.prototype.defineWindow = function(B, A) {
            var E = this.current708Packet.data
              , w = E[B];
            A.setCurrentWindow(w & 7);
            A = A.currentWindow;
            w = E[++B];
            A.visible = (w & 32) >> 5;
            A.rowLock = (w & 16) >> 4;
            A.columnLock = (w & 8) >> 3;
            A.priority = w & 7;
            w = E[++B];
            A.relativePositioning = (w & 128) >> 7;
            A.anchorVertical = w & 127;
            w = E[++B];
            A.anchorHorizontal = w;
            w = E[++B];
            A.anchorPoint = (w & 240) >> 4;
            A.rowCount = w & 15;
            w = E[++B];
            A.columnCount = w & 63;
            w = E[++B];
            A.windowStyle = (w & 56) >> 3;
            A.penStyle = w & 7;
            A.virtualRowCount = A.rowCount + 1;
            return B
        }
        ;
        Ca.prototype.setWindowAttributes = function(B, A) {
            var E = this.current708Packet.data
              , w = A.currentWindow.winAttr;
            A = E[++B];
            w.fillOpacity = (A & 192) >> 6;
            w.fillRed = (A & 48) >> 4;
            w.fillGreen = (A & 12) >> 2;
            w.fillBlue = A & 3;
            A = E[++B];
            w.borderType = (A & 192) >> 6;
            w.borderRed = (A & 48) >> 4;
            w.borderGreen = (A & 12) >> 2;
            w.borderBlue = A & 3;
            A = E[++B];
            w.borderType += (A & 128) >> 5;
            w.wordWrap = (A & 64) >> 6;
            w.printDirection = (A & 48) >> 4;
            w.scrollDirection = (A & 12) >> 2;
            w.justify = A & 3;
            A = E[++B];
            w.effectSpeed = (A & 240) >> 4;
            w.effectDirection = (A & 12) >> 2;
            w.displayEffect = A & 3;
            return B
        }
        ;
        Ca.prototype.flushDisplayed = function(B, A) {
            for (var E = [], w = 0; 8 > w; w++)
                A.windows[w].visible && !A.windows[w].isEmpty() && E.push(A.windows[w].getText());
            A.endPts = B;
            A.text = E.join("\n\n");
            this.pushCaption(A);
            A.startPts = B
        }
        ;
        Ca.prototype.pushCaption = function(B) {
            "" !== B.text && (this.trigger("data", {
                startPts: B.startPts,
                endPts: B.endPts,
                text: B.text,
                stream: "cc708_" + B.serviceNum
            }),
            B.text = "",
            B.startPts = B.endPts)
        }
        ;
        Ca.prototype.displayWindows = function(B, A) {
            var E = this.current708Packet.data[++B]
              , w = this.getPts(B);
            this.flushDisplayed(w, A);
            for (w = 0; 8 > w; w++)
                E & 1 << w && (A.windows[w].visible = 1);
            return B
        }
        ;
        Ca.prototype.hideWindows = function(B, A) {
            var E = this.current708Packet.data[++B]
              , w = this.getPts(B);
            this.flushDisplayed(w, A);
            for (w = 0; 8 > w; w++)
                E & 1 << w && (A.windows[w].visible = 0);
            return B
        }
        ;
        Ca.prototype.toggleWindows = function(B, A) {
            var E = this.current708Packet.data[++B]
              , w = this.getPts(B);
            this.flushDisplayed(w, A);
            for (w = 0; 8 > w; w++)
                E & 1 << w && (A.windows[w].visible ^= 1);
            return B
        }
        ;
        Ca.prototype.clearWindows = function(B, A) {
            var E = this.current708Packet.data[++B]
              , w = this.getPts(B);
            this.flushDisplayed(w, A);
            for (w = 0; 8 > w; w++)
                E & 1 << w && A.windows[w].clearText();
            return B
        }
        ;
        Ca.prototype.deleteWindows = function(B, A) {
            var E = this.current708Packet.data[++B]
              , w = this.getPts(B);
            this.flushDisplayed(w, A);
            for (w = 0; 8 > w; w++)
                E & 1 << w && A.windows[w].reset();
            return B
        }
        ;
        Ca.prototype.setPenAttributes = function(B, A) {
            var E = this.current708Packet.data
              , w = A.currentWindow.penAttr;
            A = E[++B];
            w.textTag = (A & 240) >> 4;
            w.offset = (A & 12) >> 2;
            w.penSize = A & 3;
            A = E[++B];
            w.italics = (A & 128) >> 7;
            w.underline = (A & 64) >> 6;
            w.edgeType = (A & 56) >> 3;
            w.fontStyle = A & 7;
            return B
        }
        ;
        Ca.prototype.setPenColor = function(B, A) {
            var E = this.current708Packet.data
              , w = A.currentWindow.penColor;
            A = E[++B];
            w.fgOpacity = (A & 192) >> 6;
            w.fgRed = (A & 48) >> 4;
            w.fgGreen = (A & 12) >> 2;
            w.fgBlue = A & 3;
            A = E[++B];
            w.bgOpacity = (A & 192) >> 6;
            w.bgRed = (A & 48) >> 4;
            w.bgGreen = (A & 12) >> 2;
            w.bgBlue = A & 3;
            A = E[++B];
            w.edgeRed = (A & 48) >> 4;
            w.edgeGreen = (A & 12) >> 2;
            w.edgeBlue = A & 3;
            return B
        }
        ;
        Ca.prototype.setPenLocation = function(B, A) {
            var E = this.current708Packet.data
              , w = A.currentWindow.penLoc;
            A.currentWindow.pendingNewLine = !0;
            A = E[++B];
            w.row = A & 15;
            A = E[++B];
            w.column = A & 63;
            return B
        }
        ;
        Ca.prototype.reset = function(B, A) {
            var E = this.getPts(B);
            this.flushDisplayed(E, A);
            return this.initService(A.serviceNum, B)
        }
        ;
        var Jo = {
            42: 225,
            92: 233,
            94: 237,
            95: 243,
            96: 250,
            123: 231,
            124: 247,
            125: 209,
            126: 241,
            127: 9608,
            304: 174,
            305: 176,
            306: 189,
            307: 191,
            308: 8482,
            309: 162,
            310: 163,
            311: 9834,
            312: 224,
            313: 160,
            314: 232,
            315: 226,
            316: 234,
            317: 238,
            318: 244,
            319: 251,
            544: 193,
            545: 201,
            546: 211,
            547: 218,
            548: 220,
            549: 252,
            550: 8216,
            551: 161,
            552: 42,
            553: 39,
            554: 8212,
            555: 169,
            556: 8480,
            557: 8226,
            558: 8220,
            559: 8221,
            560: 192,
            561: 194,
            562: 199,
            563: 200,
            564: 202,
            565: 203,
            566: 235,
            567: 206,
            568: 207,
            569: 239,
            570: 212,
            571: 217,
            572: 249,
            573: 219,
            574: 171,
            575: 187,
            800: 195,
            801: 227,
            802: 205,
            803: 204,
            804: 236,
            805: 210,
            806: 242,
            807: 213,
            808: 245,
            809: 123,
            810: 125,
            811: 92,
            812: 94,
            813: 95,
            814: 124,
            815: 126,
            816: 196,
            817: 228,
            818: 214,
            819: 246,
            820: 223,
            821: 165,
            822: 164,
            823: 9474,
            824: 197,
            825: 229,
            826: 216,
            827: 248,
            828: 9484,
            829: 9488,
            830: 9492,
            831: 9496
        }
          , Be = function(B) {
            if (null === B)
                return "";
            B = Jo[B] || B;
            return String.fromCharCode(B)
        }
          , Ko = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152]
          , qc = function() {
            for (var B = [], A = 15; A--; )
                B.push("");
            return B
        }
          , Ia = function w(A, E) {
            w.prototype.init.call(this);
            this.field_ = A || 0;
            this.dataChannel_ = E || 0;
            this.name_ = "CC" + ((this.field_ << 1 | this.dataChannel_) + 1);
            this.setConstants();
            this.reset();
            this.push = function(v) {
                var z = v.ccData & 32639;
                if (z === this.lastControlCode_)
                    this.lastControlCode_ = null;
                else {
                    4096 === (z & 61440) ? this.lastControlCode_ = z : z !== this.PADDING_ && (this.lastControlCode_ = null);
                    var y = z >>> 8;
                    var C = z & 255;
                    z !== this.PADDING_ && (z === this.RESUME_CAPTION_LOADING_ ? this.mode_ = "popOn" : z === this.END_OF_CAPTION_ ? (this.mode_ = "popOn",
                    this.clearFormatting(v.pts),
                    this.flushDisplayed(v.pts),
                    C = this.displayed_,
                    this.displayed_ = this.nonDisplayed_,
                    this.nonDisplayed_ = C,
                    this.startPts_ = v.pts) : z === this.ROLL_UP_2_ROWS_ ? (this.rollUpRows_ = 2,
                    this.setRollUp(v.pts)) : z === this.ROLL_UP_3_ROWS_ ? (this.rollUpRows_ = 3,
                    this.setRollUp(v.pts)) : z === this.ROLL_UP_4_ROWS_ ? (this.rollUpRows_ = 4,
                    this.setRollUp(v.pts)) : z === this.CARRIAGE_RETURN_ ? (this.clearFormatting(v.pts),
                    this.flushDisplayed(v.pts),
                    this.shiftRowsUp_(),
                    this.startPts_ = v.pts) : z === this.BACKSPACE_ ? "popOn" === this.mode_ ? this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1) : this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1) : z === this.ERASE_DISPLAYED_MEMORY_ ? (this.flushDisplayed(v.pts),
                    this.displayed_ = qc()) : z === this.ERASE_NON_DISPLAYED_MEMORY_ ? this.nonDisplayed_ = qc() : z === this.RESUME_DIRECT_CAPTIONING_ ? ("paintOn" !== this.mode_ && (this.flushDisplayed(v.pts),
                    this.displayed_ = qc()),
                    this.mode_ = "paintOn",
                    this.startPts_ = v.pts) : this.isSpecialCharacter(y, C) ? (z = Be((y & 3) << 8 | C),
                    this[this.mode_](v.pts, z),
                    this.column_++) : this.isExtCharacter(y, C) ? ("popOn" === this.mode_ ? this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1) : this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1),
                    z = Be((y & 3) << 8 | C),
                    this[this.mode_](v.pts, z),
                    this.column_++) : this.isMidRowCode(y, C) ? (this.clearFormatting(v.pts),
                    this[this.mode_](v.pts, " "),
                    this.column_++,
                    14 === (C & 14) && this.addFormatting(v.pts, ["i"]),
                    1 === (C & 1) && this.addFormatting(v.pts, ["u"])) : this.isOffsetControlCode(y, C) ? this.column_ += C & 3 : this.isPAC(y, C) ? (y = Ko.indexOf(z & 7968),
                    "rollUp" === this.mode_ && (0 > y - this.rollUpRows_ + 1 && (y = this.rollUpRows_ - 1),
                    this.setRollUp(v.pts, y)),
                    y !== this.row_ && (this.clearFormatting(v.pts),
                    this.row_ = y),
                    C & 1 && -1 === this.formatting_.indexOf("u") && this.addFormatting(v.pts, ["u"]),
                    16 === (z & 16) && (this.column_ = 4 * ((z & 14) >> 1)),
                    this.isColorPAC(C) && 14 === (C & 14) && this.addFormatting(v.pts, ["i"])) : this.isNormalChar(y) && (0 === C && (C = null),
                    z = Be(y),
                    z += Be(C),
                    this[this.mode_](v.pts, z),
                    this.column_ += z.length))
                }
            }
        };
        Ia.prototype = new g;
        Ia.prototype.flushDisplayed = function(A) {
            var E = this.displayed_.map(function(w, v) {
                try {
                    return w.trim()
                } catch (z) {
                    return this.trigger("log", {
                        level: "warn",
                        message: "Skipping a malformed 608 caption at index " + v + "."
                    }),
                    ""
                }
            }, this).join("\n").replace(/^\n+|\n+$/g, "");
            E.length && this.trigger("data", {
                startPts: this.startPts_,
                endPts: A,
                text: E,
                stream: this.name_
            })
        }
        ;
        Ia.prototype.reset = function() {
            this.mode_ = "popOn";
            this.startPts_ = this.topRow_ = 0;
            this.displayed_ = qc();
            this.nonDisplayed_ = qc();
            this.lastControlCode_ = null;
            this.column_ = 0;
            this.row_ = 14;
            this.rollUpRows_ = 2;
            this.formatting_ = []
        }
        ;
        Ia.prototype.setConstants = function() {
            0 === this.dataChannel_ ? (this.BASE_ = 16,
            this.EXT_ = 17,
            this.CONTROL_ = (20 | this.field_) << 8,
            this.OFFSET_ = 23) : 1 === this.dataChannel_ && (this.BASE_ = 24,
            this.EXT_ = 25,
            this.CONTROL_ = (28 | this.field_) << 8,
            this.OFFSET_ = 31);
            this.PADDING_ = 0;
            this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
            this.END_OF_CAPTION_ = this.CONTROL_ | 47;
            this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
            this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
            this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
            this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
            this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
            this.BACKSPACE_ = this.CONTROL_ | 33;
            this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
            this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
        }
        ;
        Ia.prototype.isSpecialCharacter = function(A, E) {
            return A === this.EXT_ && 48 <= E && 63 >= E
        }
        ;
        Ia.prototype.isExtCharacter = function(A, E) {
            return (A === this.EXT_ + 1 || A === this.EXT_ + 2) && 32 <= E && 63 >= E
        }
        ;
        Ia.prototype.isMidRowCode = function(A, E) {
            return A === this.EXT_ && 32 <= E && 47 >= E
        }
        ;
        Ia.prototype.isOffsetControlCode = function(A, E) {
            return A === this.OFFSET_ && 33 <= E && 35 >= E
        }
        ;
        Ia.prototype.isPAC = function(A, E) {
            return A >= this.BASE_ && A < this.BASE_ + 8 && 64 <= E && 127 >= E
        }
        ;
        Ia.prototype.isColorPAC = function(A) {
            return 64 <= A && 79 >= A || 96 <= A && 127 >= A
        }
        ;
        Ia.prototype.isNormalChar = function(A) {
            return 32 <= A && 127 >= A
        }
        ;
        Ia.prototype.setRollUp = function(A, E) {
            "rollUp" !== this.mode_ && (this.row_ = 14,
            this.mode_ = "rollUp",
            this.flushDisplayed(A),
            this.nonDisplayed_ = qc(),
            this.displayed_ = qc());
            if (void 0 !== E && E !== this.row_)
                for (A = 0; A < this.rollUpRows_; A++)
                    this.displayed_[E - A] = this.displayed_[this.row_ - A],
                    this.displayed_[this.row_ - A] = "";
            void 0 === E && (E = this.row_);
            this.topRow_ = E - this.rollUpRows_ + 1
        }
        ;
        Ia.prototype.addFormatting = function(A, E) {
            this.formatting_ = this.formatting_.concat(E);
            E = E.reduce(function(w, v) {
                return w + "<" + v + ">"
            }, "");
            this[this.mode_](A, E)
        }
        ;
        Ia.prototype.clearFormatting = function(A) {
            if (this.formatting_.length) {
                var E = this.formatting_.reverse().reduce(function(w, v) {
                    return w + "</" + v + ">"
                }, "");
                this.formatting_ = [];
                this[this.mode_](A, E)
            }
        }
        ;
        Ia.prototype.popOn = function(A, E) {
            this.nonDisplayed_[this.row_] += E
        }
        ;
        Ia.prototype.rollUp = function(A, E) {
            this.displayed_[this.row_] += E
        }
        ;
        Ia.prototype.shiftRowsUp_ = function() {
            var A;
            for (A = 0; A < this.topRow_; A++)
                this.displayed_[A] = "";
            for (A = this.row_ + 1; 15 > A; A++)
                this.displayed_[A] = "";
            for (A = this.topRow_; A < this.row_; A++)
                this.displayed_[A] = this.displayed_[A + 1];
            this.displayed_[this.row_] = ""
        }
        ;
        Ia.prototype.paintOn = function(A, E) {
            this.displayed_[this.row_] += E
        }
        ;
        var Lo = Ia
          , Mo = Ca
          , Xa = {
            H264_STREAM_TYPE: 27,
            ADTS_STREAM_TYPE: 15,
            METADATA_STREAM_TYPE: 21
        }
          , gc = function(A, E) {
            var w = 1;
            for (A > E && (w = -1); 4294967296 < Math.abs(E - A); )
                A += 8589934592 * w;
            return A
        }
          , sk = function w(E) {
            var v, z;
            w.prototype.init.call(this);
            this.type_ = E || "shared";
            this.push = function(y) {
                if ("shared" === this.type_ || y.type === this.type_)
                    void 0 === z && (z = y.dts),
                    y.dts = gc(y.dts, z),
                    y.pts = gc(y.pts, z),
                    v = y.dts,
                    this.trigger("data", y)
            }
            ;
            this.flush = function() {
                z = v;
                this.trigger("done")
            }
            ;
            this.endTimeline = function() {
                this.flush();
                this.trigger("endedtimeline")
            }
            ;
            this.discontinuity = function() {
                v = z = void 0
            }
            ;
            this.reset = function() {
                this.discontinuity();
                this.trigger("reset")
            }
        };
        sk.prototype = new g;
        var Cd = function(E, w, v) {
            for (var z = ""; w < v; w++)
                z += "%" + ("00" + E[w].toString(16)).slice(-2);
            return z
        }
          , Ce = function(E) {
            return E[0] << 21 | E[1] << 14 | E[2] << 7 | E[3]
        }
          , tk = {
            TXXX: function(E) {
                var w;
                if (3 === E.data[0]) {
                    for (w = 1; w < E.data.length; w++)
                        if (0 === E.data[w]) {
                            E.description = decodeURIComponent(Cd(E.data, 1, w));
                            E.value = decodeURIComponent(Cd(E.data, w + 1, E.data.length)).replace(/\0*$/, "");
                            break
                        }
                    E.data = E.value
                }
            },
            WXXX: function(E) {
                var w;
                if (3 === E.data[0])
                    for (w = 1; w < E.data.length; w++)
                        if (0 === E.data[w]) {
                            E.description = decodeURIComponent(Cd(E.data, 1, w));
                            E.url = decodeURIComponent(Cd(E.data, w + 1, E.data.length));
                            break
                        }
            },
            PRIV: function(E) {
                var w;
                for (w = 0; w < E.data.length; w++)
                    if (0 === E.data[w]) {
                        E.owner = unescape(Cd(E.data, 0, w));
                        break
                    }
                E.privateData = E.data.subarray(w + 1);
                E.data = E.privateData
            }
        };
        var Ig = function(E) {
            E = E && E.descriptor;
            var w = 0, v = [], z = 0, y;
            Ig.prototype.init.call(this);
            this.dispatchType = Xa.METADATA_STREAM_TYPE.toString(16);
            if (E)
                for (y = 0; y < E.length; y++)
                    this.dispatchType += ("00" + E[y].toString(16)).slice(-2);
            this.push = function(C) {
                var D;
                if ("timed-metadata" === C.type)
                    if (C.dataAlignmentIndicator && (z = 0,
                    v.length = 0),
                    0 === v.length && (10 > C.data.length || 73 !== C.data[0] || 68 !== C.data[1] || 51 !== C.data[2]))
                        this.trigger("log", {
                            level: "warn",
                            message: "Skipping unrecognized metadata packet"
                        });
                    else if (v.push(C),
                    z += C.data.byteLength,
                    1 === v.length && (w = Ce(C.data.subarray(6, 10)),
                    w += 10),
                    !(z < w)) {
                        C = {
                            data: new Uint8Array(w),
                            frames: [],
                            pts: v[0].pts,
                            dts: v[0].dts
                        };
                        for (D = 0; D < w; )
                            C.data.set(v[0].data.subarray(0, w - D), D),
                            D += v[0].data.byteLength,
                            z -= v[0].data.byteLength,
                            v.shift();
                        D = 10;
                        C.data[5] & 64 && (D = D + 4 + Ce(C.data.subarray(10, 14)),
                        w -= Ce(C.data.subarray(16, 20)));
                        do {
                            var O = Ce(C.data.subarray(D + 4, D + 8));
                            if (1 > O) {
                                this.trigger("log", {
                                    level: "warn",
                                    message: "Malformed ID3 frame encountered. Skipping metadata parsing."
                                });
                                return
                            }
                            var H = String.fromCharCode(C.data[D], C.data[D + 1], C.data[D + 2], C.data[D + 3]);
                            H = {
                                id: H,
                                data: C.data.subarray(D + 10, D + O + 10)
                            };
                            H.key = H.id;
                            if (tk[H.id] && (tk[H.id](H),
                            "com.apple.streaming.transportStreamTimestamp" === H.owner)) {
                                var Q = H.data
                                  , S = (Q[3] & 1) << 30 | Q[4] << 22 | Q[5] << 14 | Q[6] << 6 | Q[7] >>> 2;
                                S *= 4;
                                S += Q[7] & 3;
                                H.timeStamp = S;
                                void 0 === C.pts && void 0 === C.dts && (C.pts = H.timeStamp,
                                C.dts = H.timeStamp);
                                this.trigger("timestamp", H)
                            }
                            C.frames.push(H);
                            D += 10;
                            D += O
                        } while (D < w);
                        this.trigger("data", C)
                    }
            }
        };
        Ig.prototype = new g;
        var Jg = function() {
            var E = new Uint8Array(188)
              , w = 0;
            Jg.prototype.init.call(this);
            this.push = function(v) {
                var z = 0
                  , y = 188;
                if (w) {
                    var C = new Uint8Array(v.byteLength + w);
                    C.set(E.subarray(0, w));
                    C.set(v, w);
                    w = 0
                } else
                    C = v;
                for (; y < C.byteLength; )
                    71 === C[z] && 71 === C[y] ? (this.trigger("data", C.subarray(z, y)),
                    z += 188,
                    y += 188) : (z++,
                    y++);
                z < C.byteLength && (E.set(C.subarray(z), 0),
                w = C.byteLength - z)
            }
            ;
            this.flush = function() {
                188 === w && 71 === E[0] && (this.trigger("data", E),
                w = 0);
                this.trigger("done")
            }
            ;
            this.endTimeline = function() {
                this.flush();
                this.trigger("endedtimeline")
            }
            ;
            this.reset = function() {
                w = 0;
                this.trigger("reset")
            }
        };
        Jg.prototype = new g;
        var De = function() {
            De.prototype.init.call(this);
            var E = this;
            this.packetsWaitingForPmt = [];
            this.programMapTable = void 0;
            var w = function(y, C) {
                var D = 0;
                C.payloadUnitStartIndicator && (D += y[D] + 1);
                "pat" === C.type ? v(y.subarray(D), C) : z(y.subarray(D), C)
            };
            var v = function(y, C) {
                C.section_number = y[7];
                C.last_section_number = y[8];
                E.pmtPid = (y[10] & 31) << 8 | y[11];
                C.pmtPid = E.pmtPid
            };
            var z = function(y, C) {
                var D;
                if (y[5] & 1) {
                    E.programMapTable = {
                        video: null,
                        audio: null,
                        "timed-metadata": {}
                    };
                    var O = 3 + ((y[1] & 15) << 8 | y[2]) - 4;
                    for (D = 12 + ((y[10] & 15) << 8 | y[11]); D < O; ) {
                        var H = y[D]
                          , Q = (y[D + 1] & 31) << 8 | y[D + 2];
                        H === Xa.H264_STREAM_TYPE && null === E.programMapTable.video ? E.programMapTable.video = Q : H === Xa.ADTS_STREAM_TYPE && null === E.programMapTable.audio ? E.programMapTable.audio = Q : H === Xa.METADATA_STREAM_TYPE && (E.programMapTable["timed-metadata"][Q] = H);
                        D += ((y[D + 3] & 15) << 8 | y[D + 4]) + 5
                    }
                    C.programMapTable = E.programMapTable
                }
            };
            this.push = function(y) {
                var C = {}
                  , D = 4;
                C.payloadUnitStartIndicator = !!(y[1] & 64);
                C.pid = y[1] & 31;
                C.pid <<= 8;
                C.pid |= y[2];
                1 < (y[3] & 48) >>> 4 && (D += y[D] + 1);
                if (0 === C.pid)
                    C.type = "pat",
                    w(y.subarray(D), C),
                    this.trigger("data", C);
                else if (C.pid === this.pmtPid)
                    for (C.type = "pmt",
                    w(y.subarray(D), C),
                    this.trigger("data", C); this.packetsWaitingForPmt.length; )
                        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());
                else
                    void 0 === this.programMapTable ? this.packetsWaitingForPmt.push([y, D, C]) : this.processPes_(y, D, C)
            }
            ;
            this.processPes_ = function(y, C, D) {
                D.streamType = D.pid === this.programMapTable.video ? Xa.H264_STREAM_TYPE : D.pid === this.programMapTable.audio ? Xa.ADTS_STREAM_TYPE : this.programMapTable["timed-metadata"][D.pid];
                D.type = "pes";
                D.data = y.subarray(C);
                this.trigger("data", D)
            }
        };
        De.prototype = new g;
        De.STREAM_TYPES = {
            h264: 27,
            adts: 15
        };
        var Kg = function() {
            var E = this, w = !1, v = {
                data: [],
                size: 0
            }, z = {
                data: [],
                size: 0
            }, y = {
                data: [],
                size: 0
            }, C, D = function(O, H, Q) {
                var S = new Uint8Array(O.size), T = {
                    type: H
                }, X, na = 0;
                if (O.data.length && !(9 > O.size)) {
                    T.trackId = O.data[0].pid;
                    for (X = 0; X < O.data.length; X++) {
                        var Ja = O.data[X];
                        S.set(Ja.data, na);
                        na += Ja.data.byteLength
                    }
                    X = S[0] << 16 | S[1] << 8 | S[2];
                    T.data = new Uint8Array;
                    1 === X && (T.packetLength = 6 + (S[4] << 8 | S[5]),
                    T.dataAlignmentIndicator = 0 !== (S[6] & 4),
                    X = S[7],
                    X & 192 && (T.pts = (S[9] & 14) << 27 | (S[10] & 255) << 20 | (S[11] & 254) << 12 | (S[12] & 255) << 5 | (S[13] & 254) >>> 3,
                    T.pts *= 4,
                    T.pts += (S[13] & 6) >>> 1,
                    T.dts = T.pts,
                    X & 64 && (T.dts = (S[14] & 14) << 27 | (S[15] & 255) << 20 | (S[16] & 254) << 12 | (S[17] & 255) << 5 | (S[18] & 254) >>> 3,
                    T.dts *= 4,
                    T.dts += (S[18] & 6) >>> 1)),
                    T.data = S.subarray(9 + S[8]));
                    H = "video" === H || T.packetLength <= O.size;
                    if (Q || H)
                        O.size = 0,
                        O.data.length = 0;
                    H && E.trigger("data", T)
                }
            };
            Kg.prototype.init.call(this);
            this.push = function(O) {
                ({
                    pat: function() {},
                    pes: function() {
                        switch (O.streamType) {
                        case Xa.H264_STREAM_TYPE:
                            var H = v;
                            var Q = "video";
                            break;
                        case Xa.ADTS_STREAM_TYPE:
                            H = z;
                            Q = "audio";
                            break;
                        case Xa.METADATA_STREAM_TYPE:
                            H = y;
                            Q = "timed-metadata";
                            break;
                        default:
                            return
                        }
                        O.payloadUnitStartIndicator && D(H, Q, !0);
                        H.data.push(O);
                        H.size += O.data.byteLength
                    },
                    pmt: function() {
                        var H = {
                            type: "metadata",
                            tracks: []
                        };
                        C = O.programMapTable;
                        null !== C.video && H.tracks.push({
                            timelineStartInfo: {
                                baseMediaDecodeTime: 0
                            },
                            id: +C.video,
                            codec: "avc",
                            type: "video"
                        });
                        null !== C.audio && H.tracks.push({
                            timelineStartInfo: {
                                baseMediaDecodeTime: 0
                            },
                            id: +C.audio,
                            codec: "adts",
                            type: "audio"
                        });
                        w = !0;
                        E.trigger("data", H)
                    }
                })[O.type]()
            }
            ;
            this.reset = function() {
                v.size = 0;
                v.data.length = 0;
                z.size = 0;
                z.data.length = 0;
                this.trigger("reset")
            }
            ;
            this.flushStreams_ = function() {
                D(v, "video");
                D(z, "audio");
                D(y, "timed-metadata")
            }
            ;
            this.flush = function() {
                if (!w && C) {
                    var O = {
                        type: "metadata",
                        tracks: []
                    };
                    null !== C.video && O.tracks.push({
                        timelineStartInfo: {
                            baseMediaDecodeTime: 0
                        },
                        id: +C.video,
                        codec: "avc",
                        type: "video"
                    });
                    null !== C.audio && O.tracks.push({
                        timelineStartInfo: {
                            baseMediaDecodeTime: 0
                        },
                        id: +C.audio,
                        codec: "adts",
                        type: "audio"
                    });
                    E.trigger("data", O)
                }
                w = !1;
                this.flushStreams_();
                this.trigger("done")
            }
        };
        Kg.prototype = new g;
        var Kb = {
            PAT_PID: 0,
            MP2T_PACKET_LENGTH: 188,
            TransportPacketStream: Jg,
            TransportParseStream: De,
            ElementaryStream: Kg,
            TimestampRolloverStream: sk,
            CaptionStream: qb,
            Cea608Stream: Lo,
            Cea708Stream: Mo,
            MetadataStream: Ig
        }, Ee;
        for (Ee in Xa)
            Xa.hasOwnProperty(Ee) && (Kb[Ee] = Xa[Ee]);
        var No = ya.ONE_SECOND_IN_TS
          , uk = [96E3, 88200, 64E3, 48E3, 44100, 32E3, 24E3, 22050, 16E3, 12E3, 11025, 8E3, 7350];
        var Fe = function(E) {
            var w, v = 0;
            Fe.prototype.init.call(this);
            this.skipWarn_ = function(z, y) {
                this.trigger("log", {
                    level: "warn",
                    message: "adts skiping bytes " + z + " to " + y + " in frame " + v + " outside syncword"
                })
            }
            ;
            this.push = function(z) {
                var y = 0;
                E || (v = 0);
                if ("audio" === z.type) {
                    if (w && w.length) {
                        var C = w;
                        w = new Uint8Array(C.byteLength + z.data.byteLength);
                        w.set(C);
                        w.set(z.data, C.byteLength)
                    } else
                        w = z.data;
                    for (var D; y + 7 < w.length; )
                        if (255 !== w[y] || 240 !== (w[y + 1] & 246))
                            "number" !== typeof D && (D = y),
                            y++;
                        else {
                            "number" === typeof D && (this.skipWarn_(D, y),
                            D = null);
                            var O = 2 * (~w[y + 1] & 1);
                            C = (w[y + 3] & 3) << 11 | w[y + 4] << 3 | (w[y + 5] & 224) >> 5;
                            var H = 1024 * ((w[y + 6] & 3) + 1);
                            var Q = H * No / uk[(w[y + 2] & 60) >>> 2];
                            if (w.byteLength - y < C)
                                break;
                            this.trigger("data", {
                                pts: z.pts + v * Q,
                                dts: z.dts + v * Q,
                                sampleCount: H,
                                audioobjecttype: (w[y + 2] >>> 6 & 3) + 1,
                                channelcount: (w[y + 2] & 1) << 2 | (w[y + 3] & 192) >>> 6,
                                samplerate: uk[(w[y + 2] & 60) >>> 2],
                                samplingfrequencyindex: (w[y + 2] & 60) >>> 2,
                                samplesize: 16,
                                data: w.subarray(y + 7 + O, y + C)
                            });
                            v++;
                            y += C
                        }
                    "number" === typeof D && this.skipWarn_(D, y);
                    w = w.subarray(y)
                }
            }
            ;
            this.flush = function() {
                v = 0;
                this.trigger("done")
            }
            ;
            this.reset = function() {
                w = void 0;
                this.trigger("reset")
            }
            ;
            this.endTimeline = function() {
                w = void 0;
                this.trigger("endedtimeline")
            }
        };
        Fe.prototype = new g;
        var Oo = function(E) {
            var w = E.byteLength
              , v = 0
              , z = 0;
            this.length = function() {
                return 8 * w
            }
            ;
            this.bitsAvailable = function() {
                return 8 * w + z
            }
            ;
            this.loadWord = function() {
                var y = E.byteLength - w
                  , C = new Uint8Array(4)
                  , D = Math.min(4, w);
                if (0 === D)
                    throw Error("no bytes available");
                C.set(E.subarray(y, y + D));
                v = (new DataView(C.buffer)).getUint32(0);
                z = 8 * D;
                w -= D
            }
            ;
            this.skipBits = function(y) {
                if (!(z > y)) {
                    y -= z;
                    var C = Math.floor(y / 8);
                    y -= 8 * C;
                    w -= C;
                    this.loadWord()
                }
                v <<= y;
                z -= y
            }
            ;
            this.readBits = function(y) {
                var C = Math.min(z, y)
                  , D = v >>> 32 - C;
                z -= C;
                0 < z ? v <<= C : 0 < w && this.loadWord();
                C = y - C;
                return 0 < C ? D << C | this.readBits(C) : D
            }
            ;
            this.skipLeadingZeros = function() {
                var y;
                for (y = 0; y < z; ++y)
                    if (0 !== (v & 2147483648 >>> y))
                        return v <<= y,
                        z -= y,
                        y;
                this.loadWord();
                return y + this.skipLeadingZeros()
            }
            ;
            this.skipUnsignedExpGolomb = function() {
                this.skipBits(1 + this.skipLeadingZeros())
            }
            ;
            this.skipExpGolomb = function() {
                this.skipBits(1 + this.skipLeadingZeros())
            }
            ;
            this.readUnsignedExpGolomb = function() {
                var y = this.skipLeadingZeros();
                return this.readBits(y + 1) - 1
            }
            ;
            this.readExpGolomb = function() {
                var y = this.readUnsignedExpGolomb();
                return 1 & y ? 1 + y >>> 1 : -1 * (y >>> 1)
            }
            ;
            this.readBoolean = function() {
                return 1 === this.readBits(1)
            }
            ;
            this.readUnsignedByte = function() {
                return this.readBits(8)
            }
            ;
            this.loadWord()
        };
        var Lg = function() {
            var E = 0, w, v;
            Lg.prototype.init.call(this);
            this.push = function(z) {
                if (v) {
                    var y = new Uint8Array(v.byteLength + z.data.byteLength);
                    y.set(v);
                    y.set(z.data, v.byteLength);
                    v = y
                } else
                    v = z.data;
                for (z = v.byteLength; E < z - 3; E++)
                    if (1 === v[E + 2]) {
                        w = E + 5;
                        break
                    }
                for (; w < z; )
                    switch (v[w]) {
                    case 0:
                        if (0 !== v[w - 1]) {
                            w += 2;
                            break
                        } else if (0 !== v[w - 2]) {
                            w++;
                            break
                        }
                        E + 3 !== w - 2 && this.trigger("data", v.subarray(E + 3, w - 2));
                        do
                            w++;
                        while (1 !== v[w] && w < z);
                        E = w - 2;
                        w += 3;
                        break;
                    case 1:
                        if (0 !== v[w - 1] || 0 !== v[w - 2]) {
                            w += 3;
                            break
                        }
                        this.trigger("data", v.subarray(E + 3, w - 2));
                        E = w - 2;
                        w += 3;
                        break;
                    default:
                        w += 3
                    }
                v = v.subarray(E);
                w -= E;
                E = 0
            }
            ;
            this.reset = function() {
                v = null;
                E = 0;
                this.trigger("reset")
            }
            ;
            this.flush = function() {
                v && 3 < v.byteLength && this.trigger("data", v.subarray(E + 3));
                v = null;
                E = 0;
                this.trigger("done")
            }
            ;
            this.endTimeline = function() {
                this.flush();
                this.trigger("endedtimeline")
            }
        };
        Lg.prototype = new g;
        var Po = {
            100: !0,
            110: !0,
            122: !0,
            244: !0,
            44: !0,
            83: !0,
            86: !0,
            118: !0,
            128: !0,
            138: !0,
            139: !0,
            134: !0
        };
        var Mg = function() {
            var E = new Lg, w, v, z;
            Mg.prototype.init.call(this);
            var y = this;
            this.push = function(H) {
                "video" === H.type && (w = H.trackId,
                v = H.pts,
                z = H.dts,
                E.push(H))
            }
            ;
            E.on("data", function(H) {
                var Q = {
                    trackId: w,
                    pts: v,
                    dts: z,
                    data: H,
                    nalUnitTypeCode: H[0] & 31
                };
                switch (Q.nalUnitTypeCode) {
                case 5:
                    Q.nalUnitType = "slice_layer_without_partitioning_rbsp_idr";
                    break;
                case 6:
                    Q.nalUnitType = "sei_rbsp";
                    Q.escapedRBSP = D(H.subarray(1));
                    break;
                case 7:
                    Q.nalUnitType = "seq_parameter_set_rbsp";
                    Q.escapedRBSP = D(H.subarray(1));
                    Q.config = O(Q.escapedRBSP);
                    break;
                case 8:
                    Q.nalUnitType = "pic_parameter_set_rbsp";
                    break;
                case 9:
                    Q.nalUnitType = "access_unit_delimiter_rbsp"
                }
                y.trigger("data", Q)
            });
            E.on("done", function() {
                y.trigger("done")
            });
            E.on("partialdone", function() {
                y.trigger("partialdone")
            });
            E.on("reset", function() {
                y.trigger("reset")
            });
            E.on("endedtimeline", function() {
                y.trigger("endedtimeline")
            });
            this.flush = function() {
                E.flush()
            }
            ;
            this.partialFlush = function() {
                E.partialFlush()
            }
            ;
            this.reset = function() {
                E.reset()
            }
            ;
            this.endTimeline = function() {
                E.endTimeline()
            }
            ;
            var C = function(H, Q) {
                var S = 8, T = 8, X;
                for (X = 0; X < H; X++)
                    0 !== T && (T = Q.readExpGolomb(),
                    T = (S + T + 256) % 256),
                    S = 0 === T ? S : T
            };
            var D = function(H) {
                for (var Q = H.byteLength, S = [], T = 1, X; T < Q - 2; )
                    0 === H[T] && 0 === H[T + 1] && 3 === H[T + 2] ? (S.push(T + 2),
                    T += 2) : T++;
                if (0 === S.length)
                    return H;
                Q -= S.length;
                X = new Uint8Array(Q);
                var na = 0;
                for (T = 0; T < Q; na++,
                T++)
                    na === S[0] && (na++,
                    S.shift()),
                    X[T] = H[na];
                return X
            };
            var O = function(H) {
                var Q = 0
                  , S = 0
                  , T = 0
                  , X = 0
                  , na = [1, 1];
                H = new Oo(H);
                var Ja = H.readUnsignedByte();
                var Aa = H.readUnsignedByte();
                var Da = H.readUnsignedByte();
                H.skipUnsignedExpGolomb();
                if (Po[Ja]) {
                    var xa = H.readUnsignedExpGolomb();
                    3 === xa && H.skipBits(1);
                    H.skipUnsignedExpGolomb();
                    H.skipUnsignedExpGolomb();
                    H.skipBits(1);
                    if (H.readBoolean()) {
                        var Zb = 3 !== xa ? 8 : 12;
                        for (xa = 0; xa < Zb; xa++)
                            H.readBoolean() && (6 > xa ? C(16, H) : C(64, H))
                    }
                }
                H.skipUnsignedExpGolomb();
                xa = H.readUnsignedExpGolomb();
                if (0 === xa)
                    H.readUnsignedExpGolomb();
                else if (1 === xa)
                    for (H.skipBits(1),
                    H.skipExpGolomb(),
                    H.skipExpGolomb(),
                    Zb = H.readUnsignedExpGolomb(),
                    xa = 0; xa < Zb; xa++)
                        H.skipExpGolomb();
                H.skipUnsignedExpGolomb();
                H.skipBits(1);
                xa = H.readUnsignedExpGolomb();
                Zb = H.readUnsignedExpGolomb();
                var Uc = H.readBits(1);
                0 === Uc && H.skipBits(1);
                H.skipBits(1);
                H.readBoolean() && (Q = H.readUnsignedExpGolomb(),
                S = H.readUnsignedExpGolomb(),
                T = H.readUnsignedExpGolomb(),
                X = H.readUnsignedExpGolomb());
                if (H.readBoolean() && H.readBoolean()) {
                    var Qo = H.readUnsignedByte();
                    switch (Qo) {
                    case 1:
                        na = [1, 1];
                        break;
                    case 2:
                        na = [12, 11];
                        break;
                    case 3:
                        na = [10, 11];
                        break;
                    case 4:
                        na = [16, 11];
                        break;
                    case 5:
                        na = [40, 33];
                        break;
                    case 6:
                        na = [24, 11];
                        break;
                    case 7:
                        na = [20, 11];
                        break;
                    case 8:
                        na = [32, 11];
                        break;
                    case 9:
                        na = [80, 33];
                        break;
                    case 10:
                        na = [18, 11];
                        break;
                    case 11:
                        na = [15, 11];
                        break;
                    case 12:
                        na = [64, 33];
                        break;
                    case 13:
                        na = [160, 99];
                        break;
                    case 14:
                        na = [4, 3];
                        break;
                    case 15:
                        na = [3, 2];
                        break;
                    case 16:
                        na = [2, 1];
                        break;
                    case 255:
                        na = [H.readUnsignedByte() << 8 | H.readUnsignedByte(), H.readUnsignedByte() << 8 | H.readUnsignedByte()]
                    }
                    na && na[0] / na[1]
                }
                return {
                    profileIdc: Ja,
                    levelIdc: Da,
                    profileCompatibility: Aa,
                    width: 16 * (xa + 1) - 2 * Q - 2 * S,
                    height: (2 - Uc) * (Zb + 1) * 16 - 2 * T - 2 * X,
                    sarRatio: na
                }
            }
        };
        Mg.prototype = new g;
        var Ro = [96E3, 88200, 64E3, 48E3, 44100, 32E3, 24E3, 22050, 16E3, 12E3, 11025, 8E3, 7350]
          , vk = function(E, w) {
            var v = E[w + 6] << 21 | E[w + 7] << 14 | E[w + 8] << 7 | E[w + 9];
            E = E[w + 5];
            v = 0 <= v ? v : 0;
            return (E & 16) >> 4 ? v + 20 : v + 10
        }
          , So = function z(w, v) {
            if (10 > w.length - v || 73 !== w[v] || 68 !== w[v + 1] || 51 !== w[v + 2])
                return v;
            v += vk(w, v);
            return z(w, v)
        }
          , wk = function(w) {
            return w[0] << 21 | w[1] << 14 | w[2] << 7 | w[3]
        }
          , $b = {
            isLikelyAacData: function(w) {
                var v = So(w, 0);
                return w.length >= v + 2 && 255 === (w[v] & 255) && 240 === (w[v + 1] & 240) && 16 === (w[v + 1] & 22)
            },
            parseId3TagSize: vk,
            parseAdtsSize: function(w, v) {
                return w[v + 3] & 6144 | w[v + 4] << 3 | (w[v + 5] & 224) >> 5
            },
            parseType: function(w, v) {
                return 73 === w[v] && 68 === w[v + 1] && 51 === w[v + 2] ? "timed-metadata" : w[v] & 1 && 240 === (w[v + 1] & 240) ? "audio" : null
            },
            parseSampleRate: function(w) {
                for (var v = 0; v + 5 < w.length; )
                    if (255 !== w[v] || 240 !== (w[v + 1] & 246))
                        v++;
                    else
                        return Ro[(w[v + 2] & 60) >>> 2];
                return null
            },
            parseAacTimestamp: function(w) {
                var v = 10;
                w[5] & 64 && (v = v + 4 + wk(w.subarray(10, 14)));
                do {
                    var z = wk(w.subarray(v + 4, v + 8));
                    if (1 > z)
                        break;
                    var y = String.fromCharCode(w[v], w[v + 1], w[v + 2], w[v + 3]);
                    if ("PRIV" === y) {
                        y = w.subarray(v + 10, v + z + 10);
                        for (var C = 0; C < y.byteLength; C++)
                            if (0 === y[C]) {
                                var D = unescape, O, H = y, Q = C, S = "";
                                for (O = 0; O < Q; O++)
                                    S += "%" + ("00" + H[O].toString(16)).slice(-2);
                                if ("com.apple.streaming.transportStreamTimestamp" === D(S))
                                    return w = y.subarray(C + 1),
                                    v = (w[3] & 1) << 30 | w[4] << 22 | w[5] << 14 | w[6] << 6 | w[7] >>> 2,
                                    v *= 4,
                                    v += w[7] & 3;
                                break
                            }
                    }
                    v += 10;
                    v += z
                } while (v < w.byteLength);
                return null
            }
        };
        var Ng = function() {
            var w = new Uint8Array
              , v = 0;
            Ng.prototype.init.call(this);
            this.setTimestamp = function(z) {
                v = z
            }
            ;
            this.push = function(z) {
                var y = 0;
                if (w.length) {
                    var C = w.length;
                    w = new Uint8Array(z.byteLength + C);
                    w.set(w.subarray(0, C));
                    w.set(z, C)
                } else
                    w = z;
                for (; 3 <= w.length - y; )
                    if (73 === w[y] && 68 === w[y + 1] && 51 === w[y + 2]) {
                        if (10 > w.length - y)
                            break;
                        z = $b.parseId3TagSize(w, y);
                        if (y + z > w.length)
                            break;
                        C = {
                            type: "timed-metadata",
                            data: w.subarray(y, y + z)
                        };
                        this.trigger("data", C);
                        y += z
                    } else if (255 === (w[y] & 255) && 240 === (w[y + 1] & 240)) {
                        if (7 > w.length - y)
                            break;
                        z = $b.parseAdtsSize(w, y);
                        if (y + z > w.length)
                            break;
                        C = {
                            type: "audio",
                            data: w.subarray(y, y + z),
                            pts: v,
                            dts: v
                        };
                        this.trigger("data", C);
                        y += z
                    } else
                        y++;
                w = 0 < w.length - y ? w.subarray(y) : new Uint8Array
            }
            ;
            this.reset = function() {
                w = new Uint8Array;
                this.trigger("reset")
            }
            ;
            this.endTimeline = function() {
                w = new Uint8Array;
                this.trigger("endedtimeline")
            }
        };
        Ng.prototype = new g;
        var xk = ["audioobjecttype", "channelcount", "samplerate", "samplingfrequencyindex", "samplesize"]
          , yk = "width height profileIdc levelIdc profileCompatibility sarRatio".split(" ")
          , To = $b.isLikelyAacData
          , Uo = ya.ONE_SECOND_IN_TS
          , Vo = function(w, v) {
            v.stream = w;
            this.trigger("log", v)
        }
          , zk = function(w, v) {
            for (var z = Object.keys(v), y = 0; y < z.length; y++) {
                var C = z[y];
                if ("headOfPipeline" !== C && v[C].on)
                    v[C].on("log", Vo.bind(w, C))
            }
        }
          , Ak = function(w, v) {
            var z;
            if (w.length !== v.length)
                return !1;
            for (z = 0; z < w.length; z++)
                if (w[z] !== v[z])
                    return !1;
            return !0
        }
          , Bk = function(w, v, z, y, C, D) {
            return {
                start: {
                    dts: w,
                    pts: w + (z - v)
                },
                end: {
                    dts: w + (y - v),
                    pts: w + (C - z)
                },
                prependedContentDuration: D,
                baseMediaDecodeTime: w
            }
        };
        var Ge = function(w, v) {
            var z = []
              , y = 0
              , C = 0
              , D = Infinity;
            v = v || {};
            var O = v.firstSequenceNumber || 0;
            Ge.prototype.init.call(this);
            this.push = function(H) {
                Eb.collectDtsInfo(w, H);
                w && xk.forEach(function(Q) {
                    w[Q] = H[Q]
                });
                z.push(H)
            }
            ;
            this.setEarliestDts = function(H) {
                y = H
            }
            ;
            this.setVideoBaseMediaDecodeTime = function(H) {
                D = H
            }
            ;
            this.setAudioAppendStart = function(H) {
                C = H
            }
            ;
            this.flush = function() {
                if (0 !== z.length) {
                    var H = ye.trimAdtsFramesByEarliestDts(z, w, y);
                    w.baseMediaDecodeTime = Eb.calculateTrackBaseMediaDecodeTime(w, v.keepOriginalTimestamps);
                    var Q = ye.prefixWithSilence(w, H, C, D);
                    w.samples = ye.generateSampleTable(H);
                    var S = zd.mdat(ye.concatenateFrameData(H));
                    z = [];
                    var T = zd.moof(O, [w]);
                    var X = new Uint8Array(T.byteLength + S.byteLength);
                    O++;
                    X.set(T);
                    X.set(S, T.byteLength);
                    Eb.clearDtsInfo(w);
                    T = Math.ceil(1024 * Uo / w.samplerate);
                    H.length && (T *= H.length,
                    this.trigger("segmentTimingInfo", Bk(ya.audioTsToVideoTs(w.baseMediaDecodeTime, w.samplerate), H[0].dts, H[0].pts, H[0].dts + T, H[0].pts + T, Q || 0)),
                    this.trigger("timingInfo", {
                        start: H[0].pts,
                        end: H[0].pts + T
                    }));
                    this.trigger("data", {
                        track: w,
                        boxes: X
                    })
                }
                this.trigger("done", "AudioSegmentStream")
            }
            ;
            this.reset = function() {
                Eb.clearDtsInfo(w);
                z = [];
                this.trigger("reset")
            }
        };
        Ge.prototype = new g;
        var Og = function(w, v) {
            var z = [], y = [], C, D;
            v = v || {};
            var O = v.firstSequenceNumber || 0;
            Og.prototype.init.call(this);
            delete w.minPTS;
            this.gopCache_ = [];
            this.push = function(H) {
                Eb.collectDtsInfo(w, H);
                "seq_parameter_set_rbsp" !== H.nalUnitType || C || (C = H.config,
                w.sps = [H.data],
                yk.forEach(function(Q) {
                    w[Q] = C[Q]
                }, this));
                "pic_parameter_set_rbsp" !== H.nalUnitType || D || (D = H.data,
                w.pps = [H.data]);
                z.push(H)
            }
            ;
            this.flush = function() {
                var H;
                var Q = 0;
                for (var S, T; z.length && "access_unit_delimiter_rbsp" !== z[0].nalUnitType; )
                    z.shift();
                if (0 !== z.length) {
                    var X = Ad.groupNalsIntoFrames(z);
                    X = Ad.groupFramesIntoGops(X);
                    X[0][0].keyFrame || ((H = this.getGopForFusion_(z[0], w)) ? (Q = H.duration,
                    X.unshift(H),
                    X.byteLength += H.byteLength,
                    X.nalCount += H.nalCount,
                    X.pts = H.pts,
                    X.dts = H.dts,
                    X.duration += H.duration) : X = Ad.extendFirstKeyFrame(X));
                    if (y.length) {
                        H = v.alignGopsAtEnd ? this.alignGopsAtEnd_(X) : this.alignGopsAtStart_(X);
                        if (!H) {
                            this.gopCache_.unshift({
                                gop: X.pop(),
                                pps: w.pps,
                                sps: w.sps
                            });
                            this.gopCache_.length = Math.min(6, this.gopCache_.length);
                            z = [];
                            this.resetStream_();
                            this.trigger("done", "VideoSegmentStream");
                            return
                        }
                        Eb.clearDtsInfo(w);
                        X = H
                    }
                    Eb.collectDtsInfo(w, X);
                    w.samples = Ad.generateSampleTable(X);
                    H = zd.mdat(Ad.concatenateNalData(X));
                    w.baseMediaDecodeTime = Eb.calculateTrackBaseMediaDecodeTime(w, v.keepOriginalTimestamps);
                    this.trigger("processedGopsInfo", X.map(function(na) {
                        return {
                            pts: na.pts,
                            dts: na.dts,
                            byteLength: na.byteLength
                        }
                    }));
                    S = X[0];
                    T = X[X.length - 1];
                    this.trigger("segmentTimingInfo", Bk(w.baseMediaDecodeTime, S.dts, S.pts, T.dts + T.duration, T.pts + T.duration, Q));
                    this.trigger("timingInfo", {
                        start: X[0].pts,
                        end: X[X.length - 1].pts + X[X.length - 1].duration
                    });
                    this.gopCache_.unshift({
                        gop: X.pop(),
                        pps: w.pps,
                        sps: w.sps
                    });
                    this.gopCache_.length = Math.min(6, this.gopCache_.length);
                    z = [];
                    this.trigger("baseMediaDecodeTime", w.baseMediaDecodeTime);
                    this.trigger("timelineStartInfo", w.timelineStartInfo);
                    Q = zd.moof(O, [w]);
                    X = new Uint8Array(Q.byteLength + H.byteLength);
                    O++;
                    X.set(Q);
                    X.set(H, Q.byteLength);
                    this.trigger("data", {
                        track: w,
                        boxes: X
                    })
                }
                this.resetStream_();
                this.trigger("done", "VideoSegmentStream")
            }
            ;
            this.reset = function() {
                this.resetStream_();
                z = [];
                this.gopCache_.length = 0;
                y.length = 0;
                this.trigger("reset")
            }
            ;
            this.resetStream_ = function() {
                Eb.clearDtsInfo(w);
                D = C = void 0
            }
            ;
            this.getGopForFusion_ = function(H) {
                var Q = Infinity, S;
                for (S = 0; S < this.gopCache_.length; S++) {
                    var T = this.gopCache_[S];
                    var X = T.gop;
                    if (w.pps && Ak(w.pps[0], T.pps[0]) && w.sps && Ak(w.sps[0], T.sps[0]) && !(X.dts < w.timelineStartInfo.dts) && (X = H.dts - X.dts - X.duration,
                    -1E4 <= X && 45E3 >= X && (!na || Q > X))) {
                        var na = T;
                        Q = X
                    }
                }
                return na ? na.gop : null
            }
            ;
            this.alignGopsAtStart_ = function(H) {
                var Q, S;
                var T = H.byteLength;
                var X = H.nalCount;
                var na = H.duration;
                for (Q = S = 0; Q < y.length && S < H.length; ) {
                    var Ja = y[Q];
                    var Aa = H[S];
                    if (Ja.pts === Aa.pts)
                        break;
                    Aa.pts > Ja.pts ? Q++ : (S++,
                    T -= Aa.byteLength,
                    X -= Aa.nalCount,
                    na -= Aa.duration)
                }
                if (0 === S)
                    return H;
                if (S === H.length)
                    return null;
                H = H.slice(S);
                H.byteLength = T;
                H.duration = na;
                H.nalCount = X;
                H.pts = H[0].pts;
                H.dts = H[0].dts;
                return H
            }
            ;
            this.alignGopsAtEnd_ = function(H) {
                var Q;
                var S = y.length - 1;
                var T = H.length - 1;
                var X = null;
                for (Q = !1; 0 <= S && 0 <= T; ) {
                    var na = y[S];
                    var Ja = H[T];
                    if (na.pts === Ja.pts) {
                        Q = !0;
                        break
                    }
                    na.pts > Ja.pts ? S-- : (S === y.length - 1 && (X = T),
                    T--)
                }
                if (!Q && null === X)
                    return null;
                S = Q ? T : X;
                if (0 === S)
                    return H;
                H = H.slice(S);
                S = H.reduce(function(Aa, Da) {
                    Aa.byteLength += Da.byteLength;
                    Aa.duration += Da.duration;
                    Aa.nalCount += Da.nalCount;
                    return Aa
                }, {
                    byteLength: 0,
                    duration: 0,
                    nalCount: 0
                });
                H.byteLength = S.byteLength;
                H.duration = S.duration;
                H.nalCount = S.nalCount;
                H.pts = H[0].pts;
                H.dts = H[0].dts;
                return H
            }
            ;
            this.alignGopsWith = function(H) {
                y = H
            }
        };
        Og.prototype = new g;
        var Vc = function(w, v) {
            this.numberOfTracks = 0;
            this.metadataStream = v;
            w = w || {};
            this.remuxTracks = "undefined" !== typeof w.remux ? !!w.remux : !0;
            this.keepOriginalTimestamps = "boolean" === typeof w.keepOriginalTimestamps ? w.keepOriginalTimestamps : !1;
            this.pendingTracks = [];
            this.videoTrack = null;
            this.pendingBoxes = [];
            this.pendingCaptions = [];
            this.pendingMetadata = [];
            this.emittedTracks = this.pendingBytes = 0;
            Vc.prototype.init.call(this);
            this.push = function(z) {
                if (z.text)
                    return this.pendingCaptions.push(z);
                if (z.frames)
                    return this.pendingMetadata.push(z);
                this.pendingTracks.push(z.track);
                this.pendingBytes += z.boxes.byteLength;
                "video" === z.track.type && (this.videoTrack = z.track,
                this.pendingBoxes.push(z.boxes));
                "audio" === z.track.type && (this.audioTrack = z.track,
                this.pendingBoxes.unshift(z.boxes))
            }
        };
        Vc.prototype = new g;
        Vc.prototype.flush = function(w) {
            var v = 0
              , z = {
                captions: [],
                captionStreams: {},
                metadata: [],
                info: {}
            }
              , y = 0;
            if (this.pendingTracks.length < this.numberOfTracks) {
                if ("VideoSegmentStream" !== w && "AudioSegmentStream" !== w || this.remuxTracks)
                    return;
                if (0 === this.pendingTracks.length) {
                    this.emittedTracks++;
                    this.emittedTracks >= this.numberOfTracks && (this.trigger("done"),
                    this.emittedTracks = 0);
                    return
                }
            }
            this.videoTrack ? (y = this.videoTrack.timelineStartInfo.pts,
            yk.forEach(function(C) {
                z.info[C] = this.videoTrack[C]
            }, this)) : this.audioTrack && (y = this.audioTrack.timelineStartInfo.pts,
            xk.forEach(function(C) {
                z.info[C] = this.audioTrack[C]
            }, this));
            if (this.videoTrack || this.audioTrack) {
                z.type = 1 === this.pendingTracks.length ? this.pendingTracks[0].type : "combined";
                this.emittedTracks += this.pendingTracks.length;
                w = zd.initSegment(this.pendingTracks);
                z.initSegment = new Uint8Array(w.byteLength);
                z.initSegment.set(w);
                z.data = new Uint8Array(this.pendingBytes);
                for (w = 0; w < this.pendingBoxes.length; w++)
                    z.data.set(this.pendingBoxes[w], v),
                    v += this.pendingBoxes[w].byteLength;
                for (w = 0; w < this.pendingCaptions.length; w++)
                    v = this.pendingCaptions[w],
                    v.startTime = ya.metadataTsToSeconds(v.startPts, y, this.keepOriginalTimestamps),
                    v.endTime = ya.metadataTsToSeconds(v.endPts, y, this.keepOriginalTimestamps),
                    z.captionStreams[v.stream] = !0,
                    z.captions.push(v);
                for (w = 0; w < this.pendingMetadata.length; w++)
                    v = this.pendingMetadata[w],
                    v.cueTime = ya.metadataTsToSeconds(v.pts, y, this.keepOriginalTimestamps),
                    z.metadata.push(v);
                z.metadata.dispatchType = this.metadataStream.dispatchType;
                this.pendingTracks.length = 0;
                this.videoTrack = null;
                this.pendingBoxes.length = 0;
                this.pendingBytes = this.pendingCaptions.length = 0;
                this.pendingMetadata.length = 0;
                this.trigger("data", z);
                for (w = 0; w < z.captions.length; w++)
                    v = z.captions[w],
                    this.trigger("caption", v);
                for (w = 0; w < z.metadata.length; w++)
                    v = z.metadata[w],
                    this.trigger("id3Frame", v)
            }
            this.emittedTracks >= this.numberOfTracks && (this.trigger("done"),
            this.emittedTracks = 0)
        }
        ;
        Vc.prototype.setRemux = function(w) {
            this.remuxTracks = w
        }
        ;
        var Pg = function(w) {
            var v = this, z = !0, y, C;
            Pg.prototype.init.call(this);
            w = w || {};
            this.baseMediaDecodeTime = w.baseMediaDecodeTime || 0;
            this.transmuxPipeline_ = {};
            this.setupAacPipeline = function() {
                var D = {};
                this.transmuxPipeline_ = D;
                D.type = "aac";
                D.metadataStream = new Kb.MetadataStream;
                D.aacStream = new Ng;
                D.audioTimestampRolloverStream = new Kb.TimestampRolloverStream("audio");
                D.timedMetadataTimestampRolloverStream = new Kb.TimestampRolloverStream("timed-metadata");
                D.adtsStream = new Fe;
                D.coalesceStream = new Vc(w,D.metadataStream);
                D.headOfPipeline = D.aacStream;
                D.aacStream.pipe(D.audioTimestampRolloverStream).pipe(D.adtsStream);
                D.aacStream.pipe(D.timedMetadataTimestampRolloverStream).pipe(D.metadataStream).pipe(D.coalesceStream);
                D.metadataStream.on("timestamp", function(O) {
                    D.aacStream.setTimestamp(O.timeStamp)
                });
                D.aacStream.on("data", function(O) {
                    "timed-metadata" !== O.type && "audio" !== O.type || D.audioSegmentStream || (C = C || {
                        timelineStartInfo: {
                            baseMediaDecodeTime: v.baseMediaDecodeTime
                        },
                        codec: "adts",
                        type: "audio"
                    },
                    D.coalesceStream.numberOfTracks++,
                    D.audioSegmentStream = new Ge(C,w),
                    D.audioSegmentStream.on("log", v.getLogTrigger_("audioSegmentStream")),
                    D.audioSegmentStream.on("timingInfo", v.trigger.bind(v, "audioTimingInfo")),
                    D.adtsStream.pipe(D.audioSegmentStream).pipe(D.coalesceStream),
                    v.trigger("trackinfo", {
                        hasAudio: !!C,
                        hasVideo: !!y
                    }))
                });
                D.coalesceStream.on("data", this.trigger.bind(this, "data"));
                D.coalesceStream.on("done", this.trigger.bind(this, "done"));
                zk(this, D)
            }
            ;
            this.setupTsPipeline = function() {
                var D = {};
                this.transmuxPipeline_ = D;
                D.type = "ts";
                D.metadataStream = new Kb.MetadataStream;
                D.packetStream = new Kb.TransportPacketStream;
                D.parseStream = new Kb.TransportParseStream;
                D.elementaryStream = new Kb.ElementaryStream;
                D.timestampRolloverStream = new Kb.TimestampRolloverStream;
                D.adtsStream = new Fe;
                D.h264Stream = new Mg;
                D.captionStream = new Kb.CaptionStream(w);
                D.coalesceStream = new Vc(w,D.metadataStream);
                D.headOfPipeline = D.packetStream;
                D.packetStream.pipe(D.parseStream).pipe(D.elementaryStream).pipe(D.timestampRolloverStream);
                D.timestampRolloverStream.pipe(D.h264Stream);
                D.timestampRolloverStream.pipe(D.adtsStream);
                D.timestampRolloverStream.pipe(D.metadataStream).pipe(D.coalesceStream);
                D.h264Stream.pipe(D.captionStream).pipe(D.coalesceStream);
                D.elementaryStream.on("data", function(O) {
                    var H;
                    if ("metadata" === O.type) {
                        for (H = O.tracks.length; H--; )
                            y || "video" !== O.tracks[H].type ? C || "audio" !== O.tracks[H].type || (C = O.tracks[H],
                            C.timelineStartInfo.baseMediaDecodeTime = v.baseMediaDecodeTime) : (y = O.tracks[H],
                            y.timelineStartInfo.baseMediaDecodeTime = v.baseMediaDecodeTime);
                        y && !D.videoSegmentStream && (D.coalesceStream.numberOfTracks++,
                        D.videoSegmentStream = new Og(y,w),
                        D.videoSegmentStream.on("log", v.getLogTrigger_("videoSegmentStream")),
                        D.videoSegmentStream.on("timelineStartInfo", function(Q) {
                            C && !w.keepOriginalTimestamps && (C.timelineStartInfo = Q,
                            D.audioSegmentStream.setEarliestDts(Q.dts - v.baseMediaDecodeTime))
                        }),
                        D.videoSegmentStream.on("processedGopsInfo", v.trigger.bind(v, "gopInfo")),
                        D.videoSegmentStream.on("segmentTimingInfo", v.trigger.bind(v, "videoSegmentTimingInfo")),
                        D.videoSegmentStream.on("baseMediaDecodeTime", function(Q) {
                            C && D.audioSegmentStream.setVideoBaseMediaDecodeTime(Q)
                        }),
                        D.videoSegmentStream.on("timingInfo", v.trigger.bind(v, "videoTimingInfo")),
                        D.h264Stream.pipe(D.videoSegmentStream).pipe(D.coalesceStream));
                        C && !D.audioSegmentStream && (D.coalesceStream.numberOfTracks++,
                        D.audioSegmentStream = new Ge(C,w),
                        D.audioSegmentStream.on("log", v.getLogTrigger_("audioSegmentStream")),
                        D.audioSegmentStream.on("timingInfo", v.trigger.bind(v, "audioTimingInfo")),
                        D.audioSegmentStream.on("segmentTimingInfo", v.trigger.bind(v, "audioSegmentTimingInfo")),
                        D.adtsStream.pipe(D.audioSegmentStream).pipe(D.coalesceStream));
                        v.trigger("trackinfo", {
                            hasAudio: !!C,
                            hasVideo: !!y
                        })
                    }
                });
                D.coalesceStream.on("data", this.trigger.bind(this, "data"));
                D.coalesceStream.on("id3Frame", function(O) {
                    O.dispatchType = D.metadataStream.dispatchType;
                    v.trigger("id3Frame", O)
                });
                D.coalesceStream.on("caption", this.trigger.bind(this, "caption"));
                D.coalesceStream.on("done", this.trigger.bind(this, "done"));
                zk(this, D)
            }
            ;
            this.setBaseMediaDecodeTime = function(D) {
                var O = this.transmuxPipeline_;
                w.keepOriginalTimestamps || (this.baseMediaDecodeTime = D);
                C && (C.timelineStartInfo.dts = void 0,
                C.timelineStartInfo.pts = void 0,
                Eb.clearDtsInfo(C),
                O.audioTimestampRolloverStream && O.audioTimestampRolloverStream.discontinuity());
                y && (O.videoSegmentStream && (O.videoSegmentStream.gopCache_ = []),
                y.timelineStartInfo.dts = void 0,
                y.timelineStartInfo.pts = void 0,
                Eb.clearDtsInfo(y),
                O.captionStream.reset());
                O.timestampRolloverStream && O.timestampRolloverStream.discontinuity()
            }
            ;
            this.setAudioAppendStart = function(D) {
                C && this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(D)
            }
            ;
            this.setRemux = function(D) {
                var O = this.transmuxPipeline_;
                w.remux = D;
                O && O.coalesceStream && O.coalesceStream.setRemux(D)
            }
            ;
            this.alignGopsWith = function(D) {
                y && this.transmuxPipeline_.videoSegmentStream && this.transmuxPipeline_.videoSegmentStream.alignGopsWith(D)
            }
            ;
            this.getLogTrigger_ = function(D) {
                var O = this;
                return function(H) {
                    H.stream = D;
                    O.trigger("log", H)
                }
            }
            ;
            this.push = function(D) {
                if (z) {
                    var O = To(D);
                    O && "aac" !== this.transmuxPipeline_.type ? this.setupAacPipeline() : O || "ts" === this.transmuxPipeline_.type || this.setupTsPipeline();
                    z = !1
                }
                this.transmuxPipeline_.headOfPipeline.push(D)
            }
            ;
            this.flush = function() {
                z = !0;
                this.transmuxPipeline_.headOfPipeline.flush()
            }
            ;
            this.endTimeline = function() {
                this.transmuxPipeline_.headOfPipeline.endTimeline()
            }
            ;
            this.reset = function() {
                this.transmuxPipeline_.headOfPipeline && this.transmuxPipeline_.headOfPipeline.reset()
            }
            ;
            this.resetCaptions = function() {
                this.transmuxPipeline_.captionStream && this.transmuxPipeline_.captionStream.reset()
            }
        };
        Pg.prototype = new g;
        var rc = function(w) {
            var v = "" + String.fromCharCode(w[0]);
            v += String.fromCharCode(w[1]);
            v += String.fromCharCode(w[2]);
            return v += String.fromCharCode(w[3])
        }
          , Ga = function y(v, z) {
            var C = [], D;
            if (!z.length)
                return null;
            for (D = 0; D < v.byteLength; ) {
                var O = (v[D] << 24 | v[D + 1] << 16 | v[D + 2] << 8 | v[D + 3]) >>> 0;
                var H = rc(v.subarray(D + 4, D + 8));
                O = 1 < O ? D + O : v.byteLength;
                H === z[0] && (1 === z.length ? C.push(v.subarray(D + 8, O)) : (D = y(v.subarray(D + 8, O), z.slice(1)),
                D.length && (C = C.concat(D))));
                D = O
            }
            return C
        }
          , Ck = function(v) {
            var z = {
                version: v[0],
                flags: new Uint8Array(v.subarray(1, 4))
            };
            z.baseMediaDecodeTime = 1 === z.version ? p(v.subarray(4)) : (v[4] << 24 | v[5] << 16 | v[6] << 8 | v[7]) >>> 0;
            return z
        }
          , Dk = function(v) {
            return {
                isLeading: (v[0] & 12) >>> 2,
                dependsOn: v[0] & 3,
                isDependedOn: (v[1] & 192) >>> 6,
                hasRedundancy: (v[1] & 48) >>> 4,
                paddingValue: (v[1] & 14) >>> 1,
                isNonSyncSample: v[1] & 1,
                degradationPriority: v[2] << 8 | v[3]
            }
        }
          , Ek = function(v) {
            var z = {
                version: v[0],
                flags: new Uint8Array(v.subarray(1, 4)),
                samples: []
            }
              , y = new DataView(v.buffer,v.byteOffset,v.byteLength)
              , C = z.flags[2] & 1
              , D = z.flags[2] & 4
              , O = z.flags[1] & 1
              , H = z.flags[1] & 2
              , Q = z.flags[1] & 4
              , S = z.flags[1] & 8
              , T = y.getUint32(4)
              , X = 8;
            C && (z.dataOffset = y.getInt32(X),
            X += 4);
            D && T && (C = {
                flags: Dk(v.subarray(X, X + 4))
            },
            X += 4,
            O && (C.duration = y.getUint32(X),
            X += 4),
            H && (C.size = y.getUint32(X),
            X += 4),
            S && (C.compositionTimeOffset = 1 === z.version ? y.getInt32(X) : y.getUint32(X),
            X += 4),
            z.samples.push(C),
            T--);
            for (; T--; )
                C = {},
                O && (C.duration = y.getUint32(X),
                X += 4),
                H && (C.size = y.getUint32(X),
                X += 4),
                Q && (C.flags = Dk(v.subarray(X, X + 4)),
                X += 4),
                S && (C.compositionTimeOffset = 1 === z.version ? y.getInt32(X) : y.getUint32(X),
                X += 4),
                z.samples.push(C);
            return z
        }
          , Fk = function(v) {
            var z = new DataView(v.buffer,v.byteOffset,v.byteLength);
            v = {
                version: v[0],
                flags: new Uint8Array(v.subarray(1, 4)),
                trackId: z.getUint32(4)
            };
            var y = v.flags[2] & 1
              , C = v.flags[2] & 2
              , D = v.flags[2] & 8
              , O = v.flags[2] & 16
              , H = v.flags[2] & 32
              , Q = v.flags[0] & 65536
              , S = v.flags[0] & 131072;
            var T = 8;
            y && (T += 4,
            v.baseDataOffset = z.getUint32(12),
            T += 4);
            C && (v.sampleDescriptionIndex = z.getUint32(T),
            T += 4);
            D && (v.defaultSampleDuration = z.getUint32(T),
            T += 4);
            O && (v.defaultSampleSize = z.getUint32(T),
            T += 4);
            H && (v.defaultSampleFlags = z.getUint32(T));
            Q && (v.durationIsEmpty = !0);
            !y && S && (v.baseDataOffsetIsMoof = !0);
            return v
        }
          , Gk = "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : {}
          , Dd = "undefined" !== typeof window ? window : "undefined" !== typeof Gk ? Gk : "undefined" !== typeof self ? self : {}
          , Wo = Bd.discardEmulationPreventionBytes
          , Xo = function(v, z, y) {
            var C = z
              , D = y.defaultSampleDuration || 0
              , O = y.defaultSampleSize || 0
              , H = y.trackId
              , Q = [];
            v.forEach(function(S) {
                S = Ek(S).samples;
                S.forEach(function(T) {
                    void 0 === T.duration && (T.duration = D);
                    void 0 === T.size && (T.size = O);
                    T.trackId = H;
                    T.dts = C;
                    void 0 === T.compositionTimeOffset && (T.compositionTimeOffset = 0);
                    "bigint" === typeof C ? (T.pts = C + Dd.BigInt(T.compositionTimeOffset),
                    C += Dd.BigInt(T.duration)) : (T.pts = C + T.compositionTimeOffset,
                    C += T.duration)
                });
                Q = Q.concat(S)
            });
            return Q
        }
          , Yo = function(v, z) {
            var y = Ga(v, ["moof", "traf"])
              , C = {}
              , D = [];
            Ga(v, ["mdat"]).forEach(function(O, H) {
                D.push({
                    mdat: O,
                    traf: y[H]
                })
            });
            D.forEach(function(O) {
                var H = O.mdat
                  , Q = O.traf;
                O = Ga(Q, ["tfhd"]);
                var S = Fk(O[0]);
                O = S.trackId;
                var T = Ga(Q, ["tfdt"]);
                T = 0 < T.length ? Ck(T[0]).baseMediaDecodeTime : 0;
                Q = Ga(Q, ["trun"]);
                if (z === O && 0 < Q.length) {
                    Q = Xo(Q, T, S);
                    S = new DataView(H.buffer,H.byteOffset,H.byteLength);
                    T = [];
                    var X = [], na;
                    for (na = 0; na + 4 < H.length; na += Ja) {
                        var Ja = S.getUint32(na);
                        na += 4;
                        if (!(0 >= Ja))
                            switch (H[na] & 31) {
                            case 6:
                                var Aa = H.subarray(na + 1, na + 1 + Ja);
                                a: {
                                    var Da = na;
                                    for (var xa = 0; xa < Q.length; xa++) {
                                        var Zb = Q[xa];
                                        if (Da < Zb.size) {
                                            Da = Zb;
                                            break a
                                        }
                                        Da -= Zb.size
                                    }
                                    Da = null
                                }
                                Aa = {
                                    nalUnitType: "sei_rbsp",
                                    size: Ja,
                                    data: Aa,
                                    escapedRBSP: Wo(Aa),
                                    trackId: O
                                };
                                if (Da) {
                                    Aa.pts = Da.pts;
                                    Aa.dts = Da.dts;
                                    var Uc = Da
                                } else if (Uc)
                                    Aa.pts = Uc.pts,
                                    Aa.dts = Uc.dts;
                                else {
                                    T.push({
                                        level: "warn",
                                        message: "We've encountered a nal unit without data at " + na + " for trackId " + O + ". See mux.js#223."
                                    });
                                    break
                                }
                                X.push(Aa)
                            }
                    }
                    C[O] || (C[O] = {
                        seiNals: [],
                        logs: []
                    });
                    C[O].seiNals = C[O].seiNals.concat(X);
                    C[O].logs = C[O].logs.concat(T)
                }
            });
            return C
        }
          , Zo = function() {
            var v = !1, z, y, C, D, O, H;
            this.isInitialized = function() {
                return v
            }
            ;
            this.init = function(Q) {
                z = new qb;
                v = !0;
                H = Q ? Q.isPartial : !1;
                z.on("data", function(S) {
                    S.startTime = S.startPts / D;
                    S.endTime = S.endPts / D;
                    O.captions.push(S);
                    O.captionStreams[S.stream] = !0
                });
                z.on("log", function(S) {
                    O.logs.push(S)
                })
            }
            ;
            this.isNewInit = function(Q, S) {
                return Q && 0 === Q.length || S && "object" === typeof S && 0 === Object.keys(S).length ? !1 : C !== Q[0] || D !== S[C]
            }
            ;
            this.parse = function(Q, S, T) {
                if (this.isInitialized()) {
                    if (!S || !T)
                        return null;
                    if (this.isNewInit(S, T))
                        C = S[0],
                        D = T[C];
                    else if (null === C || !D)
                        return y.push(Q),
                        null
                } else
                    return null;
                for (; 0 < y.length; ) {
                    var X = y.shift();
                    this.parse(X, S, T)
                }
                T = C;
                S = D;
                null === T ? Q = null : (Q = Yo(Q, T)[T] || {},
                Q = {
                    seiNals: Q.seiNals,
                    logs: Q.logs,
                    timescale: S
                });
                Q && Q.logs && (O.logs = O.logs.concat(Q.logs));
                if (null === Q || !Q.seiNals)
                    return O.logs.length ? {
                        logs: O.logs,
                        captions: [],
                        captionStreams: []
                    } : null;
                this.pushNals(Q.seiNals);
                this.flushStream();
                return O
            }
            ;
            this.pushNals = function(Q) {
                if (!this.isInitialized() || !Q || 0 === Q.length)
                    return null;
                Q.forEach(function(S) {
                    z.push(S)
                })
            }
            ;
            this.flushStream = function() {
                if (!this.isInitialized())
                    return null;
                H ? z.partialFlush() : z.flush()
            }
            ;
            this.clearParsedCaptions = function() {
                O.captions = [];
                O.captionStreams = {};
                O.logs = []
            }
            ;
            this.resetCaptionStream = function() {
                if (!this.isInitialized())
                    return null;
                z.reset()
            }
            ;
            this.clearAllCaptions = function() {
                this.clearParsedCaptions();
                this.resetCaptionStream()
            }
            ;
            this.reset = function() {
                y = [];
                D = C = null;
                O ? this.clearParsedCaptions() : O = {
                    captions: [],
                    captionStreams: {},
                    logs: []
                };
                this.resetCaptionStream()
            }
            ;
            this.reset()
        }
          , Ed = function(v) {
            return ("00" + v.toString(16)).slice(-2)
        };
        var Hk = function(v) {
            var z = 0 === v[0] ? 12 : 20;
            return (v[z] << 24 | v[z + 1] << 16 | v[z + 2] << 8 | v[z + 3]) >>> 0
        };
        var Ik = {
            findBox: Ga,
            parseType: rc,
            timescale: function(v) {
                return Ga(v, ["moov", "trak"]).reduce(function(z, y) {
                    var C = Ga(y, ["tkhd"])[0];
                    if (!C)
                        return null;
                    var D = C[0];
                    D = 0 === D ? 12 : 20;
                    C = (C[D] << 24 | C[D + 1] << 16 | C[D + 2] << 8 | C[D + 3]) >>> 0;
                    y = Ga(y, ["mdia", "mdhd"])[0];
                    if (!y)
                        return null;
                    D = y[0];
                    D = 0 === D ? 12 : 20;
                    z[C] = (y[D] << 24 | y[D + 1] << 16 | y[D + 2] << 8 | y[D + 3]) >>> 0;
                    return z
                }, {})
            },
            startTime: function(v, z) {
                z = Ga(z, ["moof", "traf"]).reduce(function(y, C) {
                    var D = Ga(C, ["tfhd"])[0];
                    D = v[(D[4] << 24 | D[5] << 16 | D[6] << 8 | D[7]) >>> 0] || 9E4;
                    C = Ga(C, ["tfdt"])[0];
                    var O = new DataView(C.buffer,C.byteOffset,C.byteLength);
                    C = 1 === C[0] ? p(C.subarray(4, 12)) : O.getUint32(4);
                    var H;
                    "bigint" === typeof C ? H = C / Dd.BigInt(D) : "number" !== typeof C || isNaN(C) || (H = C / D);
                    H < Number.MAX_SAFE_INTEGER && (H = Number(H));
                    H < y && (y = H);
                    return y
                }, Infinity);
                return "bigint" === typeof z || isFinite(z) ? z : 0
            },
            compositionStartTime: function(v, z) {
                var y = Ga(z, ["moof", "traf"])
                  , C = z = 0;
                if (y && y.length) {
                    var D = Ga(y[0], ["tfhd"])[0]
                      , O = Ga(y[0], ["trun"])[0];
                    y = Ga(y[0], ["tfdt"])[0];
                    if (D)
                        var H = Fk(D).trackId;
                    y && (z = Ck(y).baseMediaDecodeTime);
                    O && (D = Ek(O),
                    D.samples && D.samples.length && (C = D.samples[0].compositionTimeOffset || 0))
                }
                v = v[H] || 9E4;
                "bigint" === typeof z && (C = Dd.BigInt(C),
                v = Dd.BigInt(v));
                v = (z + C) / v;
                "bigint" === typeof v && v < Number.MAX_SAFE_INTEGER && (v = Number(v));
                return v
            },
            videoTrackIds: function(v) {
                var z = [];
                Ga(v, ["moov", "trak"]).forEach(function(y) {
                    var C = Ga(y, ["mdia", "hdlr"])
                      , D = Ga(y, ["tkhd"]);
                    C.forEach(function(O, H) {
                        O = rc(O.subarray(8, 12));
                        H = D[H];
                        "vide" === O && (H = new DataView(H.buffer,H.byteOffset,H.byteLength),
                        O = H.getUint8(0),
                        H = 0 === O ? H.getUint32(12) : H.getUint32(20),
                        z.push(H))
                    })
                });
                return z
            },
            tracks: function(v) {
                var z = [];
                Ga(v, ["moov", "trak"]).forEach(function(y) {
                    var C = {}
                      , D = Ga(y, ["tkhd"])[0];
                    if (D) {
                        D = new DataView(D.buffer,D.byteOffset,D.byteLength);
                        var O = D.getUint8(0);
                        C.id = 0 === O ? D.getUint32(12) : D.getUint32(20)
                    }
                    if (D = Ga(y, ["mdia", "hdlr"])[0])
                        D = rc(D.subarray(8, 12)),
                        C.type = "vide" === D ? "video" : "soun" === D ? "audio" : D;
                    if (D = Ga(y, ["mdia", "minf", "stbl", "stsd"])[0])
                        if (D = D.subarray(8),
                        C.codec = rc(D.subarray(4, 8)),
                        D = Ga(D, [C.codec])[0])
                            /^[asm]vc[1-9]$/i.test(C.codec) ? (D = D.subarray(78),
                            O = rc(D.subarray(4, 8)),
                            "avcC" === O && 11 < D.length ? (C.codec += ".",
                            C.codec += Ed(D[9]),
                            C.codec += Ed(D[10]),
                            C.codec += Ed(D[11])) : C.codec = "avc1.4d400d") : /^mp4[a,v]$/i.test(C.codec) ? (D = D.subarray(28),
                            O = rc(D.subarray(4, 8)),
                            "esds" === O && 20 < D.length && 0 !== D[19] ? (C.codec += "." + Ed(D[19]),
                            C.codec += "." + Ed(D[20] >>> 2 & 63).replace(/^0/, "")) : C.codec = "mp4a.40.2") : C.codec = C.codec.toLowerCase();
                    if (y = Ga(y, ["mdia", "mdhd"])[0])
                        C.timescale = Hk(y);
                    z.push(C)
                });
                return z
            },
            getTimescaleFromMediaHeader: Hk
        }
          , Jk = function(v) {
            var z = v[1] & 31;
            return z = z << 8 | v[2]
        }
          , He = function(v) {
            return !!(v[1] & 64)
        }
          , Ie = function(v) {
            var z = 0;
            1 < (v[3] & 48) >>> 4 && (z += v[4] + 1);
            return z
        }
          , Qg = function(v) {
            switch (v) {
            case 5:
                return "slice_layer_without_partitioning_rbsp_idr";
            case 6:
                return "sei_rbsp";
            case 7:
                return "seq_parameter_set_rbsp";
            case 8:
                return "pic_parameter_set_rbsp";
            case 9:
                return "access_unit_delimiter_rbsp";
            default:
                return null
            }
        };
        var Na = {
            parseType: function(v, z) {
                v = Jk(v);
                return 0 === v ? "pat" : v === z ? "pmt" : z ? "pes" : null
            },
            parsePat: function(v) {
                var z = He(v)
                  , y = 4 + Ie(v);
                z && (y += v[y] + 1);
                return (v[y + 10] & 31) << 8 | v[y + 11]
            },
            parsePmt: function(v) {
                var z = {}
                  , y = He(v)
                  , C = 4 + Ie(v);
                y && (C += v[C] + 1);
                if (v[C + 5] & 1) {
                    y = 3 + ((v[C + 1] & 15) << 8 | v[C + 2]) - 4;
                    for (var D = 12 + ((v[C + 10] & 15) << 8 | v[C + 11]); D < y; ) {
                        var O = C + D;
                        z[(v[O + 1] & 31) << 8 | v[O + 2]] = v[O];
                        D += ((v[O + 3] & 15) << 8 | v[O + 4]) + 5
                    }
                    return z
                }
            },
            parsePayloadUnitStartIndicator: He,
            parsePesType: function(v, z) {
                v = Jk(v);
                switch (z[v]) {
                case Xa.H264_STREAM_TYPE:
                    return "video";
                case Xa.ADTS_STREAM_TYPE:
                    return "audio";
                case Xa.METADATA_STREAM_TYPE:
                    return "timed-metadata";
                default:
                    return null
                }
            },
            parsePesTime: function(v) {
                if (!He(v))
                    return null;
                var z = 4 + Ie(v);
                if (z >= v.byteLength)
                    return null;
                var y = null;
                var C = v[z + 7];
                C & 192 && (y = {},
                y.pts = (v[z + 9] & 14) << 27 | (v[z + 10] & 255) << 20 | (v[z + 11] & 254) << 12 | (v[z + 12] & 255) << 5 | (v[z + 13] & 254) >>> 3,
                y.pts *= 4,
                y.pts += (v[z + 13] & 6) >>> 1,
                y.dts = y.pts,
                C & 64 && (y.dts = (v[z + 14] & 14) << 27 | (v[z + 15] & 255) << 20 | (v[z + 16] & 254) << 12 | (v[z + 17] & 255) << 5 | (v[z + 18] & 254) >>> 3,
                y.dts *= 4,
                y.dts += (v[z + 18] & 6) >>> 1));
                return y
            },
            videoPacketContainsKeyFrame: function(v) {
                var z = 4 + Ie(v);
                v = v.subarray(z);
                for (var y = z = 0, C = !1; y < v.byteLength - 3; y++)
                    if (1 === v[y + 2]) {
                        z = y + 5;
                        break
                    }
                for (; z < v.byteLength; )
                    switch (v[z]) {
                    case 0:
                        if (0 !== v[z - 1]) {
                            z += 2;
                            break
                        } else if (0 !== v[z - 2]) {
                            z++;
                            break
                        }
                        y + 3 !== z - 2 && (y = Qg(v[y + 3] & 31),
                        "slice_layer_without_partitioning_rbsp_idr" === y && (C = !0));
                        do
                            z++;
                        while (1 !== v[z] && z < v.length);
                        y = z - 2;
                        z += 3;
                        break;
                    case 1:
                        if (0 !== v[z - 1] || 0 !== v[z - 2]) {
                            z += 3;
                            break
                        }
                        y = Qg(v[y + 3] & 31);
                        "slice_layer_without_partitioning_rbsp_idr" === y && (C = !0);
                        y = z - 2;
                        z += 3;
                        break;
                    default:
                        z += 3
                    }
                (v = v.subarray(y)) && 3 < v.byteLength && (y = Qg(v[3] & 31),
                "slice_layer_without_partitioning_rbsp_idr" === y && (C = !0));
                return C
            }
        };
        var sc = ya.ONE_SECOND_IN_TS
          , $o = function(v, z) {
            for (var y = 0, C = 188, D, O; C < v.byteLength; )
                if (71 === v[y] && 71 === v[C]) {
                    D = v.subarray(y, C);
                    O = Na.parseType(D, z.pid);
                    switch (O) {
                    case "pat":
                        z.pid = Na.parsePat(D);
                        break;
                    case "pmt":
                        var H = Na.parsePmt(D);
                        z.table = z.table || {};
                        Object.keys(H).forEach(function(Q) {
                            z.table[Q] = H[Q]
                        })
                    }
                    y += 188;
                    C += 188
                } else
                    y++,
                    C++
        }
          , Kk = function(v, z, y) {
            for (var C = 0, D = 188, O, H, Q, S = !1; D <= v.byteLength; )
                if (71 !== v[C] || 71 !== v[D] && D !== v.byteLength)
                    C++,
                    D++;
                else {
                    O = v.subarray(C, D);
                    H = Na.parseType(O, z.pid);
                    switch (H) {
                    case "pes":
                        if (H = Na.parsePesType(O, z.table),
                        Q = Na.parsePayloadUnitStartIndicator(O),
                        "audio" === H && Q && (O = Na.parsePesTime(O)))
                            O.type = "audio",
                            y.audio.push(O),
                            S = !0
                    }
                    if (S)
                        break;
                    C += 188;
                    D += 188
                }
            D = v.byteLength;
            C = D - 188;
            for (S = !1; 0 <= C; )
                if (71 !== v[C] || 71 !== v[D] && D !== v.byteLength)
                    C--,
                    D--;
                else {
                    O = v.subarray(C, D);
                    H = Na.parseType(O, z.pid);
                    switch (H) {
                    case "pes":
                        if (H = Na.parsePesType(O, z.table),
                        Q = Na.parsePayloadUnitStartIndicator(O),
                        "audio" === H && Q && (O = Na.parsePesTime(O)))
                            O.type = "audio",
                            y.audio.push(O),
                            S = !0
                    }
                    if (S)
                        break;
                    C -= 188;
                    D -= 188
                }
        }
          , ap = function(v, z) {
            if (v.audio && v.audio.length) {
                var y = z;
                if ("undefined" === typeof y || isNaN(y))
                    y = v.audio[0].dts;
                v.audio.forEach(function(D) {
                    D.dts = gc(D.dts, y);
                    D.pts = gc(D.pts, y);
                    D.dtsTime = D.dts / sc;
                    D.ptsTime = D.pts / sc
                })
            }
            if (v.video && v.video.length) {
                var C = z;
                if ("undefined" === typeof C || isNaN(C))
                    C = v.video[0].dts;
                v.video.forEach(function(D) {
                    D.dts = gc(D.dts, C);
                    D.pts = gc(D.pts, C);
                    D.dtsTime = D.dts / sc;
                    D.ptsTime = D.pts / sc
                });
                v.firstKeyFrame && (v = v.firstKeyFrame,
                v.dts = gc(v.dts, C),
                v.pts = gc(v.pts, C),
                v.dtsTime = v.dts / sc,
                v.ptsTime = v.pts / sc)
            }
        }
          , bp = {
            inspect: function(v, z) {
                if ($b.isLikelyAacData(v))
                    a: {
                        for (var y = !1, C = 0, D = null, O = null, H, Q = 0, S; 3 <= v.length - Q; ) {
                            switch ($b.parseType(v, Q)) {
                            case "timed-metadata":
                                if (10 > v.length - Q) {
                                    y = !0;
                                    break
                                }
                                H = $b.parseId3TagSize(v, Q);
                                if (H > v.length) {
                                    y = !0;
                                    break
                                }
                                null === O && (S = v.subarray(Q, Q + H),
                                O = $b.parseAacTimestamp(S));
                                Q += H;
                                break;
                            case "audio":
                                if (7 > v.length - Q) {
                                    y = !0;
                                    break
                                }
                                H = $b.parseAdtsSize(v, Q);
                                if (H > v.length) {
                                    y = !0;
                                    break
                                }
                                null === D && (S = v.subarray(Q, Q + H),
                                D = $b.parseSampleRate(S));
                                C++;
                                Q += H;
                                break;
                            default:
                                Q++
                            }
                            if (y) {
                                v = null;
                                break a
                            }
                        }
                        null === D || null === O ? v = null : (v = sc / D,
                        v = {
                            audio: [{
                                type: "audio",
                                dts: O,
                                pts: O
                            }, {
                                type: "audio",
                                dts: O + 1024 * C * v,
                                pts: O + 1024 * C * v
                            }]
                        })
                    }
                else {
                    C = {
                        pid: null,
                        table: null
                    };
                    O = {};
                    $o(v, C);
                    for (y in C.table)
                        if (C.table.hasOwnProperty(y))
                            switch (C.table[y]) {
                            case Xa.H264_STREAM_TYPE:
                                O.video = [];
                                var T;
                                H = v;
                                Q = C;
                                S = O;
                                var X = 0
                                  , na = 188
                                  , Ja = !1
                                  , Aa = [];
                                for (T = 0; na < H.byteLength; )
                                    if (71 === H[X] && 71 === H[na]) {
                                        D = H.subarray(X, na);
                                        var Da = Na.parseType(D, Q.pid);
                                        switch (Da) {
                                        case "pes":
                                            var xa = Na.parsePesType(D, Q.table);
                                            Da = Na.parsePayloadUnitStartIndicator(D);
                                            if ("video" === xa && (Da && !Ja && (xa = Na.parsePesTime(D)) && (xa.type = "video",
                                            S.video.push(xa),
                                            Ja = !0),
                                            !S.firstKeyFrame)) {
                                                if (Da && 0 !== T) {
                                                    xa = new Uint8Array(T);
                                                    for (Da = 0; Aa.length; )
                                                        T = Aa.shift(),
                                                        xa.set(T, Da),
                                                        Da += T.byteLength;
                                                    Na.videoPacketContainsKeyFrame(xa) && ((T = Na.parsePesTime(xa)) ? (S.firstKeyFrame = T,
                                                    S.firstKeyFrame.type = "video") : console.warn("Failed to extract PTS/DTS from PES at first keyframe. This could be an unusual TS segment, or else mux.js did not parse your TS segment correctly. If you know your TS segments do contain PTS/DTS on keyframes please file a bug report! You can try ffprobe to double check for yourself."));
                                                    T = 0
                                                }
                                                Aa.push(D);
                                                T += D.byteLength
                                            }
                                        }
                                        if (Ja && S.firstKeyFrame)
                                            break;
                                        X += 188;
                                        na += 188
                                    } else
                                        X++,
                                        na++;
                                na = H.byteLength;
                                X = na - 188;
                                for (Ja = !1; 0 <= X; )
                                    if (71 === H[X] && 71 === H[na]) {
                                        D = H.subarray(X, na);
                                        Da = Na.parseType(D, Q.pid);
                                        switch (Da) {
                                        case "pes":
                                            if (xa = Na.parsePesType(D, Q.table),
                                            Da = Na.parsePayloadUnitStartIndicator(D),
                                            "video" === xa && Da && (xa = Na.parsePesTime(D)))
                                                xa.type = "video",
                                                S.video.push(xa),
                                                Ja = !0
                                        }
                                        if (Ja)
                                            break;
                                        X -= 188;
                                        na -= 188
                                    } else
                                        X--,
                                        na--;
                                0 === O.video.length && delete O.video;
                                break;
                            case Xa.ADTS_STREAM_TYPE:
                                O.audio = [],
                                Kk(v, C, O),
                                0 === O.audio.length && delete O.audio
                            }
                    v = O
                }
                if (!v || !v.audio && !v.video)
                    return null;
                ap(v, z);
                return v
            },
            parseAudioPes_: Kk
        }
          , cp = function(v, z) {
            z.on("data", function(y) {
                var C = y.initSegment;
                y.initSegment = {
                    data: C.buffer,
                    byteOffset: C.byteOffset,
                    byteLength: C.byteLength
                };
                C = y.data;
                y.data = C.buffer;
                v.postMessage({
                    action: "data",
                    segment: y,
                    byteOffset: C.byteOffset,
                    byteLength: C.byteLength
                }, [y.data])
            });
            z.on("done", function(y) {
                v.postMessage({
                    action: "done"
                })
            });
            z.on("gopInfo", function(y) {
                v.postMessage({
                    action: "gopInfo",
                    gopInfo: y
                })
            });
            z.on("videoSegmentTimingInfo", function(y) {
                var C = {
                    start: {
                        decode: ya.videoTsToSeconds(y.start.dts),
                        presentation: ya.videoTsToSeconds(y.start.pts)
                    },
                    end: {
                        decode: ya.videoTsToSeconds(y.end.dts),
                        presentation: ya.videoTsToSeconds(y.end.pts)
                    },
                    baseMediaDecodeTime: ya.videoTsToSeconds(y.baseMediaDecodeTime)
                };
                y.prependedContentDuration && (C.prependedContentDuration = ya.videoTsToSeconds(y.prependedContentDuration));
                v.postMessage({
                    action: "videoSegmentTimingInfo",
                    videoSegmentTimingInfo: C
                })
            });
            z.on("audioSegmentTimingInfo", function(y) {
                var C = {
                    start: {
                        decode: ya.videoTsToSeconds(y.start.dts),
                        presentation: ya.videoTsToSeconds(y.start.pts)
                    },
                    end: {
                        decode: ya.videoTsToSeconds(y.end.dts),
                        presentation: ya.videoTsToSeconds(y.end.pts)
                    },
                    baseMediaDecodeTime: ya.videoTsToSeconds(y.baseMediaDecodeTime)
                };
                y.prependedContentDuration && (C.prependedContentDuration = ya.videoTsToSeconds(y.prependedContentDuration));
                v.postMessage({
                    action: "audioSegmentTimingInfo",
                    audioSegmentTimingInfo: C
                })
            });
            z.on("id3Frame", function(y) {
                v.postMessage({
                    action: "id3Frame",
                    id3Frame: y
                })
            });
            z.on("caption", function(y) {
                v.postMessage({
                    action: "caption",
                    caption: y
                })
            });
            z.on("trackinfo", function(y) {
                v.postMessage({
                    action: "trackinfo",
                    trackInfo: y
                })
            });
            z.on("audioTimingInfo", function(y) {
                v.postMessage({
                    action: "audioTimingInfo",
                    audioTimingInfo: {
                        start: ya.videoTsToSeconds(y.start),
                        end: ya.videoTsToSeconds(y.end)
                    }
                })
            });
            z.on("videoTimingInfo", function(y) {
                v.postMessage({
                    action: "videoTimingInfo",
                    videoTimingInfo: {
                        start: ya.videoTsToSeconds(y.start),
                        end: ya.videoTsToSeconds(y.end)
                    }
                })
            });
            z.on("log", function(y) {
                v.postMessage({
                    action: "log",
                    log: y
                })
            })
        }
          , Lk = function() {
            function v(y, C) {
                this.options = C || {};
                this.self = y;
                this.init()
            }
            var z = v.prototype;
            z.init = function() {
                this.transmuxer && this.transmuxer.dispose();
                this.transmuxer = new Pg(this.options);
                cp(this.self, this.transmuxer)
            }
            ;
            z.pushMp4Captions = function(y) {
                this.captionParser || (this.captionParser = new Zo,
                this.captionParser.init());
                var C = new Uint8Array(y.data,y.byteOffset,y.byteLength);
                y = this.captionParser.parse(C, y.trackIds, y.timescales);
                this.self.postMessage({
                    action: "mp4Captions",
                    captions: y && y.captions || [],
                    logs: y && y.logs || [],
                    data: C.buffer
                }, [C.buffer])
            }
            ;
            z.probeMp4StartTime = function(y) {
                var C = y.data;
                y = Ik.startTime(y.timescales, C);
                this.self.postMessage({
                    action: "probeMp4StartTime",
                    startTime: y,
                    data: C
                }, [C.buffer])
            }
            ;
            z.probeMp4Tracks = function(y) {
                y = y.data;
                var C = Ik.tracks(y);
                this.self.postMessage({
                    action: "probeMp4Tracks",
                    tracks: C,
                    data: y
                }, [y.buffer])
            }
            ;
            z.probeTs = function(y) {
                var C = y.data;
                y = y.baseStartTime;
                y = "number" !== typeof y || isNaN(y) ? void 0 : y * ya.ONE_SECOND_IN_TS;
                y = bp.inspect(C, y);
                var D = null;
                y && (D = {
                    hasVideo: y.video && 2 === y.video.length || !1,
                    hasAudio: y.audio && 2 === y.audio.length || !1
                },
                D.hasVideo && (D.videoStart = y.video[0].ptsTime),
                D.hasAudio && (D.audioStart = y.audio[0].ptsTime));
                this.self.postMessage({
                    action: "probeTs",
                    result: D,
                    data: C
                }, [C.buffer])
            }
            ;
            z.clearAllMp4Captions = function() {
                this.captionParser && this.captionParser.clearAllCaptions()
            }
            ;
            z.clearParsedMp4Captions = function() {
                this.captionParser && this.captionParser.clearParsedCaptions()
            }
            ;
            z.push = function(y) {
                y = new Uint8Array(y.data,y.byteOffset,y.byteLength);
                this.transmuxer.push(y)
            }
            ;
            z.reset = function() {
                this.transmuxer.reset()
            }
            ;
            z.setTimestampOffset = function(y) {
                this.transmuxer.setBaseMediaDecodeTime(Math.round(ya.secondsToVideoTs(y.timestampOffset || 0)))
            }
            ;
            z.setAudioAppendStart = function(y) {
                this.transmuxer.setAudioAppendStart(Math.ceil(ya.secondsToVideoTs(y.appendStart)))
            }
            ;
            z.setRemux = function(y) {
                this.transmuxer.setRemux(y.remux)
            }
            ;
            z.flush = function(y) {
                this.transmuxer.flush();
                self.postMessage({
                    action: "done",
                    type: "transmuxed"
                })
            }
            ;
            z.endTimeline = function() {
                this.transmuxer.endTimeline();
                self.postMessage({
                    action: "endedtimeline",
                    type: "transmuxed"
                })
            }
            ;
            z.alignGopsWith = function(y) {
                this.transmuxer.alignGopsWith(y.gopsToAlignWith.slice())
            }
            ;
            return v
        }();
        self.onmessage = function(v) {
            if ("init" === v.data.action && v.data.options)
                this.messageHandlers = new Lk(self,v.data.options);
            else if (this.messageHandlers || (this.messageHandlers = new Lk(self)),
            v.data && v.data.action && "init" !== v.data.action && this.messageHandlers[v.data.action])
                this.messageHandlers[v.data.action](v.data)
        }
    })), ep = lk(dp), Nk = function(g) {
        var q = g.transmuxer
          , p = g.bytes
          , f = g.audioAppendStart
          , m = g.gopsToAlignWith
          , k = g.remux
          , r = g.onData
          , u = g.onTrackInfo
          , t = g.onAudioTimingInfo
          , x = g.onVideoTimingInfo
          , F = g.onVideoSegmentTimingInfo
          , K = g.onAudioSegmentTimingInfo
          , M = g.onId3
          , P = g.onCaptions
          , I = g.onDone
          , L = g.onEndedTimeline
          , V = g.onTransmuxerLog
          , Y = g.isEndOfTimeline
          , fa = {
            buffer: []
        }
          , ja = Y;
        q.onmessage = function(U) {
            if (q.currentTransmux === g) {
                if ("data" === U.data.action) {
                    var la = U.data.segment
                      , oa = la.type
                      , Ma = la.initSegment
                      , Pa = la.videoFrameDtsTime
                      , bb = la.videoFramePtsTime;
                    fa.buffer.push({
                        captions: la.captions,
                        captionStreams: la.captionStreams,
                        metadata: la.metadata
                    });
                    la = U.data.segment.boxes || {
                        data: U.data.segment.data
                    };
                    oa = {
                        type: oa,
                        data: new Uint8Array(la.data,la.data.byteOffset,la.data.byteLength),
                        initSegment: new Uint8Array(Ma.data,Ma.byteOffset,Ma.byteLength)
                    };
                    "undefined" !== typeof Pa && (oa.videoFrameDtsTime = Pa);
                    "undefined" !== typeof bb && (oa.videoFramePtsTime = bb);
                    r(oa)
                }
                "trackinfo" === U.data.action && u(U.data.trackInfo);
                "gopInfo" === U.data.action && (fa.gopInfo = U.data.gopInfo);
                "audioTimingInfo" === U.data.action && t(U.data.audioTimingInfo);
                "videoTimingInfo" === U.data.action && x(U.data.videoTimingInfo);
                "videoSegmentTimingInfo" === U.data.action && F(U.data.videoSegmentTimingInfo);
                "audioSegmentTimingInfo" === U.data.action && K(U.data.audioSegmentTimingInfo);
                "id3Frame" === U.data.action && M([U.data.id3Frame], U.data.id3Frame.dispatchType);
                "caption" === U.data.action && P(U.data.caption);
                "endedtimeline" === U.data.action && (ja = !1,
                L());
                "log" === U.data.action && V(U.data.log);
                "transmuxed" !== U.data.type || ja || (q.onmessage = null,
                fa.buffer = [],
                I(fa),
                Mk(q))
            }
        }
        ;
        f && q.postMessage({
            action: "setAudioAppendStart",
            appendStart: f
        });
        Array.isArray(m) && q.postMessage({
            action: "alignGopsWith",
            gopsToAlignWith: m
        });
        "undefined" !== typeof k && q.postMessage({
            action: "setRemux",
            remux: k
        });
        p.byteLength && (f = p instanceof ArrayBuffer ? p : p.buffer,
        q.postMessage({
            action: "push",
            data: f,
            byteOffset: p instanceof ArrayBuffer ? 0 : p.byteOffset,
            byteLength: p.byteLength
        }, [f]));
        Y && q.postMessage({
            action: "endTimeline"
        });
        q.postMessage({
            action: "flush"
        })
    }, Mk = function(g) {
        g.currentTransmux = null;
        g.transmuxQueue.length && (g.currentTransmux = g.transmuxQueue.shift(),
        "function" === typeof g.currentTransmux ? g.currentTransmux() : Nk(g.currentTransmux))
    }, Ok = function(g, q) {
        g.postMessage({
            action: q
        });
        Mk(g)
    }, Pk = function(g, q) {
        q.currentTransmux ? q.transmuxQueue.push(Ok.bind(null, q, g)) : (q.currentTransmux = g,
        Ok(q, g))
    }, Qk = function(g) {
        g.transmuxer.currentTransmux ? g.transmuxer.transmuxQueue.push(g) : (g.transmuxer.currentTransmux = g,
        Nk(g))
    }, Rg = {
        reset: function(g) {
            Pk("reset", g)
        },
        endTimeline: function(g) {
            Pk("endTimeline", g)
        },
        transmux: Qk,
        createTransmuxer: function(g) {
            var q = new ep;
            q.currentTransmux = null;
            q.transmuxQueue = [];
            var p = q.terminate;
            q.terminate = function() {
                q.currentTransmux = null;
                q.transmuxQueue.length = 0;
                return p.call(q)
            }
            ;
            q.postMessage({
                action: "init",
                options: g
            });
            return q
        }
    }, Je = function(g) {
        var q = g.transmuxer
          , p = g.endAction || g.action
          , f = g.callback
          , m = Fb({}, g, {
            endAction: null,
            transmuxer: null,
            callback: null
        });
        q.addEventListener("message", function t(u) {
            u.data.action === p && (q.removeEventListener("message", t),
            u.data.data && (u.data.data = new Uint8Array(u.data.data,g.byteOffset || 0,g.byteLength || u.data.data.byteLength),
            g.data && (g.data = u.data.data)),
            f(u.data))
        });
        if (g.data) {
            var k = g.data instanceof ArrayBuffer;
            m.byteOffset = k ? 0 : g.data.byteOffset;
            m.byteLength = g.data.byteLength;
            q.postMessage(m, [k ? g.data : g.data.buffer])
        } else
            q.postMessage(m)
    }, Sg = function(g) {
        g.forEach(function(q) {
            q.abort()
        })
    }, fp = function(g) {
        var q = g.target;
        q = Date.now() - q.requestTime;
        q = {
            bandwidth: Infinity,
            bytesReceived: 0,
            roundTripTime: q || 0
        };
        q.bytesReceived = g.loaded;
        q.bandwidth = Math.floor(q.bytesReceived / q.roundTripTime * 8E3);
        return q
    }, Tg = function(g, q) {
        return q.timedout ? {
            status: q.status,
            message: "HLS request timed-out at URL: " + q.uri,
            code: -101,
            xhr: q
        } : q.aborted ? {
            status: q.status,
            message: "HLS request aborted at URL: " + q.uri,
            code: -102,
            xhr: q
        } : g ? {
            status: q.status,
            message: "HLS request errored at URL: " + q.uri,
            code: 2,
            xhr: q
        } : "arraybuffer" === q.responseType && 0 === q.response.byteLength ? {
            status: q.status,
            message: "Empty HLS response at URL: " + q.uri,
            code: 2,
            xhr: q
        } : null
    }, Rk = function(g, q, p) {
        return function(f, m) {
            var k = m.response;
            if (f = Tg(f, m))
                return p(f, g);
            if (16 !== k.byteLength)
                return p({
                    status: m.status,
                    message: "Invalid HLS key at URL: " + m.uri,
                    code: 2,
                    xhr: m
                }, g);
            m = new DataView(k);
            m = new Uint32Array([m.getUint32(0), m.getUint32(4), m.getUint32(8), m.getUint32(12)]);
            for (k = 0; k < q.length; k++)
                q[k].bytes = m;
            return p(null, g)
        }
    }, Sk = function(g, q) {
        var p = sg(g.map.bytes);
        if ("mp4" !== p)
            return q({
                internal: !0,
                message: "Found unsupported " + (p || "unknown") + " container for initialization segment at URL: " + (g.map.resolvedUri || g.map.uri),
                code: 2
            });
        Je({
            action: "probeMp4Tracks",
            data: g.map.bytes,
            transmuxer: g.transmuxer,
            callback: function(f) {
                var m = f.tracks;
                g.map.bytes = f.data;
                m.forEach(function(k) {
                    g.map.tracks = g.map.tracks || {};
                    g.map.tracks[k.type] || (g.map.tracks[k.type] = k,
                    "number" === typeof k.id && k.timescale && (g.map.timescales = g.map.timescales || {},
                    g.map.timescales[k.id] = k.timescale))
                });
                return q(null)
            }
        })
    }, gp = function(g) {
        var q = g.segment
          , p = g.finishProcessingFn;
        return function(f, m) {
            if (f = Tg(f, m))
                return p(f, q);
            f = new Uint8Array(m.response);
            if (q.map.key)
                return q.map.encryptedBytes = f,
                p(null, q);
            q.map.bytes = f;
            Sk(q, function(k) {
                if (k)
                    return k.xhr = m,
                    k.status = m.status,
                    p(k, q);
                p(null, q)
            })
        }
    }, hp = function(g) {
        var q = g.segment
          , p = g.finishProcessingFn
          , f = g.responseType;
        return function(m, k) {
            if (m = Tg(m, k))
                return p(m, q);
            if ("arraybuffer" !== f && k.responseText) {
                m = k.responseText.substring(q.lastReachedChar || 0);
                for (var r = new Uint8Array(new ArrayBuffer(m.length)), u = 0; u < m.length; u++)
                    r[u] = m.charCodeAt(u);
                m = r.buffer
            } else
                m = k.response;
            q.stats = {
                bandwidth: k.bandwidth,
                bytesReceived: k.bytesReceived || 0,
                roundTripTime: k.roundTripTime || 0
            };
            q.key ? q.encryptedBytes = new Uint8Array(m) : q.bytes = new Uint8Array(m);
            return p(null, q)
        }
    }, ip = function(g) {
        var q = g.segment
          , p = g.bytes
          , f = g.trackInfoFn
          , m = g.timingInfoFn
          , k = g.videoSegmentTimingInfoFn
          , r = g.audioSegmentTimingInfoFn
          , u = g.id3Fn
          , t = g.captionsFn
          , x = g.isEndOfTimeline
          , F = g.endedTimelineFn
          , K = g.dataFn
          , M = g.doneFn
          , P = g.onTransmuxerLog;
        g = q.map && q.map.tracks || {};
        var I = !(!g.audio || !g.video)
          , L = m.bind(null, q, "audio", "start")
          , V = m.bind(null, q, "audio", "end")
          , Y = m.bind(null, q, "video", "start")
          , fa = m.bind(null, q, "video", "end")
          , ja = function() {
            return Qk({
                bytes: p,
                transmuxer: q.transmuxer,
                audioAppendStart: q.audioAppendStart,
                gopsToAlignWith: q.gopsToAlignWith,
                remux: I,
                onData: function(U) {
                    U.type = "combined" === U.type ? "video" : U.type;
                    K(q, U)
                },
                onTrackInfo: function(U) {
                    f && (I && (U.isMuxed = !0),
                    f(q, U))
                },
                onAudioTimingInfo: function(U) {
                    L && "undefined" !== typeof U.start && (L(U.start),
                    L = null);
                    V && "undefined" !== typeof U.end && V(U.end)
                },
                onVideoTimingInfo: function(U) {
                    Y && "undefined" !== typeof U.start && (Y(U.start),
                    Y = null);
                    fa && "undefined" !== typeof U.end && fa(U.end)
                },
                onVideoSegmentTimingInfo: function(U) {
                    k(U)
                },
                onAudioSegmentTimingInfo: function(U) {
                    r(U)
                },
                onId3: function(U, la) {
                    u(q, U, la)
                },
                onCaptions: function(U) {
                    t(q, [U])
                },
                isEndOfTimeline: x,
                onEndedTimeline: function() {
                    F()
                },
                onTransmuxerLog: P,
                onDone: function(U) {
                    M && (U.type = "combined" === U.type ? "video" : U.type,
                    M(null, q, U))
                }
            })
        };
        Je({
            action: "probeTs",
            transmuxer: q.transmuxer,
            data: p,
            baseStartTime: q.baseStartTime,
            callback: function(U) {
                q.bytes = p = U.data;
                if (U = U.result)
                    f(q, {
                        hasAudio: U.hasAudio,
                        hasVideo: U.hasVideo,
                        isMuxed: I
                    }),
                    f = null,
                    U.hasAudio && !I && L(U.audioStart),
                    U.hasVideo && Y(U.videoStart),
                    Y = L = null;
                ja()
            }
        })
    }, Tk = function(g) {
        var q = g.segment
          , p = g.bytes
          , f = g.trackInfoFn
          , m = g.timingInfoFn
          , k = g.videoSegmentTimingInfoFn
          , r = g.audioSegmentTimingInfoFn
          , u = g.id3Fn
          , t = g.captionsFn
          , x = g.isEndOfTimeline
          , F = g.endedTimelineFn
          , K = g.dataFn
          , M = g.doneFn
          , P = g.onTransmuxerLog
          , I = new Uint8Array(p);
        if (0 < Vn(I, ["moof"]).length) {
            q.isFmp4 = !0;
            var L = q.map.tracks
              , V = {
                isFmp4: !0,
                hasVideo: !!L.video,
                hasAudio: !!L.audio
            };
            L.audio && L.audio.codec && "enca" !== L.audio.codec && (V.audioCodec = L.audio.codec);
            L.video && L.video.codec && "encv" !== L.video.codec && (V.videoCodec = L.video.codec);
            L.video && L.audio && (V.isMuxed = !0);
            f(q, V);
            var Y = function(fa) {
                K(q, {
                    data: I,
                    type: V.hasAudio && !V.isMuxed ? "audio" : "video"
                });
                fa && fa.length && t(q, fa);
                M(null, q, {})
            };
            Je({
                action: "probeMp4StartTime",
                timescales: q.map.timescales,
                data: I,
                transmuxer: q.transmuxer,
                callback: function(fa) {
                    var ja = fa.data;
                    fa = fa.startTime;
                    p = ja.buffer;
                    q.bytes = I = ja;
                    V.hasAudio && !V.isMuxed && m(q, "audio", "start", fa);
                    V.hasVideo && m(q, "video", "start", fa);
                    L.video && ja.byteLength && q.transmuxer ? Je({
                        action: "pushMp4Captions",
                        endAction: "mp4Captions",
                        transmuxer: q.transmuxer,
                        data: I,
                        timescales: q.map.timescales,
                        trackIds: [L.video.id],
                        callback: function(U) {
                            p = U.data.buffer;
                            q.bytes = I = U.data;
                            U.logs.forEach(function(la) {
                                P(N.mergeOptions(la, {
                                    stream: "mp4CaptionParser"
                                }))
                            });
                            Y(U.captions)
                        }
                    }) : Y()
                }
            })
        } else
            q.transmuxer ? ("undefined" === typeof q.container && (q.container = sg(I)),
            "ts" !== q.container && "aac" !== q.container ? (f(q, {
                hasAudio: !1,
                hasVideo: !1
            }),
            M(null, q, {})) : ip({
                segment: q,
                bytes: p,
                trackInfoFn: f,
                timingInfoFn: m,
                videoSegmentTimingInfoFn: k,
                audioSegmentTimingInfoFn: r,
                id3Fn: u,
                captionsFn: t,
                isEndOfTimeline: x,
                endedTimelineFn: F,
                dataFn: K,
                doneFn: M,
                onTransmuxerLog: P
            })) : M(null, q, {})
    }, Uk = function(g, q) {
        var p = g.id
          , f = g.key
          , m = g.encryptedBytes
          , k = g.decryptionWorker;
        k.addEventListener("message", function t(u) {
            u.data.source === p && (k.removeEventListener("message", t),
            u = u.data.decrypted,
            q(new Uint8Array(u.bytes,u.byteOffset,u.byteLength)))
        });
        g = f.bytes.slice ? f.bytes.slice() : new Uint32Array(Array.prototype.slice.call(f.bytes));
        k.postMessage(ek({
            source: p,
            encrypted: m,
            key: g,
            iv: f.iv
        }), [m.buffer, g.buffer])
    }, jp = function(g) {
        var q = g.segment
          , p = g.trackInfoFn
          , f = g.timingInfoFn
          , m = g.videoSegmentTimingInfoFn
          , k = g.audioSegmentTimingInfoFn
          , r = g.id3Fn
          , u = g.captionsFn
          , t = g.isEndOfTimeline
          , x = g.endedTimelineFn
          , F = g.dataFn
          , K = g.doneFn
          , M = g.onTransmuxerLog;
        Uk({
            id: q.requestId,
            key: q.key,
            encryptedBytes: q.encryptedBytes,
            decryptionWorker: g.decryptionWorker
        }, function(P) {
            q.bytes = P;
            Tk({
                segment: q,
                bytes: q.bytes,
                trackInfoFn: p,
                timingInfoFn: f,
                videoSegmentTimingInfoFn: m,
                audioSegmentTimingInfoFn: k,
                id3Fn: r,
                captionsFn: u,
                isEndOfTimeline: t,
                endedTimelineFn: x,
                dataFn: F,
                doneFn: K,
                onTransmuxerLog: M
            })
        })
    }, kp = function(g) {
        var q = g.activeXhrs
          , p = g.decryptionWorker
          , f = g.trackInfoFn
          , m = g.timingInfoFn
          , k = g.videoSegmentTimingInfoFn
          , r = g.audioSegmentTimingInfoFn
          , u = g.id3Fn
          , t = g.captionsFn
          , x = g.isEndOfTimeline
          , F = g.endedTimelineFn
          , K = g.dataFn
          , M = g.doneFn
          , P = g.onTransmuxerLog
          , I = 0
          , L = !1;
        return function(V, Y) {
            if (!L) {
                if (V)
                    return L = !0,
                    Sg(q),
                    M(V, Y);
                I += 1;
                if (I === q.length) {
                    var fa = function() {
                        if (Y.encryptedBytes)
                            return jp({
                                decryptionWorker: p,
                                segment: Y,
                                trackInfoFn: f,
                                timingInfoFn: m,
                                videoSegmentTimingInfoFn: k,
                                audioSegmentTimingInfoFn: r,
                                id3Fn: u,
                                captionsFn: t,
                                isEndOfTimeline: x,
                                endedTimelineFn: F,
                                dataFn: K,
                                doneFn: M,
                                onTransmuxerLog: P
                            });
                        Tk({
                            segment: Y,
                            bytes: Y.bytes,
                            trackInfoFn: f,
                            timingInfoFn: m,
                            videoSegmentTimingInfoFn: k,
                            audioSegmentTimingInfoFn: r,
                            id3Fn: u,
                            captionsFn: t,
                            isEndOfTimeline: x,
                            endedTimelineFn: F,
                            dataFn: K,
                            doneFn: M,
                            onTransmuxerLog: P
                        })
                    };
                    Y.endOfAllRequests = Date.now();
                    if (Y.map && Y.map.encryptedBytes && !Y.map.bytes)
                        return Uk({
                            decryptionWorker: p,
                            id: Y.requestId + "-init",
                            encryptedBytes: Y.map.encryptedBytes,
                            key: Y.map.key
                        }, function(ja) {
                            Y.map.bytes = ja;
                            Sk(Y, function(U) {
                                if (U)
                                    return Sg(q),
                                    M(U, Y);
                                fa()
                            })
                        });
                    fa()
                }
            }
        }
    }, lp = function(g) {
        var q = g.loadendState
          , p = g.abortFn;
        return function(f) {
            f.target.aborted && p && !q.calledAbortFn && (p(),
            q.calledAbortFn = !0)
        }
    }, mp = function(g) {
        var q = g.segment
          , p = g.progressFn;
        g.trackInfoFn;
        g.timingInfoFn;
        g.videoSegmentTimingInfoFn;
        g.audioSegmentTimingInfoFn;
        g.id3Fn;
        g.captionsFn;
        g.isEndOfTimeline;
        g.endedTimelineFn;
        g.dataFn;
        return function(f) {
            if (!f.target.aborted)
                return q.stats = N.mergeOptions(q.stats, fp(f)),
                !q.stats.firstBytesReceivedAt && q.stats.bytesReceived && (q.stats.firstBytesReceivedAt = Date.now()),
                p(f, q)
        }
    }, np = function(g) {
        var q = g.xhr
          , p = g.xhrOptions
          , f = g.segment
          , m = g.abortFn
          , k = g.progressFn
          , r = g.trackInfoFn
          , u = g.timingInfoFn
          , t = g.videoSegmentTimingInfoFn
          , x = g.audioSegmentTimingInfoFn
          , F = g.id3Fn
          , K = g.captionsFn
          , M = g.isEndOfTimeline
          , P = g.endedTimelineFn
          , I = g.dataFn
          , L = [];
        g = kp({
            activeXhrs: L,
            decryptionWorker: g.decryptionWorker,
            trackInfoFn: r,
            timingInfoFn: u,
            videoSegmentTimingInfoFn: t,
            audioSegmentTimingInfoFn: x,
            id3Fn: F,
            captionsFn: K,
            isEndOfTimeline: M,
            endedTimelineFn: P,
            dataFn: I,
            doneFn: g.doneFn,
            onTransmuxerLog: g.onTransmuxerLog
        });
        if (f.key && !f.key.bytes) {
            var V = [f.key];
            f.map && !f.map.bytes && f.map.key && f.map.key.resolvedUri === f.key.resolvedUri && V.push(f.map.key);
            var Y = N.mergeOptions(p, {
                uri: f.key.resolvedUri,
                responseType: "arraybuffer"
            });
            V = Rk(f, V, g);
            Y = q(Y, V);
            L.push(Y)
        }
        f.map && !f.map.bytes && (!f.map.key || f.key && f.key.resolvedUri === f.map.key.resolvedUri || (Y = N.mergeOptions(p, {
            uri: f.map.key.resolvedUri,
            responseType: "arraybuffer"
        }),
        V = Rk(f, [f.map.key], g),
        Y = q(Y, V),
        L.push(Y)),
        Y = N.mergeOptions(p, {
            uri: f.map.resolvedUri,
            responseType: "arraybuffer",
            headers: Cg(f.map)
        }),
        V = gp({
            segment: f,
            finishProcessingFn: g
        }),
        Y = q(Y, V),
        L.push(Y));
        p = N.mergeOptions(p, {
            uri: f.part && f.part.resolvedUri || f.resolvedUri,
            responseType: "arraybuffer",
            headers: Cg(f)
        });
        g = hp({
            segment: f,
            finishProcessingFn: g,
            responseType: p.responseType
        });
        q = q(p, g);
        q.addEventListener("progress", mp({
            segment: f,
            progressFn: k,
            trackInfoFn: r,
            timingInfoFn: u,
            videoSegmentTimingInfoFn: t,
            audioSegmentTimingInfoFn: x,
            id3Fn: F,
            captionsFn: K,
            isEndOfTimeline: M,
            endedTimelineFn: P,
            dataFn: I
        }));
        L.push(q);
        var fa = {};
        L.forEach(function(ja) {
            ja.addEventListener("loadend", lp({
                loadendState: fa,
                abortFn: m
            }))
        });
        return function() {
            return Sg(L)
        }
    }, op = Db("CodecUtils"), Vk = function(g, q) {
        q = q.attributes || {};
        return g && g.mediaGroups && g.mediaGroups.AUDIO && q.AUDIO && g.mediaGroups.AUDIO[q.AUDIO]
    }, Ke = function(g) {
        var q = {};
        g.forEach(function(p) {
            var f = p.mediaType
              , m = p.type;
            p = p.details;
            q[f] = q[f] || [];
            q[f].push(gj("" + m + p))
        });
        Object.keys(q).forEach(function(p) {
            1 < q[p].length ? (op("multiple " + p + " codecs found as attributes: " + q[p].join(", ") + ". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs."),
            q[p] = null) : q[p] = q[p][0]
        });
        return q
    }, Wk = function(g) {
        var q = 0;
        g.audio && q++;
        g.video && q++;
        return q
    }, Fd = function(g, q) {
        var p = q.attributes || {};
        var f = q.attributes || {};
        f = f.CODECS ? Ib(f.CODECS) : void 0;
        f = Ke(f || []);
        if (Vk(g, q) && !f.audio) {
            a: if (Vk(g, q)) {
                q = g.mediaGroups.AUDIO[(q.attributes || {}).AUDIO];
                for (m in q)
                    if (!q[m].uri && !q[m].playlists) {
                        var m = !0;
                        break a
                    }
                m = !1
            } else
                m = !0;
            m || (g = Ke(Zm(g, p.AUDIO) || []),
            g.audio && (f.audio = g.audio))
        }
        return f
    }, Le = Db("PlaylistSelector"), Xk = function(g) {
        if (g && g.playlist) {
            var q = g.playlist;
            return JSON.stringify({
                id: q.id,
                bandwidth: g.bandwidth,
                width: g.width,
                height: g.height,
                codecs: q.attributes && q.attributes.CODECS || ""
            })
        }
    }, Me = function(g, q) {
        return g ? (g = window.getComputedStyle(g)) ? g[q] : "" : ""
    }, Wc = function(g, q) {
        var p = g.slice();
        g.sort(function(f, m) {
            var k = q(f, m);
            return 0 === k ? p.indexOf(f) - p.indexOf(m) : k
        })
    }, Ug = function(g, q) {
        if (g.attributes.BANDWIDTH)
            var p = g.attributes.BANDWIDTH;
        p = p || window.Number.MAX_VALUE;
        if (q.attributes.BANDWIDTH)
            var f = q.attributes.BANDWIDTH;
        f = f || window.Number.MAX_VALUE;
        return p - f
    }, Yk = function(g, q, p, f, m, k) {
        if (g) {
            var r = {
                bandwidth: q,
                width: p,
                height: f,
                limitRenditionByPlayerDimensions: m
            }
              , u = g.playlists;
            ob.isAudioOnly(g) && (u = k.getAudioTrackPlaylists_(),
            r.audioOnly = !0);
            var t = u.map(function(I) {
                var L = I.attributes && I.attributes.RESOLUTION && I.attributes.RESOLUTION.width
                  , V = I.attributes && I.attributes.RESOLUTION && I.attributes.RESOLUTION.height;
                var Y = (Y = I.attributes && I.attributes.BANDWIDTH) || window.Number.MAX_VALUE;
                return {
                    bandwidth: Y,
                    width: L,
                    height: V,
                    playlist: I
                }
            });
            Wc(t, function(I, L) {
                return I.bandwidth - L.bandwidth
            });
            t = t.filter(function(I) {
                return !ob.isIncompatible(I.playlist)
            });
            g = t.filter(function(I) {
                return ob.isEnabled(I.playlist)
            });
            g.length || (g = t.filter(function(I) {
                return !ob.isDisabled(I.playlist)
            }));
            var x = g.filter(function(I) {
                return I.bandwidth * Ua.BANDWIDTH_VARIANCE < q
            })
              , F = x[x.length - 1];
            u = x.filter(function(I) {
                return I.bandwidth === F.bandwidth
            })[0];
            if (!1 === m) {
                var K = u || g[0] || t[0];
                if (K && K.playlist) {
                    var M = "sortedPlaylistReps";
                    u && (M = "bandwidthBestRep");
                    g[0] && (M = "enabledPlaylistReps");
                    Le("choosing " + Xk(K) + " using " + M + " with options", r);
                    return K.playlist
                }
                Le("could not choose a playlist with options", r);
                return null
            }
            x = x.filter(function(I) {
                return I.width && I.height
            });
            Wc(x, function(I, L) {
                return I.width - L.width
            });
            m = x.filter(function(I) {
                return I.width === p && I.height === f
            });
            F = m[m.length - 1];
            m = m.filter(function(I) {
                return I.bandwidth === F.bandwidth
            })[0];
            if (!m) {
                var P = x.filter(function(I) {
                    return I.width > p || I.height > f
                });
                K = P.filter(function(I) {
                    return I.width === P[0].width && I.height === P[0].height
                });
                F = K[K.length - 1];
                K = K.filter(function(I) {
                    return I.bandwidth === F.bandwidth
                })[0]
            }
            k.experimentalLeastPixelDiffSelector && (M = x.map(function(I) {
                I.pixelDiff = Math.abs(I.width - p) + Math.abs(I.height - f);
                return I
            }),
            Wc(M, function(I, L) {
                return I.pixelDiff === L.pixelDiff ? L.bandwidth - I.bandwidth : I.pixelDiff - L.pixelDiff
            }),
            M = M[0]);
            if ((k = M || K || m || u || g[0] || t[0]) && k.playlist)
                return t = "sortedPlaylistReps",
                M ? t = "leastPixelDiffRep" : K ? t = "resolutionPlusOneRep" : m ? t = "resolutionBestRep" : u ? t = "bandwidthBestRep" : g[0] && (t = "enabledPlaylistReps"),
                Le("choosing " + Xk(k) + " using " + t + " with options", r),
                k.playlist;
            Le("could not choose a playlist with options", r);
            return null
        }
    }, Zk = function() {
        var g = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;
        return Yk(this.playlists.master, this.systemBandwidth, parseInt(Me(this.tech_.el(), "width"), 10) * g, parseInt(Me(this.tech_.el(), "height"), 10) * g, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_)
    }, pp = function(g) {
        var q = g.currentTime
          , p = g.bandwidth
          , f = g.duration
          , m = g.segmentDuration
          , k = g.timeUntilRebuffer
          , r = g.currentTimeline
          , u = g.syncController;
        g = g.master.playlists.filter(function(x) {
            return !ob.isIncompatible(x)
        });
        var t = g.filter(ob.isEnabled);
        t.length || (t = g.filter(function(x) {
            return !ob.isDisabled(x)
        }));
        g = t.filter(ob.hasAttribute.bind(null, "BANDWIDTH")).map(function(x) {
            var F = u.getSyncPoint(x, f, r, q) ? 1 : 2;
            F = ob.estimateSegmentRequestTime(m, p, x) * F - k;
            return {
                playlist: x,
                rebufferingImpact: F
            }
        });
        t = g.filter(function(x) {
            return 0 >= x.rebufferingImpact
        });
        Wc(t, function(x, F) {
            return Ug(F.playlist, x.playlist)
        });
        if (t.length)
            return t[0];
        Wc(g, function(x, F) {
            return x.rebufferingImpact - F.rebufferingImpact
        });
        return g[0] || null
    }, qp = function(g) {
        var q = 0;
        if (g.bytes) {
            var p = new Uint8Array(g.bytes);
            g.segments.forEach(function(f) {
                p.set(f, q);
                q += f.byteLength
            })
        }
        return p
    }, rp = function(g) {
        var q = g.inbandTextTracks
          , p = g.captionArray
          , f = g.timestampOffset;
        if (p) {
            var m = window.WebKitDataCue || window.VTTCue;
            p.forEach(function(k) {
                q[k.stream].addCue(new m(k.startTime + f,k.endTime + f,k.text))
            })
        }
    }, sp = function(g) {
        Object.defineProperties(g.frame, {
            id: {
                get: function() {
                    N.log.warn("cue.frame.id is deprecated. Use cue.value.key instead.");
                    return g.value.key
                }
            },
            value: {
                get: function() {
                    N.log.warn("cue.frame.value is deprecated. Use cue.value.data instead.");
                    return g.value.data
                }
            },
            privateData: {
                get: function() {
                    N.log.warn("cue.frame.privateData is deprecated. Use cue.value.data instead.");
                    return g.value.data
                }
            }
        })
    }, tp = function(g) {
        var q = g.metadataArray
          , p = g.timestampOffset
          , f = g.videoDuration;
        if (q) {
            var m = window.WebKitDataCue || window.VTTCue
              , k = g.inbandTextTracks.metadataTrack_;
            if (k && (q.forEach(function(x) {
                var F = x.cueTime + p;
                !("number" !== typeof F || window.isNaN(F) || 0 > F) && Infinity > F && x.frames.forEach(function(K) {
                    var M = new m(F,F,K.value || K.url || K.data || "");
                    M.frame = K;
                    M.value = K;
                    sp(M);
                    k.addCue(M)
                })
            }),
            k.cues && k.cues.length)) {
                g = k.cues;
                q = [];
                for (var r = 0; r < g.length; r++)
                    g[r] && q.push(g[r]);
                var u = q.reduce(function(x, F) {
                    var K = x[F.startTime] || [];
                    K.push(F);
                    x[F.startTime] = K;
                    return x
                }, {})
                  , t = Object.keys(u).sort(function(x, F) {
                    return Number(x) - Number(F)
                });
                t.forEach(function(x, F) {
                    var K = Number(t[F + 1]) || f;
                    u[x].forEach(function(M) {
                        M.endTime = K
                    })
                })
            }
        }
    }, Gd = function(g, q, p) {
        var f;
        if (p && p.cues)
            for (f = p.cues.length; f--; ) {
                var m = p.cues[f];
                m.startTime >= g && m.endTime <= q && p.removeCue(m)
            }
    }, up = function(g) {
        var q = g.cues;
        if (q)
            for (var p = 0; p < q.length; p++) {
                for (var f = [], m = 0, k = 0; k < q.length; k++)
                    q[p].startTime === q[k].startTime && q[p].endTime === q[k].endTime && q[p].text === q[k].text && (m++,
                    1 < m && f.push(q[k]));
                f.length && f.forEach(function(r) {
                    return g.removeCue(r)
                })
            }
    }, vp = function(g, q, p, f) {
        q = Math.ceil(9E4 * (q - f));
        var m = Math.ceil(9E4 * (p - f));
        p = g.slice();
        for (f = g.length; f-- && !(g[f].pts <= m); )
            ;
        if (-1 === f)
            return p;
        for (m = f + 1; m-- && !(g[m].pts <= q); )
            ;
        m = Math.max(m, 0);
        p.splice(m, f - m + 1);
        return p
    }, wp = function(g, q) {
        if (!g && !q || !g && q || g && !q)
            return !1;
        if (g === q)
            return !0;
        var p = Object.keys(g).sort()
          , f = Object.keys(q).sort();
        if (p.length !== f.length)
            return !1;
        for (var m = 0; m < p.length; m++) {
            var k = p[m];
            if (k !== f[m] || g[k] !== q[k])
                return !1
        }
        return !0
    }, Ne = 1 / 60, Xc = function(g) {
        var q = g.startOfSegment
          , p = g.duration
          , f = g.segment
          , m = g.part
          , k = g.playlist
          , r = k.mediaSequence
          , u = k.id
          , t = k.segments;
        k = g.mediaIndex;
        var x = g.partIndex
          , F = g.timeline;
        t = (void 0 === t ? [] : t).length - 1;
        var K = "mediaIndex/partIndex increment";
        g.getMediaInfoForTime ? K = "getMediaInfoForTime (" + g.getMediaInfoForTime + ")" : g.isSyncRequest && (K = "getSyncSegmentCandidate (isSyncRequest)");
        g.independent && (K += " with independent " + g.independent);
        var M = "number" === typeof x;
        g = g.segment.uri ? "segment" : "pre-segment";
        var P = M ? Pj({
            preloadSegment: f
        }) - 1 : 0;
        return g + " [" + (r + k) + "/" + (r + t) + "]" + (M ? " part [" + x + "/" + P + "]" : "") + (" segment start/end [" + f.start + " => " + f.end + "]") + (M ? " part start/end [" + m.start + " => " + m.end + "]" : "") + (" startOfSegment [" + q + "] duration [") + (p + "] timeline [") + (F + "] selected by [") + (K + "] playlist [") + (u + "]")
    }, $k = function(g) {
        var q = g.timelineChangeController
          , p = g.segmentTimeline
          , f = g.loaderType
          , m = g.audioDisabled;
        return g.currentTimeline === p ? !1 : "audio" === f ? (g = q.lastTimelineChange({
            type: "main"
        }),
        !g || g.to !== p) : "main" === f && m ? (g = q.pendingTimelineChange({
            type: "audio"
        })) && g.to === p ? !1 : !0 : !1
    }, xp = function(g) {
        var q = 0;
        ["video", "audio"].forEach(function(p) {
            var f = g[p + "TimingInfo"];
            if (f) {
                p = f.start;
                f = f.end;
                var m;
                "bigint" === typeof p || "bigint" === typeof f ? m = window.BigInt(f) - window.BigInt(p) : "number" === typeof p && "number" === typeof f && (m = f - p);
                "undefined" !== typeof m && m > q && (q = m)
            }
        });
        "bigint" === typeof q && q < Number.MAX_SAFE_INTEGER && (q = Number(q));
        return q
    }, al = function(g) {
        var q = g.segmentDuration;
        return q ? Math.round(q) > g.maxDuration + ec : !1
    }, Vg = function(g) {
        function q(f, m) {
            var k = g.call(this) || this;
            if (!f)
                throw new TypeError("Initialization settings are required");
            if ("function" !== typeof f.currentTime)
                throw new TypeError("No currentTime getter specified");
            if (!f.mediaSource)
                throw new TypeError("No MediaSource specified");
            k.bandwidth = f.bandwidth;
            k.throughput = {
                rate: 0,
                count: 0
            };
            k.roundTrip = NaN;
            k.resetStats_();
            k.mediaIndex = null;
            k.partIndex = null;
            k.hasPlayed_ = f.hasPlayed;
            k.currentTime_ = f.currentTime;
            k.seekable_ = f.seekable;
            k.seeking_ = f.seeking;
            k.duration_ = f.duration;
            k.mediaSource_ = f.mediaSource;
            k.vhs_ = f.vhs;
            k.loaderType_ = f.loaderType;
            k.currentMediaInfo_ = void 0;
            k.startingMediaInfo_ = void 0;
            k.segmentMetadataTrack_ = f.segmentMetadataTrack;
            k.goalBufferLength_ = f.goalBufferLength;
            k.sourceType_ = f.sourceType;
            k.sourceUpdater_ = f.sourceUpdater;
            k.inbandTextTracks_ = f.inbandTextTracks;
            k.state_ = "INIT";
            k.timelineChangeController_ = f.timelineChangeController;
            k.shouldSaveSegmentTimingInfo_ = !0;
            k.parse708captions_ = f.parse708captions;
            k.useDtsForTimestampOffset_ = f.useDtsForTimestampOffset;
            k.captionServices_ = f.captionServices;
            k.experimentalExactManifestTimings = f.experimentalExactManifestTimings;
            k.checkBufferTimeout_ = null;
            k.error_ = void 0;
            k.currentTimeline_ = -1;
            k.pendingSegment_ = null;
            k.xhrOptions_ = null;
            k.pendingSegments_ = [];
            k.audioDisabled_ = !1;
            k.isPendingTimestampOffset_ = !1;
            k.gopBuffer_ = [];
            k.timeMapping_ = 0;
            k.safeAppend_ = 11 <= N.browser.IE_VERSION;
            k.appendInitSegment_ = {
                audio: !0,
                video: !0
            };
            k.playlistOfLastInitSegment_ = {
                audio: null,
                video: null
            };
            k.callQueue_ = [];
            k.loadQueue_ = [];
            k.metadataQueue_ = {
                id3: [],
                caption: []
            };
            k.waitingOnRemove_ = !1;
            k.quotaExceededErrorRetryTimeout_ = null;
            k.activeInitSegmentId_ = null;
            k.initSegments_ = {};
            k.cacheEncryptionKeys_ = f.cacheEncryptionKeys;
            k.keyCache_ = {};
            k.decrypter_ = f.decrypter;
            k.syncController_ = f.syncController;
            k.syncPoint_ = {
                segmentIndex: 0,
                time: 0
            };
            k.transmuxer_ = k.createTransmuxer_();
            k.triggerSyncInfoUpdate_ = function() {
                return k.trigger("syncinfoupdate")
            }
            ;
            k.syncController_.on("syncinfoupdate", k.triggerSyncInfoUpdate_);
            k.mediaSource_.addEventListener("sourceopen", function() {
                k.isEndOfStream_() || (k.ended_ = !1)
            });
            k.fetchAtBuffer_ = !1;
            k.logger_ = Db("SegmentLoader[" + k.loaderType_ + "]");
            Object.defineProperty(sa(k), "state", {
                get: function() {
                    return this.state_
                },
                set: function(r) {
                    r !== this.state_ && (this.logger_(this.state_ + " -> " + r),
                    this.state_ = r,
                    this.trigger("statechange"))
                }
            });
            k.sourceUpdater_.on("ready", function() {
                k.hasEnoughInfoToAppend_() && k.processCallQueue_()
            });
            if ("main" === k.loaderType_)
                k.timelineChangeController_.on("pendingtimelinechange", function() {
                    k.hasEnoughInfoToAppend_() && k.processCallQueue_()
                });
            if ("audio" === k.loaderType_)
                k.timelineChangeController_.on("timelinechange", function() {
                    k.hasEnoughInfoToLoad_() && k.processLoadQueue_();
                    k.hasEnoughInfoToAppend_() && k.processCallQueue_()
                });
            return k
        }
        ia(q, g);
        var p = q.prototype;
        p.createTransmuxer_ = function() {
            return Rg.createTransmuxer({
                remux: !1,
                alignGopsAtEnd: this.safeAppend_,
                keepOriginalTimestamps: !0,
                parse708captions: this.parse708captions_,
                captionServices: this.captionServices_
            })
        }
        ;
        p.resetStats_ = function() {
            this.mediaAppends = this.mediaSecondsLoaded = this.mediaTransferDuration = this.mediaRequestsErrored = this.mediaRequestsTimedout = this.mediaRequestsAborted = this.mediaRequests = this.mediaBytesTransferred = 0
        }
        ;
        p.dispose = function() {
            this.trigger("dispose");
            this.state = "DISPOSED";
            this.pause();
            this.abort_();
            this.transmuxer_ && this.transmuxer_.terminate();
            this.resetStats_();
            this.checkBufferTimeout_ && window.clearTimeout(this.checkBufferTimeout_);
            this.syncController_ && this.triggerSyncInfoUpdate_ && this.syncController_.off("syncinfoupdate", this.triggerSyncInfoUpdate_);
            this.off()
        }
        ;
        p.setAudio = function(f) {
            this.audioDisabled_ = !f;
            f ? this.appendInitSegment_.audio = !0 : this.sourceUpdater_.removeAudio(0, this.duration_())
        }
        ;
        p.abort = function() {
            "WAITING" !== this.state ? this.pendingSegment_ && (this.pendingSegment_ = null) : (this.abort_(),
            this.state = "READY",
            this.paused() || this.monitorBuffer_())
        }
        ;
        p.abort_ = function() {
            this.pendingSegment_ && this.pendingSegment_.abortRequests && this.pendingSegment_.abortRequests();
            this.pendingSegment_ = null;
            this.callQueue_ = [];
            this.loadQueue_ = [];
            this.metadataQueue_.id3 = [];
            this.metadataQueue_.caption = [];
            this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);
            this.waitingOnRemove_ = !1;
            window.clearTimeout(this.quotaExceededErrorRetryTimeout_);
            this.quotaExceededErrorRetryTimeout_ = null
        }
        ;
        p.checkForAbort_ = function(f) {
            return "APPENDING" !== this.state || this.pendingSegment_ ? this.pendingSegment_ && this.pendingSegment_.requestId === f ? !1 : !0 : (this.state = "READY",
            !0)
        }
        ;
        p.error = function(f) {
            "undefined" !== typeof f && (this.logger_("error occurred:", f),
            this.error_ = f);
            this.pendingSegment_ = null;
            return this.error_
        }
        ;
        p.endOfStream = function() {
            this.ended_ = !0;
            this.transmuxer_ && Rg.reset(this.transmuxer_);
            this.gopBuffer_.length = 0;
            this.pause();
            this.trigger("ended")
        }
        ;
        p.buffered_ = function() {
            var f = this.getMediaInfo_();
            if (!this.sourceUpdater_ || !f)
                return N.createTimeRanges();
            if ("main" === this.loaderType_) {
                var m = f.hasAudio
                  , k = f.hasVideo;
                f = f.isMuxed;
                if (k && m && !this.audioDisabled_ && !f)
                    return this.sourceUpdater_.buffered();
                if (k)
                    return this.sourceUpdater_.videoBuffered()
            }
            return this.sourceUpdater_.audioBuffered()
        }
        ;
        p.initSegmentForMap = function(f, m) {
            void 0 === m && (m = !1);
            if (!f)
                return null;
            var k = xe(f)
              , r = this.initSegments_[k];
            m && !r && f.bytes && (this.initSegments_[k] = r = {
                resolvedUri: f.resolvedUri,
                byterange: f.byterange,
                bytes: f.bytes,
                tracks: f.tracks,
                timescales: f.timescales
            });
            return r || f
        }
        ;
        p.segmentKey = function(f, m) {
            void 0 === m && (m = !1);
            if (!f)
                return null;
            var k = f.resolvedUri
              , r = this.keyCache_[k];
            this.cacheEncryptionKeys_ && m && !r && f.bytes && (this.keyCache_[k] = r = {
                resolvedUri: f.resolvedUri,
                bytes: f.bytes
            });
            f = {
                resolvedUri: (r || f).resolvedUri
            };
            r && (f.bytes = r.bytes);
            return f
        }
        ;
        p.couldBeginLoading_ = function() {
            return this.playlist_ && !this.paused()
        }
        ;
        p.load = function() {
            this.monitorBuffer_();
            if (this.playlist_) {
                if ("INIT" === this.state && this.couldBeginLoading_())
                    return this.init_();
                !this.couldBeginLoading_() || "READY" !== this.state && "INIT" !== this.state || (this.state = "READY")
            }
        }
        ;
        p.init_ = function() {
            this.state = "READY";
            this.resetEverything();
            return this.monitorBuffer_()
        }
        ;
        p.playlist = function(f, m) {
            void 0 === m && (m = {});
            if (f) {
                var k = this.playlist_
                  , r = this.pendingSegment_;
                this.playlist_ = f;
                this.xhrOptions_ = m;
                "INIT" === this.state && (f.syncInfo = {
                    mediaSequence: f.mediaSequence,
                    time: 0
                },
                "main" === this.loaderType_ && this.syncController_.setDateTimeMappingForStart(f));
                m = null;
                k && (k.id ? m = k.id : k.uri && (m = k.uri));
                this.logger_("playlist update [" + m + " => " + (f.id || f.uri) + "]");
                this.trigger("syncinfoupdate");
                if ("INIT" === this.state && this.couldBeginLoading_())
                    return this.init_();
                if (k && k.uri === f.uri) {
                    m = f.mediaSequence - k.mediaSequence;
                    this.logger_("live window shift [" + m + "]");
                    if (null !== this.mediaIndex)
                        if (this.mediaIndex -= m,
                        0 > this.mediaIndex)
                            this.partIndex = this.mediaIndex = null;
                        else {
                            var u = this.playlist_.segments[this.mediaIndex];
                            !this.partIndex || u.parts && u.parts.length && u.parts[this.partIndex] || (u = this.mediaIndex,
                            this.logger_("currently processing part (index " + this.partIndex + ") no longer exists."),
                            this.resetLoader(),
                            this.mediaIndex = u)
                        }
                    r && (r.mediaIndex -= m,
                    0 > r.mediaIndex ? (r.mediaIndex = null,
                    r.partIndex = null) : (0 <= r.mediaIndex && (r.segment = f.segments[r.mediaIndex]),
                    0 <= r.partIndex && r.segment.parts && (r.part = r.segment.parts[r.partIndex])));
                    this.syncController_.saveExpiredSegmentInfo(k, f)
                } else
                    null !== this.mediaIndex && (f.endList ? this.resyncLoader() : this.resetLoader()),
                    this.currentMediaInfo_ = void 0,
                    this.trigger("playlistupdate")
            }
        }
        ;
        p.pause = function() {
            this.checkBufferTimeout_ && (window.clearTimeout(this.checkBufferTimeout_),
            this.checkBufferTimeout_ = null)
        }
        ;
        p.paused = function() {
            return null === this.checkBufferTimeout_
        }
        ;
        p.resetEverything = function(f) {
            this.ended_ = !1;
            this.appendInitSegment_ = {
                audio: !0,
                video: !0
            };
            this.resetLoader();
            this.remove(0, Infinity, f);
            this.transmuxer_ && (this.transmuxer_.postMessage({
                action: "clearAllMp4Captions"
            }),
            this.transmuxer_.postMessage({
                action: "reset"
            }))
        }
        ;
        p.resetLoader = function() {
            this.fetchAtBuffer_ = !1;
            this.resyncLoader()
        }
        ;
        p.resyncLoader = function() {
            this.transmuxer_ && Rg.reset(this.transmuxer_);
            this.syncPoint_ = this.partIndex = this.mediaIndex = null;
            this.isPendingTimestampOffset_ = !1;
            this.callQueue_ = [];
            this.loadQueue_ = [];
            this.metadataQueue_.id3 = [];
            this.metadataQueue_.caption = [];
            this.abort();
            this.transmuxer_ && this.transmuxer_.postMessage({
                action: "clearParsedMp4Captions"
            })
        }
        ;
        p.remove = function(f, m, k, r) {
            void 0 === k && (k = function() {}
            );
            void 0 === r && (r = !1);
            Infinity === m && (m = this.duration_());
            if (m <= f)
                this.logger_("skipping remove because end ${end} is <= start ${start}");
            else if (this.sourceUpdater_ && this.getMediaInfo_()) {
                var u = 1
                  , t = function() {
                    u--;
                    0 === u && k()
                };
                if (r || !this.audioDisabled_)
                    u++,
                    this.sourceUpdater_.removeAudio(f, m, t);
                if (r || "main" === this.loaderType_)
                    this.gopBuffer_ = vp(this.gopBuffer_, f, m, this.timeMapping_),
                    u++,
                    this.sourceUpdater_.removeVideo(f, m, t);
                for (var x in this.inbandTextTracks_)
                    Gd(f, m, this.inbandTextTracks_[x]);
                Gd(f, m, this.segmentMetadataTrack_);
                t()
            } else
                this.logger_("skipping remove because no source updater or starting media info")
        }
        ;
        p.monitorBuffer_ = function() {
            this.checkBufferTimeout_ && window.clearTimeout(this.checkBufferTimeout_);
            this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), 1)
        }
        ;
        p.monitorBufferTick_ = function() {
            "READY" === this.state && this.fillBuffer_();
            this.checkBufferTimeout_ && window.clearTimeout(this.checkBufferTimeout_);
            this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), 500)
        }
        ;
        p.fillBuffer_ = function() {
            if (!this.sourceUpdater_.updating()) {
                var f = this.chooseNextRequest_();
                f && ("number" === typeof f.timestampOffset && (this.isPendingTimestampOffset_ = !1,
                this.timelineChangeController_.pendingTimelineChange({
                    type: this.loaderType_,
                    from: this.currentTimeline_,
                    to: f.timeline
                })),
                this.loadSegment_(f))
            }
        }
        ;
        p.isEndOfStream_ = function(f, m, k) {
            void 0 === f && (f = this.mediaIndex);
            void 0 === m && (m = this.playlist_);
            void 0 === k && (k = this.partIndex);
            if (!m || !this.mediaSource_)
                return !1;
            var r = "number" === typeof f && m.segments[f];
            f = f + 1 === m.segments.length;
            k = !r || !r.parts || k + 1 === r.parts.length;
            return m.endList && "open" === this.mediaSource_.readyState && f && k
        }
        ;
        p.chooseNextRequest_ = function() {
            var f = this.buffered_()
              , m = Mj(f) || 0
              , k = tg(f, this.currentTime_())
              , r = !this.hasPlayed_() && 1 <= k
              , u = k >= this.goalBufferLength_();
            f = this.playlist_.segments;
            if (!f.length || r || u)
                return null;
            this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());
            r = {
                partIndex: null,
                mediaIndex: null,
                startOfSegment: null,
                playlist: this.playlist_,
                isSyncRequest: !this.syncPoint_
            };
            if (r.isSyncRequest) {
                a: {
                    u = this.currentTimeline_;
                    var t = f || [];
                    for (var x = [], F = 0, K = 0; K < t.length; K++) {
                        var M = t[K];
                        if (u === M.timeline && (x.push(K),
                        F += M.duration,
                        F > m)) {
                            m = K;
                            break a
                        }
                    }
                    m = 0 === x.length ? 0 : x[x.length - 1]
                }
                r.mediaIndex = m
            } else
                null !== this.mediaIndex ? (u = f[this.mediaIndex],
                t = "number" === typeof this.partIndex ? this.partIndex : -1,
                r.startOfSegment = u.end ? u.end : m,
                u.parts && u.parts[t + 1] ? (r.mediaIndex = this.mediaIndex,
                r.partIndex = t + 1) : r.mediaIndex = this.mediaIndex + 1) : (x = ob.getMediaInfoForTime({
                    experimentalExactManifestTimings: this.experimentalExactManifestTimings,
                    playlist: this.playlist_,
                    currentTime: this.fetchAtBuffer_ ? m : this.currentTime_(),
                    startingPartIndex: this.syncPoint_.partIndex,
                    startingSegmentIndex: this.syncPoint_.segmentIndex,
                    startTime: this.syncPoint_.time
                }),
                u = x.segmentIndex,
                t = x.startTime,
                x = x.partIndex,
                r.getMediaInfoForTime = this.fetchAtBuffer_ ? "bufferedEnd " + m : "currentTime " + this.currentTime_(),
                r.mediaIndex = u,
                r.startOfSegment = t,
                r.partIndex = x);
            u = (m = f[r.mediaIndex]) && "number" === typeof r.partIndex && m.parts && m.parts[r.partIndex];
            if (!m || "number" === typeof r.partIndex && !u)
                return null;
            "number" !== typeof r.partIndex && m.parts && (r.partIndex = 0,
            u = m.parts[0]);
            k || !u || u.independent || (0 === r.partIndex ? (k = f[r.mediaIndex - 1],
            (m = k.parts && k.parts.length && k.parts[k.parts.length - 1]) && m.independent && (--r.mediaIndex,
            r.partIndex = k.parts.length - 1,
            r.independent = "previous segment")) : m.parts[r.partIndex - 1].independent && (--r.partIndex,
            r.independent = "previous part"));
            k = this.mediaSource_ && "ended" === this.mediaSource_.readyState;
            return r.mediaIndex >= f.length - 1 && k && !this.seeking_() ? null : this.generateSegmentInfo_(r)
        }
        ;
        p.generateSegmentInfo_ = function(f) {
            var m = f.playlist
              , k = f.mediaIndex
              , r = f.startOfSegment
              , u = f.partIndex
              , t = f.forceTimestampOffset
              , x = m.segments[k]
              , F = "number" === typeof u && x.parts[u];
            f = {
                requestId: "segment-loader-" + Math.random(),
                uri: F && F.resolvedUri || x.resolvedUri,
                mediaIndex: k,
                partIndex: F ? u : null,
                isSyncRequest: f.isSyncRequest,
                startOfSegment: r,
                playlist: m,
                bytes: null,
                encryptedBytes: null,
                timestampOffset: null,
                timeline: x.timeline,
                duration: F && F.duration || x.duration,
                segment: x,
                part: F,
                byteLength: 0,
                transmuxer: this.transmuxer_,
                getMediaInfoForTime: f.getMediaInfoForTime,
                independent: f.independent
            };
            t = "undefined" !== typeof t ? t : this.isPendingTimestampOffset_;
            f.timestampOffset = this.timestampOffsetForSegment_({
                segmentTimeline: x.timeline,
                currentTimeline: this.currentTimeline_,
                startOfSegment: r,
                buffered: this.buffered_(),
                overrideCheck: t
            });
            r = Mj(this.sourceUpdater_.audioBuffered());
            "number" === typeof r && (f.audioAppendStart = r - this.sourceUpdater_.audioTimestampOffset());
            if (this.sourceUpdater_.videoBuffered().length) {
                r = this.gopBuffer_;
                x = this.currentTime_() - this.sourceUpdater_.videoTimestampOffset();
                if ("undefined" !== typeof x && null !== x && r.length) {
                    x = Math.ceil(9E4 * (x - this.timeMapping_ + 3));
                    for (t = 0; t < r.length && !(r[t].pts > x); t++)
                        ;
                    r = r.slice(t)
                } else
                    r = [];
                f.gopsToAlignWith = r
            }
            return f
        }
        ;
        p.timestampOffsetForSegment_ = function(f) {
            var m = f.segmentTimeline
              , k = f.currentTimeline
              , r = f.startOfSegment
              , u = f.buffered;
            f = f.overrideCheck || m !== k ? m < k ? r : u.length ? u.end(u.length - 1) : r : null;
            return f
        }
        ;
        p.earlyAbortWhenNeeded_ = function(f) {
            if (!this.vhs_.tech_.paused() && this.xhrOptions_.timeout && this.playlist_.attributes.BANDWIDTH && !(1E3 > Date.now() - (f.firstBytesReceivedAt || Date.now()))) {
                var m = this.currentTime_()
                  , k = f.bandwidth
                  , r = this.pendingSegment_.duration;
                f = ob.estimateSegmentRequestTime(r, k, this.playlist_, f.bytesReceived);
                var u = this.buffered_()
                  , t = this.vhs_.tech_.playbackRate();
                void 0 === t && (t = 1);
                u = ((u.length ? u.end(u.length - 1) : 0) - m) / t - 1;
                f <= u || !(m = pp({
                    master: this.vhs_.playlists.master,
                    currentTime: m,
                    bandwidth: k,
                    duration: this.duration_(),
                    segmentDuration: r,
                    timeUntilRebuffer: u,
                    currentTimeline: this.currentTimeline_,
                    syncController: this.syncController_
                })) || (k = f - u - m.rebufferingImpact,
                r = .5,
                u <= ec && (r = 1),
                !m.playlist || m.playlist.uri === this.playlist_.uri || k < r || (this.bandwidth = m.playlist.attributes.BANDWIDTH * Ua.BANDWIDTH_VARIANCE + 1,
                this.trigger("earlyabort")))
            }
        }
        ;
        p.handleAbort_ = function(f) {
            this.logger_("Aborting " + Xc(f));
            this.mediaRequestsAborted += 1
        }
        ;
        p.handleProgress_ = function(f, m) {
            this.earlyAbortWhenNeeded_(m.stats);
            this.checkForAbort_(m.requestId) || this.trigger("progress")
        }
        ;
        p.handleTrackInfo_ = function(f, m) {
            this.earlyAbortWhenNeeded_(f.stats);
            this.checkForAbort_(f.requestId) || this.checkForIllegalMediaSwitch(m) || (m = m || {},
            wp(this.currentMediaInfo_, m) || (this.appendInitSegment_ = {
                audio: !0,
                video: !0
            },
            this.currentMediaInfo_ = this.startingMediaInfo_ = m,
            this.logger_("trackinfo update", m),
            this.trigger("trackinfo")),
            this.checkForAbort_(f.requestId) || (this.pendingSegment_.trackInfo = m,
            this.hasEnoughInfoToAppend_() && this.processCallQueue_()))
        }
        ;
        p.handleTimingInfo_ = function(f, m, k, r) {
            this.earlyAbortWhenNeeded_(f.stats);
            if (!this.checkForAbort_(f.requestId)) {
                f = this.pendingSegment_;
                var u = m + "TimingInfo";
                f[u] = f[u] || {};
                f[u][k] = r;
                this.logger_("timinginfo: " + m + " - " + k + " - " + r);
                this.hasEnoughInfoToAppend_() && this.processCallQueue_()
            }
        }
        ;
        p.handleCaptions_ = function(f, m) {
            var k = this;
            this.earlyAbortWhenNeeded_(f.stats);
            if (!this.checkForAbort_(f.requestId))
                if (0 === m.length)
                    this.logger_("SegmentLoader received no captions from a caption event");
                else if (this.pendingSegment_.hasAppendedData_) {
                    var r = null === this.sourceUpdater_.videoTimestampOffset() ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset()
                      , u = {};
                    m.forEach(function(t) {
                        u[t.stream] = u[t.stream] || {
                            startTime: Infinity,
                            captions: [],
                            endTime: 0
                        };
                        var x = u[t.stream];
                        x.startTime = Math.min(x.startTime, t.startTime + r);
                        x.endTime = Math.max(x.endTime, t.endTime + r);
                        x.captions.push(t)
                    });
                    Object.keys(u).forEach(function(t) {
                        var x = u[t]
                          , F = x.startTime
                          , K = x.endTime;
                        x = x.captions;
                        var M = k.inbandTextTracks_;
                        k.logger_("adding cues from " + F + " -> " + K + " for " + t);
                        var P = k.vhs_.tech_;
                        if (!M[t]) {
                            P.trigger({
                                type: "usage",
                                name: "vhs-608"
                            });
                            P.trigger({
                                type: "usage",
                                name: "hls-608"
                            });
                            var I = t;
                            /^cc708_/.test(t) && (I = "SERVICE" + t.split("_")[1]);
                            var L = P.textTracks().getTrackById(I);
                            if (L)
                                M[t] = L;
                            else {
                                var V = L = t
                                  , Y = !1
                                  , fa = (P.options_.vhs && P.options_.vhs.captionServices || {})[I];
                                fa && (L = fa.label,
                                V = fa.language,
                                Y = fa["default"]);
                                M[t] = P.addRemoteTextTrack({
                                    kind: "captions",
                                    id: I,
                                    "default": Y,
                                    label: L,
                                    language: V
                                }, !1).track
                            }
                        }
                        Gd(F, K, M[t]);
                        rp({
                            captionArray: x,
                            inbandTextTracks: M,
                            timestampOffset: r
                        })
                    });
                    this.transmuxer_ && this.transmuxer_.postMessage({
                        action: "clearParsedMp4Captions"
                    })
                } else
                    this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, f, m))
        }
        ;
        p.handleId3_ = function(f, m, k) {
            this.earlyAbortWhenNeeded_(f.stats);
            if (!this.checkForAbort_(f.requestId))
                if (this.pendingSegment_.hasAppendedData_) {
                    f = null === this.sourceUpdater_.videoTimestampOffset() ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();
                    var r = this.inbandTextTracks_;
                    r.metadataTrack_ || (r.metadataTrack_ = this.vhs_.tech_.addRemoteTextTrack({
                        kind: "metadata",
                        label: "Timed Metadata"
                    }, !1).track,
                    r.metadataTrack_.inBandMetadataTrackDispatchType = k);
                    tp({
                        inbandTextTracks: this.inbandTextTracks_,
                        metadataArray: m,
                        timestampOffset: f,
                        videoDuration: this.duration_()
                    })
                } else
                    this.metadataQueue_.id3.push(this.handleId3_.bind(this, f, m, k))
        }
        ;
        p.processMetadataQueue_ = function() {
            this.metadataQueue_.id3.forEach(function(f) {
                return f()
            });
            this.metadataQueue_.caption.forEach(function(f) {
                return f()
            });
            this.metadataQueue_.id3 = [];
            this.metadataQueue_.caption = []
        }
        ;
        p.processCallQueue_ = function() {
            var f = this.callQueue_;
            this.callQueue_ = [];
            f.forEach(function(m) {
                return m()
            })
        }
        ;
        p.processLoadQueue_ = function() {
            var f = this.loadQueue_;
            this.loadQueue_ = [];
            f.forEach(function(m) {
                return m()
            })
        }
        ;
        p.hasEnoughInfoToLoad_ = function() {
            if ("audio" !== this.loaderType_)
                return !0;
            var f = this.pendingSegment_;
            return f ? this.getCurrentMediaInfo_() ? $k({
                timelineChangeController: this.timelineChangeController_,
                currentTimeline: this.currentTimeline_,
                segmentTimeline: f.timeline,
                loaderType: this.loaderType_,
                audioDisabled: this.audioDisabled_
            }) ? !1 : !0 : !0 : !1
        }
        ;
        p.getCurrentMediaInfo_ = function(f) {
            void 0 === f && (f = this.pendingSegment_);
            return f && f.trackInfo || this.currentMediaInfo_
        }
        ;
        p.getMediaInfo_ = function(f) {
            void 0 === f && (f = this.pendingSegment_);
            return this.getCurrentMediaInfo_(f) || this.startingMediaInfo_
        }
        ;
        p.hasEnoughInfoToAppend_ = function() {
            if (!this.sourceUpdater_.ready() || this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_)
                return !1;
            var f = this.pendingSegment_
              , m = this.getCurrentMediaInfo_();
            if (!f || !m)
                return !1;
            var k = m.isMuxed;
            return m.hasVideo && !f.videoTimingInfo || m.hasAudio && !this.audioDisabled_ && !k && !f.audioTimingInfo || $k({
                timelineChangeController: this.timelineChangeController_,
                currentTimeline: this.currentTimeline_,
                segmentTimeline: f.timeline,
                loaderType: this.loaderType_,
                audioDisabled: this.audioDisabled_
            }) ? !1 : !0
        }
        ;
        p.handleData_ = function(f, m) {
            this.earlyAbortWhenNeeded_(f.stats);
            if (!this.checkForAbort_(f.requestId))
                if (this.callQueue_.length || !this.hasEnoughInfoToAppend_())
                    this.callQueue_.push(this.handleData_.bind(this, f, m));
                else {
                    var k = this.pendingSegment_;
                    this.setTimeMapping_(k.timeline);
                    this.updateMediaSecondsLoaded_(k.part || k.segment);
                    if ("closed" !== this.mediaSource_.readyState) {
                        f.map && (f.map = this.initSegmentForMap(f.map, !0),
                        k.segment.map = f.map);
                        f.key && this.segmentKey(f.key, !0);
                        k.isFmp4 = f.isFmp4;
                        k.timingInfo = k.timingInfo || {};
                        if (k.isFmp4)
                            this.trigger("fmp4"),
                            k.timingInfo.start = k[m.type + "TimingInfo"].start;
                        else {
                            f = this.getCurrentMediaInfo_();
                            f = "main" === this.loaderType_ && f && f.hasVideo;
                            if (f)
                                var r = k.videoTimingInfo.start;
                            k.timingInfo.start = this.trueSegmentStart_({
                                currentStart: k.timingInfo.start,
                                playlist: k.playlist,
                                mediaIndex: k.mediaIndex,
                                currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),
                                useVideoTimingInfo: f,
                                firstVideoFrameTimeForData: r,
                                videoTimingInfo: k.videoTimingInfo,
                                audioTimingInfo: k.audioTimingInfo
                            })
                        }
                        this.updateAppendInitSegmentStatus(k, m.type);
                        this.updateSourceBufferTimestampOffset_(k);
                        if (k.isSyncRequest) {
                            this.updateTimingInfoEnd_(k);
                            this.syncController_.saveSegmentTimingInfo({
                                segmentInfo: k,
                                shouldSaveTimelineMapping: "main" === this.loaderType_
                            });
                            r = this.chooseNextRequest_();
                            if (r.mediaIndex !== k.mediaIndex || r.partIndex !== k.partIndex) {
                                this.logger_("sync segment was incorrect, not appending");
                                return
                            }
                            this.logger_("sync segment was correct, appending")
                        }
                        k.hasAppendedData_ = !0;
                        this.processMetadataQueue_();
                        this.appendData_(k, m)
                    }
                }
        }
        ;
        p.updateAppendInitSegmentStatus = function(f, m) {
            "main" !== this.loaderType_ || "number" !== typeof f.timestampOffset || f.changedTimestampOffset || (this.appendInitSegment_ = {
                audio: !0,
                video: !0
            });
            this.playlistOfLastInitSegment_[m] !== f.playlist && (this.appendInitSegment_[m] = !0)
        }
        ;
        p.getInitSegmentAndUpdateState_ = function(f) {
            var m = f.type
              , k = f.initSegment
              , r = f.map;
            f = f.playlist;
            if (r) {
                var u = xe(r);
                if (this.activeInitSegmentId_ === u)
                    return null;
                k = this.initSegmentForMap(r, !0).bytes;
                this.activeInitSegmentId_ = u
            }
            return k && this.appendInitSegment_[m] ? (this.playlistOfLastInitSegment_[m] = f,
            this.appendInitSegment_[m] = !1,
            this.activeInitSegmentId_ = null,
            k) : null
        }
        ;
        p.handleQuotaExceededError_ = function(f, m) {
            var k = this;
            m = f.segmentInfo;
            var r = f.type;
            f = f.bytes;
            var u = this.sourceUpdater_.audioBuffered()
              , t = this.sourceUpdater_.videoBuffered();
            1 < u.length && this.logger_("On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: " + pc(u).join(", "));
            1 < t.length && this.logger_("On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: " + pc(t).join(", "));
            var x = u.length ? u.start(0) : 0
              , F = u.length ? u.end(u.length - 1) : 0
              , K = t.length ? t.start(0) : 0
              , M = t.length ? t.end(t.length - 1) : 0;
            1 >= F - x && 1 >= M - K ? (this.logger_("On QUOTA_EXCEEDED_ERR, single segment too large to append to buffer, triggering an error. Appended byte length: " + (f.byteLength + ", audio buffer: ") + (pc(u).join(", ") + ", video buffer: ") + (pc(t).join(", ") + ", ")),
            this.error({
                message: "Quota exceeded error with append of a single segment of content",
                excludeUntil: Infinity
            }),
            this.trigger("error")) : (this.waitingOnRemove_ = !0,
            this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {
                segmentInfo: m,
                type: r,
                bytes: f
            })),
            m = this.currentTime_() - 1,
            this.logger_("On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to " + m),
            this.remove(0, m, function() {
                k.logger_("On QUOTA_EXCEEDED_ERR, retrying append in 1s");
                k.waitingOnRemove_ = !1;
                k.quotaExceededErrorRetryTimeout_ = window.setTimeout(function() {
                    k.logger_("On QUOTA_EXCEEDED_ERR, re-processing call queue");
                    k.quotaExceededErrorRetryTimeout_ = null;
                    k.processCallQueue_()
                }, 1E3)
            }, !0))
        }
        ;
        p.handleAppendError_ = function(f, m) {
            var k = f.segmentInfo
              , r = f.type;
            f = f.bytes;
            m && (22 === m.code ? this.handleQuotaExceededError_({
                segmentInfo: k,
                type: r,
                bytes: f
            }) : (this.logger_("Received non QUOTA_EXCEEDED_ERR on append", m),
            this.error(r + " append of " + f.length + "b failed for segment #" + (k.mediaIndex + " in playlist " + k.playlist.id)),
            this.trigger("appenderror")))
        }
        ;
        p.appendToSourceBuffer_ = function(f) {
            var m = f.segmentInfo
              , k = f.type
              , r = f.initSegment
              , u = f.data;
            f = f.bytes;
            f || (f = [u],
            u = u.byteLength,
            r && (f.unshift(r),
            u += r.byteLength),
            f = qp({
                bytes: u,
                segments: f
            }));
            this.sourceUpdater_.appendBuffer({
                segmentInfo: m,
                type: k,
                bytes: f
            }, this.handleAppendError_.bind(this, {
                segmentInfo: m,
                type: k,
                bytes: f
            }))
        }
        ;
        p.handleSegmentTimingInfo_ = function(f, m, k) {
            this.pendingSegment_ && m === this.pendingSegment_.requestId && (m = this.pendingSegment_.segment,
            f += "TimingInfo",
            m[f] || (m[f] = {}),
            m[f].transmuxerPrependedSeconds = k.prependedContentDuration || 0,
            m[f].transmuxedPresentationStart = k.start.presentation,
            m[f].transmuxedDecodeStart = k.start.decode,
            m[f].transmuxedPresentationEnd = k.end.presentation,
            m[f].transmuxedDecodeEnd = k.end.decode,
            m[f].baseMediaDecodeTime = k.baseMediaDecodeTime)
        }
        ;
        p.appendData_ = function(f, m) {
            var k = m.type
              , r = m.data;
            !r || !r.byteLength || "audio" === k && this.audioDisabled_ || (m = this.getInitSegmentAndUpdateState_({
                type: k,
                initSegment: m.initSegment,
                playlist: f.playlist,
                map: f.isFmp4 ? f.segment.map : null
            }),
            this.appendToSourceBuffer_({
                segmentInfo: f,
                type: k,
                initSegment: m,
                data: r
            }))
        }
        ;
        p.loadSegment_ = function(f) {
            var m = this;
            this.state = "WAITING";
            this.pendingSegment_ = f;
            this.trimBackBuffer_(f);
            "number" === typeof f.timestampOffset && this.transmuxer_ && this.transmuxer_.postMessage({
                action: "clearAllMp4Captions"
            });
            this.hasEnoughInfoToLoad_() ? this.updateTransmuxerAndRequestSegment_(f) : this.loadQueue_.push(function() {
                var k = Fb({}, f, {
                    forceTimestampOffset: !0
                });
                Fb(f, m.generateSegmentInfo_(k));
                m.isPendingTimestampOffset_ = !1;
                m.updateTransmuxerAndRequestSegment_(f)
            })
        }
        ;
        p.updateTransmuxerAndRequestSegment_ = function(f) {
            var m = this;
            this.shouldUpdateTransmuxerTimestampOffset_(f.timestampOffset) && (this.gopBuffer_.length = 0,
            f.gopsToAlignWith = [],
            this.timeMapping_ = 0,
            this.transmuxer_.postMessage({
                action: "reset"
            }),
            this.transmuxer_.postMessage({
                action: "setTimestampOffset",
                timestampOffset: f.timestampOffset
            }));
            var k = this.createSimplifiedSegmentObj_(f)
              , r = this.isEndOfStream_(f.mediaIndex, f.playlist, f.partIndex)
              , u = null !== this.mediaIndex
              , t = f.timeline !== this.currentTimeline_ && 0 < f.timeline;
            r = r || u && t;
            this.logger_("Requesting " + Xc(f));
            k.map && !k.map.bytes && (this.logger_("going to request init segment."),
            this.appendInitSegment_ = {
                video: !0,
                audio: !0
            });
            f.abortRequests = np({
                xhr: this.vhs_.xhr,
                xhrOptions: this.xhrOptions_,
                decryptionWorker: this.decrypter_,
                segment: k,
                abortFn: this.handleAbort_.bind(this, f),
                progressFn: this.handleProgress_.bind(this),
                trackInfoFn: this.handleTrackInfo_.bind(this),
                timingInfoFn: this.handleTimingInfo_.bind(this),
                videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, "video", f.requestId),
                audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, "audio", f.requestId),
                captionsFn: this.handleCaptions_.bind(this),
                isEndOfTimeline: r,
                endedTimelineFn: function() {
                    m.logger_("received endedtimeline callback")
                },
                id3Fn: this.handleId3_.bind(this),
                dataFn: this.handleData_.bind(this),
                doneFn: this.segmentRequestFinished_.bind(this),
                onTransmuxerLog: function(x) {
                    var F = x.message
                      , K = x.level;
                    x = x.stream;
                    m.logger_(Xc(f) + " logged from transmuxer stream " + x + " as a " + K + ": " + F)
                }
            })
        }
        ;
        p.trimBackBuffer_ = function(f) {
            f = this.seekable_();
            var m = this.currentTime_()
              , k = this.playlist_.targetDuration || 10
              , r = m - Ua.BACK_BUFFER_LENGTH;
            f.length && (r = Math.max(r, f.start(0)));
            f = Math.min(m - k, r);
            0 < f && this.remove(0, f)
        }
        ;
        p.createSimplifiedSegmentObj_ = function(f) {
            var m = f.segment
              , k = f.part;
            k = {
                resolvedUri: k ? k.resolvedUri : m.resolvedUri,
                byterange: k ? k.byterange : m.byterange,
                requestId: f.requestId,
                transmuxer: f.transmuxer,
                audioAppendStart: f.audioAppendStart,
                gopsToAlignWith: f.gopsToAlignWith,
                part: f.part
            };
            var r = f.playlist.segments[f.mediaIndex - 1];
            r && r.timeline === m.timeline && (r.videoTimingInfo ? k.baseStartTime = r.videoTimingInfo.transmuxedDecodeEnd : r.audioTimingInfo && (k.baseStartTime = r.audioTimingInfo.transmuxedDecodeEnd));
            m.key && (f = m.key.iv || new Uint32Array([0, 0, 0, f.mediaIndex + f.playlist.mediaSequence]),
            k.key = this.segmentKey(m.key),
            k.key.iv = f);
            m.map && (k.map = this.initSegmentForMap(m.map));
            return k
        }
        ;
        p.saveTransferStats_ = function(f) {
            this.mediaRequests += 1;
            f && (this.mediaBytesTransferred += f.bytesReceived,
            this.mediaTransferDuration += f.roundTripTime)
        }
        ;
        p.saveBandwidthRelatedStats_ = function(f, m) {
            this.pendingSegment_.byteLength = m.bytesReceived;
            f < Ne ? this.logger_("Ignoring segment's bandwidth because its duration of " + f + (" is less than the min to record " + Ne)) : (this.bandwidth = m.bandwidth,
            this.roundTrip = m.roundTripTime)
        }
        ;
        p.handleTimeout_ = function() {
            this.mediaRequestsTimedout += 1;
            this.bandwidth = 1;
            this.roundTrip = NaN;
            this.trigger("bandwidthupdate")
        }
        ;
        p.segmentRequestFinished_ = function(f, m, k) {
            if (this.callQueue_.length)
                this.callQueue_.push(this.segmentRequestFinished_.bind(this, f, m, k));
            else if (this.saveTransferStats_(m.stats),
            this.pendingSegment_ && m.requestId === this.pendingSegment_.requestId)
                if (f)
                    this.pendingSegment_ = null,
                    this.state = "READY",
                    -102 !== f.code && (this.pause(),
                    -101 === f.code ? this.handleTimeout_() : (this.mediaRequestsErrored += 1,
                    this.error(f),
                    this.trigger("error")));
                else {
                    f = this.pendingSegment_;
                    this.saveBandwidthRelatedStats_(f.duration, m.stats);
                    f.endOfAllRequests = m.endOfAllRequests;
                    if (k.gopInfo) {
                        m = this.gopBuffer_;
                        k = k.gopInfo;
                        if (k.length)
                            if (this.safeAppend_)
                                m = k.slice();
                            else {
                                var r = k[0].pts
                                  , u = 0;
                                for (u; u < m.length && !(m[u].pts >= r); u++)
                                    ;
                                m = m.slice(0, u).concat(k)
                            }
                        this.gopBuffer_ = m
                    }
                    this.state = "APPENDING";
                    this.trigger("appending");
                    this.waitForAppendsToComplete_(f)
                }
        }
        ;
        p.setTimeMapping_ = function(f) {
            f = this.syncController_.mappingForTimeline(f);
            null !== f && (this.timeMapping_ = f)
        }
        ;
        p.updateMediaSecondsLoaded_ = function(f) {
            this.mediaSecondsLoaded = "number" === typeof f.start && "number" === typeof f.end ? this.mediaSecondsLoaded + (f.end - f.start) : this.mediaSecondsLoaded + f.duration
        }
        ;
        p.shouldUpdateTransmuxerTimestampOffset_ = function(f) {
            return null === f ? !1 : "main" === this.loaderType_ && f !== this.sourceUpdater_.videoTimestampOffset() || !this.audioDisabled_ && f !== this.sourceUpdater_.audioTimestampOffset() ? !0 : !1
        }
        ;
        p.trueSegmentStart_ = function(f) {
            var m = f.currentStart
              , k = f.mediaIndex
              , r = f.firstVideoFrameTimeForData
              , u = f.currentVideoTimestampOffset
              , t = f.audioTimingInfo;
            if ("undefined" !== typeof m)
                return m;
            if (!f.useVideoTimingInfo)
                return t.start;
            m = f.playlist.segments[k - 1];
            return 0 !== k && m && "undefined" !== typeof m.start && m.end === r + u ? f.videoTimingInfo.start : r
        }
        ;
        p.waitForAppendsToComplete_ = function(f) {
            var m = this.getCurrentMediaInfo_(f);
            if (m) {
                var k = m.hasAudio
                  , r = m.hasVideo;
                m = m.isMuxed;
                r = "main" === this.loaderType_ && r;
                k = !this.audioDisabled_ && k && !m;
                f.waitingOnAppends = 0;
                f.hasAppendedData_ ? (r && f.waitingOnAppends++,
                k && f.waitingOnAppends++,
                r && this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, f)),
                k && this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, f))) : (f.timingInfo || "number" !== typeof f.timestampOffset || (this.isPendingTimestampOffset_ = !0),
                f.timingInfo = {
                    start: 0
                },
                f.waitingOnAppends++,
                this.isPendingTimestampOffset_ || (this.updateSourceBufferTimestampOffset_(f),
                this.processMetadataQueue_()),
                this.checkAppendsDone_(f))
            } else
                this.error({
                    message: "No starting media returned, likely due to an unsupported media format.",
                    blacklistDuration: Infinity
                }),
                this.trigger("error")
        }
        ;
        p.checkAppendsDone_ = function(f) {
            this.checkForAbort_(f.requestId) || (f.waitingOnAppends--,
            0 === f.waitingOnAppends && this.handleAppendsDone_())
        }
        ;
        p.checkForIllegalMediaSwitch = function(f) {
            var m = this.getCurrentMediaInfo_();
            return (f = "main" === this.loaderType_ && m && f ? f.hasAudio || f.hasVideo ? m.hasVideo && !f.hasVideo ? "Only audio found in segment when we expected video. We can't switch to audio only from a stream that had video. To get rid of this message, please add codec information to the manifest." : !m.hasVideo && f.hasVideo ? "Video found in segment when we expected only audio. We can't switch to a stream with video from an audio only stream. To get rid of this message, please add codec information to the manifest." : null : "Neither audio nor video found in segment." : null) ? (this.error({
                message: f,
                blacklistDuration: Infinity
            }),
            this.trigger("error"),
            !0) : !1
        }
        ;
        p.updateSourceBufferTimestampOffset_ = function(f) {
            if (null !== f.timestampOffset && "number" === typeof f.timingInfo.start && !f.changedTimestampOffset && "main" === this.loaderType_) {
                var m = !1;
                f.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({
                    videoTimingInfo: f.segment.videoTimingInfo,
                    audioTimingInfo: f.segment.audioTimingInfo,
                    timingInfo: f.timingInfo
                });
                f.changedTimestampOffset = !0;
                f.timestampOffset !== this.sourceUpdater_.videoTimestampOffset() && (this.sourceUpdater_.videoTimestampOffset(f.timestampOffset),
                m = !0);
                f.timestampOffset !== this.sourceUpdater_.audioTimestampOffset() && (this.sourceUpdater_.audioTimestampOffset(f.timestampOffset),
                m = !0);
                m && this.trigger("timestampoffset")
            }
        }
        ;
        p.getSegmentStartTimeForTimestampOffsetCalculation_ = function(f) {
            var m = f.videoTimingInfo
              , k = f.audioTimingInfo;
            f = f.timingInfo;
            return this.useDtsForTimestampOffset_ ? m && "number" === typeof m.transmuxedDecodeStart ? m.transmuxedDecodeStart : k && "number" === typeof k.transmuxedDecodeStart ? k.transmuxedDecodeStart : f.start : f.start
        }
        ;
        p.updateTimingInfoEnd_ = function(f) {
            f.timingInfo = f.timingInfo || {};
            var m = this.getMediaInfo_();
            if (m = "main" === this.loaderType_ && m && m.hasVideo && f.videoTimingInfo ? f.videoTimingInfo : f.audioTimingInfo)
                f.timingInfo.end = "number" === typeof m.end ? m.end : m.start + f.duration
        }
        ;
        p.handleAppendsDone_ = function() {
            this.pendingSegment_ && this.trigger("appendsdone");
            if (this.pendingSegment_) {
                var f = this.pendingSegment_;
                this.updateTimingInfoEnd_(f);
                this.shouldSaveSegmentTimingInfo_ && this.syncController_.saveSegmentTimingInfo({
                    segmentInfo: f,
                    shouldSaveTimelineMapping: "main" === this.loaderType_
                });
                if ("hls" !== this.sourceType_)
                    var m = null;
                else {
                    var k = xp({
                        audioTimingInfo: f.audioTimingInfo,
                        videoTimingInfo: f.videoTimingInfo
                    });
                    if (k) {
                        var r = f.playlist.targetDuration;
                        m = al({
                            segmentDuration: k,
                            maxDuration: 2 * r
                        });
                        var u = al({
                            segmentDuration: k,
                            maxDuration: r
                        });
                        k = "Segment with index " + f.mediaIndex + " from playlist " + (f.playlist.id + " has a duration of ") + (k + " when the reported duration is ") + (f.duration + " and the target duration is ") + (r + ". For HLS content, a duration in excess of the target duration may result in playback issues. See the HLS specification section on EXT-X-TARGETDURATION for more details: https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1");
                        m = m || u ? {
                            severity: m ? "warn" : "info",
                            message: k
                        } : null
                    } else
                        m = null
                }
                m && ("warn" === m.severity ? N.log.warn(m.message) : this.logger_(m.message));
                this.recordThroughput_(f);
                this.pendingSegment_ = null;
                this.state = "READY";
                if (f.isSyncRequest && (this.trigger("syncinfoupdate"),
                !f.hasAppendedData_)) {
                    this.logger_("Throwing away un-appended sync request " + Xc(f));
                    return
                }
                this.logger_("Appended " + Xc(f));
                this.addSegmentMetadataCue_(f);
                this.fetchAtBuffer_ = !0;
                this.currentTimeline_ !== f.timeline && (this.timelineChangeController_.lastTimelineChange({
                    type: this.loaderType_,
                    from: this.currentTimeline_,
                    to: f.timeline
                }),
                "main" !== this.loaderType_ || this.audioDisabled_ || this.timelineChangeController_.lastTimelineChange({
                    type: "audio",
                    from: this.currentTimeline_,
                    to: f.timeline
                }));
                this.currentTimeline_ = f.timeline;
                this.trigger("syncinfoupdate");
                u = f.segment;
                m = f.part;
                u = u.end && this.currentTime_() - u.end > 3 * f.playlist.targetDuration;
                m = m && m.end && this.currentTime_() - m.end > 3 * f.playlist.partTargetDuration;
                u || m ? (this.logger_("bad " + (u ? "segment" : "part") + " " + Xc(f)),
                this.resetEverything()) : (null !== this.mediaIndex && this.trigger("bandwidthupdate"),
                this.trigger("progress"),
                this.mediaIndex = f.mediaIndex,
                this.partIndex = f.partIndex,
                this.isEndOfStream_(f.mediaIndex, f.playlist, f.partIndex) && this.endOfStream(),
                this.trigger("appended"),
                f.hasAppendedData_ && this.mediaAppends++,
                this.paused() || this.monitorBuffer_())
            } else
                this.state = "READY",
                this.paused() || this.monitorBuffer_()
        }
        ;
        p.recordThroughput_ = function(f) {
            if (f.duration < Ne)
                this.logger_("Ignoring segment's throughput because its duration of " + f.duration + (" is less than the min to record " + Ne));
            else {
                var m = this.throughput.rate
                  , k = Date.now() - f.endOfAllRequests + 1;
                this.throughput.rate += (Math.floor(f.byteLength / k * 8E3) - m) / ++this.throughput.count
            }
        }
        ;
        p.addSegmentMetadataCue_ = function(f) {
            if (this.segmentMetadataTrack_) {
                var m = f.segment
                  , k = m.start
                  , r = m.end;
                if ("number" === typeof k && isFinite(k) && "number" === typeof r && isFinite(r)) {
                    Gd(k, r, this.segmentMetadataTrack_);
                    var u = window.WebKitDataCue || window.VTTCue;
                    f = {
                        custom: m.custom,
                        dateTimeObject: m.dateTimeObject,
                        dateTimeString: m.dateTimeString,
                        bandwidth: f.playlist.attributes.BANDWIDTH,
                        resolution: f.playlist.attributes.RESOLUTION,
                        codecs: f.playlist.attributes.CODECS,
                        byteLength: f.byteLength,
                        uri: f.uri,
                        timeline: f.timeline,
                        playlist: f.playlist.id,
                        start: k,
                        end: r
                    };
                    m = JSON.stringify(f);
                    k = new u(k,r,m);
                    k.value = f;
                    this.segmentMetadataTrack_.addCue(k)
                }
            }
        }
        ;
        return q
    }(N.EventTarget), bl = function(g) {
        return "string" !== typeof g ? g : g.replace(/./, function(q) {
            return q.toUpperCase()
        })
    }, yp = ["video", "audio"], Wg = function(g, q) {
        var p = q[g + "Buffer"];
        return p && p.updating || q.queuePending[g]
    }, Xg = function f(q, p) {
        if (0 !== p.queue.length) {
            var m = 0
              , k = p.queue[m];
            if ("mediaSource" === k.type)
                p.updating() || "closed" === p.mediaSource.readyState || (p.queue.shift(),
                k.action(p),
                k.doneFn && k.doneFn(),
                f("audio", p),
                f("video", p));
            else if ("mediaSource" !== q && p.ready() && "closed" !== p.mediaSource.readyState && !Wg(q, p)) {
                if (k.type !== q) {
                    a: {
                        m = p.queue;
                        for (k = 0; k < m.length; k++) {
                            var r = m[k];
                            if ("mediaSource" === r.type) {
                                m = null;
                                break a
                            }
                            if (r.type === q) {
                                m = k;
                                break a
                            }
                        }
                        m = null
                    }
                    if (null === m)
                        return;
                    k = p.queue[m]
                }
                p.queue.splice(m, 1);
                p.queuePending[q] = k;
                k.action(q, p);
                k.doneFn || (p.queuePending[q] = null,
                f(q, p))
            }
        }
    }, cl = function(q, p) {
        var f = p[q + "Buffer"]
          , m = bl(q);
        f && (f.removeEventListener("updateend", p["on" + m + "UpdateEnd_"]),
        f.removeEventListener("error", p["on" + m + "Error_"]),
        p.codecs[q] = null,
        p[q + "Buffer"] = null)
    }, Lb = function(q, p) {
        return q && p && -1 !== Array.prototype.indexOf.call(q.sourceBuffers, p)
    }, tb = {
        appendBuffer: function(q, p, f) {
            return function(m, k) {
                var r = k[m + "Buffer"];
                if (Lb(k.mediaSource, r)) {
                    k.logger_("Appending segment " + p.mediaIndex + "'s " + q.length + " bytes to " + m + "Buffer");
                    try {
                        r.appendBuffer(q)
                    } catch (u) {
                        k.logger_("Error with code " + u.code + " " + (22 === u.code ? "(QUOTA_EXCEEDED_ERR) " : "") + ("when appending segment " + p.mediaIndex + " to " + m + "Buffer")),
                        k.queuePending[m] = null,
                        f(u)
                    }
                }
            }
        },
        remove: function(q, p) {
            return function(f, m) {
                var k = m[f + "Buffer"];
                if (Lb(m.mediaSource, k)) {
                    m.logger_("Removing " + q + " to " + p + " from " + f + "Buffer");
                    try {
                        k.remove(q, p)
                    } catch (r) {
                        m.logger_("Remove " + q + " to " + p + " from " + f + "Buffer failed")
                    }
                }
            }
        },
        timestampOffset: function(q) {
            return function(p, f) {
                var m = f[p + "Buffer"];
                Lb(f.mediaSource, m) && (f.logger_("Setting " + p + "timestampOffset to " + q),
                m.timestampOffset = q)
            }
        },
        callback: function(q) {
            return function(p, f) {
                q()
            }
        },
        endOfStream: function(q) {
            return function(p) {
                if ("open" === p.mediaSource.readyState) {
                    p.logger_("Calling mediaSource endOfStream(" + (q || "") + ")");
                    try {
                        p.mediaSource.endOfStream(q)
                    } catch (f) {
                        N.log.warn("Failed to call media source endOfStream", f)
                    }
                }
            }
        },
        duration: function(q) {
            return function(p) {
                p.logger_("Setting mediaSource duration to " + q);
                try {
                    p.mediaSource.duration = q
                } catch (f) {
                    N.log.warn("Failed to set media source duration", f)
                }
            }
        },
        abort: function() {
            return function(q, p) {
                if ("open" === p.mediaSource.readyState) {
                    var f = p[q + "Buffer"];
                    if (Lb(p.mediaSource, f)) {
                        p.logger_("calling abort on " + q + "Buffer");
                        try {
                            f.abort()
                        } catch (m) {
                            N.log.warn("Failed to abort on " + q + "Buffer", m)
                        }
                    }
                }
            }
        },
        addSourceBuffer: function(q, p) {
            return function(f) {
                var m = bl(q)
                  , k = sd(p);
                f.logger_("Adding " + q + "Buffer with codec " + p + " to mediaSource");
                k = f.mediaSource.addSourceBuffer(k);
                k.addEventListener("updateend", f["on" + m + "UpdateEnd_"]);
                k.addEventListener("error", f["on" + m + "Error_"]);
                f.codecs[q] = p;
                f[q + "Buffer"] = k
            }
        },
        removeSourceBuffer: function(q) {
            return function(p) {
                var f = p[q + "Buffer"];
                cl(q, p);
                if (Lb(p.mediaSource, f)) {
                    p.logger_("Removing " + q + "Buffer with codec " + p.codecs[q] + " from mediaSource");
                    try {
                        p.mediaSource.removeSourceBuffer(f)
                    } catch (m) {
                        N.log.warn("Failed to removeSourceBuffer " + q + "Buffer", m)
                    }
                }
            }
        },
        changeType: function(q) {
            return function(p, f) {
                var m = f[p + "Buffer"]
                  , k = sd(q);
                Lb(f.mediaSource, m) && f.codecs[p] !== q && (f.logger_("changing " + p + "Buffer codec from " + f.codecs[p] + " to " + q),
                m.changeType(k),
                f.codecs[p] = q)
            }
        }
    }, ub = function(q) {
        var p = q.type
          , f = q.sourceUpdater;
        f.queue.push({
            type: p,
            action: q.action,
            doneFn: q.doneFn,
            name: q.name
        });
        Xg(p, f)
    }, dl = function(q, p) {
        return function(f) {
            p.queuePending[q] && (f = p.queuePending[q].doneFn,
            p.queuePending[q] = null,
            f && f(p[q + "Error_"]));
            Xg(q, p)
        }
    }, el = function(q) {
        function p(m) {
            var k = q.call(this) || this;
            k.mediaSource = m;
            k.sourceopenListener_ = function() {
                return Xg("mediaSource", sa(k))
            }
            ;
            k.mediaSource.addEventListener("sourceopen", k.sourceopenListener_);
            k.logger_ = Db("SourceUpdater");
            k.audioTimestampOffset_ = 0;
            k.videoTimestampOffset_ = 0;
            k.queue = [];
            k.queuePending = {
                audio: null,
                video: null
            };
            k.delayedAudioAppendQueue_ = [];
            k.videoAppendQueued_ = !1;
            k.codecs = {};
            k.onVideoUpdateEnd_ = dl("video", sa(k));
            k.onAudioUpdateEnd_ = dl("audio", sa(k));
            k.onVideoError_ = function(r) {
                k.videoError_ = r
            }
            ;
            k.onAudioError_ = function(r) {
                k.audioError_ = r
            }
            ;
            k.createdSourceBuffers_ = !1;
            k.initializedEme_ = !1;
            k.triggeredReady_ = !1;
            return k
        }
        ia(p, q);
        var f = p.prototype;
        f.initializedEme = function() {
            this.initializedEme_ = !0;
            this.triggerReady()
        }
        ;
        f.hasCreatedSourceBuffers = function() {
            return this.createdSourceBuffers_
        }
        ;
        f.hasInitializedAnyEme = function() {
            return this.initializedEme_
        }
        ;
        f.ready = function() {
            return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme()
        }
        ;
        f.createSourceBuffers = function(m) {
            this.hasCreatedSourceBuffers() || (this.addOrChangeSourceBuffers(m),
            this.createdSourceBuffers_ = !0,
            this.trigger("createdsourcebuffers"),
            this.triggerReady())
        }
        ;
        f.triggerReady = function() {
            this.ready() && !this.triggeredReady_ && (this.triggeredReady_ = !0,
            this.trigger("ready"))
        }
        ;
        f.addSourceBuffer = function(m, k) {
            ub({
                type: "mediaSource",
                sourceUpdater: this,
                action: tb.addSourceBuffer(m, k),
                name: "addSourceBuffer"
            })
        }
        ;
        f.abort = function(m) {
            ub({
                type: m,
                sourceUpdater: this,
                action: tb.abort(m),
                name: "abort"
            })
        }
        ;
        f.removeSourceBuffer = function(m) {
            this.canRemoveSourceBuffer() ? ub({
                type: "mediaSource",
                sourceUpdater: this,
                action: tb.removeSourceBuffer(m),
                name: "removeSourceBuffer"
            }) : N.log.error("removeSourceBuffer is not supported!")
        }
        ;
        f.canRemoveSourceBuffer = function() {
            return !N.browser.IE_VERSION && !N.browser.IS_FIREFOX && window.MediaSource && window.MediaSource.prototype && "function" === typeof window.MediaSource.prototype.removeSourceBuffer
        }
        ;
        p.canChangeType = function() {
            return window.SourceBuffer && window.SourceBuffer.prototype && "function" === typeof window.SourceBuffer.prototype.changeType
        }
        ;
        f.canChangeType = function() {
            return this.constructor.canChangeType()
        }
        ;
        f.changeType = function(m, k) {
            this.canChangeType() ? ub({
                type: m,
                sourceUpdater: this,
                action: tb.changeType(k),
                name: "changeType"
            }) : N.log.error("changeType is not supported!")
        }
        ;
        f.addOrChangeSourceBuffers = function(m) {
            var k = this;
            if (!m || "object" !== typeof m || 0 === Object.keys(m).length)
                throw Error("Cannot addOrChangeSourceBuffers to undefined codecs");
            Object.keys(m).forEach(function(r) {
                var u = m[r];
                if (!k.hasCreatedSourceBuffers())
                    return k.addSourceBuffer(r, u);
                k.canChangeType() && k.changeType(r, u)
            })
        }
        ;
        f.appendBuffer = function(m, k) {
            var r = this
              , u = m.segmentInfo
              , t = m.type
              , x = m.bytes;
            this.processedAppend_ = !0;
            "audio" === t && this.videoBuffer && !this.videoAppendQueued_ ? (this.delayedAudioAppendQueue_.push([m, k]),
            this.logger_("delayed audio append of " + x.length + " until video append")) : (ub({
                type: t,
                sourceUpdater: this,
                action: tb.appendBuffer(x, u || {
                    mediaIndex: -1
                }, k),
                doneFn: k,
                name: "appendBuffer"
            }),
            "video" === t && (this.videoAppendQueued_ = !0,
            this.delayedAudioAppendQueue_.length && (m = this.delayedAudioAppendQueue_.slice(),
            this.logger_("queuing delayed audio " + m.length + " appendBuffers"),
            this.delayedAudioAppendQueue_.length = 0,
            m.forEach(function(F) {
                r.appendBuffer.apply(r, F)
            }))))
        }
        ;
        f.audioBuffered = function() {
            return Lb(this.mediaSource, this.audioBuffer) ? this.audioBuffer.buffered ? this.audioBuffer.buffered : N.createTimeRange() : N.createTimeRange()
        }
        ;
        f.videoBuffered = function() {
            return Lb(this.mediaSource, this.videoBuffer) ? this.videoBuffer.buffered ? this.videoBuffer.buffered : N.createTimeRange() : N.createTimeRange()
        }
        ;
        f.buffered = function() {
            var m = Lb(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null
              , k = Lb(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;
            return k && !m ? this.audioBuffered() : m && !k ? this.videoBuffered() : bo(this.audioBuffered(), this.videoBuffered())
        }
        ;
        f.setDuration = function(m, k) {
            void 0 === k && (k = Rb);
            ub({
                type: "mediaSource",
                sourceUpdater: this,
                action: tb.duration(m),
                name: "duration",
                doneFn: k
            })
        }
        ;
        f.endOfStream = function(m, k) {
            void 0 === m && (m = null);
            void 0 === k && (k = Rb);
            "string" !== typeof m && (m = void 0);
            ub({
                type: "mediaSource",
                sourceUpdater: this,
                action: tb.endOfStream(m),
                name: "endOfStream",
                doneFn: k
            })
        }
        ;
        f.removeAudio = function(m, k, r) {
            void 0 === r && (r = Rb);
            this.audioBuffered().length && 0 !== this.audioBuffered().end(0) ? ub({
                type: "audio",
                sourceUpdater: this,
                action: tb.remove(m, k),
                doneFn: r,
                name: "remove"
            }) : r()
        }
        ;
        f.removeVideo = function(m, k, r) {
            void 0 === r && (r = Rb);
            this.videoBuffered().length && 0 !== this.videoBuffered().end(0) ? ub({
                type: "video",
                sourceUpdater: this,
                action: tb.remove(m, k),
                doneFn: r,
                name: "remove"
            }) : r()
        }
        ;
        f.updating = function() {
            return Wg("audio", this) || Wg("video", this) ? !0 : !1
        }
        ;
        f.audioTimestampOffset = function(m) {
            "undefined" !== typeof m && this.audioBuffer && this.audioTimestampOffset_ !== m && (ub({
                type: "audio",
                sourceUpdater: this,
                action: tb.timestampOffset(m),
                name: "timestampOffset"
            }),
            this.audioTimestampOffset_ = m);
            return this.audioTimestampOffset_
        }
        ;
        f.videoTimestampOffset = function(m) {
            "undefined" !== typeof m && this.videoBuffer && this.videoTimestampOffset !== m && (ub({
                type: "video",
                sourceUpdater: this,
                action: tb.timestampOffset(m),
                name: "timestampOffset"
            }),
            this.videoTimestampOffset_ = m);
            return this.videoTimestampOffset_
        }
        ;
        f.audioQueueCallback = function(m) {
            this.audioBuffer && ub({
                type: "audio",
                sourceUpdater: this,
                action: tb.callback(m),
                name: "callback"
            })
        }
        ;
        f.videoQueueCallback = function(m) {
            this.videoBuffer && ub({
                type: "video",
                sourceUpdater: this,
                action: tb.callback(m),
                name: "callback"
            })
        }
        ;
        f.dispose = function() {
            var m = this;
            this.trigger("dispose");
            yp.forEach(function(k) {
                m.abort(k);
                if (m.canRemoveSourceBuffer())
                    m.removeSourceBuffer(k);
                else
                    m[k + "QueueCallback"](function() {
                        return cl(k, m)
                    })
            });
            this.videoAppendQueued_ = !1;
            this.delayedAudioAppendQueue_.length = 0;
            this.sourceopenListener_ && this.mediaSource.removeEventListener("sourceopen", this.sourceopenListener_);
            this.off()
        }
        ;
        return p
    }(N.EventTarget), fl = new Uint8Array(["\n", "\n"].map(function(q) {
        return q.charCodeAt(0)
    })), zp = function(q) {
        function p(m, k) {
            void 0 === k && (k = {});
            k = q.call(this, m, k) || this;
            k.mediaSource_ = null;
            k.subtitlesTrack_ = null;
            k.loaderType_ = "subtitle";
            k.featuresNativeTextTracks_ = m.featuresNativeTextTracks;
            k.shouldSaveSegmentTimingInfo_ = !1;
            return k
        }
        ia(p, q);
        var f = p.prototype;
        f.createTransmuxer_ = function() {
            return null
        }
        ;
        f.buffered_ = function() {
            if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length)
                return N.createTimeRanges();
            var m = this.subtitlesTrack_.cues;
            return N.createTimeRanges([[m[0].startTime, m[m.length - 1].startTime]])
        }
        ;
        f.initSegmentForMap = function(m, k) {
            void 0 === k && (k = !1);
            if (!m)
                return null;
            var r = xe(m)
              , u = this.initSegments_[r];
            k && !u && m.bytes && (k = new Uint8Array(fl.byteLength + m.bytes.byteLength),
            k.set(m.bytes),
            k.set(fl, m.bytes.byteLength),
            this.initSegments_[r] = u = {
                resolvedUri: m.resolvedUri,
                byterange: m.byterange,
                bytes: k
            });
            return u || m
        }
        ;
        f.couldBeginLoading_ = function() {
            return this.playlist_ && this.subtitlesTrack_ && !this.paused()
        }
        ;
        f.init_ = function() {
            this.state = "READY";
            this.resetEverything();
            return this.monitorBuffer_()
        }
        ;
        f.track = function(m) {
            if ("undefined" === typeof m)
                return this.subtitlesTrack_;
            this.subtitlesTrack_ = m;
            "INIT" === this.state && this.couldBeginLoading_() && this.init_();
            return this.subtitlesTrack_
        }
        ;
        f.remove = function(m, k) {
            Gd(m, k, this.subtitlesTrack_)
        }
        ;
        f.fillBuffer_ = function() {
            var m = this
              , k = this.chooseNextRequest_();
            k && (null === this.syncController_.timestampOffsetForTimeline(k.timeline) ? (this.syncController_.one("timestampoffset", function() {
                m.state = "READY";
                m.paused() || m.monitorBuffer_()
            }),
            this.state = "WAITING_ON_TIMELINE") : this.loadSegment_(k))
        }
        ;
        f.timestampOffsetForSegment_ = function() {
            return null
        }
        ;
        f.chooseNextRequest_ = function() {
            return this.skipEmptySegments_(q.prototype.chooseNextRequest_.call(this))
        }
        ;
        f.skipEmptySegments_ = function(m) {
            for (; m && m.segment.empty; ) {
                if (m.mediaIndex + 1 >= m.playlist.segments.length) {
                    m = null;
                    break
                }
                m = this.generateSegmentInfo_({
                    playlist: m.playlist,
                    mediaIndex: m.mediaIndex + 1,
                    startOfSegment: m.startOfSegment + m.duration,
                    isSyncRequest: m.isSyncRequest
                })
            }
            return m
        }
        ;
        f.stopForError = function(m) {
            this.error(m);
            this.state = "READY";
            this.pause();
            this.trigger("error")
        }
        ;
        f.segmentRequestFinished_ = function(m, k, r) {
            var u = this;
            if (this.subtitlesTrack_)
                if (this.saveTransferStats_(k.stats),
                this.pendingSegment_)
                    if (m)
                        -101 === m.code && this.handleTimeout_(),
                        -102 === m.code ? this.mediaRequestsAborted += 1 : this.mediaRequestsErrored += 1,
                        this.stopForError(m);
                    else {
                        var t = this.pendingSegment_;
                        this.saveBandwidthRelatedStats_(t.duration, k.stats);
                        k.key && this.segmentKey(k.key, !0);
                        this.state = "APPENDING";
                        this.trigger("appending");
                        var x = t.segment;
                        x.map && (x.map.bytes = k.map.bytes);
                        t.bytes = k.bytes;
                        if ("function" !== typeof window.WebVTT && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {
                            var F = function() {
                                u.subtitlesTrack_.tech_.off("vttjsloaded", K);
                                u.stopForError({
                                    message: "Error loading vtt.js"
                                })
                            };
                            var K = function() {
                                u.subtitlesTrack_.tech_.off("vttjserror", F);
                                u.segmentRequestFinished_(m, k, r)
                            };
                            this.state = "WAITING_ON_VTTJS";
                            this.subtitlesTrack_.tech_.one("vttjsloaded", K);
                            this.subtitlesTrack_.tech_.one("vttjserror", F)
                        } else {
                            x.requested = !0;
                            try {
                                this.parseVTTCues_(t)
                            } catch (M) {
                                this.stopForError({
                                    message: M.message
                                });
                                return
                            }
                            this.updateTimeMapping_(t, this.syncController_.timelines[t.timeline], this.playlist_);
                            t.timingInfo = t.cues.length ? {
                                start: t.cues[0].startTime,
                                end: t.cues[t.cues.length - 1].endTime
                            } : {
                                start: t.startOfSegment,
                                end: t.startOfSegment + t.duration
                            };
                            t.isSyncRequest ? (this.trigger("syncinfoupdate"),
                            this.pendingSegment_ = null,
                            this.state = "READY") : (t.byteLength = t.bytes.byteLength,
                            this.mediaSecondsLoaded += x.duration,
                            t.cues.forEach(function(M) {
                                u.subtitlesTrack_.addCue(u.featuresNativeTextTracks_ ? new window.VTTCue(M.startTime,M.endTime,M.text) : M)
                            }),
                            up(this.subtitlesTrack_),
                            this.handleAppendsDone_())
                        }
                    }
                else
                    this.state = "READY",
                    this.mediaRequestsAborted += 1;
            else
                this.state = "READY"
        }
        ;
        f.handleData_ = function() {}
        ;
        f.updateTimingInfoEnd_ = function() {}
        ;
        f.parseVTTCues_ = function(m) {
            var k = !1;
            if ("function" === typeof window.TextDecoder)
                var r = new window.TextDecoder("utf8");
            else
                r = window.WebVTT.StringDecoder(),
                k = !0;
            r = new window.WebVTT.Parser(window,window.vttjs,r);
            m.cues = [];
            m.timestampmap = {
                MPEGTS: 0,
                LOCAL: 0
            };
            r.oncue = m.cues.push.bind(m.cues);
            r.ontimestampmap = function(t) {
                m.timestampmap = t
            }
            ;
            r.onparsingerror = function(t) {
                N.log.warn("Error encountered when parsing cues: " + t.message)
            }
            ;
            if (m.segment.map) {
                var u = m.segment.map.bytes;
                k && (u = decodeURIComponent(escape(String.fromCharCode.apply(null, u))));
                r.parse(u)
            }
            u = m.bytes;
            k && (u = decodeURIComponent(escape(String.fromCharCode.apply(null, u))));
            r.parse(u);
            r.flush()
        }
        ;
        f.updateTimeMapping_ = function(m, k, r) {
            var u = m.segment;
            if (k)
                if (m.cues.length) {
                    var t = m.timestampmap
                      , x = t.MPEGTS / 9E4 - t.LOCAL + k.mapping;
                    m.cues.forEach(function(F) {
                        F.startTime += x;
                        F.endTime += x
                    });
                    r.syncInfo || (r.syncInfo = {
                        mediaSequence: r.mediaSequence + m.mediaIndex,
                        time: Math.min(m.cues[0].startTime, m.cues[m.cues.length - 1].startTime - u.duration)
                    })
                } else
                    u.empty = !0
        }
        ;
        return p
    }(Vg), gl = [{
        name: "VOD",
        run: function(q, p, f, m, k) {
            return Infinity !== f ? {
                time: 0,
                segmentIndex: 0,
                partIndex: null
            } : null
        }
    }, {
        name: "ProgramDateTime",
        run: function(q, p, f, m, k) {
            if (!Object.keys(q.timelineToDatetimeMappings).length)
                return null;
            m = f = null;
            var r = vg(p);
            k = k || 0;
            for (var u = 0; u < r.length; u++) {
                var t = r[p.endList || 0 === k ? u : r.length - (u + 1)]
                  , x = t.segment
                  , F = q.timelineToDatetimeMappings[x.timeline];
                if (F && x.dateTimeObject) {
                    F = x.dateTimeObject.getTime() / 1E3 + F;
                    if (x.parts && "number" === typeof t.partIndex)
                        for (var K = 0; K < t.partIndex; K++)
                            F += x.parts[K].duration;
                    x = Math.abs(k - F);
                    if (null !== m && (0 === x || m < x))
                        break;
                    m = x;
                    f = {
                        time: F,
                        segmentIndex: t.segmentIndex,
                        partIndex: t.partIndex
                    }
                }
            }
            return f
        }
    }, {
        name: "Segment",
        run: function(q, p, f, m, k) {
            f = q = null;
            k = k || 0;
            for (var r = vg(p), u = 0; u < r.length; u++) {
                var t = r[p.endList || 0 === k ? u : r.length - (u + 1)]
                  , x = t.segment
                  , F = t.part && t.part.start || x && x.start;
                if (x.timeline === m && "undefined" !== typeof F) {
                    x = Math.abs(k - F);
                    if (null !== f && f < x)
                        break;
                    if (!q || null === f || f >= x)
                        f = x,
                        q = {
                            time: F,
                            segmentIndex: t.segmentIndex,
                            partIndex: t.partIndex
                        }
                }
            }
            return q
        }
    }, {
        name: "Discontinuity",
        run: function(q, p, f, m, k) {
            f = null;
            k = k || 0;
            if (p.discontinuityStarts && p.discontinuityStarts.length) {
                m = null;
                for (var r = 0; r < p.discontinuityStarts.length; r++) {
                    var u = p.discontinuityStarts[r]
                      , t = q.discontinuities[p.discontinuitySequence + r + 1];
                    if (t) {
                        var x = Math.abs(k - t.time);
                        if (null !== m && m < x)
                            break;
                        if (!f || null === m || m >= x)
                            m = x,
                            f = {
                                time: t.time,
                                segmentIndex: u,
                                partIndex: null
                            }
                    }
                }
            }
            return f
        }
    }, {
        name: "Playlist",
        run: function(q, p, f, m, k) {
            return p.syncInfo ? {
                time: p.syncInfo.time,
                segmentIndex: p.syncInfo.mediaSequence - p.mediaSequence,
                partIndex: null
            } : null
        }
    }], Ap = function(q) {
        function p(m) {
            m = q.call(this) || this;
            m.timelines = [];
            m.discontinuities = [];
            m.timelineToDatetimeMappings = {};
            m.logger_ = Db("SyncController");
            return m
        }
        ia(p, q);
        var f = p.prototype;
        f.getSyncPoint = function(m, k, r, u) {
            m = this.runStrategies_(m, k, r, u);
            return m.length ? this.selectSyncPoint_(m, {
                key: "time",
                value: u
            }) : null
        }
        ;
        f.getExpiredTime = function(m, k) {
            if (!m || !m.segments)
                return null;
            k = this.runStrategies_(m, k, m.discontinuitySequence, 0);
            if (!k.length)
                return null;
            k = this.selectSyncPoint_(k, {
                key: "segmentIndex",
                value: 0
            });
            0 < k.segmentIndex && (k.time *= -1);
            return Math.abs(k.time + wd({
                defaultDuration: m.targetDuration,
                durationList: m.segments,
                startIndex: k.segmentIndex,
                endIndex: 0
            }))
        }
        ;
        f.runStrategies_ = function(m, k, r, u) {
            for (var t = [], x = 0; x < gl.length; x++) {
                var F = gl[x]
                  , K = F.run(this, m, k, r, u);
                K && (K.strategy = F.name,
                t.push({
                    strategy: F.name,
                    syncPoint: K
                }))
            }
            return t
        }
        ;
        f.selectSyncPoint_ = function(m, k) {
            for (var r = m[0].syncPoint, u = Math.abs(m[0].syncPoint[k.key] - k.value), t = m[0].strategy, x = 1; x < m.length; x++) {
                var F = Math.abs(m[x].syncPoint[k.key] - k.value);
                F < u && (u = F,
                r = m[x].syncPoint,
                t = m[x].strategy)
            }
            this.logger_("syncPoint for [" + k.key + ": " + k.value + "] chosen with strategy [" + (t + "]: [time:" + r.time + ", segmentIndex:") + r.segmentIndex + ("number" === typeof r.partIndex ? ",partIndex:" + r.partIndex : "") + "]");
            return r
        }
        ;
        f.saveExpiredSegmentInfo = function(m, k) {
            var r = k.mediaSequence - m.mediaSequence;
            if (86400 < r)
                N.log.warn("Not saving expired segment info. Media sequence gap " + r + " is too large.");
            else
                for (--r; 0 <= r; r--) {
                    var u = m.segments[r];
                    if (u && "undefined" !== typeof u.start) {
                        k.syncInfo = {
                            mediaSequence: m.mediaSequence + r,
                            time: u.start
                        };
                        this.logger_("playlist refresh sync: [time:" + k.syncInfo.time + ", mediaSequence: " + (k.syncInfo.mediaSequence + "]"));
                        this.trigger("syncinfoupdate");
                        break
                    }
                }
        }
        ;
        f.setDateTimeMappingForStart = function(m) {
            this.timelineToDatetimeMappings = {};
            if (m.segments && m.segments.length && m.segments[0].dateTimeObject) {
                m = m.segments[0];
                var k = m.dateTimeObject.getTime() / 1E3;
                this.timelineToDatetimeMappings[m.timeline] = -k
            }
        }
        ;
        f.saveSegmentTimingInfo = function(m) {
            var k = m.segmentInfo;
            m = m.shouldSaveTimelineMapping;
            var r = this.calculateSegmentTimeMapping_(k, k.timingInfo, m)
              , u = k.segment;
            r && (this.saveDiscontinuitySyncInfo_(k),
            k.playlist.syncInfo || (k.playlist.syncInfo = {
                mediaSequence: k.playlist.mediaSequence + k.mediaIndex,
                time: u.start
            }));
            k = u.dateTimeObject;
            u.discontinuity && m && k && (this.timelineToDatetimeMappings[u.timeline] = -(k.getTime() / 1E3))
        }
        ;
        f.timestampOffsetForTimeline = function(m) {
            return "undefined" === typeof this.timelines[m] ? null : this.timelines[m].time
        }
        ;
        f.mappingForTimeline = function(m) {
            return "undefined" === typeof this.timelines[m] ? null : this.timelines[m].mapping
        }
        ;
        f.calculateSegmentTimeMapping_ = function(m, k, r) {
            var u = m.segment
              , t = m.part
              , x = this.timelines[m.timeline];
            if ("number" === typeof m.timestampOffset)
                x = {
                    time: m.startOfSegment,
                    mapping: m.startOfSegment - k.start
                },
                r && (this.timelines[m.timeline] = x,
                this.trigger("timestampoffset"),
                this.logger_("time mapping for timeline " + m.timeline + ": [time: " + (x.time + "] [mapping: " + x.mapping + "]"))),
                m = m.startOfSegment,
                k = k.end + x.mapping;
            else if (x)
                m = k.start + x.mapping,
                k = k.end + x.mapping;
            else
                return !1;
            t && (t.start = m,
            t.end = k);
            if (!u.start || m < u.start)
                u.start = m;
            u.end = k;
            return !0
        }
        ;
        f.saveDiscontinuitySyncInfo_ = function(m) {
            var k = m.playlist
              , r = m.segment;
            if (r.discontinuity)
                this.discontinuities[r.timeline] = {
                    time: r.start,
                    accuracy: 0
                };
            else if (k.discontinuityStarts && k.discontinuityStarts.length)
                for (var u = 0; u < k.discontinuityStarts.length; u++) {
                    var t = k.discontinuityStarts[u]
                      , x = k.discontinuitySequence + u + 1
                      , F = t - m.mediaIndex
                      , K = Math.abs(F);
                    if (!this.discontinuities[x] || this.discontinuities[x].accuracy > K)
                        t = 0 > F ? r.start - wd({
                            defaultDuration: k.targetDuration,
                            durationList: k.segments,
                            startIndex: m.mediaIndex,
                            endIndex: t
                        }) : r.end + wd({
                            defaultDuration: k.targetDuration,
                            durationList: k.segments,
                            startIndex: m.mediaIndex + 1,
                            endIndex: t
                        }),
                        this.discontinuities[x] = {
                            time: t,
                            accuracy: K
                        }
                }
        }
        ;
        f.dispose = function() {
            this.trigger("dispose");
            this.off()
        }
        ;
        return p
    }(N.EventTarget), Bp = function(q) {
        function p() {
            var m = q.call(this) || this;
            m.pendingTimelineChanges_ = {};
            m.lastTimelineChanges_ = {};
            return m
        }
        ia(p, q);
        var f = p.prototype;
        f.clearPendingTimelineChange = function(m) {
            this.pendingTimelineChanges_[m] = null;
            this.trigger("pendingtimelinechange")
        }
        ;
        f.pendingTimelineChange = function(m) {
            var k = m.type
              , r = m.from;
            m = m.to;
            "number" === typeof r && "number" === typeof m && (this.pendingTimelineChanges_[k] = {
                type: k,
                from: r,
                to: m
            },
            this.trigger("pendingtimelinechange"));
            return this.pendingTimelineChanges_[k]
        }
        ;
        f.lastTimelineChange = function(m) {
            var k = m.type
              , r = m.from;
            m = m.to;
            "number" === typeof r && "number" === typeof m && (this.lastTimelineChanges_[k] = {
                type: k,
                from: r,
                to: m
            },
            delete this.pendingTimelineChanges_[k],
            this.trigger("timelinechange"));
            return this.lastTimelineChanges_[k]
        }
        ;
        f.dispose = function() {
            this.trigger("dispose");
            this.pendingTimelineChanges_ = {};
            this.lastTimelineChanges_ = {};
            this.off()
        }
        ;
        return p
    }(N.EventTarget), Cp = mk(nk(function() {
        function q(P, I, L) {
            return L = {
                path: I,
                exports: {},
                require: function(V, Y) {
                    throw Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
                }
            },
            P(L, L.exports),
            L.exports
        }
        var p = "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : {}
          , f = q(function(P) {
            function I(L, V) {
                for (var Y = 0; Y < V.length; Y++) {
                    var fa = V[Y];
                    fa.enumerable = fa.enumerable || !1;
                    fa.configurable = !0;
                    "value"in fa && (fa.writable = !0);
                    Object.defineProperty(L, fa.key, fa)
                }
            }
            P.exports = function(L, V, Y) {
                V && I(L.prototype, V);
                Y && I(L, Y);
                return L
            }
            ;
            P.exports["default"] = P.exports;
            P.exports.__esModule = !0
        })
          , m = q(function(P) {
            function I(L, V) {
                P.exports = I = Object.setPrototypeOf || function(Y, fa) {
                    Y.__proto__ = fa;
                    return Y
                }
                ;
                P.exports["default"] = P.exports;
                P.exports.__esModule = !0;
                return I(L, V)
            }
            P.exports = I;
            P.exports["default"] = P.exports;
            P.exports.__esModule = !0
        })
          , k = q(function(P) {
            P.exports = function(I, L) {
                I.prototype = Object.create(L.prototype);
                I.prototype.constructor = I;
                m(I, L)
            }
            ;
            P.exports["default"] = P.exports;
            P.exports.__esModule = !0
        })
          , r = function() {
            function P() {
                this.listeners = {}
            }
            var I = P.prototype;
            I.on = function(L, V) {
                this.listeners[L] || (this.listeners[L] = []);
                this.listeners[L].push(V)
            }
            ;
            I.off = function(L, V) {
                if (!this.listeners[L])
                    return !1;
                V = this.listeners[L].indexOf(V);
                this.listeners[L] = this.listeners[L].slice(0);
                this.listeners[L].splice(V, 1);
                return -1 < V
            }
            ;
            I.trigger = function(L) {
                var V = this.listeners[L];
                if (V)
                    if (2 === arguments.length)
                        for (var Y = V.length, fa = 0; fa < Y; ++fa)
                            V[fa].call(this, arguments[1]);
                    else {
                        Y = Array.prototype.slice.call(arguments, 1);
                        fa = V.length;
                        for (var ja = 0; ja < fa; ++ja)
                            V[ja].apply(this, Y)
                    }
            }
            ;
            I.dispose = function() {
                this.listeners = {}
            }
            ;
            I.pipe = function(L) {
                this.on("data", function(V) {
                    L.push(V)
                })
            }
            ;
            return P
        }()
          , u = null
          , t = function() {
            function P(I) {
                if (!u) {
                    var L = [[[], [], [], [], []], [[], [], [], [], []]], V = L[0], Y = L[1], fa = V[4], ja = Y[4], U, la, oa, Ma = [], Pa = [], bb;
                    for (U = 0; 256 > U; U++)
                        Pa[(Ma[U] = U << 1 ^ 283 * (U >> 7)) ^ U] = U;
                    for (la = oa = 0; !fa[la]; la ^= bb || 1,
                    oa = Pa[oa] || 1) {
                        var Va = oa ^ oa << 1 ^ oa << 2 ^ oa << 3 ^ oa << 4;
                        Va = Va >> 8 ^ Va & 255 ^ 99;
                        fa[la] = Va;
                        ja[Va] = la;
                        var kb = Ma[U = Ma[bb = Ma[la]]];
                        var pb = 16843009 * kb ^ 65537 * U ^ 257 * bb ^ 16843008 * la;
                        kb = 257 * Ma[Va] ^ 16843008 * Va;
                        for (U = 0; 4 > U; U++)
                            V[U][la] = kb = kb << 24 ^ kb >>> 8,
                            Y[U][Va] = pb = pb << 24 ^ pb >>> 8
                    }
                    for (U = 0; 5 > U; U++)
                        V[U] = V[U].slice(0),
                        Y[U] = Y[U].slice(0);
                    u = L
                }
                this._tables = [[u[0][0].slice(), u[0][1].slice(), u[0][2].slice(), u[0][3].slice(), u[0][4].slice()], [u[1][0].slice(), u[1][1].slice(), u[1][2].slice(), u[1][3].slice(), u[1][4].slice()]];
                L = this._tables[0][4];
                V = this._tables[1];
                fa = I.length;
                ja = 1;
                if (4 !== fa && 6 !== fa && 8 !== fa)
                    throw Error("Invalid aes key size");
                la = I.slice(0);
                oa = [];
                this._key = [la, oa];
                for (I = fa; I < 4 * fa + 28; I++) {
                    Y = la[I - 1];
                    if (0 === I % fa || 8 === fa && 4 === I % fa)
                        Y = L[Y >>> 24] << 24 ^ L[Y >> 16 & 255] << 16 ^ L[Y >> 8 & 255] << 8 ^ L[Y & 255],
                        0 === I % fa && (Y = Y << 8 ^ Y >>> 24 ^ ja << 24,
                        ja = ja << 1 ^ 283 * (ja >> 7));
                    la[I] = la[I - fa] ^ Y
                }
                for (fa = 0; I; fa++,
                I--)
                    Y = la[fa & 3 ? I : I - 4],
                    oa[fa] = 4 >= I || 4 > fa ? Y : V[0][L[Y >>> 24]] ^ V[1][L[Y >> 16 & 255]] ^ V[2][L[Y >> 8 & 255]] ^ V[3][L[Y & 255]]
            }
            P.prototype.decrypt = function(I, L, V, Y, fa, ja) {
                var U = this._key[1];
                I ^= U[0];
                Y ^= U[1];
                V ^= U[2];
                L ^= U[3];
                var la = U.length / 4 - 2, oa, Ma = 4;
                var Pa = this._tables[1];
                var bb = Pa[0]
                  , Va = Pa[1]
                  , kb = Pa[2]
                  , pb = Pa[3]
                  , Xb = Pa[4];
                for (oa = 0; oa < la; oa++) {
                    Pa = bb[I >>> 24] ^ Va[Y >> 16 & 255] ^ kb[V >> 8 & 255] ^ pb[L & 255] ^ U[Ma];
                    var Tc = bb[Y >>> 24] ^ Va[V >> 16 & 255] ^ kb[L >> 8 & 255] ^ pb[I & 255] ^ U[Ma + 1];
                    var Eg = bb[V >>> 24] ^ Va[L >> 16 & 255] ^ kb[I >> 8 & 255] ^ pb[Y & 255] ^ U[Ma + 2];
                    L = bb[L >>> 24] ^ Va[I >> 16 & 255] ^ kb[Y >> 8 & 255] ^ pb[V & 255] ^ U[Ma + 3];
                    Ma += 4;
                    I = Pa;
                    Y = Tc;
                    V = Eg
                }
                for (oa = 0; 4 > oa; oa++)
                    fa[(3 & -oa) + ja] = Xb[I >>> 24] << 24 ^ Xb[Y >> 16 & 255] << 16 ^ Xb[V >> 8 & 255] << 8 ^ Xb[L & 255] ^ U[Ma++],
                    Pa = I,
                    I = Y,
                    Y = V,
                    V = L,
                    L = Pa
            }
            ;
            return P
        }()
          , x = function(P) {
            function I() {
                var V = P.call(this, r) || this;
                V.jobs = [];
                V.delay = 1;
                V.timeout_ = null;
                return V
            }
            k(I, P);
            var L = I.prototype;
            L.processJob_ = function() {
                this.jobs.shift()();
                this.timeout_ = this.jobs.length ? setTimeout(this.processJob_.bind(this), this.delay) : null
            }
            ;
            L.push = function(V) {
                this.jobs.push(V);
                this.timeout_ || (this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay))
            }
            ;
            return I
        }(r)
          , F = function(P) {
            return P << 24 | (P & 65280) << 8 | (P & 16711680) >> 8 | P >>> 24
        }
          , K = function() {
            function P(I, L, V, Y) {
                var fa = P.STEP
                  , ja = new Int32Array(I.buffer)
                  , U = new Uint8Array(I.byteLength);
                I = 0;
                this.asyncStream_ = new x;
                this.asyncStream_.push(this.decryptChunk_(ja.subarray(I, I + fa), L, V, U));
                for (I = fa; I < ja.length; I += fa)
                    V = new Uint32Array([F(ja[I - 4]), F(ja[I - 3]), F(ja[I - 2]), F(ja[I - 1])]),
                    this.asyncStream_.push(this.decryptChunk_(ja.subarray(I, I + fa), L, V, U));
                this.asyncStream_.push(function() {
                    Y(null, U.subarray(0, U.byteLength - U[U.byteLength - 1]))
                })
            }
            P.prototype.decryptChunk_ = function(I, L, V, Y) {
                return function() {
                    var fa = new Int32Array(I.buffer,I.byteOffset,I.byteLength >> 2), ja = new t(Array.prototype.slice.call(L)), U = new Uint8Array(I.byteLength), la = new Int32Array(U.buffer), oa;
                    var Ma = V[0];
                    var Pa = V[1];
                    var bb = V[2];
                    var Va = V[3];
                    for (oa = 0; oa < fa.length; oa += 4) {
                        var kb = F(fa[oa]);
                        var pb = F(fa[oa + 1]);
                        var Xb = F(fa[oa + 2]);
                        var Tc = F(fa[oa + 3]);
                        ja.decrypt(kb, pb, Xb, Tc, la, oa);
                        la[oa] = F(la[oa] ^ Ma);
                        la[oa + 1] = F(la[oa + 1] ^ Pa);
                        la[oa + 2] = F(la[oa + 2] ^ bb);
                        la[oa + 3] = F(la[oa + 3] ^ Va);
                        Ma = kb;
                        Pa = pb;
                        bb = Xb;
                        Va = Tc
                    }
                    Y.set(U, I.byteOffset)
                }
            }
            ;
            f(P, null, [{
                key: "STEP",
                get: function() {
                    return 32E3
                }
            }]);
            return P
        }();
        p = ("undefined" !== typeof window ? window : "undefined" !== typeof p ? p : "undefined" !== typeof self ? self : {}).BigInt || Number;
        [p("0x1"), p("0x100"), p("0x10000"), p("0x1000000"), p("0x100000000"), p("0x10000000000"), p("0x1000000000000"), p("0x100000000000000"), p("0x10000000000000000")];
        var M = function(P) {
            var I = {};
            Object.keys(P).forEach(function(L) {
                var V = P[L];
                var Y = "function" === ArrayBuffer.isView ? ArrayBuffer.isView(V) : V && V.buffer instanceof ArrayBuffer;
                I[L] = Y ? {
                    bytes: V.buffer,
                    byteOffset: V.byteOffset,
                    byteLength: V.byteLength
                } : V
            });
            return I
        };
        self.onmessage = function(P) {
            var I = P.data;
            P = new Uint8Array(I.encrypted.bytes,I.encrypted.byteOffset,I.encrypted.byteLength);
            var L = new Uint32Array(I.key.bytes,I.key.byteOffset,I.key.byteLength / 4)
              , V = new Uint32Array(I.iv.bytes,I.iv.byteOffset,I.iv.byteLength / 4);
            new K(P,L,V,function(Y, fa) {
                self.postMessage(M({
                    source: I.source,
                    decrypted: fa
                }), [fa.buffer])
            }
            )
        }
    })), Dp = lk(Cp), Oe = function(q, p) {
        q.abort();
        q.pause();
        p && p.activePlaylistLoader && (p.activePlaylistLoader.pause(),
        p.activePlaylistLoader = null)
    }, Ep = function(q, p) {
        return function() {
            var f = p.segmentLoaders
              , m = f[q]
              , k = f.main;
            f = p.mediaTypes[q];
            var r = f.activeTrack()
              , u = f.getActiveGroup()
              , t = f.activePlaylistLoader
              , x = f.lastGroup_;
            u && x && u.id === x.id || (f.lastGroup_ = u,
            f.lastTrack_ = r,
            Oe(m, f),
            u && !u.isMasterPlaylist && (u.playlistLoader ? (m.resyncLoader(),
            m = u.playlistLoader,
            f.activePlaylistLoader = m,
            m.load()) : t && k.resetEverything()))
        }
    }, Fp = function(q, p) {
        return function() {
            var f = p.segmentLoaders[q];
            p.mediaTypes[q].lastGroup_ = null;
            f.abort();
            f.pause()
        }
    }, Gp = function(q, p) {
        return function() {
            var f = p.masterPlaylistLoader
              , m = p.segmentLoaders
              , k = m[q]
              , r = m.main;
            m = p.mediaTypes[q];
            var u = m.activeTrack()
              , t = m.getActiveGroup()
              , x = m.activePlaylistLoader
              , F = m.lastTrack_;
            if (!F || !u || F.id !== u.id)
                if (m.lastGroup_ = t,
                m.lastTrack_ = u,
                Oe(k, m),
                t)
                    if (t.isMasterPlaylist)
                        u && F && u.id !== F.id && (k = p.vhs.masterPlaylistController_,
                        t = k.selectPlaylist(),
                        k.media() !== t && (m.logger_("track change. Switching master audio from " + F.id + " to " + u.id),
                        f.pause(),
                        r.resetEverything(),
                        k.fastQualityChange_(t)));
                    else {
                        if ("AUDIO" === q) {
                            if (!t.playlistLoader) {
                                r.setAudio(!0);
                                r.resetEverything();
                                return
                            }
                            k.setAudio(!0);
                            r.setAudio(!1)
                        }
                        x === t.playlistLoader ? (f = t.playlistLoader,
                        m.activePlaylistLoader = f,
                        f.load()) : (k.track && k.track(u),
                        k.resetEverything(),
                        f = t.playlistLoader,
                        m.activePlaylistLoader = f,
                        f.load())
                    }
        }
    }, Pe = {
        AUDIO: function(q, p) {
            return function() {
                var f = p.mediaTypes[q]
                  , m = p.blacklistCurrentPlaylist;
                Oe(p.segmentLoaders[q], f);
                var k = f.activeTrack()
                  , r = f.activeGroup();
                r = (r.filter(function(t) {
                    return t["default"]
                })[0] || r[0]).id;
                r = f.tracks[r];
                if (k === r)
                    m({
                        message: "Problem encountered loading the default audio track."
                    });
                else {
                    N.log.warn("Problem encountered loading the alternate audio track.Switching back to default.");
                    for (var u in f.tracks)
                        f.tracks[u].enabled = f.tracks[u] === r;
                    f.onTrackChanged()
                }
            }
        },
        SUBTITLES: function(q, p) {
            return function() {
                var f = p.segmentLoaders[q]
                  , m = p.mediaTypes[q];
                N.log.warn("Problem encountered loading the subtitle track.Disabling subtitle track.");
                Oe(f, m);
                if (f = m.activeTrack())
                    f.mode = "disabled";
                m.onTrackChanged()
            }
        }
    }, hl = {
        AUDIO: function(q, p, f) {
            if (p) {
                var m = f.tech
                  , k = f.requestOptions
                  , r = f.segmentLoaders[q];
                p.on("loadedmetadata", function() {
                    var u = p.media();
                    r.playlist(u, k);
                    (!m.paused() || u.endList && "none" !== m.preload()) && r.load()
                });
                p.on("loadedplaylist", function() {
                    r.playlist(p.media(), k);
                    m.paused() || r.load()
                });
                p.on("error", Pe[q](q, f))
            }
        },
        SUBTITLES: function(q, p, f) {
            var m = f.tech
              , k = f.requestOptions
              , r = f.segmentLoaders[q]
              , u = f.mediaTypes[q];
            p.on("loadedmetadata", function() {
                var t = p.media();
                r.playlist(t, k);
                r.track(u.activeTrack());
                (!m.paused() || t.endList && "none" !== m.preload()) && r.load()
            });
            p.on("loadedplaylist", function() {
                r.playlist(p.media(), k);
                m.paused() || r.load()
            });
            p.on("error", Pe[q](q, f))
        }
    }, Hp = {
        AUDIO: function(q, p) {
            var f = p.vhs
              , m = p.sourceType
              , k = p.segmentLoaders[q]
              , r = p.requestOptions
              , u = p.master.mediaGroups
              , t = p.mediaTypes[q]
              , x = t.groups
              , F = t.tracks;
            t = t.logger_;
            var K = p.masterPlaylistLoader
              , M = xd(K.master);
            u[q] && 0 !== Object.keys(u[q]).length || (u[q] = {
                main: {
                    "default": {
                        "default": !0
                    }
                }
            },
            M && (u[q].main["default"].playlists = K.master.playlists));
            for (var P in u[q]) {
                x[P] || (x[P] = []);
                for (var I in u[q][P]) {
                    var L = u[q][P][I];
                    if (M) {
                        t("AUDIO group '" + P + "' label '" + I + "' is a master playlist");
                        L.isMasterPlaylist = !0;
                        var V = null
                    } else
                        V = "vhs-json" === m && L.playlists ? new Sc(L.playlists[0],f,r) : L.resolvedUri ? new Sc(L.resolvedUri,f,r) : L.playlists && "dash" === m ? new Dg(L.playlists[0],f,r,K) : null;
                    L = N.mergeOptions({
                        id: I,
                        playlistLoader: V
                    }, L);
                    hl[q](q, L.playlistLoader, p);
                    x[P].push(L);
                    if ("undefined" === typeof F[I]) {
                        V = N.AudioTrack;
                        var Y = I
                          , fa = L["default"] ? "main" : "alternative";
                        L.characteristics && 0 <= L.characteristics.indexOf("public.accessibility.describes-video") && (fa = "main-desc");
                        L = new V({
                            id: Y,
                            kind: fa,
                            enabled: !1,
                            language: L.language,
                            "default": L["default"],
                            label: I
                        });
                        F[I] = L
                    }
                }
            }
            k.on("error", Pe[q](q, p))
        },
        SUBTITLES: function(q, p) {
            var f = p.tech
              , m = p.vhs
              , k = p.sourceType
              , r = p.segmentLoaders[q]
              , u = p.requestOptions
              , t = p.master.mediaGroups
              , x = p.mediaTypes[q]
              , F = x.groups;
            x = x.tracks;
            var K = p.masterPlaylistLoader, M;
            for (M in t[q]) {
                F[M] || (F[M] = []);
                for (var P in t[q][M])
                    if (!t[q][M][P].forced) {
                        var I = t[q][M][P]
                          , L = void 0;
                        if ("hls" === k)
                            L = new Sc(I.resolvedUri,m,u);
                        else if ("dash" === k) {
                            if (!I.playlists.filter(function(V) {
                                return Infinity !== V.excludeUntil
                            }).length)
                                return;
                            L = new Dg(I.playlists[0],m,u,K)
                        } else
                            "vhs-json" === k && (L = new Sc(I.playlists ? I.playlists[0] : I.resolvedUri,m,u));
                        I = N.mergeOptions({
                            id: P,
                            playlistLoader: L
                        }, I);
                        hl[q](q, I.playlistLoader, p);
                        F[M].push(I);
                        "undefined" === typeof x[P] && (I = f.addRemoteTextTrack({
                            id: P,
                            kind: "subtitles",
                            "default": I["default"] && I.autoselect,
                            language: I.language,
                            label: P
                        }, !1).track,
                        x[P] = I)
                    }
            }
            r.on("error", Pe[q](q, p))
        },
        "CLOSED-CAPTIONS": function(q, p) {
            var f = p.tech
              , m = p.master.mediaGroups
              , k = p.mediaTypes[q];
            p = k.groups;
            k = k.tracks;
            for (var r in m[q]) {
                p[r] || (p[r] = []);
                for (var u in m[q][r]) {
                    var t = m[q][r][u];
                    if (/^(?:CC|SERVICE)/.test(t.instreamId)) {
                        var x = f.options_.vhs && f.options_.vhs.captionServices || {}
                          , F = {
                            label: u,
                            language: t.language,
                            instreamId: t.instreamId,
                            "default": t["default"] && t.autoselect
                        };
                        x[F.instreamId] && (F = N.mergeOptions(F, x[F.instreamId]));
                        void 0 === F["default"] && delete F["default"];
                        p[r].push(N.mergeOptions({
                            id: u
                        }, t));
                        "undefined" === typeof k[u] && (t = f.addRemoteTextTrack({
                            id: F.instreamId,
                            kind: "captions",
                            "default": F["default"],
                            language: F.language,
                            label: F.label
                        }, !1).track,
                        k[u] = t)
                    }
                }
            }
        }
    }, Ip = function m(p, f) {
        for (var k = 0; k < p.length; k++)
            if (yg(f, p[k]) || p[k].playlists && m(p[k].playlists, f))
                return !0;
        return !1
    }, Jp = function(p, f) {
        return function(m) {
            var k = f.mediaTypes[p].groups
              , r = f.masterPlaylistLoader.media();
            if (!r)
                return null;
            var u = null;
            r.attributes[p] && (u = k[r.attributes[p]]);
            var t = Object.keys(k);
            if (!u)
                if ("AUDIO" === p && 1 < t.length && xd(f.master))
                    for (var x = 0; x < t.length; x++) {
                        var F = k[t[x]];
                        if (Ip(F, r)) {
                            u = F;
                            break
                        }
                    }
                else
                    k.main ? u = k.main : 1 === t.length && (u = k[t[0]]);
            return "undefined" === typeof m ? u : null !== m && u ? u.filter(function(K) {
                return K.id === m.id
            })[0] || null : null
        }
    }, Kp = {
        AUDIO: function(p, f) {
            return function() {
                var m = f.mediaTypes[p].tracks, k;
                for (k in m)
                    if (m[k].enabled)
                        return m[k];
                return null
            }
        },
        SUBTITLES: function(p, f) {
            return function() {
                var m = f.mediaTypes[p].tracks, k;
                for (k in m)
                    if ("showing" === m[k].mode || "hidden" === m[k].mode)
                        return m[k];
                return null
            }
        }
    }, Lp = function(p, f) {
        var m = f.mediaTypes;
        return function() {
            var k = m[p].activeTrack();
            return k ? m[p].activeGroup(k) : null
        }
    }, Mp = function(p) {
        ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function(M) {
            Hp[M](M, p)
        });
        var f = p.mediaTypes
          , m = p.masterPlaylistLoader
          , k = p.tech
          , r = p.vhs
          , u = p.segmentLoaders
          , t = u.AUDIO;
        u = u.main;
        ["AUDIO", "SUBTITLES"].forEach(function(M) {
            f[M].activeGroup = Jp(M, p);
            f[M].activeTrack = Kp[M](M, p);
            f[M].onGroupChanged = Ep(M, p);
            f[M].onGroupChanging = Fp(M, p);
            f[M].onTrackChanged = Gp(M, p);
            f[M].getActiveGroup = Lp(M, p)
        });
        var x = f.AUDIO.activeGroup();
        x && (x = (x.filter(function(M) {
            return M["default"]
        })[0] || x[0]).id,
        f.AUDIO.tracks[x].enabled = !0,
        f.AUDIO.onGroupChanged(),
        f.AUDIO.onTrackChanged(),
        f.AUDIO.getActiveGroup().playlistLoader ? (u.setAudio(!1),
        t.setAudio(!0)) : u.setAudio(!0));
        m.on("mediachange", function() {
            ["AUDIO", "SUBTITLES"].forEach(function(M) {
                return f[M].onGroupChanged()
            })
        });
        m.on("mediachanging", function() {
            ["AUDIO", "SUBTITLES"].forEach(function(M) {
                return f[M].onGroupChanging()
            })
        });
        var F = function() {
            f.AUDIO.onTrackChanged();
            k.trigger({
                type: "usage",
                name: "vhs-audio-change"
            });
            k.trigger({
                type: "usage",
                name: "hls-audio-change"
            })
        };
        k.audioTracks().addEventListener("change", F);
        k.remoteTextTracks().addEventListener("change", f.SUBTITLES.onTrackChanged);
        r.on("dispose", function() {
            k.audioTracks().removeEventListener("change", F);
            k.remoteTextTracks().removeEventListener("change", f.SUBTITLES.onTrackChanged)
        });
        k.clearTracks("audio");
        for (var K in f.AUDIO.tracks)
            k.audioTracks().addTrack(f.AUDIO.tracks[K])
    }, Np = function() {
        var p = {};
        ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function(f) {
            p[f] = {
                groups: {},
                tracks: {},
                activePlaylistLoader: null,
                activeGroup: Rb,
                activeTrack: Rb,
                getActiveGroup: Rb,
                onGroupChanged: Rb,
                onTrackChanged: Rb,
                lastTrack_: null,
                logger_: Db("MediaGroups[" + f + "]")
            }
        });
        return p
    }, ac, Op = "mediaRequests mediaRequestsAborted mediaRequestsTimedout mediaRequestsErrored mediaTransferDuration mediaBytesTransferred mediaAppends".split(" "), Pp = function(p) {
        return this.audioSegmentLoader_[p] + this.mainSegmentLoader_[p]
    }, Qp = function(p) {
        var f = p.currentPlaylist
          , m = p.buffered
          , k = p.currentTime
          , r = p.nextPlaylist
          , u = p.bufferLowWaterLine
          , t = p.bufferHighWaterLine
          , x = p.duration
          , F = p.experimentalBufferBasedABR;
        p = p.log;
        if (!r)
            return N.log.warn("We received no playlist to switch to. Please check your stream."),
            !1;
        var K = "allowing switch " + (f && f.id || "null") + " -> " + r.id;
        if (!f)
            return p(K + " as current playlist is not set"),
            !0;
        if (r.id === f.id)
            return !1;
        var M = !!Rc(m, k).length;
        if (!f.endList) {
            if (!M && "number" === typeof f.partTargetDuration)
                return p("not " + K + " as current playlist is live llhls, but currentTime isn't in buffered."),
                !1;
            p(K + " as current playlist is live");
            return !0
        }
        m = tg(m, k);
        k = F ? Ua.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Ua.MAX_BUFFER_LOW_WATER_LINE;
        if (x < k)
            return p(K + " as duration < max low water line (" + x + " < " + k + ")"),
            !0;
        r = r.attributes.BANDWIDTH;
        f = f.attributes.BANDWIDTH;
        if (r < f && (!F || m < t))
            return u = K + " as next bandwidth < current bandwidth (" + r + " < " + f + ")",
            F && (u += " and forwardBuffer < bufferHighWaterLine (" + m + " < " + t + ")"),
            p(u),
            !0;
        if ((!F || r > f) && m >= u)
            return t = K + " as forwardBuffer >= bufferLowWaterLine (" + m + " >= " + u + ")",
            F && (t += " and next bandwidth > current bandwidth (" + r + " > " + f + ")"),
            p(t),
            !0;
        p("not " + K + " as no switching criteria met");
        return !1
    }, Rp = function(p) {
        function f(k) {
            var r = p.call(this) || this;
            var u = k.src
              , t = k.handleManifestRedirects
              , x = k.withCredentials
              , F = k.tech
              , K = k.bandwidth
              , M = k.externVhs
              , P = k.useCueTags
              , I = k.blacklistDuration
              , L = k.enableLowInitialPlaylist
              , V = k.sourceType
              , Y = k.cacheEncryptionKeys
              , fa = k.experimentalBufferBasedABR
              , ja = k.experimentalLeastPixelDiffSelector
              , U = k.captionServices;
            if (!u)
                throw Error("A non-empty playlist URL or JSON manifest string is required");
            var la = k.maxPlaylistRetries;
            if (null === la || "undefined" === typeof la)
                la = Infinity;
            ac = M;
            r.experimentalBufferBasedABR = !!fa;
            r.experimentalLeastPixelDiffSelector = !!ja;
            r.withCredentials = x;
            r.tech_ = F;
            r.vhs_ = F.vhs;
            r.sourceType_ = V;
            r.useCueTags_ = P;
            r.blacklistDuration = I;
            r.maxPlaylistRetries = la;
            r.enableLowInitialPlaylist = L;
            r.useCueTags_ && (r.cueTagsTrack_ = r.tech_.addTextTrack("metadata", "ad-cues"),
            r.cueTagsTrack_.inBandMetadataTrackDispatchType = "");
            r.requestOptions_ = {
                withCredentials: x,
                handleManifestRedirects: t,
                maxPlaylistRetries: la,
                timeout: null
            };
            r.on("error", r.pauseLoading);
            r.mediaTypes_ = Np();
            r.mediaSource = new window.MediaSource;
            r.handleDurationChange_ = r.handleDurationChange_.bind(sa(r));
            r.handleSourceOpen_ = r.handleSourceOpen_.bind(sa(r));
            r.handleSourceEnded_ = r.handleSourceEnded_.bind(sa(r));
            r.mediaSource.addEventListener("durationchange", r.handleDurationChange_);
            r.mediaSource.addEventListener("sourceopen", r.handleSourceOpen_);
            r.mediaSource.addEventListener("sourceended", r.handleSourceEnded_);
            r.seekable_ = N.createTimeRanges();
            r.hasPlayed_ = !1;
            r.syncController_ = new Ap(k);
            r.segmentMetadataTrack_ = F.addRemoteTextTrack({
                kind: "metadata",
                label: "segment-metadata"
            }, !1).track;
            r.decrypter_ = new Dp;
            r.sourceUpdater_ = new el(r.mediaSource);
            r.inbandTextTracks_ = {};
            r.timelineChangeController_ = new Bp;
            t = {
                vhs: r.vhs_,
                parse708captions: k.parse708captions,
                useDtsForTimestampOffset: k.useDtsForTimestampOffset,
                captionServices: U,
                mediaSource: r.mediaSource,
                currentTime: r.tech_.currentTime.bind(r.tech_),
                seekable: function() {
                    return r.seekable()
                },
                seeking: function() {
                    return r.tech_.seeking()
                },
                duration: function() {
                    return r.duration()
                },
                hasPlayed: function() {
                    return r.hasPlayed_
                },
                goalBufferLength: function() {
                    return r.goalBufferLength()
                },
                bandwidth: K,
                syncController: r.syncController_,
                decrypter: r.decrypter_,
                sourceType: r.sourceType_,
                inbandTextTracks: r.inbandTextTracks_,
                cacheEncryptionKeys: Y,
                sourceUpdater: r.sourceUpdater_,
                timelineChangeController: r.timelineChangeController_,
                experimentalExactManifestTimings: k.experimentalExactManifestTimings
            };
            r.masterPlaylistLoader_ = "dash" === r.sourceType_ ? new Dg(u,r.vhs_,r.requestOptions_) : new Sc(u,r.vhs_,r.requestOptions_);
            r.setupMasterPlaylistLoaderListeners_();
            r.mainSegmentLoader_ = new Vg(N.mergeOptions(t, {
                segmentMetadataTrack: r.segmentMetadataTrack_,
                loaderType: "main"
            }),k);
            r.audioSegmentLoader_ = new Vg(N.mergeOptions(t, {
                loaderType: "audio"
            }),k);
            r.subtitleSegmentLoader_ = new zp(N.mergeOptions(t, {
                loaderType: "vtt",
                featuresNativeTextTracks: r.tech_.featuresNativeTextTracks
            }),k);
            r.setupSegmentLoaderListeners_();
            r.experimentalBufferBasedABR && (r.masterPlaylistLoader_.one("loadedplaylist", function() {
                return r.startABRTimer_()
            }),
            r.tech_.on("pause", function() {
                return r.stopABRTimer_()
            }),
            r.tech_.on("play", function() {
                return r.startABRTimer_()
            }));
            Op.forEach(function(oa) {
                r[oa + "_"] = Pp.bind(sa(r), oa)
            });
            r.logger_ = Db("MPC");
            r.triggeredFmp4Usage = !1;
            "none" === r.tech_.preload() ? (r.loadOnPlay_ = function() {
                r.loadOnPlay_ = null;
                r.masterPlaylistLoader_.load()
            }
            ,
            r.tech_.one("play", r.loadOnPlay_)) : r.masterPlaylistLoader_.load();
            r.timeToLoadedData__ = -1;
            r.mainAppendsToLoadedData__ = -1;
            r.audioAppendsToLoadedData__ = -1;
            k = "none" === r.tech_.preload() ? "play" : "loadstart";
            r.tech_.one(k, function() {
                var oa = Date.now();
                r.tech_.one("loadeddata", function() {
                    r.timeToLoadedData__ = Date.now() - oa;
                    r.mainAppendsToLoadedData__ = r.mainSegmentLoader_.mediaAppends;
                    r.audioAppendsToLoadedData__ = r.audioSegmentLoader_.mediaAppends
                })
            });
            return r
        }
        ia(f, p);
        var m = f.prototype;
        m.mainAppendsToLoadedData_ = function() {
            return this.mainAppendsToLoadedData__
        }
        ;
        m.audioAppendsToLoadedData_ = function() {
            return this.audioAppendsToLoadedData__
        }
        ;
        m.appendsToLoadedData_ = function() {
            var k = this.mainAppendsToLoadedData_()
              , r = this.audioAppendsToLoadedData_();
            return -1 === k || -1 === r ? -1 : k + r
        }
        ;
        m.timeToLoadedData_ = function() {
            return this.timeToLoadedData__
        }
        ;
        m.checkABR_ = function() {
            var k = this.selectPlaylist();
            k && this.shouldSwitchToMedia_(k) && this.switchMedia_(k, "abr")
        }
        ;
        m.switchMedia_ = function(k, r, u) {
            var t = this.media();
            t = t && (t.id || t.uri);
            var x = k.id || k.uri;
            t && t !== x && (this.logger_("switch media " + t + " -> " + x + " from " + r),
            this.tech_.trigger({
                type: "usage",
                name: "vhs-rendition-change-" + r
            }));
            this.masterPlaylistLoader_.media(k, u)
        }
        ;
        m.startABRTimer_ = function() {
            var k = this;
            this.stopABRTimer_();
            this.abrTimer_ = window.setInterval(function() {
                return k.checkABR_()
            }, 250)
        }
        ;
        m.stopABRTimer_ = function() {
            this.tech_.scrubbing && this.tech_.scrubbing() || (window.clearInterval(this.abrTimer_),
            this.abrTimer_ = null)
        }
        ;
        m.getAudioTrackPlaylists_ = function() {
            var k = this.master()
              , r = k && k.playlists || [];
            if (!k || !k.mediaGroups || !k.mediaGroups.AUDIO)
                return r;
            var u = k.mediaGroups.AUDIO
              , t = Object.keys(u);
            if (Object.keys(this.mediaTypes_.AUDIO.groups).length)
                var x = this.mediaTypes_.AUDIO.activeTrack();
            else {
                t = u.main || t.length && u[t[0]];
                for (var F in t)
                    if (t[F]["default"]) {
                        x = {
                            label: F
                        };
                        break
                    }
            }
            if (!x)
                return r;
            F = [];
            for (var K in u)
                if (u[K][x.label])
                    if (t = u[K][x.label],
                    t.playlists && t.playlists.length)
                        F.push.apply(F, t.playlists);
                    else if (t.uri)
                        F.push(t);
                    else if (k.playlists.length)
                        for (t = 0; t < k.playlists.length; t++) {
                            var M = k.playlists[t];
                            M.attributes && M.attributes.AUDIO && M.attributes.AUDIO === K && F.push(M)
                        }
            return F.length ? F : r
        }
        ;
        m.setupMasterPlaylistLoaderListeners_ = function() {
            var k = this;
            this.masterPlaylistLoader_.on("loadedmetadata", function() {
                var r = k.masterPlaylistLoader_.media()
                  , u = 1500 * r.targetDuration;
                xg(k.masterPlaylistLoader_.master, k.masterPlaylistLoader_.media()) ? k.requestOptions_.timeout = 0 : k.requestOptions_.timeout = u;
                r.endList && "none" !== k.tech_.preload() && (k.mainSegmentLoader_.playlist(r, k.requestOptions_),
                k.mainSegmentLoader_.load());
                Mp({
                    sourceType: k.sourceType_,
                    segmentLoaders: {
                        AUDIO: k.audioSegmentLoader_,
                        SUBTITLES: k.subtitleSegmentLoader_,
                        main: k.mainSegmentLoader_
                    },
                    tech: k.tech_,
                    requestOptions: k.requestOptions_,
                    masterPlaylistLoader: k.masterPlaylistLoader_,
                    vhs: k.vhs_,
                    master: k.master(),
                    mediaTypes: k.mediaTypes_,
                    blacklistCurrentPlaylist: k.blacklistCurrentPlaylist.bind(k)
                });
                k.triggerPresenceUsage_(k.master(), r);
                k.setupFirstPlay();
                if (!k.mediaTypes_.AUDIO.activePlaylistLoader || k.mediaTypes_.AUDIO.activePlaylistLoader.media())
                    k.trigger("selectedinitialmedia");
                else
                    k.mediaTypes_.AUDIO.activePlaylistLoader.one("loadedmetadata", function() {
                        k.trigger("selectedinitialmedia")
                    })
            });
            this.masterPlaylistLoader_.on("loadedplaylist", function() {
                k.loadOnPlay_ && k.tech_.off("play", k.loadOnPlay_);
                var r = k.masterPlaylistLoader_.media();
                if (!r) {
                    k.excludeUnsupportedVariants_();
                    var u;
                    k.enableLowInitialPlaylist && (u = k.selectInitialPlaylist());
                    u || (u = k.selectPlaylist());
                    if (!u || !k.shouldSwitchToMedia_(u))
                        return;
                    k.initialMedia_ = u;
                    k.switchMedia_(k.initialMedia_, "initial");
                    if ("vhs-json" !== k.sourceType_ || !k.initialMedia_.segments)
                        return;
                    r = k.initialMedia_
                }
                k.handleUpdatedMediaPlaylist(r)
            });
            this.masterPlaylistLoader_.on("error", function() {
                k.blacklistCurrentPlaylist(k.masterPlaylistLoader_.error)
            });
            this.masterPlaylistLoader_.on("mediachanging", function() {
                k.mainSegmentLoader_.abort();
                k.mainSegmentLoader_.pause()
            });
            this.masterPlaylistLoader_.on("mediachange", function() {
                var r = k.masterPlaylistLoader_.media()
                  , u = 1500 * r.targetDuration;
                xg(k.masterPlaylistLoader_.master, k.masterPlaylistLoader_.media()) ? k.requestOptions_.timeout = 0 : k.requestOptions_.timeout = u;
                k.mainSegmentLoader_.playlist(r, k.requestOptions_);
                k.mainSegmentLoader_.load();
                k.tech_.trigger({
                    type: "mediachange",
                    bubbles: !0
                })
            });
            this.masterPlaylistLoader_.on("playlistunchanged", function() {
                var r = k.masterPlaylistLoader_.media();
                "playlist-unchanged" !== r.lastExcludeReason_ && k.stuckAtPlaylistEnd_(r) && (k.blacklistCurrentPlaylist({
                    message: "Playlist no longer updating.",
                    reason: "playlist-unchanged"
                }),
                k.tech_.trigger("playliststuck"))
            });
            this.masterPlaylistLoader_.on("renditiondisabled", function() {
                k.tech_.trigger({
                    type: "usage",
                    name: "vhs-rendition-disabled"
                });
                k.tech_.trigger({
                    type: "usage",
                    name: "hls-rendition-disabled"
                })
            });
            this.masterPlaylistLoader_.on("renditionenabled", function() {
                k.tech_.trigger({
                    type: "usage",
                    name: "vhs-rendition-enabled"
                });
                k.tech_.trigger({
                    type: "usage",
                    name: "hls-rendition-enabled"
                })
            })
        }
        ;
        m.handleUpdatedMediaPlaylist = function(k) {
            this.useCueTags_ && this.updateAdCues_(k);
            this.mainSegmentLoader_.playlist(k, this.requestOptions_);
            this.updateDuration(!k.endList);
            this.tech_.paused() || (this.mainSegmentLoader_.load(),
            this.audioSegmentLoader_ && this.audioSegmentLoader_.load())
        }
        ;
        m.triggerPresenceUsage_ = function(k, r) {
            k = k.mediaGroups || {};
            var u = !0, t = Object.keys(k.AUDIO), x;
            for (x in k.AUDIO)
                for (var F in k.AUDIO[x])
                    k.AUDIO[x][F].uri || (u = !1);
            u && (this.tech_.trigger({
                type: "usage",
                name: "vhs-demuxed"
            }),
            this.tech_.trigger({
                type: "usage",
                name: "hls-demuxed"
            }));
            Object.keys(k.SUBTITLES).length && (this.tech_.trigger({
                type: "usage",
                name: "vhs-webvtt"
            }),
            this.tech_.trigger({
                type: "usage",
                name: "hls-webvtt"
            }));
            ac.Playlist.isAes(r) && (this.tech_.trigger({
                type: "usage",
                name: "vhs-aes"
            }),
            this.tech_.trigger({
                type: "usage",
                name: "hls-aes"
            }));
            t.length && 1 < Object.keys(k.AUDIO[t[0]]).length && (this.tech_.trigger({
                type: "usage",
                name: "vhs-alternate-audio"
            }),
            this.tech_.trigger({
                type: "usage",
                name: "hls-alternate-audio"
            }));
            this.useCueTags_ && (this.tech_.trigger({
                type: "usage",
                name: "vhs-playlist-cue-tags"
            }),
            this.tech_.trigger({
                type: "usage",
                name: "hls-playlist-cue-tags"
            }))
        }
        ;
        m.shouldSwitchToMedia_ = function(k) {
            var r = this.masterPlaylistLoader_.media() || this.masterPlaylistLoader_.pendingMedia_
              , u = this.tech_.currentTime()
              , t = this.bufferLowWaterLine()
              , x = this.bufferHighWaterLine()
              , F = this.tech_.buffered();
            return Qp({
                buffered: F,
                currentTime: u,
                currentPlaylist: r,
                nextPlaylist: k,
                bufferLowWaterLine: t,
                bufferHighWaterLine: x,
                duration: this.duration(),
                experimentalBufferBasedABR: this.experimentalBufferBasedABR,
                log: this.logger_
            })
        }
        ;
        m.setupSegmentLoaderListeners_ = function() {
            var k = this;
            this.experimentalBufferBasedABR || (this.mainSegmentLoader_.on("bandwidthupdate", function() {
                var u = k.selectPlaylist();
                k.shouldSwitchToMedia_(u) && k.switchMedia_(u, "bandwidthupdate");
                k.tech_.trigger("bandwidthupdate")
            }),
            this.mainSegmentLoader_.on("progress", function() {
                k.trigger("progress")
            }));
            this.mainSegmentLoader_.on("error", function() {
                k.blacklistCurrentPlaylist(k.mainSegmentLoader_.error())
            });
            this.mainSegmentLoader_.on("appenderror", function() {
                k.error = k.mainSegmentLoader_.error_;
                k.trigger("error")
            });
            this.mainSegmentLoader_.on("syncinfoupdate", function() {
                k.onSyncInfoUpdate_()
            });
            this.mainSegmentLoader_.on("timestampoffset", function() {
                k.tech_.trigger({
                    type: "usage",
                    name: "vhs-timestamp-offset"
                });
                k.tech_.trigger({
                    type: "usage",
                    name: "hls-timestamp-offset"
                })
            });
            this.audioSegmentLoader_.on("syncinfoupdate", function() {
                k.onSyncInfoUpdate_()
            });
            this.audioSegmentLoader_.on("appenderror", function() {
                k.error = k.audioSegmentLoader_.error_;
                k.trigger("error")
            });
            this.mainSegmentLoader_.on("ended", function() {
                k.logger_("main segment loader ended");
                k.onEndOfStream()
            });
            this.mainSegmentLoader_.on("earlyabort", function(u) {
                k.experimentalBufferBasedABR || (k.delegateLoaders_("all", ["abort"]),
                k.blacklistCurrentPlaylist({
                    message: "Aborted early because there isn't enough bandwidth to complete the request without rebuffering."
                }, 120))
            });
            var r = function() {
                if (!k.sourceUpdater_.hasCreatedSourceBuffers())
                    return k.tryToCreateSourceBuffers_();
                var u = k.getCodecsOrExclude_();
                u && k.sourceUpdater_.addOrChangeSourceBuffers(u)
            };
            this.mainSegmentLoader_.on("trackinfo", r);
            this.audioSegmentLoader_.on("trackinfo", r);
            this.mainSegmentLoader_.on("fmp4", function() {
                k.triggeredFmp4Usage || (k.tech_.trigger({
                    type: "usage",
                    name: "vhs-fmp4"
                }),
                k.tech_.trigger({
                    type: "usage",
                    name: "hls-fmp4"
                }),
                k.triggeredFmp4Usage = !0)
            });
            this.audioSegmentLoader_.on("fmp4", function() {
                k.triggeredFmp4Usage || (k.tech_.trigger({
                    type: "usage",
                    name: "vhs-fmp4"
                }),
                k.tech_.trigger({
                    type: "usage",
                    name: "hls-fmp4"
                }),
                k.triggeredFmp4Usage = !0)
            });
            this.audioSegmentLoader_.on("ended", function() {
                k.logger_("audioSegmentLoader ended");
                k.onEndOfStream()
            })
        }
        ;
        m.mediaSecondsLoaded_ = function() {
            return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded)
        }
        ;
        m.load = function() {
            this.mainSegmentLoader_.load();
            this.mediaTypes_.AUDIO.activePlaylistLoader && this.audioSegmentLoader_.load();
            this.mediaTypes_.SUBTITLES.activePlaylistLoader && this.subtitleSegmentLoader_.load()
        }
        ;
        m.smoothQualityChange_ = function(k) {
            void 0 === k && (k = this.selectPlaylist());
            this.fastQualityChange_(k)
        }
        ;
        m.fastQualityChange_ = function(k) {
            var r = this;
            void 0 === k && (k = this.selectPlaylist());
            k === this.masterPlaylistLoader_.media() ? this.logger_("skipping fastQualityChange because new media is same as old") : (this.switchMedia_(k, "fast-quality"),
            this.mainSegmentLoader_.resetEverything(function() {
                N.browser.IE_VERSION || N.browser.IS_EDGE ? r.tech_.setCurrentTime(r.tech_.currentTime() + .04) : r.tech_.setCurrentTime(r.tech_.currentTime())
            }))
        }
        ;
        m.play = function() {
            if (!this.setupFirstPlay()) {
                this.tech_.ended() && this.tech_.setCurrentTime(0);
                this.hasPlayed_ && this.load();
                var k = this.tech_.seekable();
                if (Infinity === this.tech_.duration() && this.tech_.currentTime() < k.start(0))
                    return this.tech_.setCurrentTime(k.end(k.length - 1))
            }
        }
        ;
        m.setupFirstPlay = function() {
            var k = this
              , r = this.masterPlaylistLoader_.media();
            if (!r || this.tech_.paused() || this.hasPlayed_)
                return !1;
            if (!r.endList) {
                var u = this.seekable();
                if (!u.length)
                    return !1;
                if (N.browser.IE_VERSION && 0 === this.tech_.readyState())
                    return this.tech_.one("loadedmetadata", function() {
                        k.trigger("firstplay");
                        k.tech_.setCurrentTime(u.end(0));
                        k.hasPlayed_ = !0
                    }),
                    !1;
                this.trigger("firstplay");
                this.tech_.setCurrentTime(u.end(0))
            }
            this.hasPlayed_ = !0;
            this.load();
            return !0
        }
        ;
        m.handleSourceOpen_ = function() {
            this.tryToCreateSourceBuffers_();
            if (this.tech_.autoplay()) {
                var k = this.tech_.play();
                "undefined" !== typeof k && "function" === typeof k.then && k.then(null, function(r) {})
            }
            this.trigger("sourceopen")
        }
        ;
        m.handleSourceEnded_ = function() {
            if (this.inbandTextTracks_.metadataTrack_) {
                var k = this.inbandTextTracks_.metadataTrack_.cues;
                if (k && k.length) {
                    var r = this.duration();
                    k[k.length - 1].endTime = isNaN(r) || Infinity === Math.abs(r) ? Number.MAX_VALUE : r
                }
            }
        }
        ;
        m.handleDurationChange_ = function() {
            this.tech_.trigger("durationchange")
        }
        ;
        m.onEndOfStream = function() {
            var k = this.mainSegmentLoader_.ended_;
            if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                var r = this.mainSegmentLoader_.getCurrentMediaInfo_();
                k = !r || r.hasVideo ? k && this.audioSegmentLoader_.ended_ : this.audioSegmentLoader_.ended_
            }
            k && (this.stopABRTimer_(),
            this.sourceUpdater_.endOfStream())
        }
        ;
        m.stuckAtPlaylistEnd_ = function(k) {
            if (!this.seekable().length)
                return !1;
            var r = this.syncController_.getExpiredTime(k, this.duration());
            if (null === r)
                return !1;
            k = ac.Playlist.playlistEnd(k, r);
            r = this.tech_.currentTime();
            var u = this.tech_.buffered();
            if (!u.length)
                return k - r <= Jb;
            u = u.end(u.length - 1);
            return u - r <= Jb && k - u <= Jb
        }
        ;
        m.blacklistCurrentPlaylist = function(k, r) {
            void 0 === k && (k = {});
            var u = k.playlist || this.masterPlaylistLoader_.media();
            r = r || k.blacklistDuration || this.blacklistDuration;
            if (u) {
                u.playlistErrors_++;
                var t = this.masterPlaylistLoader_.master.playlists
                  , x = t.filter(ve);
                x = 1 === x.length && x[0] === u;
                if (1 === t.length && Infinity !== r)
                    return N.log.warn("Problem encountered with playlist " + u.id + ". Trying again since it is the only playlist."),
                    this.tech_.trigger("retryplaylist"),
                    this.masterPlaylistLoader_.load(x);
                if (x) {
                    var F = !1;
                    t.forEach(function(K) {
                        if (K !== u) {
                            var M = K.excludeUntil;
                            "undefined" !== typeof M && Infinity !== M && (F = !0,
                            delete K.excludeUntil)
                        }
                    });
                    F && (N.log.warn("Removing other playlists from the exclusion list because the last rendition is about to be excluded."),
                    this.tech_.trigger("retryplaylist"))
                }
                r = u.playlistErrors_ > this.maxPlaylistRetries ? Infinity : Date.now() + 1E3 * r;
                u.excludeUntil = r;
                k.reason && (u.lastExcludeReason_ = k.reason);
                this.tech_.trigger("blacklistplaylist");
                this.tech_.trigger({
                    type: "usage",
                    name: "vhs-rendition-blacklisted"
                });
                this.tech_.trigger({
                    type: "usage",
                    name: "hls-rendition-blacklisted"
                });
                if (r = this.selectPlaylist())
                    return (k.internal ? this.logger_ : N.log.warn)((k.internal ? "Internal problem" : "Problem") + " encountered with playlist " + u.id + "." + ((k.message ? " " + k.message : "") + " Switching to playlist " + r.id + ".")),
                    r.attributes.AUDIO !== u.attributes.AUDIO && this.delegateLoaders_("audio", ["abort", "pause"]),
                    r.attributes.SUBTITLES !== u.attributes.SUBTITLES && this.delegateLoaders_("subtitle", ["abort", "pause"]),
                    this.delegateLoaders_("main", ["abort", "pause"]),
                    k = r.targetDuration / 2 * 1E3 || 5E3,
                    k = "number" === typeof r.lastRequest && Date.now() - r.lastRequest <= k,
                    this.switchMedia_(r, "exclude", x || k);
                this.error = "Playback cannot continue. No available working or supported playlists.";
                this.trigger("error")
            } else
                this.error = k,
                "open" !== this.mediaSource.readyState ? this.trigger("error") : this.sourceUpdater_.endOfStream("network")
        }
        ;
        m.pauseLoading = function() {
            this.delegateLoaders_("all", ["abort", "pause"]);
            this.stopABRTimer_()
        }
        ;
        m.delegateLoaders_ = function(k, r) {
            var u = this
              , t = []
              , x = "all" === k;
            (x || "main" === k) && t.push(this.masterPlaylistLoader_);
            var F = [];
            (x || "audio" === k) && F.push("AUDIO");
            if (x || "subtitle" === k)
                F.push("CLOSED-CAPTIONS"),
                F.push("SUBTITLES");
            F.forEach(function(K) {
                (K = u.mediaTypes_[K] && u.mediaTypes_[K].activePlaylistLoader) && t.push(K)
            });
            ["main", "audio", "subtitle"].forEach(function(K) {
                var M = u[K + "SegmentLoader_"];
                !M || k !== K && "all" !== k || t.push(M)
            });
            t.forEach(function(K) {
                return r.forEach(function(M) {
                    if ("function" === typeof K[M])
                        K[M]()
                })
            })
        }
        ;
        m.setCurrentTime = function(k) {
            var r = Rc(this.tech_.buffered(), k);
            if (!this.masterPlaylistLoader_ || !this.masterPlaylistLoader_.media() || !this.masterPlaylistLoader_.media().segments)
                return 0;
            if (r && r.length)
                return k;
            this.mainSegmentLoader_.resetEverything();
            this.mainSegmentLoader_.abort();
            this.mediaTypes_.AUDIO.activePlaylistLoader && (this.audioSegmentLoader_.resetEverything(),
            this.audioSegmentLoader_.abort());
            this.mediaTypes_.SUBTITLES.activePlaylistLoader && (this.subtitleSegmentLoader_.resetEverything(),
            this.subtitleSegmentLoader_.abort());
            this.load()
        }
        ;
        m.duration = function() {
            if (!this.masterPlaylistLoader_)
                return 0;
            var k = this.masterPlaylistLoader_.media();
            return k ? k.endList ? this.mediaSource ? this.mediaSource.duration : ac.Playlist.duration(k) : Infinity : 0
        }
        ;
        m.seekable = function() {
            return this.seekable_
        }
        ;
        m.onSyncInfoUpdate_ = function() {
            if (this.masterPlaylistLoader_) {
                var k = this.masterPlaylistLoader_.media();
                if (k) {
                    var r = this.syncController_.getExpiredTime(k, this.duration());
                    if (null !== r) {
                        var u = this.masterPlaylistLoader_.master
                          , t = ac.Playlist.seekable(k, r, ac.Playlist.liveEdgeDelay(u, k));
                        if (0 !== t.length) {
                            if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                k = this.mediaTypes_.AUDIO.activePlaylistLoader.media();
                                r = this.syncController_.getExpiredTime(k, this.duration());
                                if (null === r)
                                    return;
                                var x = ac.Playlist.seekable(k, r, ac.Playlist.liveEdgeDelay(u, k));
                                if (0 === x.length)
                                    return
                            }
                            if (this.seekable_ && this.seekable_.length) {
                                var F = this.seekable_.end(0);
                                var K = this.seekable_.start(0)
                            }
                            x ? x.start(0) > t.end(0) || t.start(0) > x.end(0) ? this.seekable_ = t : this.seekable_ = N.createTimeRanges([[x.start(0) > t.start(0) ? x.start(0) : t.start(0), x.end(0) < t.end(0) ? x.end(0) : t.end(0)]]) : this.seekable_ = t;
                            this.seekable_ && this.seekable_.length && this.seekable_.end(0) === F && this.seekable_.start(0) === K || (this.logger_("seekable updated [" + Lj(this.seekable_) + "]"),
                            this.tech_.trigger("seekablechanged"))
                        }
                    }
                }
            }
        }
        ;
        m.updateDuration = function(k) {
            this.updateDuration_ && (this.mediaSource.removeEventListener("sourceopen", this.updateDuration_),
            this.updateDuration_ = null);
            if ("open" !== this.mediaSource.readyState)
                this.updateDuration_ = this.updateDuration.bind(this, k),
                this.mediaSource.addEventListener("sourceopen", this.updateDuration_);
            else if (k)
                k = this.seekable(),
                k.length && (isNaN(this.mediaSource.duration) || this.mediaSource.duration < k.end(k.length - 1)) && this.sourceUpdater_.setDuration(k.end(k.length - 1));
            else {
                k = this.tech_.buffered();
                var r = ac.Playlist.duration(this.masterPlaylistLoader_.media());
                0 < k.length && (r = Math.max(r, k.end(k.length - 1)));
                this.mediaSource.duration !== r && this.sourceUpdater_.setDuration(r)
            }
        }
        ;
        m.dispose = function() {
            var k = this;
            this.trigger("dispose");
            this.decrypter_.terminate();
            this.masterPlaylistLoader_.dispose();
            this.mainSegmentLoader_.dispose();
            this.loadOnPlay_ && this.tech_.off("play", this.loadOnPlay_);
            ["AUDIO", "SUBTITLES"].forEach(function(r) {
                r = k.mediaTypes_[r].groups;
                for (var u in r)
                    r[u].forEach(function(t) {
                        t.playlistLoader && t.playlistLoader.dispose()
                    })
            });
            this.audioSegmentLoader_.dispose();
            this.subtitleSegmentLoader_.dispose();
            this.sourceUpdater_.dispose();
            this.timelineChangeController_.dispose();
            this.stopABRTimer_();
            this.updateDuration_ && this.mediaSource.removeEventListener("sourceopen", this.updateDuration_);
            this.mediaSource.removeEventListener("durationchange", this.handleDurationChange_);
            this.mediaSource.removeEventListener("sourceopen", this.handleSourceOpen_);
            this.mediaSource.removeEventListener("sourceended", this.handleSourceEnded_);
            this.off()
        }
        ;
        m.master = function() {
            return this.masterPlaylistLoader_.master
        }
        ;
        m.media = function() {
            return this.masterPlaylistLoader_.media() || this.initialMedia_
        }
        ;
        m.areMediaTypesKnown_ = function() {
            var k = !!this.mediaTypes_.AUDIO.activePlaylistLoader
              , r = !!this.mainSegmentLoader_.getCurrentMediaInfo_();
            k = k ? !!this.audioSegmentLoader_.getCurrentMediaInfo_() : !0;
            return r && k ? !0 : !1
        }
        ;
        m.getCodecsOrExclude_ = function() {
            var k = this
              , r = {
                main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},
                audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}
            };
            r.video = r.main;
            var u = Fd(this.master(), this.media())
              , t = {}
              , x = !!this.mediaTypes_.AUDIO.activePlaylistLoader;
            r.main.hasVideo && (t.video = u.video || r.main.videoCodec || "avc1.4d400d");
            r.main.isMuxed && (t.video += "," + (u.audio || r.main.audioCodec || "mp4a.40.2"));
            if (r.main.hasAudio && !r.main.isMuxed || r.audio.hasAudio || x)
                t.audio = u.audio || r.main.audioCodec || r.audio.audioCodec || "mp4a.40.2",
                r.audio.isFmp4 = r.main.hasAudio && !r.main.isMuxed ? r.main.isFmp4 : r.audio.isFmp4;
            if (t.audio || t.video) {
                var F = {}, K;
                ["video", "audio"].forEach(function(I) {
                    var L;
                    if (L = t.hasOwnProperty(I))
                        L = t[I],
                        L = !(r[I].isFmp4 ? ne(L) : fg(L));
                    L && (L = r[I].isFmp4 ? "browser" : "muxer",
                    F[L] = F[L] || [],
                    F[L].push(t[I]),
                    "audio" === I && (K = L))
                });
                if (x && K && this.media().attributes.AUDIO) {
                    var M = this.media().attributes.AUDIO;
                    this.master().playlists.forEach(function(I) {
                        (I.attributes && I.attributes.AUDIO) === M && I !== k.media() && (I.excludeUntil = Infinity)
                    });
                    this.logger_("excluding audio group " + M + " as " + K + ' does not support codec(s): "' + t.audio + '"')
                }
                if (Object.keys(F).length)
                    u = Object.keys(F).reduce(function(I, L) {
                        I && (I += ", ");
                        return I += L + ' does not support codec(s): "' + F[L].join(",") + '"'
                    }, "") + ".",
                    this.blacklistCurrentPlaylist({
                        playlist: this.media(),
                        internal: !0,
                        message: u,
                        blacklistDuration: Infinity
                    });
                else {
                    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {
                        var P = [];
                        ["video", "audio"].forEach(function(I) {
                            var L = (Ib(k.sourceUpdater_.codecs[I] || "")[0] || {}).type
                              , V = (Ib(t[I] || "")[0] || {}).type;
                            L && V && L.toLowerCase() !== V.toLowerCase() && P.push('"' + k.sourceUpdater_.codecs[I] + '" -> "' + t[I] + '"')
                        });
                        if (P.length) {
                            this.blacklistCurrentPlaylist({
                                playlist: this.media(),
                                message: "Codec switching not supported: " + P.join(", ") + ".",
                                blacklistDuration: Infinity,
                                internal: !0
                            });
                            return
                        }
                    }
                    return t
                }
            } else
                this.blacklistCurrentPlaylist({
                    playlist: this.media(),
                    message: "Could not determine codecs for playlist.",
                    blacklistDuration: Infinity
                })
        }
        ;
        m.tryToCreateSourceBuffers_ = function() {
            if ("open" === this.mediaSource.readyState && !this.sourceUpdater_.hasCreatedSourceBuffers() && this.areMediaTypesKnown_()) {
                var k = this.getCodecsOrExclude_();
                k && (this.sourceUpdater_.createSourceBuffers(k),
                k = [k.video, k.audio].filter(Boolean).join(","),
                this.excludeIncompatibleVariants_(k))
            }
        }
        ;
        m.excludeUnsupportedVariants_ = function() {
            var k = this
              , r = this.master().playlists
              , u = [];
            Object.keys(r).forEach(function(t) {
                t = r[t];
                if (-1 === u.indexOf(t.id)) {
                    u.push(t.id);
                    var x = Fd(k.master, t)
                      , F = [];
                    !x.audio || fg(x.audio) || ne(x.audio) || F.push("audio codec " + x.audio);
                    !x.video || fg(x.video) || ne(x.video) || F.push("video codec " + x.video);
                    x.text && "stpp.ttml.im1t" === x.text && F.push("text codec " + x.text);
                    F.length && (t.excludeUntil = Infinity,
                    k.logger_("excluding " + t.id + " for unsupported: " + F.join(", ")))
                }
            })
        }
        ;
        m.excludeIncompatibleVariants_ = function(k) {
            var r = this
              , u = []
              , t = this.master().playlists;
            k = Ke(Ib(k));
            var x = Wk(k)
              , F = k.video && Ib(k.video)[0] || null
              , K = k.audio && Ib(k.audio)[0] || null;
            Object.keys(t).forEach(function(M) {
                M = t[M];
                if (-1 === u.indexOf(M.id) && Infinity !== M.excludeUntil) {
                    u.push(M.id);
                    var P = []
                      , I = Fd(r.masterPlaylistLoader_.master, M)
                      , L = Wk(I);
                    if (I.audio || I.video)
                        L !== x && P.push('codec count "' + L + '" !== "' + x + '"'),
                        r.sourceUpdater_.canChangeType() || (L = I.video && Ib(I.video)[0] || null,
                        I = I.audio && Ib(I.audio)[0] || null,
                        L && F && L.type.toLowerCase() !== F.type.toLowerCase() && P.push('video codec "' + L.type + '" !== "' + F.type + '"'),
                        I && K && I.type.toLowerCase() !== K.type.toLowerCase() && P.push('audio codec "' + I.type + '" !== "' + K.type + '"')),
                        P.length && (M.excludeUntil = Infinity,
                        r.logger_("blacklisting " + M.id + ": " + P.join(" && ")))
                }
            })
        }
        ;
        m.updateAdCues_ = function(k) {
            var r = 0
              , u = this.seekable();
            u.length && (r = u.start(0));
            u = this.cueTagsTrack_;
            void 0 === r && (r = 0);
            if (k.segments)
                for (var t, x = 0; x < k.segments.length; x++) {
                    var F = k.segments[x];
                    if (!t)
                        b: {
                            t = r + F.duration / 2;
                            for (var K = u.cues, M = 0; M < K.length; M++) {
                                var P = K[M];
                                if (t >= P.adStartTime && t <= P.adEndTime) {
                                    t = P;
                                    break b
                                }
                            }
                            t = null
                        }
                    if (t) {
                        if ("cueIn"in F) {
                            t.endTime = r;
                            t.adEndTime = r;
                            r += F.duration;
                            t = null;
                            continue
                        }
                        if (r < t.endTime) {
                            r += F.duration;
                            continue
                        }
                        t.endTime += F.duration
                    } else
                        "cueOut"in F && (t = new window.VTTCue(r,r + F.duration,F.cueOut),
                        t.adStartTime = r,
                        t.adEndTime = r + parseFloat(F.cueOut),
                        u.addCue(t)),
                        "cueOutCont"in F && (t = F.cueOutCont.split("/").map(parseFloat),
                        K = t[0],
                        M = t[1],
                        t = new window.VTTCue(r,r + F.duration,""),
                        t.adStartTime = r - K,
                        t.adEndTime = t.adStartTime + M,
                        u.addCue(t));
                    r += F.duration
                }
        }
        ;
        m.goalBufferLength = function() {
            var k = this.tech_.currentTime()
              , r = Ua.GOAL_BUFFER_LENGTH;
            return Math.min(r + k * Ua.GOAL_BUFFER_LENGTH_RATE, Math.max(r, Ua.MAX_GOAL_BUFFER_LENGTH))
        }
        ;
        m.bufferLowWaterLine = function() {
            var k = this.tech_.currentTime()
              , r = Ua.BUFFER_LOW_WATER_LINE
              , u = Math.max(r, Ua.MAX_BUFFER_LOW_WATER_LINE)
              , t = Math.max(r, Ua.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);
            return Math.min(r + k * Ua.BUFFER_LOW_WATER_LINE_RATE, this.experimentalBufferBasedABR ? t : u)
        }
        ;
        m.bufferHighWaterLine = function() {
            return Ua.BUFFER_HIGH_WATER_LINE
        }
        ;
        return f
    }(N.EventTarget), Sp = function(p, f, m) {
        return function(k) {
            var r = p.master.playlists[f]
              , u = wg(r)
              , t = ve(r);
            if ("undefined" === typeof k)
                return t;
            k ? delete r.disabled : r.disabled = !0;
            k === t || u || (m(),
            k ? p.trigger("renditionenabled") : p.trigger("renditiondisabled"));
            return k
        }
    }, Tp = function(p, f, m) {
        var k = p.masterPlaylistController_
          , r = k[(p.options_.smoothQualityChange ? "smooth" : "fast") + "QualityChange_"].bind(k);
        if (f.attributes) {
            var u = f.attributes.RESOLUTION;
            this.width = u && u.width;
            this.height = u && u.height;
            this.bandwidth = f.attributes.BANDWIDTH
        }
        this.codecs = Fd(k.master(), f);
        this.playlist = f;
        this.id = m;
        this.enabled = Sp(p.playlists, f.id, r)
    }, Up = function(p) {
        p.representations = function() {
            var f = p.masterPlaylistController_.master();
            return (f = xd(f) ? p.masterPlaylistController_.getAudioTrackPlaylists_() : f.playlists) ? f.filter(function(m) {
                return !wg(m)
            }).map(function(m, k) {
                return new Tp(p,m,m.id)
            }) : []
        }
    }, il = ["seeking", "seeked", "pause", "playing", "error"], Vp = function() {
        function p(m) {
            var k = this;
            this.masterPlaylistController_ = m.masterPlaylistController;
            this.tech_ = m.tech;
            this.seekable = m.seekable;
            this.allowSeeksWithinUnsafeLiveWindow = m.allowSeeksWithinUnsafeLiveWindow;
            this.liveRangeSafeTimeDelta = m.liveRangeSafeTimeDelta;
            this.media = m.media;
            this.consecutiveUpdates = 0;
            this.checkCurrentTimeTimeout_ = this.timer_ = this.lastRecordedTime = null;
            this.logger_ = Db("PlaybackWatcher");
            this.logger_("initialize");
            var r = function() {
                return k.monitorCurrentTime_()
            }
              , u = function() {
                return k.monitorCurrentTime_()
            }
              , t = function() {
                return k.techWaiting_()
            }
              , x = function() {
                return k.cancelTimer_()
            }
              , F = this.masterPlaylistController_
              , K = ["main", "subtitle", "audio"]
              , M = {};
            K.forEach(function(I) {
                M[I] = {
                    reset: function() {
                        return k.resetSegmentDownloads_(I)
                    },
                    updateend: function() {
                        return k.checkSegmentDownloads_(I)
                    }
                };
                F[I + "SegmentLoader_"].on("appendsdone", M[I].updateend);
                F[I + "SegmentLoader_"].on("playlistupdate", M[I].reset);
                k.tech_.on(["seeked", "seeking"], M[I].reset)
            });
            var P = function(I) {
                ["main", "audio"].forEach(function(L) {
                    F[L + "SegmentLoader_"][I]("appended", k.seekingAppendCheck_)
                })
            };
            this.seekingAppendCheck_ = function() {
                k.fixesBadSeeks_() && (k.consecutiveUpdates = 0,
                k.lastRecordedTime = k.tech_.currentTime(),
                P("off"))
            }
            ;
            this.clearSeekingAppendCheck_ = function() {
                return P("off")
            }
            ;
            this.watchForBadSeeking_ = function() {
                k.clearSeekingAppendCheck_();
                P("on")
            }
            ;
            this.tech_.on("seeked", this.clearSeekingAppendCheck_);
            this.tech_.on("seeking", this.watchForBadSeeking_);
            this.tech_.on("waiting", t);
            this.tech_.on(il, x);
            this.tech_.on("canplay", u);
            this.tech_.one("play", r);
            this.dispose = function() {
                k.clearSeekingAppendCheck_();
                k.logger_("dispose");
                k.tech_.off("waiting", t);
                k.tech_.off(il, x);
                k.tech_.off("canplay", u);
                k.tech_.off("play", r);
                k.tech_.off("seeking", k.watchForBadSeeking_);
                k.tech_.off("seeked", k.clearSeekingAppendCheck_);
                K.forEach(function(I) {
                    F[I + "SegmentLoader_"].off("appendsdone", M[I].updateend);
                    F[I + "SegmentLoader_"].off("playlistupdate", M[I].reset);
                    k.tech_.off(["seeked", "seeking"], M[I].reset)
                });
                k.checkCurrentTimeTimeout_ && window.clearTimeout(k.checkCurrentTimeTimeout_);
                k.cancelTimer_()
            }
        }
        var f = p.prototype;
        f.monitorCurrentTime_ = function() {
            this.checkCurrentTime_();
            this.checkCurrentTimeTimeout_ && window.clearTimeout(this.checkCurrentTimeTimeout_);
            this.checkCurrentTimeTimeout_ = window.setTimeout(this.monitorCurrentTime_.bind(this), 250)
        }
        ;
        f.resetSegmentDownloads_ = function(m) {
            var k = this.masterPlaylistController_[m + "SegmentLoader_"];
            0 < this[m + "StalledDownloads_"] && this.logger_("resetting possible stalled download count for " + m + " loader");
            this[m + "StalledDownloads_"] = 0;
            this[m + "Buffered_"] = k.buffered_()
        }
        ;
        f.checkSegmentDownloads_ = function(m) {
            var k = this.masterPlaylistController_
              , r = k[m + "SegmentLoader_"]
              , u = r.buffered_()
              , t = co(this[m + "Buffered_"], u);
            this[m + "Buffered_"] = u;
            t ? this.resetSegmentDownloads_(m) : (this[m + "StalledDownloads_"]++,
            this.logger_("found #" + this[m + "StalledDownloads_"] + " " + m + " appends that did not increase buffer (possible stalled download)", {
                playlistId: r.playlist_ && r.playlist_.id,
                buffered: pc(u)
            }),
            10 > this[m + "StalledDownloads_"] || (this.logger_(m + " loader stalled download exclusion"),
            this.resetSegmentDownloads_(m),
            this.tech_.trigger({
                type: "usage",
                name: "vhs-" + m + "-download-exclusion"
            }),
            "subtitle" !== m && k.blacklistCurrentPlaylist({
                message: "Excessive " + m + " segment downloading detected."
            }, Infinity)))
        }
        ;
        f.checkCurrentTime_ = function() {
            if (!this.tech_.paused() && !this.tech_.seeking()) {
                var m = this.tech_.currentTime()
                  , k = this.tech_.buffered();
                if (this.lastRecordedTime === m && (!k.length || m + Jb >= k.end(k.length - 1)))
                    return this.techWaiting_();
                5 <= this.consecutiveUpdates && m === this.lastRecordedTime ? (this.consecutiveUpdates++,
                this.waiting_()) : m === this.lastRecordedTime ? this.consecutiveUpdates++ : (this.consecutiveUpdates = 0,
                this.lastRecordedTime = m)
            }
        }
        ;
        f.cancelTimer_ = function() {
            this.consecutiveUpdates = 0;
            this.timer_ && (this.logger_("cancelTimer_"),
            clearTimeout(this.timer_));
            this.timer_ = null
        }
        ;
        f.fixesBadSeeks_ = function() {
            if (!this.tech_.seeking())
                return !1;
            var m = this.seekable(), k = this.tech_.currentTime(), r;
            this.afterSeekableWindow_(m, k, this.media(), this.allowSeeksWithinUnsafeLiveWindow) && (r = m.end(m.length - 1));
            this.beforeSeekableWindow_(m, k) && (r = m.start(0),
            r += r === m.end(0) ? 0 : Jb);
            if ("undefined" !== typeof r)
                return this.logger_("Trying to seek outside of seekable at time " + k + " with seekable range " + (Lj(m) + ". Seeking to ") + (r + ".")),
                this.tech_.setCurrentTime(r),
                !0;
            var u = this.masterPlaylistController_.sourceUpdater_;
            m = this.tech_.buffered();
            r = u.audioBuffer ? u.audioBuffered() : null;
            var t = u.videoBuffer ? u.videoBuffered() : null;
            u = this.media();
            u = u.partTargetDuration ? u.partTargetDuration : 2 * (u.targetDuration - ec);
            r = [r, t];
            for (t = 0; t < r.length; t++)
                if (r[t] && tg(r[t], k) < u)
                    return !1;
            m = ue(m, k);
            if (0 === m.length)
                return !1;
            r = m.start(0) + Jb;
            this.logger_("Buffered region starts (" + m.start(0) + ")  just beyond seek point (" + (k + "). Seeking to " + r + "."));
            this.tech_.setCurrentTime(r);
            return !0
        }
        ;
        f.waiting_ = function() {
            if (!this.techWaiting_()) {
                var m = this.tech_.currentTime()
                  , k = this.tech_.buffered();
                k = Rc(k, m);
                k.length && m + 3 <= k.end(0) && (this.cancelTimer_(),
                this.tech_.setCurrentTime(m),
                this.logger_("Stopped at " + m + " while inside a buffered region [" + (k.start(0) + " -> " + k.end(0) + "]. Attempting to resume playback by seeking to the current time.")),
                this.tech_.trigger({
                    type: "usage",
                    name: "vhs-unknown-waiting"
                }),
                this.tech_.trigger({
                    type: "usage",
                    name: "hls-unknown-waiting"
                }))
            }
        }
        ;
        f.techWaiting_ = function() {
            var m = this.seekable()
              , k = this.tech_.currentTime();
            if (this.tech_.seeking() || null !== this.timer_)
                return !0;
            if (this.beforeSeekableWindow_(m, k))
                return m = m.end(m.length - 1),
                this.logger_("Fell out of live window at time " + k + ". Seeking to live point (seekable end) " + m),
                this.cancelTimer_(),
                this.tech_.setCurrentTime(m),
                this.tech_.trigger({
                    type: "usage",
                    name: "vhs-live-resync"
                }),
                this.tech_.trigger({
                    type: "usage",
                    name: "hls-live-resync"
                }),
                !0;
            m = this.tech_.vhs.masterPlaylistController_.sourceUpdater_;
            var r = this.tech_.buffered();
            if (this.videoUnderflow_({
                audioBuffered: m.audioBuffered(),
                videoBuffered: m.videoBuffered(),
                currentTime: k
            }))
                return this.cancelTimer_(),
                this.tech_.setCurrentTime(k),
                this.tech_.trigger({
                    type: "usage",
                    name: "vhs-video-underflow"
                }),
                this.tech_.trigger({
                    type: "usage",
                    name: "hls-video-underflow"
                }),
                !0;
            m = ue(r, k);
            return 0 < m.length ? (r = m.start(0) - k,
            this.logger_("Stopped at " + k + ", setting timer for " + r + ", seeking to " + m.start(0)),
            this.cancelTimer_(),
            this.timer_ = setTimeout(this.skipTheGap_.bind(this), 1E3 * r, k),
            !0) : !1
        }
        ;
        f.afterSeekableWindow_ = function(m, k, r, u) {
            void 0 === u && (u = !1);
            if (!m.length)
                return !1;
            var t = m.end(m.length - 1) + Jb;
            !r.endList && u && (t = m.end(m.length - 1) + 3 * r.targetDuration);
            return k > t ? !0 : !1
        }
        ;
        f.beforeSeekableWindow_ = function(m, k) {
            return m.length && 0 < m.start(0) && k < m.start(0) - this.liveRangeSafeTimeDelta ? !0 : !1
        }
        ;
        f.videoUnderflow_ = function(m) {
            var k = m.videoBuffered
              , r = m.audioBuffered;
            m = m.currentTime;
            if (k) {
                var u;
                if (k.length && r.length) {
                    var t = Rc(k, m - 3);
                    k = Rc(k, m);
                    r = Rc(r, m);
                    r.length && !k.length && t.length && (u = {
                        start: t.end(0),
                        end: r.end(0)
                    })
                } else
                    ue(k, m).length || (u = this.gapFromVideoUnderflow_(k, m));
                return u ? (this.logger_("Encountered a gap in video from " + u.start + " to " + u.end + ". Seeking to current time " + m),
                !0) : !1
            }
        }
        ;
        f.skipTheGap_ = function(m) {
            var k = this.tech_.buffered()
              , r = this.tech_.currentTime();
            k = ue(k, r);
            this.cancelTimer_();
            0 !== k.length && r === m && (this.logger_("skipTheGap_:", "currentTime:", r, "scheduled currentTime:", m, "nextRange start:", k.start(0)),
            this.tech_.setCurrentTime(k.start(0) + ec),
            this.tech_.trigger({
                type: "usage",
                name: "vhs-gap-skip"
            }),
            this.tech_.trigger({
                type: "usage",
                name: "hls-gap-skip"
            }))
        }
        ;
        f.gapFromVideoUnderflow_ = function(m, k) {
            if (2 > m.length)
                m = N.createTimeRanges();
            else {
                for (var r = [], u = 1; u < m.length; u++) {
                    var t = m.end(u - 1)
                      , x = m.start(u);
                    r.push([t, x])
                }
                m = N.createTimeRanges(r)
            }
            for (r = 0; r < m.length; r++)
                if (u = m.start(r),
                t = m.end(r),
                4 > k - u && 2 < k - u)
                    return {
                        start: u,
                        end: t
                    };
            return null
        }
        ;
        return p
    }(), Wp = {
        errorInterval: 30,
        getSource: function(p) {
            var f = this.tech({
                IWillNotUseThisInPlugins: !0
            }).currentSource_ || this.currentSource();
            return p(f)
        }
    }, Xp = function k(f, m) {
        var r = 0
          , u = 0
          , t = N.mergeOptions(Wp, m);
        f.ready(function() {
            f.trigger({
                type: "usage",
                name: "vhs-error-reload-initialized"
            });
            f.trigger({
                type: "usage",
                name: "hls-error-reload-initialized"
            })
        });
        var x = function() {
            u && f.currentTime(u)
        }
          , F = function(P) {
            null !== P && void 0 !== P && (u = Infinity !== f.duration() && f.currentTime() || 0,
            f.one("loadedmetadata", x),
            f.src(P),
            f.trigger({
                type: "usage",
                name: "vhs-error-reload"
            }),
            f.trigger({
                type: "usage",
                name: "hls-error-reload"
            }),
            f.play())
        }
          , K = function() {
            if (Date.now() - r < 1E3 * t.errorInterval)
                f.trigger({
                    type: "usage",
                    name: "vhs-error-reload-canceled"
                }),
                f.trigger({
                    type: "usage",
                    name: "hls-error-reload-canceled"
                });
            else {
                if (t.getSource && "function" === typeof t.getSource)
                    return r = Date.now(),
                    t.getSource.call(f, F);
                N.log.error("ERROR: reloadSourceOnError - The option getSource must be a function!")
            }
        }
          , M = function I() {
            f.off("loadedmetadata", x);
            f.off("error", K);
            f.off("dispose", I)
        };
        f.on("error", K);
        f.on("dispose", M);
        f.reloadSourceOnError = function(I) {
            M();
            k(f, I)
        }
    }, Yp = function(f) {
        Xp(this, f)
    }, Ya = {
        PlaylistLoader: Sc,
        Playlist: ob,
        utils: qo,
        STANDARD_PLAYLIST_SELECTOR: Zk,
        INITIAL_PLAYLIST_SELECTOR: function() {
            var f = this
              , m = this.playlists.master.playlists.filter(ob.isEnabled);
            Wc(m, function(k, r) {
                return Ug(k, r)
            });
            return m.filter(function(k) {
                return !!Fd(f.playlists.master, k).video
            })[0] || null
        },
        lastBandwidthSelector: Zk,
        movingAverageBandwidthSelector: function(f) {
            var m = -1
              , k = -1;
            if (0 > f || 1 < f)
                throw Error("Moving average bandwidth decay must be between 0 and 1.");
            return function() {
                var r = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;
                0 > m && (k = m = this.systemBandwidth);
                0 < this.systemBandwidth && this.systemBandwidth !== k && (m = f * this.systemBandwidth + (1 - f) * m,
                k = this.systemBandwidth);
                return Yk(this.playlists.master, m, parseInt(Me(this.tech_.el(), "width"), 10) * r, parseInt(Me(this.tech_.el(), "height"), 10) * r, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_)
            }
        },
        comparePlaylistBandwidth: Ug,
        comparePlaylistResolution: function(f, m) {
            if (f.attributes.RESOLUTION && f.attributes.RESOLUTION.width)
                var k = f.attributes.RESOLUTION.width;
            k = k || window.Number.MAX_VALUE;
            if (m.attributes.RESOLUTION && m.attributes.RESOLUTION.width)
                var r = m.attributes.RESOLUTION.width;
            r = r || window.Number.MAX_VALUE;
            return k === r && f.attributes.BANDWIDTH && m.attributes.BANDWIDTH ? f.attributes.BANDWIDTH - m.attributes.BANDWIDTH : k - r
        },
        xhr: dk()
    };
    Object.keys(Ua).forEach(function(f) {
        Object.defineProperty(Ya, f, {
            get: function() {
                N.log.warn("using Vhs." + f + " is UNSAFE be sure you know what you are doing");
                return Ua[f]
            },
            set: function(m) {
                N.log.warn("using Vhs." + f + " is UNSAFE be sure you know what you are doing");
                "number" !== typeof m || 0 > m ? N.log.warn("value of Vhs." + f + " must be greater than or equal to 0") : Ua[f] = m
            }
        })
    });
    var jl = function(f, m) {
        m = m.media();
        for (var k = -1, r = 0; r < f.length; r++)
            if (f[r].id === m.id) {
                k = r;
                break
            }
        f.selectedIndex_ = k;
        f.trigger({
            selectedIndex: k,
            type: "change"
        })
    }
      , Zp = function(f, m) {
        m.representations().forEach(function(k) {
            f.addQualityLevel(k)
        });
        jl(f, m.playlists)
    };
    Ya.canPlaySource = function() {
        return N.log.warn("HLS is no longer a tech. Please remove it from your player's techOrder.")
    }
    ;
    var $p = function(f, m) {
        return f.reduce(function(k, r) {
            if (!r.contentProtection)
                return k;
            var u = m.reduce(function(t, x) {
                var F = r.contentProtection[x];
                F && F.pssh && (t[x] = {
                    pssh: F.pssh
                });
                return t
            }, {});
            Object.keys(u).length && k.push(u);
            return k
        }, [])
    }
      , aq = function(f) {
        var m = f.player
          , k = f.sourceKeySystems
          , r = f.audioMedia;
        f = f.mainPlaylists;
        if (!m.eme.initializeMediaKeys)
            return Promise.resolve();
        r = r ? f.concat([r]) : f;
        var u = []
          , t = [];
        $p(r, Object.keys(k)).forEach(function(x) {
            t.push(new Promise(function(F, K) {
                m.tech_.one("keysessioncreated", F)
            }
            ));
            u.push(new Promise(function(F, K) {
                m.eme.initializeMediaKeys({
                    keySystems: x
                }, function(M) {
                    M ? K(M) : F()
                })
            }
            ))
        });
        return Promise.race([Promise.all(u), Promise.race(t)])
    }
      , bq = function(f) {
        var m = f.player;
        var k = f.sourceKeySystems;
        var r = f.media;
        f = f.audioMedia;
        if (k) {
            var u = {};
            r && r.attributes && r.attributes.CODECS && (u = Ke(Ib(r.attributes.CODECS)));
            f && f.attributes && f.attributes.CODECS && (u.audio = f.attributes.CODECS);
            f = sd(u.video);
            u = sd(u.audio);
            var t = {}, x;
            for (x in k)
                t[x] = {},
                u && (t[x].audioContentType = u),
                f && (t[x].videoContentType = f),
                r.contentProtection && r.contentProtection[x] && r.contentProtection[x].pssh && (t[x].pssh = r.contentProtection[x].pssh),
                "string" === typeof k[x] && (t[x].url = k[x]);
            k = N.mergeOptions(k, t)
        }
        return k ? (m.currentSource().keySystems = k) && !m.eme ? (N.log.warn("DRM encrypted source cannot be decrypted without a DRM plugin"),
        !1) : !0 : !1
    }
      , kl = function() {
        if (!window.localStorage)
            return null;
        var f = window.localStorage.getItem("videojs-vhs");
        if (!f)
            return null;
        try {
            return JSON.parse(f)
        } catch (m) {
            return null
        }
    }
      , cq = function(f) {
        return 0 === f.toLowerCase().indexOf("data:application/vnd.videojs.vhs+json,") ? JSON.parse(f.substring(f.indexOf(",") + 1)) : f
    };
    Ya.supportsNativeHls = function() {
        if (!document || !document.createElement)
            return !1;
        var f = document.createElement("video");
        return N.getTech("Html5").isSupported() ? "application/vnd.apple.mpegurl audio/mpegurl audio/x-mpegurl application/x-mpegurl video/x-mpegurl video/mpegurl application/mpegurl".split(" ").some(function(m) {
            return /maybe|probably/i.test(f.canPlayType(m))
        }) : !1
    }();
    var dq = document && document.createElement && N.getTech("Html5").isSupported() ? /maybe|probably/i.test(document.createElement("video").canPlayType("application/dash+xml")) : !1;
    Ya.supportsNativeDash = dq;
    Ya.supportsTypeNatively = function(f) {
        return "hls" === f ? Ya.supportsNativeHls : "dash" === f ? Ya.supportsNativeDash : !1
    }
    ;
    Ya.isSupported = function() {
        return N.log.warn("HLS is no longer a tech. Please remove it from your player's techOrder.")
    }
    ;
    var Yg = function(f) {
        function m(r, u, t) {
            var x = f.call(this, u, N.mergeOptions(t.hls, t.vhs)) || this;
            t.hls && Object.keys(t.hls).length && N.log.warn("Using hls options is deprecated. Please rename `hls` to `vhs` in your options object.");
            "number" === typeof t.initialBandwidth && (x.options_.bandwidth = t.initialBandwidth);
            x.logger_ = Db("VhsHandler");
            u.options_ && u.options_.playerId && (t = N(u.options_.playerId),
            t.hasOwnProperty("hls") || Object.defineProperty(t, "hls", {
                get: function() {
                    N.log.warn("player.hls is deprecated. Use player.tech().vhs instead.");
                    u.trigger({
                        type: "usage",
                        name: "hls-player-access"
                    });
                    return sa(x)
                },
                configurable: !0
            }),
            t.hasOwnProperty("vhs") || Object.defineProperty(t, "vhs", {
                get: function() {
                    N.log.warn("player.vhs is deprecated. Use player.tech().vhs instead.");
                    u.trigger({
                        type: "usage",
                        name: "vhs-player-access"
                    });
                    return sa(x)
                },
                configurable: !0
            }),
            t.hasOwnProperty("dash") || Object.defineProperty(t, "dash", {
                get: function() {
                    N.log.warn("player.dash is deprecated. Use player.tech().vhs instead.");
                    return sa(x)
                },
                configurable: !0
            }),
            x.player_ = t);
            x.tech_ = u;
            x.source_ = r;
            x.stats = {};
            x.ignoreNextSeekingEvent_ = !1;
            x.setOptions_();
            if (x.options_.overrideNative && u.overrideNativeAudioTracks && u.overrideNativeVideoTracks)
                u.overrideNativeAudioTracks(!0),
                u.overrideNativeVideoTracks(!0);
            else if (x.options_.overrideNative && (u.featuresNativeVideoTracks || u.featuresNativeAudioTracks))
                throw Error("Overriding native HLS requires emulated tracks. See https://git.io/vMpjB");
            x.on(document, ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"], function(F) {
                (F = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement) && F.contains(x.tech_.el()) ? x.masterPlaylistController_.fastQualityChange_() : x.masterPlaylistController_.checkABR_()
            });
            x.on(x.tech_, "seeking", function() {
                this.ignoreNextSeekingEvent_ ? this.ignoreNextSeekingEvent_ = !1 : this.setCurrentTime(this.tech_.currentTime())
            });
            x.on(x.tech_, "error", function() {
                this.tech_.error() && this.masterPlaylistController_ && this.masterPlaylistController_.pauseLoading()
            });
            x.on(x.tech_, "play", x.play);
            return x
        }
        ia(m, f);
        var k = m.prototype;
        k.setOptions_ = function() {
            var r = this;
            this.options_.withCredentials = this.options_.withCredentials || !1;
            this.options_.handleManifestRedirects = !1 === this.options_.handleManifestRedirects ? !1 : !0;
            this.options_.limitRenditionByPlayerDimensions = !1 === this.options_.limitRenditionByPlayerDimensions ? !1 : !0;
            this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || !1;
            this.options_.smoothQualityChange = this.options_.smoothQualityChange || !1;
            this.options_.useBandwidthFromLocalStorage = "undefined" !== typeof this.source_.useBandwidthFromLocalStorage ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || !1;
            this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || !1;
            this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || !1;
            this.options_.customTagParsers = this.options_.customTagParsers || [];
            this.options_.customTagMappers = this.options_.customTagMappers || [];
            this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || !1;
            "number" !== typeof this.options_.blacklistDuration && (this.options_.blacklistDuration = 300);
            if ("number" !== typeof this.options_.bandwidth && this.options_.useBandwidthFromLocalStorage) {
                var u = kl();
                u && u.bandwidth && (this.options_.bandwidth = u.bandwidth,
                this.tech_.trigger({
                    type: "usage",
                    name: "vhs-bandwidth-from-local-storage"
                }),
                this.tech_.trigger({
                    type: "usage",
                    name: "hls-bandwidth-from-local-storage"
                }));
                u && u.throughput && (this.options_.throughput = u.throughput,
                this.tech_.trigger({
                    type: "usage",
                    name: "vhs-throughput-from-local-storage"
                }),
                this.tech_.trigger({
                    type: "usage",
                    name: "hls-throughput-from-local-storage"
                }))
            }
            "number" !== typeof this.options_.bandwidth && (this.options_.bandwidth = Ua.INITIAL_BANDWIDTH);
            this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Ua.INITIAL_BANDWIDTH;
            "withCredentials useDevicePixelRatio limitRenditionByPlayerDimensions bandwidth smoothQualityChange customTagParsers customTagMappers handleManifestRedirects cacheEncryptionKeys playlistSelector initialPlaylistSelector experimentalBufferBasedABR liveRangeSafeTimeDelta experimentalLLHLS useNetworkInformationApi useDtsForTimestampOffset experimentalExactManifestTimings experimentalLeastPixelDiffSelector".split(" ").forEach(function(t) {
                "undefined" !== typeof r.source_[t] && (r.options_[t] = r.source_[t])
            });
            this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;
            this.useDevicePixelRatio = this.options_.useDevicePixelRatio
        }
        ;
        k.src = function(r, u) {
            var t = this;
            r && (this.setOptions_(),
            this.options_.src = cq(this.source_.src),
            this.options_.tech = this.tech_,
            this.options_.externVhs = Ya,
            this.options_.sourceType = ij(u),
            this.options_.seekTo = function(x) {
                t.tech_.setCurrentTime(x)
            }
            ,
            this.options_.smoothQualityChange && N.log.warn("smoothQualityChange is deprecated and will be removed in the next major version"),
            this.masterPlaylistController_ = new Rp(this.options_),
            r = N.mergeOptions({
                liveRangeSafeTimeDelta: Jb
            }, this.options_, {
                seekable: function() {
                    return t.seekable()
                },
                media: function() {
                    return t.masterPlaylistController_.media()
                },
                masterPlaylistController: this.masterPlaylistController_
            }),
            this.playbackWatcher_ = new Vp(r),
            this.masterPlaylistController_.on("error", function() {
                var x = N.players[t.tech_.options_.playerId]
                  , F = t.masterPlaylistController_.error;
                "object" !== typeof F || F.code ? "string" === typeof F && (F = {
                    message: F,
                    code: 3
                }) : F.code = 3;
                x.error(F)
            }),
            r = this.options_.experimentalBufferBasedABR ? Ya.movingAverageBandwidthSelector(.55) : Ya.STANDARD_PLAYLIST_SELECTOR,
            this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : r.bind(this),
            this.masterPlaylistController_.selectInitialPlaylist = Ya.INITIAL_PLAYLIST_SELECTOR.bind(this),
            this.playlists = this.masterPlaylistController_.masterPlaylistLoader_,
            this.mediaSource = this.masterPlaylistController_.mediaSource,
            Object.defineProperties(this, {
                selectPlaylist: {
                    get: function() {
                        return this.masterPlaylistController_.selectPlaylist
                    },
                    set: function(x) {
                        this.masterPlaylistController_.selectPlaylist = x.bind(this)
                    }
                },
                throughput: {
                    get: function() {
                        return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate
                    },
                    set: function(x) {
                        this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = x;
                        this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1
                    }
                },
                bandwidth: {
                    get: function() {
                        var x = this.masterPlaylistController_.mainSegmentLoader_.bandwidth
                          , F = window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection;
                        this.options_.useNetworkInformationApi && F && (F = 1E6 * F.downlink,
                        x = 1E7 <= F && 1E7 <= x ? Math.max(x, F) : F);
                        return x
                    },
                    set: function(x) {
                        this.masterPlaylistController_.mainSegmentLoader_.bandwidth = x;
                        this.masterPlaylistController_.mainSegmentLoader_.throughput = {
                            rate: 0,
                            count: 0
                        }
                    }
                },
                systemBandwidth: {
                    get: function() {
                        return Math.floor(1 / (1 / (this.bandwidth || 1) + (0 < this.throughput ? 1 / this.throughput : 0)))
                    },
                    set: function() {
                        N.log.error('The "systemBandwidth" property is read-only')
                    }
                }
            }),
            this.options_.bandwidth && (this.bandwidth = this.options_.bandwidth),
            this.options_.throughput && (this.throughput = this.options_.throughput),
            Object.defineProperties(this.stats, {
                bandwidth: {
                    get: function() {
                        return t.bandwidth || 0
                    },
                    enumerable: !0
                },
                mediaRequests: {
                    get: function() {
                        return t.masterPlaylistController_.mediaRequests_() || 0
                    },
                    enumerable: !0
                },
                mediaRequestsAborted: {
                    get: function() {
                        return t.masterPlaylistController_.mediaRequestsAborted_() || 0
                    },
                    enumerable: !0
                },
                mediaRequestsTimedout: {
                    get: function() {
                        return t.masterPlaylistController_.mediaRequestsTimedout_() || 0
                    },
                    enumerable: !0
                },
                mediaRequestsErrored: {
                    get: function() {
                        return t.masterPlaylistController_.mediaRequestsErrored_() || 0
                    },
                    enumerable: !0
                },
                mediaTransferDuration: {
                    get: function() {
                        return t.masterPlaylistController_.mediaTransferDuration_() || 0
                    },
                    enumerable: !0
                },
                mediaBytesTransferred: {
                    get: function() {
                        return t.masterPlaylistController_.mediaBytesTransferred_() || 0
                    },
                    enumerable: !0
                },
                mediaSecondsLoaded: {
                    get: function() {
                        return t.masterPlaylistController_.mediaSecondsLoaded_() || 0
                    },
                    enumerable: !0
                },
                mediaAppends: {
                    get: function() {
                        return t.masterPlaylistController_.mediaAppends_() || 0
                    },
                    enumerable: !0
                },
                mainAppendsToLoadedData: {
                    get: function() {
                        return t.masterPlaylistController_.mainAppendsToLoadedData_() || 0
                    },
                    enumerable: !0
                },
                audioAppendsToLoadedData: {
                    get: function() {
                        return t.masterPlaylistController_.audioAppendsToLoadedData_() || 0
                    },
                    enumerable: !0
                },
                appendsToLoadedData: {
                    get: function() {
                        return t.masterPlaylistController_.appendsToLoadedData_() || 0
                    },
                    enumerable: !0
                },
                timeToLoadedData: {
                    get: function() {
                        return t.masterPlaylistController_.timeToLoadedData_() || 0
                    },
                    enumerable: !0
                },
                buffered: {
                    get: function() {
                        return pc(t.tech_.buffered())
                    },
                    enumerable: !0
                },
                currentTime: {
                    get: function() {
                        return t.tech_.currentTime()
                    },
                    enumerable: !0
                },
                currentSource: {
                    get: function() {
                        return t.tech_.currentSource_
                    },
                    enumerable: !0
                },
                currentTech: {
                    get: function() {
                        return t.tech_.name_
                    },
                    enumerable: !0
                },
                duration: {
                    get: function() {
                        return t.tech_.duration()
                    },
                    enumerable: !0
                },
                master: {
                    get: function() {
                        return t.playlists.master
                    },
                    enumerable: !0
                },
                playerDimensions: {
                    get: function() {
                        return t.tech_.currentDimensions()
                    },
                    enumerable: !0
                },
                seekable: {
                    get: function() {
                        return pc(t.tech_.seekable())
                    },
                    enumerable: !0
                },
                timestamp: {
                    get: function() {
                        return Date.now()
                    },
                    enumerable: !0
                },
                videoPlaybackQuality: {
                    get: function() {
                        return t.tech_.getVideoPlaybackQuality()
                    },
                    enumerable: !0
                }
            }),
            this.tech_.one("canplay", this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_)),
            this.tech_.on("bandwidthupdate", function() {
                if (t.options_.useBandwidthFromLocalStorage) {
                    var x = {
                        bandwidth: t.bandwidth,
                        throughput: Math.round(t.throughput)
                    };
                    if (window.localStorage) {
                        var F = kl();
                        F = F ? N.mergeOptions(F, x) : x;
                        try {
                            window.localStorage.setItem("videojs-vhs", JSON.stringify(F))
                        } catch (K) {}
                    }
                }
            }),
            this.masterPlaylistController_.on("selectedinitialmedia", function() {
                Up(t)
            }),
            this.masterPlaylistController_.sourceUpdater_.on("createdsourcebuffers", function() {
                t.setupEme_()
            }),
            this.on(this.masterPlaylistController_, "progress", function() {
                this.tech_.trigger("progress")
            }),
            this.on(this.masterPlaylistController_, "firstplay", function() {
                this.ignoreNextSeekingEvent_ = !0
            }),
            this.setupQualityLevels_(),
            this.tech_.el() && (this.mediaSourceUrl_ = window.URL.createObjectURL(this.masterPlaylistController_.mediaSource),
            this.tech_.src(this.mediaSourceUrl_)))
        }
        ;
        k.createKeySessions_ = function() {
            var r = this
              , u = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;
            this.logger_("waiting for EME key session creation");
            aq({
                player: this.player_,
                sourceKeySystems: this.source_.keySystems,
                audioMedia: u && u.media(),
                mainPlaylists: this.playlists.master.playlists
            }).then(function() {
                r.logger_("created EME key session");
                r.masterPlaylistController_.sourceUpdater_.initializedEme()
            })["catch"](function(t) {
                r.logger_("error while creating EME key session", t);
                r.player_.error({
                    message: "Failed to initialize media keys for EME",
                    code: 3
                })
            })
        }
        ;
        k.handleWaitingForKey_ = function() {
            this.logger_("waitingforkey fired, attempting to create any new key sessions");
            this.createKeySessions_()
        }
        ;
        k.setupEme_ = function() {
            var r = this
              , u = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;
            u = bq({
                player: this.player_,
                sourceKeySystems: this.source_.keySystems,
                media: this.playlists.media(),
                audioMedia: u && u.media()
            });
            this.player_.tech_.on("keystatuschange", function(t) {
                if ("output-restricted" === t.status && (t = r.masterPlaylistController_.master()) && t.playlists) {
                    var x = [];
                    t.playlists.forEach(function(K) {
                        K && K.attributes && K.attributes.RESOLUTION && 720 <= K.attributes.RESOLUTION.height && (!K.excludeUntil || Infinity > K.excludeUntil) && (K.excludeUntil = Infinity,
                        x.push(K))
                    });
                    if (x.length) {
                        var F;
                        (F = N.log).warn.apply(F, ['DRM keystatus changed to "output-restricted." Removing the following HD playlists that will most likely fail to play and clearing the buffer. This may be due to HDCP restrictions on the stream and the capabilities of the current device.'].concat(x));
                        r.masterPlaylistController_.fastQualityChange_()
                    }
                }
            });
            this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);
            this.player_.tech_.on("waitingforkey", this.handleWaitingForKey_);
            11 !== N.browser.IE_VERSION && u ? this.createKeySessions_() : this.masterPlaylistController_.sourceUpdater_.initializedEme()
        }
        ;
        k.setupQualityLevels_ = function() {
            var r = this
              , u = N.players[this.tech_.options_.playerId];
            u && u.qualityLevels && !this.qualityLevels_ && (this.qualityLevels_ = u.qualityLevels(),
            this.masterPlaylistController_.on("selectedinitialmedia", function() {
                Zp(r.qualityLevels_, r)
            }),
            this.playlists.on("mediachange", function() {
                jl(r.qualityLevels_, r.playlists)
            }))
        }
        ;
        m.version = function() {
            return {
                "@videojs/http-streaming": "2.14.3",
                "mux.js": "6.0.1",
                "mpd-parser": "0.21.1",
                "m3u8-parser": "4.7.1",
                "aes-decrypter": "3.1.3"
            }
        }
        ;
        k.version = function() {
            return this.constructor.version()
        }
        ;
        k.canChangeType = function() {
            return el.canChangeType()
        }
        ;
        k.play = function() {
            this.masterPlaylistController_.play()
        }
        ;
        k.setCurrentTime = function(r) {
            this.masterPlaylistController_.setCurrentTime(r)
        }
        ;
        k.duration = function() {
            return this.masterPlaylistController_.duration()
        }
        ;
        k.seekable = function() {
            return this.masterPlaylistController_.seekable()
        }
        ;
        k.dispose = function() {
            this.playbackWatcher_ && this.playbackWatcher_.dispose();
            this.masterPlaylistController_ && this.masterPlaylistController_.dispose();
            this.qualityLevels_ && this.qualityLevels_.dispose();
            this.player_ && (delete this.player_.vhs,
            delete this.player_.dash,
            delete this.player_.hls);
            this.tech_ && this.tech_.vhs && delete this.tech_.vhs;
            this.tech_ && delete this.tech_.hls;
            this.mediaSourceUrl_ && window.URL.revokeObjectURL && (window.URL.revokeObjectURL(this.mediaSourceUrl_),
            this.mediaSourceUrl_ = null);
            this.tech_ && this.tech_.off("waitingforkey", this.handleWaitingForKey_);
            f.prototype.dispose.call(this)
        }
        ;
        k.convertToProgramTime = function(r, u) {
            return vo({
                playlist: this.masterPlaylistController_.media(),
                time: r,
                callback: u
            })
        }
        ;
        k.seekToProgramTime = function(r, u, t, x) {
            void 0 === t && (t = !0);
            void 0 === x && (x = 2);
            return wo({
                programTime: r,
                playlist: this.masterPlaylistController_.media(),
                retryCount: x,
                pauseAfterSeek: t,
                seekTo: this.options_.seekTo,
                tech: this.options_.tech,
                callback: u
            })
        }
        ;
        return m
    }(N.getComponent("Component"))
      , Qe = {
        name: "videojs-http-streaming",
        VERSION: "2.14.3",
        canHandleSource: function(f, m) {
            void 0 === m && (m = {});
            m = N.mergeOptions(N.options, m);
            return Qe.canPlayType(f.type, m)
        },
        handleSource: function(f, m, k) {
            void 0 === k && (k = {});
            k = N.mergeOptions(N.options, k);
            m.vhs = new Yg(f,m,k);
            N.hasOwnProperty("hls") || Object.defineProperty(m, "hls", {
                get: function() {
                    N.log.warn("player.tech().hls is deprecated. Use player.tech().vhs instead.");
                    return m.vhs
                },
                configurable: !0
            });
            m.vhs.xhr = dk();
            m.vhs.src(f.src, f.type);
            return m.vhs
        },
        canPlayType: function(f, m) {
            void 0 === m && (m = {});
            var k = N.mergeOptions(N.options, m);
            m = k.vhs;
            m = void 0 === m ? {} : m;
            m = m.overrideNative;
            m = void 0 === m ? !N.browser.IS_ANY_SAFARI : m;
            k = k.hls;
            k = void 0 === k ? {} : k;
            k = k.overrideNative;
            k = void 0 === k ? !1 : k;
            return (f = ij(f)) && (!Ya.supportsTypeNatively(f) || k || m) ? "maybe" : ""
        }
    };
    ne("avc1.4d400d,mp4a.40.2") && N.getTech("Html5").registerSourceHandler(Qe, 0);
    N.VhsHandler = Yg;
    Object.defineProperty(N, "HlsHandler", {
        get: function() {
            N.log.warn("videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.");
            return Yg
        },
        configurable: !0
    });
    N.VhsSourceHandler = Qe;
    Object.defineProperty(N, "HlsSourceHandler", {
        get: function() {
            N.log.warn("videojs.HlsSourceHandler is deprecated. Use videojs.VhsSourceHandler instead.");
            return Qe
        },
        configurable: !0
    });
    N.Vhs = Ya;
    Object.defineProperty(N, "Hls", {
        get: function() {
            N.log.warn("videojs.Hls is deprecated. Use videojs.Vhs instead.");
            return Ya
        },
        configurable: !0
    });
    N.use || (N.registerComponent("Hls", Ya),
    N.registerComponent("Vhs", Ya));
    N.options.vhs = N.options.vhs || {};
    N.options.hls = N.options.hls || {};
    N.getPlugin && N.getPlugin("reloadSourceOnError") || (N.registerPlugin || N.plugin)("reloadSourceOnError", Yp);
    return N
});
/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/c9e11c47/video.js.tmp ***/
/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/39a6a338/videojs-seek-buttons.min.js ***/
/*! @name videojs-seek-buttons @version 1.6.0 @license Apache-2.0 */
!function(e, o) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = o(require("video.js")) : "function" == typeof define && define.amd ? define(["video.js"], o) : (e = e || self).videojsSeekButtons = o(e.videojs)
}(this, function(e) {
    "use strict";
    function o(e, t) {
        return (o = Object.setPrototypeOf || function(e, o) {
            return e.__proto__ = o,
            e
        }
        )(e, t)
    }
    var t = (e = e && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e).getComponent("Button")
      , n = {
        forwardIndex: 1,
        backIndex: 1
    }
      , r = e.registerPlugin || e.plugin
      , s = function(o) {
        var t = this;
        this.ready(function() {
            !function(e, o) {
                e.addClass("vjs-seek-buttons"),
                o.forward && o.forward > 0 && (e.controlBar.seekForward = e.controlBar.addChild("seekButton", {
                    direction: "forward",
                    seconds: o.forward
                }, o.forwardIndex)),
                o.back && o.back > 0 && (e.controlBar.seekBack = e.controlBar.addChild("seekButton", {
                    direction: "back",
                    seconds: o.back
                }, o.backIndex))
            }(t, e.mergeOptions(n, o))
        })
    };
    s.VERSION = "1.6.0";
    var i = function(e) {
        var t, n;
        function r(o, t) {
            var n;
            return "forward" === (n = e.call(this, o, t) || this).options_.direction ? n.controlText(n.localize("Seek forward {{seconds}} seconds").replace("{{seconds}}", n.options_.seconds)) : "back" === n.options_.direction && n.controlText(n.localize("Seek back {{seconds}} seconds").replace("{{seconds}}", n.options_.seconds)),
            n
        }
        n = e,
        (t = r).prototype = Object.create(n.prototype),
        t.prototype.constructor = t,
        o(t, n);
        var s = r.prototype;
        return s.buildCSSClass = function() {
            return "vjs-seek-button skip-" + this.options_.direction + " skip-" + this.options_.seconds + " " + e.prototype.buildCSSClass.call(this)
        }
        ,
        s.handleClick = function() {
            var e = this.player_.currentTime();
            "forward" === this.options_.direction ? this.player_.currentTime(e + this.options_.seconds) : "back" === this.options_.direction && this.player_.currentTime(e - this.options_.seconds)
        }
        ,
        r
    }(t);
    return e.registerComponent("SeekButton", i),
    r("seekButtons", s),
    s
});
/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/39a6a338/videojs-seek-buttons.min.js ***/
/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/8566b7cb/videojs.hotkeys.min.js ***/
/* videojs-hotkeys v0.2.27 - https://github.com/ctd1500/videojs-hotkeys */
!function(e, t) {
    "undefined" != typeof window && window.videojs ? t(window.videojs) : "function" == typeof define && define.amd ? define("videojs-hotkeys", ["video.js"], function(e) {
        return t(e.default || e)
    }) : "undefined" != typeof module && module.exports && (module.exports = t(require("video.js")))
}(0, function(e) {
    "use strict";
    "undefined" != typeof window && (window.videojs_hotkeys = {
        version: "0.2.27"
    });
    (e.registerPlugin || e.plugin)("hotkeys", function(t) {
        function n(e) {
            return "function" == typeof s ? s(e) : s
        }
        function o(e) {
            null != e && "function" == typeof e.then && e.then(null, function(e) {})
        }
        var r = this
          , u = r.el()
          , l = document
          , i = {
            volumeStep: .1,
            seekStep: 5,
            enableMute: !0,
            enableVolumeScroll: !0,
            enableHoverScroll: !1,
            enableFullscreen: !0,
            enableNumbers: !0,
            enableJogStyle: !1,
            alwaysCaptureHotkeys: !1,
            captureDocumentHotkeys: !1,
            documentHotkeysFocusElementFilter: function() {
                return !1
            },
            enableModifiersForNumbers: !0,
            enableInactiveFocus: !0,
            skipInitialFocus: !1,
            playPauseKey: function(e) {
                return 32 === e.which || 179 === e.which
            },
            rewindKey: function(e) {
                return 37 === e.which || 177 === e.which
            },
            forwardKey: function(e) {
                return 39 === e.which || 176 === e.which
            },
            volumeUpKey: function(e) {
                return 38 === e.which
            },
            volumeDownKey: function(e) {
                return 40 === e.which
            },
            muteKey: function(e) {
                return 77 === e.which
            },
            fullscreenKey: function(e) {
                return 70 === e.which
            },
            customKeys: {}
        }
          , c = e.mergeOptions || e.util.mergeOptions
          , a = (t = c(i, t || {})).volumeStep
          , s = t.seekStep
          , m = t.enableMute
          , y = t.enableVolumeScroll
          , f = t.enableHoverScroll
          , v = t.enableFullscreen
          , d = t.enableNumbers
          , p = t.enableJogStyle
          , b = t.alwaysCaptureHotkeys
          , h = t.captureDocumentHotkeys
          , w = t.documentHotkeysFocusElementFilter
          , k = t.enableModifiersForNumbers
          , S = t.enableInactiveFocus
          , K = t.skipInitialFocus
          , F = e.VERSION;
        u.hasAttribute("tabIndex") || u.setAttribute("tabIndex", "-1"),
        u.style.outline = "none",
        !b && r.autoplay() || K || r.one("play", function() {
            u.focus()
        }),
        S && r.on("userinactive", function() {
            var e = function() {
                clearTimeout(t)
            }
              , t = setTimeout(function() {
                r.off("useractive", e);
                var t = l.activeElement
                  , n = u.querySelector(".vjs-control-bar");
                t && t.parentElement == n && u.focus()
            }, 10);
            r.one("useractive", e)
        }),
        r.on("play", function() {
            var e = u.querySelector(".iframeblocker");
            e && "" === e.style.display && (e.style.display = "block",
            e.style.bottom = "39px")
        });
        var q = function(e) {
            var i, c, s = e.which, y = e.preventDefault.bind(e), f = r.duration();
            if (r.controls()) {
                var S = l.activeElement;
                if (b || h && w(S) || S == u || S == u.querySelector(".vjs-tech") || S == u.querySelector(".vjs-control-bar") || S == u.querySelector(".iframeblocker"))
                    switch (g(e, r)) {
                    case 1:
                        y(),
                        (b || h) && e.stopPropagation(),
                        r.paused() ? o(r.play()) : r.pause();
                        break;
                    case 2:
                        i = !r.paused(),
                        y(),
                        i && r.pause(),
                        (c = r.currentTime() - n(e)) <= 0 && (c = 0),
                        r.currentTime(c),
                        i && o(r.play());
                        break;
                    case 3:
                        i = !r.paused(),
                        y(),
                        i && r.pause(),
                        (c = r.currentTime() + n(e)) >= f && (c = i ? f - .001 : f),
                        r.currentTime(c),
                        i && o(r.play());
                        break;
                    case 5:
                        y(),
                        p ? (c = r.currentTime() - 1,
                        r.currentTime() <= 1 && (c = 0),
                        r.currentTime(c)) : r.volume(r.volume() - a);
                        break;
                    case 4:
                        y(),
                        p ? ((c = r.currentTime() + 1) >= f && (c = f),
                        r.currentTime(c)) : r.volume(r.volume() + a);
                        break;
                    case 6:
                        m && r.muted(!r.muted());
                        break;
                    case 7:
                        v && (r.isFullscreen() ? r.exitFullscreen() : r.requestFullscreen());
                        break;
                    default:
                        if ((s > 47 && s < 59 || s > 95 && s < 106) && (k || !(e.metaKey || e.ctrlKey || e.altKey)) && d) {
                            var K = 48;
                            s > 95 && (K = 96);
                            var F = s - K;
                            y(),
                            r.currentTime(r.duration() * F * .1)
                        }
                        for (var q in t.customKeys) {
                            var j = t.customKeys[q];
                            j && j.key && j.handler && j.key(e) && (y(),
                            j.handler(r, t, e))
                        }
                    }
            }
        }
          , j = !1
          , T = u.querySelector(".vjs-volume-menu-button") || u.querySelector(".vjs-volume-panel");
        null != T && (T.onmouseover = function() {
            j = !0
        }
        ,
        T.onmouseout = function() {
            j = !1
        }
        );
        var E = function(e) {
            if (f)
                t = 0;
            else
                var t = l.activeElement;
            if (r.controls() && (b || t == u || t == u.querySelector(".vjs-tech") || t == u.querySelector(".iframeblocker") || t == u.querySelector(".vjs-control-bar") || j) && y) {
                e = window.event || e;
                var n = Math.max(-1, Math.min(1, e.wheelDelta || -e.detail));
                e.preventDefault(),
                1 == n ? r.volume(r.volume() + a) : -1 == n && r.volume(r.volume() - a)
            }
        }
          , g = function(e, n) {
            return t.playPauseKey(e, n) ? 1 : t.rewindKey(e, n) ? 2 : t.forwardKey(e, n) ? 3 : t.volumeUpKey(e, n) ? 4 : t.volumeDownKey(e, n) ? 5 : t.muteKey(e, n) ? 6 : t.fullscreenKey(e, n) ? 7 : void 0
        };
        return r.on("keydown", q),
        r.on("dblclick", function(e) {
            if (null != F && F <= "7.1.0" && r.controls()) {
                var t = e.relatedTarget || e.toElement || l.activeElement;
                t != u && t != u.querySelector(".vjs-tech") && t != u.querySelector(".iframeblocker") || v && (r.isFullscreen() ? r.exitFullscreen() : r.requestFullscreen())
            }
        }),
        r.on("mousewheel", E),
        r.on("DOMMouseScroll", E),
        h && document.addEventListener("keydown", function(e) {
            q(e)
        }),
        this
    })
});
/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/8566b7cb/videojs.hotkeys.min.js ***/
/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/486ab4c2/js/silvermine-videojs-quality-selector.min.js ***/
/*! @silvermine/videojs-quality-selector 2021-09-01 23333fc-dirty */

!function r(i, u, o) {
    function c(e, n) {
        if (!u[e]) {
            if (!i[e]) {
                var t = "function" == typeof require && require;
                if (!n && t)
                    return t(e, !0);
                if (a)
                    return a(e, !0);
                throw (t = new Error("Cannot find module '" + e + "'")).code = "MODULE_NOT_FOUND",
                t
            }
            t = u[e] = {
                exports: {}
            },
            i[e][0].call(t.exports, function(n) {
                return c(i[e][1][n] || n)
            }, t, t.exports, r, i, u, o)
        }
        return u[e].exports
    }
    for (var a = "function" == typeof require && require, n = 0; n < o.length; n++)
        c(o[n]);
    return c
}({
    1: [function(n, e, t) {
        !function() {
            var u = !1
              , o = /xyz/.test(function() {
                xyz
            }) ? /\b_super\b/ : /.*/;
            this.Class = function() {}
            ,
            Class.extend = function(n) {
                var i = this.prototype;
                u = !0;
                var e, t = new this;
                for (e in u = !1,
                n)
                    t[e] = "function" == typeof n[e] && "function" == typeof i[e] && o.test(n[e]) ? function(t, r) {
                        return function() {
                            var n = this._super;
                            this._super = i[t];
                            var e = r.apply(this, arguments);
                            return this._super = n,
                            e
                        }
                    }(e, n[e]) : n[e];
                function r() {
                    !u && this.init && this.init.apply(this, arguments)
                }
                return ((r.prototype = t).constructor = r).extend = arguments.callee,
                r
            }
            ,
            e.exports = Class
        }()
    }
    , {}],
    2: [function(n, W, Y) {
        !function(U) {
            !function() {
                !function() {
                    var n = "object" == typeof self && self.self === self && self || "object" == typeof U && U.global === U && U || this || {}
                      , e = n._
                      , r = Array.prototype
                      , o = Object.prototype
                      , l = "undefined" != typeof Symbol ? Symbol.prototype : null
                      , i = r.push
                      , a = r.slice
                      , f = o.toString
                      , u = o.hasOwnProperty
                      , t = Array.isArray
                      , c = Object.keys
                      , s = Object.create
                      , h = function() {}
                      , p = function(n) {
                        return n instanceof p ? n : this instanceof p ? void (this._wrapped = n) : new p(n)
                    };
                    void 0 === Y || Y.nodeType ? n._ = p : (Y = void 0 !== W && !W.nodeType && W.exports ? W.exports = p : Y)._ = p,
                    p.VERSION = "1.9.1";
                    var d, y = function(i, u, n) {
                        if (void 0 === u)
                            return i;
                        switch (null == n ? 3 : n) {
                        case 1:
                            return function(n) {
                                return i.call(u, n)
                            }
                            ;
                        case 3:
                            return function(n, e, t) {
                                return i.call(u, n, e, t)
                            }
                            ;
                        case 4:
                            return function(n, e, t, r) {
                                return i.call(u, n, e, t, r)
                            }
                        }
                        return function() {
                            return i.apply(u, arguments)
                        }
                    }, v = function(n, e, t) {
                        return p.iteratee !== d ? p.iteratee(n, e) : null == n ? p.identity : p.isFunction(n) ? y(n, e, t) : p.isObject(n) && !p.isArray(n) ? p.matcher(n) : p.property(n)
                    };
                    p.iteratee = d = function(n, e) {
                        return v(n, e, 1 / 0)
                    }
                    ;
                    function g(i, u) {
                        return u = null == u ? i.length - 1 : +u,
                        function() {
                            for (var n = Math.max(arguments.length - u, 0), e = Array(n), t = 0; t < n; t++)
                                e[t] = arguments[t + u];
                            switch (u) {
                            case 0:
                                return i.call(this, e);
                            case 1:
                                return i.call(this, arguments[0], e);
                            case 2:
                                return i.call(this, arguments[0], arguments[1], e)
                            }
                            for (var r = Array(u + 1), t = 0; t < u; t++)
                                r[t] = arguments[t];
                            return r[u] = e,
                            i.apply(this, r)
                        }
                    }
                    function m(e) {
                        return function(n) {
                            return null == n ? void 0 : n[e]
                        }
                    }
                    function S(n, e) {
                        for (var t = e.length, r = 0; r < t; r++) {
                            if (null == n)
                                return;
                            n = n[e[r]]
                        }
                        return t ? n : void 0
                    }
                    var _ = function(n) {
                        if (!p.isObject(n))
                            return {};
                        if (s)
                            return s(n);
                        h.prototype = n;
                        n = new h;
                        return h.prototype = null,
                        n
                    }
                      , b = function(n, e) {
                        return null != n && u.call(n, e)
                    }
                      , x = Math.pow(2, 53) - 1
                      , j = m("length")
                      , k = function(n) {
                        n = j(n);
                        return "number" == typeof n && 0 <= n && n <= x
                    };
                    p.each = p.forEach = function(n, e, t) {
                        if (e = y(e, t),
                        k(n))
                            for (i = 0,
                            u = n.length; i < u; i++)
                                e(n[i], i, n);
                        else
                            for (var r = p.keys(n), i = 0, u = r.length; i < u; i++)
                                e(n[r[i]], r[i], n);
                        return n
                    }
                    ,
                    p.map = p.collect = function(n, e, t) {
                        e = v(e, t);
                        for (var r = !k(n) && p.keys(n), i = (r || n).length, u = Array(i), o = 0; o < i; o++) {
                            var c = r ? r[o] : o;
                            u[o] = e(n[c], c, n)
                        }
                        return u
                    }
                    ;
                    var w = function(a) {
                        return function(n, e, t, r) {
                            var i = 3 <= arguments.length;
                            return function(n, e, t, r) {
                                var i = !k(n) && p.keys(n)
                                  , u = (i || n).length
                                  , o = 0 < a ? 0 : u - 1;
                                for (r || (t = n[i ? i[o] : o],
                                o += a); 0 <= o && o < u; o += a) {
                                    var c = i ? i[o] : o;
                                    t = e(t, n[c], c, n)
                                }
                                return t
                            }(n, y(e, r, 4), t, i)
                        }
                    };
                    p.reduce = p.foldl = p.inject = w(1),
                    p.reduceRight = p.foldr = w(-1),
                    p.find = p.detect = function(n, e, t) {
                        t = (k(n) ? p.findIndex : p.findKey)(n, e, t);
                        if (void 0 !== t && -1 !== t)
                            return n[t]
                    }
                    ,
                    p.filter = p.select = function(n, r, e) {
                        var i = [];
                        return r = v(r, e),
                        p.each(n, function(n, e, t) {
                            r(n, e, t) && i.push(n)
                        }),
                        i
                    }
                    ,
                    p.reject = function(n, e, t) {
                        return p.filter(n, p.negate(v(e)), t)
                    }
                    ,
                    p.every = p.all = function(n, e, t) {
                        e = v(e, t);
                        for (var r = !k(n) && p.keys(n), i = (r || n).length, u = 0; u < i; u++) {
                            var o = r ? r[u] : u;
                            if (!e(n[o], o, n))
                                return !1
                        }
                        return !0
                    }
                    ,
                    p.some = p.any = function(n, e, t) {
                        e = v(e, t);
                        for (var r = !k(n) && p.keys(n), i = (r || n).length, u = 0; u < i; u++) {
                            var o = r ? r[u] : u;
                            if (e(n[o], o, n))
                                return !0
                        }
                        return !1
                    }
                    ,
                    p.contains = p.includes = p.include = function(n, e, t, r) {
                        return k(n) || (n = p.values(n)),
                        0 <= p.indexOf(n, e, t = "number" != typeof t || r ? 0 : t)
                    }
                    ,
                    p.invoke = g(function(n, t, r) {
                        var i, u;
                        return p.isFunction(t) ? u = t : p.isArray(t) && (i = t.slice(0, -1),
                        t = t[t.length - 1]),
                        p.map(n, function(n) {
                            var e = u;
                            if (!e) {
                                if (null == (n = i && i.length ? S(n, i) : n))
                                    return;
                                e = n[t]
                            }
                            return null == e ? e : e.apply(n, r)
                        })
                    }),
                    p.pluck = function(n, e) {
                        return p.map(n, p.property(e))
                    }
                    ,
                    p.where = function(n, e) {
                        return p.filter(n, p.matcher(e))
                    }
                    ,
                    p.findWhere = function(n, e) {
                        return p.find(n, p.matcher(e))
                    }
                    ,
                    p.max = function(n, r, e) {
                        var t, i, u = -1 / 0, o = -1 / 0;
                        if (null == r || "number" == typeof r && "object" != typeof n[0] && null != n)
                            for (var c = 0, a = (n = k(n) ? n : p.values(n)).length; c < a; c++)
                                null != (t = n[c]) && u < t && (u = t);
                        else
                            r = v(r, e),
                            p.each(n, function(n, e, t) {
                                i = r(n, e, t),
                                (o < i || i === -1 / 0 && u === -1 / 0) && (u = n,
                                o = i)
                            });
                        return u
                    }
                    ,
                    p.min = function(n, r, e) {
                        var t, i, u = 1 / 0, o = 1 / 0;
                        if (null == r || "number" == typeof r && "object" != typeof n[0] && null != n)
                            for (var c = 0, a = (n = k(n) ? n : p.values(n)).length; c < a; c++)
                                null != (t = n[c]) && t < u && (u = t);
                        else
                            r = v(r, e),
                            p.each(n, function(n, e, t) {
                                ((i = r(n, e, t)) < o || i === 1 / 0 && u === 1 / 0) && (u = n,
                                o = i)
                            });
                        return u
                    }
                    ,
                    p.shuffle = function(n) {
                        return p.sample(n, 1 / 0)
                    }
                    ,
                    p.sample = function(n, e, t) {
                        if (null == e || t)
                            return (n = !k(n) ? p.values(n) : n)[p.random(n.length - 1)];
                        var r = k(n) ? p.clone(n) : p.values(n)
                          , n = j(r);
                        e = Math.max(Math.min(e, n), 0);
                        for (var i = n - 1, u = 0; u < e; u++) {
                            var o = p.random(u, i)
                              , c = r[u];
                            r[u] = r[o],
                            r[o] = c
                        }
                        return r.slice(0, e)
                    }
                    ,
                    p.sortBy = function(n, r, e) {
                        var i = 0;
                        return r = v(r, e),
                        p.pluck(p.map(n, function(n, e, t) {
                            return {
                                value: n,
                                index: i++,
                                criteria: r(n, e, t)
                            }
                        }).sort(function(n, e) {
                            var t = n.criteria
                              , r = e.criteria;
                            if (t !== r) {
                                if (r < t || void 0 === t)
                                    return 1;
                                if (t < r || void 0 === r)
                                    return -1
                            }
                            return n.index - e.index
                        }), "value")
                    }
                    ;
                    var E = function(u, e) {
                        return function(t, r, n) {
                            var i = e ? [[], []] : {};
                            return r = v(r, n),
                            p.each(t, function(n, e) {
                                e = r(n, e, t);
                                u(i, n, e)
                            }),
                            i
                        }
                    };
                    p.groupBy = E(function(n, e, t) {
                        b(n, t) ? n[t].push(e) : n[t] = [e]
                    }),
                    p.indexBy = E(function(n, e, t) {
                        n[t] = e
                    }),
                    p.countBy = E(function(n, e, t) {
                        b(n, t) ? n[t]++ : n[t] = 1
                    });
                    var A = /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;
                    p.toArray = function(n) {
                        return n ? p.isArray(n) ? a.call(n) : p.isString(n) ? n.match(A) : k(n) ? p.map(n, p.identity) : p.values(n) : []
                    }
                    ,
                    p.size = function(n) {
                        return null == n ? 0 : (k(n) ? n : p.keys(n)).length
                    }
                    ,
                    p.partition = E(function(n, e, t) {
                        n[t ? 0 : 1].push(e)
                    }, !0),
                    p.first = p.head = p.take = function(n, e, t) {
                        return null == n || n.length < 1 ? null == e ? void 0 : [] : null == e || t ? n[0] : p.initial(n, n.length - e)
                    }
                    ,
                    p.initial = function(n, e, t) {
                        return a.call(n, 0, Math.max(0, n.length - (null == e || t ? 1 : e)))
                    }
                    ,
                    p.last = function(n, e, t) {
                        return null == n || n.length < 1 ? null == e ? void 0 : [] : null == e || t ? n[n.length - 1] : p.rest(n, Math.max(0, n.length - e))
                    }
                    ,
                    p.rest = p.tail = p.drop = function(n, e, t) {
                        return a.call(n, null == e || t ? 1 : e)
                    }
                    ,
                    p.compact = function(n) {
                        return p.filter(n, Boolean)
                    }
                    ;
                    var C = function(n, e, t, r) {
                        for (var i = (r = r || []).length, u = 0, o = j(n); u < o; u++) {
                            var c = n[u];
                            if (k(c) && (p.isArray(c) || p.isArguments(c)))
                                if (e)
                                    for (var a = 0, s = c.length; a < s; )
                                        r[i++] = c[a++];
                                else
                                    C(c, e, t, r),
                                    i = r.length;
                            else
                                t || (r[i++] = c)
                        }
                        return r
                    };
                    p.flatten = function(n, e) {
                        return C(n, e, !1)
                    }
                    ,
                    p.without = g(function(n, e) {
                        return p.difference(n, e)
                    }),
                    p.uniq = p.unique = function(n, e, t, r) {
                        p.isBoolean(e) || (r = t,
                        t = e,
                        e = !1),
                        null != t && (t = v(t, r));
                        for (var i = [], u = [], o = 0, c = j(n); o < c; o++) {
                            var a = n[o]
                              , s = t ? t(a, o, n) : a;
                            e && !t ? (o && u === s || i.push(a),
                            u = s) : t ? p.contains(u, s) || (u.push(s),
                            i.push(a)) : p.contains(i, a) || i.push(a)
                        }
                        return i
                    }
                    ,
                    p.union = g(function(n) {
                        return p.uniq(C(n, !0, !0))
                    }),
                    p.intersection = function(n) {
                        for (var e = [], t = arguments.length, r = 0, i = j(n); r < i; r++) {
                            var u = n[r];
                            if (!p.contains(e, u)) {
                                for (var o = 1; o < t && p.contains(arguments[o], u); o++)
                                    ;
                                o === t && e.push(u)
                            }
                        }
                        return e
                    }
                    ,
                    p.difference = g(function(n, e) {
                        return e = C(e, !0, !0),
                        p.filter(n, function(n) {
                            return !p.contains(e, n)
                        })
                    }),
                    p.unzip = function(n) {
                        for (var e = n && p.max(n, j).length || 0, t = Array(e), r = 0; r < e; r++)
                            t[r] = p.pluck(n, r);
                        return t
                    }
                    ,
                    p.zip = g(p.unzip),
                    p.object = function(n, e) {
                        for (var t = {}, r = 0, i = j(n); r < i; r++)
                            e ? t[n[r]] = e[r] : t[n[r][0]] = n[r][1];
                        return t
                    }
                    ;
                    w = function(u) {
                        return function(n, e, t) {
                            e = v(e, t);
                            for (var r = j(n), i = 0 < u ? 0 : r - 1; 0 <= i && i < r; i += u)
                                if (e(n[i], i, n))
                                    return i;
                            return -1
                        }
                    }
                    ;
                    p.findIndex = w(1),
                    p.findLastIndex = w(-1),
                    p.sortedIndex = function(n, e, t, r) {
                        for (var i = (t = v(t, r, 1))(e), u = 0, o = j(n); u < o; ) {
                            var c = Math.floor((u + o) / 2);
                            t(n[c]) < i ? u = c + 1 : o = c
                        }
                        return u
                    }
                    ;
                    E = function(u, o, c) {
                        return function(n, e, t) {
                            var r = 0
                              , i = j(n);
                            if ("number" == typeof t)
                                0 < u ? r = 0 <= t ? t : Math.max(t + i, r) : i = 0 <= t ? Math.min(t + 1, i) : t + i + 1;
                            else if (c && t && i)
                                return n[t = c(n, e)] === e ? t : -1;
                            if (e != e)
                                return 0 <= (t = o(a.call(n, r, i), p.isNaN)) ? t + r : -1;
                            for (t = 0 < u ? r : i - 1; 0 <= t && t < i; t += u)
                                if (n[t] === e)
                                    return t;
                            return -1
                        }
                    }
                    ;
                    p.indexOf = E(1, p.findIndex, p.sortedIndex),
                    p.lastIndexOf = E(-1, p.findLastIndex),
                    p.range = function(n, e, t) {
                        null == e && (e = n || 0,
                        n = 0),
                        t = t || (e < n ? -1 : 1);
                        for (var r = Math.max(Math.ceil((e - n) / t), 0), i = Array(r), u = 0; u < r; u++,
                        n += t)
                            i[u] = n;
                        return i
                    }
                    ,
                    p.chunk = function(n, e) {
                        if (null == e || e < 1)
                            return [];
                        for (var t = [], r = 0, i = n.length; r < i; )
                            t.push(a.call(n, r, r += e));
                        return t
                    }
                    ;
                    function T(n, e, t, r, i) {
                        return r instanceof e ? (t = _(n.prototype),
                        i = n.apply(t, i),
                        p.isObject(i) ? i : t) : n.apply(t, i)
                    }
                    p.bind = g(function(e, t, r) {
                        if (!p.isFunction(e))
                            throw new TypeError("Bind must be called on a function");
                        var i = g(function(n) {
                            return T(e, i, t, this, r.concat(n))
                        });
                        return i
                    }),
                    p.partial = g(function(i, u) {
                        function o() {
                            for (var n = 0, e = u.length, t = Array(e), r = 0; r < e; r++)
                                t[r] = u[r] === c ? arguments[n++] : u[r];
                            for (; n < arguments.length; )
                                t.push(arguments[n++]);
                            return T(i, o, this, this, t)
                        }
                        var c = p.partial.placeholder;
                        return o
                    }),
                    (p.partial.placeholder = p).bindAll = g(function(n, e) {
                        var t = (e = C(e, !1, !1)).length;
                        if (t < 1)
                            throw new Error("bindAll must be passed function names");
                        for (; t--; ) {
                            var r = e[t];
                            n[r] = p.bind(n[r], n)
                        }
                    }),
                    p.memoize = function(r, i) {
                        function u(n) {
                            var e = u.cache
                              , t = "" + (i ? i.apply(this, arguments) : n);
                            return b(e, t) || (e[t] = r.apply(this, arguments)),
                            e[t]
                        }
                        return u.cache = {},
                        u
                    }
                    ,
                    p.delay = g(function(n, e, t) {
                        return setTimeout(function() {
                            return n.apply(null, t)
                        }, e)
                    }),
                    p.defer = p.partial(p.delay, p, 1),
                    p.throttle = function(t, r, i) {
                        var u, o, c, a, s = 0;
                        i = i || {};
                        function l() {
                            s = !1 === i.leading ? 0 : p.now(),
                            u = null,
                            a = t.apply(o, c),
                            u || (o = c = null)
                        }
                        function n() {
                            var n = p.now();
                            s || !1 !== i.leading || (s = n);
                            var e = r - (n - s);
                            return o = this,
                            c = arguments,
                            e <= 0 || r < e ? (u && (clearTimeout(u),
                            u = null),
                            s = n,
                            a = t.apply(o, c),
                            u || (o = c = null)) : u || !1 === i.trailing || (u = setTimeout(l, e)),
                            a
                        }
                        return n.cancel = function() {
                            clearTimeout(u),
                            s = 0,
                            u = o = c = null
                        }
                        ,
                        n
                    }
                    ,
                    p.debounce = function(t, r, i) {
                        function u(n, e) {
                            o = null,
                            e && (c = t.apply(n, e))
                        }
                        var o, c, n = g(function(n) {
                            var e;
                            return o && clearTimeout(o),
                            i ? (e = !o,
                            o = setTimeout(u, r),
                            e && (c = t.apply(this, n))) : o = p.delay(u, r, this, n),
                            c
                        });
                        return n.cancel = function() {
                            clearTimeout(o),
                            o = null
                        }
                        ,
                        n
                    }
                    ,
                    p.wrap = function(n, e) {
                        return p.partial(e, n)
                    }
                    ,
                    p.negate = function(n) {
                        return function() {
                            return !n.apply(this, arguments)
                        }
                    }
                    ,
                    p.compose = function() {
                        var t = arguments
                          , r = t.length - 1;
                        return function() {
                            for (var n = r, e = t[r].apply(this, arguments); n--; )
                                e = t[n].call(this, e);
                            return e
                        }
                    }
                    ,
                    p.after = function(n, e) {
                        return function() {
                            if (--n < 1)
                                return e.apply(this, arguments)
                        }
                    }
                    ,
                    p.before = function(n, e) {
                        var t;
                        return function() {
                            return 0 < --n && (t = e.apply(this, arguments)),
                            n <= 1 && (e = null),
                            t
                        }
                    }
                    ,
                    p.once = p.partial(p.before, 2),
                    p.restArguments = g;
                    function O(n, e) {
                        var t = q.length
                          , r = n.constructor
                          , i = p.isFunction(r) && r.prototype || o
                          , u = "constructor";
                        for (b(n, u) && !p.contains(e, u) && e.push(u); t--; )
                            (u = q[t])in n && n[u] !== i[u] && !p.contains(e, u) && e.push(u)
                    }
                    var I = !{
                        toString: null
                    }.propertyIsEnumerable("toString")
                      , q = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"];
                    p.keys = function(n) {
                        if (!p.isObject(n))
                            return [];
                        if (c)
                            return c(n);
                        var e, t = [];
                        for (e in n)
                            b(n, e) && t.push(e);
                        return I && O(n, t),
                        t
                    }
                    ,
                    p.allKeys = function(n) {
                        if (!p.isObject(n))
                            return [];
                        var e, t = [];
                        for (e in n)
                            t.push(e);
                        return I && O(n, t),
                        t
                    }
                    ,
                    p.values = function(n) {
                        for (var e = p.keys(n), t = e.length, r = Array(t), i = 0; i < t; i++)
                            r[i] = n[e[i]];
                        return r
                    }
                    ,
                    p.mapObject = function(n, e, t) {
                        e = v(e, t);
                        for (var r = p.keys(n), i = r.length, u = {}, o = 0; o < i; o++) {
                            var c = r[o];
                            u[c] = e(n[c], c, n)
                        }
                        return u
                    }
                    ,
                    p.pairs = function(n) {
                        for (var e = p.keys(n), t = e.length, r = Array(t), i = 0; i < t; i++)
                            r[i] = [e[i], n[e[i]]];
                        return r
                    }
                    ,
                    p.invert = function(n) {
                        for (var e = {}, t = p.keys(n), r = 0, i = t.length; r < i; r++)
                            e[n[t[r]]] = t[r];
                        return e
                    }
                    ,
                    p.functions = p.methods = function(n) {
                        var e, t = [];
                        for (e in n)
                            p.isFunction(n[e]) && t.push(e);
                        return t.sort()
                    }
                    ;
                    w = function(a, s) {
                        return function(n) {
                            var e = arguments.length;
                            if (s && (n = Object(n)),
                            e < 2 || null == n)
                                return n;
                            for (var t = 1; t < e; t++)
                                for (var r = arguments[t], i = a(r), u = i.length, o = 0; o < u; o++) {
                                    var c = i[o];
                                    s && void 0 !== n[c] || (n[c] = r[c])
                                }
                            return n
                        }
                    }
                    ;
                    p.extend = w(p.allKeys),
                    p.extendOwn = p.assign = w(p.keys),
                    p.findKey = function(n, e, t) {
                        e = v(e, t);
                        for (var r, i = p.keys(n), u = 0, o = i.length; u < o; u++)
                            if (e(n[r = i[u]], r, n))
                                return r
                    }
                    ;
                    function F(n, e, t) {
                        return e in t
                    }
                    var M, D;
                    p.pick = g(function(n, e) {
                        var t = {}
                          , r = e[0];
                        if (null == n)
                            return t;
                        p.isFunction(r) ? (1 < e.length && (r = y(r, e[1])),
                        e = p.allKeys(n)) : (r = F,
                        e = C(e, !1, !1),
                        n = Object(n));
                        for (var i = 0, u = e.length; i < u; i++) {
                            var o = e[i]
                              , c = n[o];
                            r(c, o, n) && (t[o] = c)
                        }
                        return t
                    }),
                    p.omit = g(function(n, t) {
                        var e, r = t[0];
                        return p.isFunction(r) ? (r = p.negate(r),
                        1 < t.length && (e = t[1])) : (t = p.map(C(t, !1, !1), String),
                        r = function(n, e) {
                            return !p.contains(t, e)
                        }
                        ),
                        p.pick(n, r, e)
                    }),
                    p.defaults = w(p.allKeys, !0),
                    p.create = function(n, e) {
                        n = _(n);
                        return e && p.extendOwn(n, e),
                        n
                    }
                    ,
                    p.clone = function(n) {
                        return p.isObject(n) ? p.isArray(n) ? n.slice() : p.extend({}, n) : n
                    }
                    ,
                    p.tap = function(n, e) {
                        return e(n),
                        n
                    }
                    ,
                    p.isMatch = function(n, e) {
                        var t = p.keys(e)
                          , r = t.length;
                        if (null == n)
                            return !r;
                        for (var i = Object(n), u = 0; u < r; u++) {
                            var o = t[u];
                            if (e[o] !== i[o] || !(o in i))
                                return !1
                        }
                        return !0
                    }
                    ,
                    M = function(n, e, t, r) {
                        if (n === e)
                            return 0 !== n || 1 / n == 1 / e;
                        if (null == n || null == e)
                            return !1;
                        if (n != n)
                            return e != e;
                        var i = typeof n;
                        return ("function" == i || "object" == i || "object" == typeof e) && D(n, e, t, r)
                    }
                    ,
                    D = function(n, e, t, r) {
                        n instanceof p && (n = n._wrapped),
                        e instanceof p && (e = e._wrapped);
                        var i = f.call(n);
                        if (i !== f.call(e))
                            return !1;
                        switch (i) {
                        case "[object RegExp]":
                        case "[object String]":
                            return "" + n == "" + e;
                        case "[object Number]":
                            return +n != +n ? +e != +e : 0 == +n ? 1 / +n == 1 / e : +n == +e;
                        case "[object Date]":
                        case "[object Boolean]":
                            return +n == +e;
                        case "[object Symbol]":
                            return l.valueOf.call(n) === l.valueOf.call(e)
                        }
                        var u = "[object Array]" === i;
                        if (!u) {
                            if ("object" != typeof n || "object" != typeof e)
                                return !1;
                            var o = n.constructor
                              , i = e.constructor;
                            if (o !== i && !(p.isFunction(o) && o instanceof o && p.isFunction(i) && i instanceof i) && "constructor"in n && "constructor"in e)
                                return !1
                        }
                        r = r || [];
                        for (var c = (t = t || []).length; c--; )
                            if (t[c] === n)
                                return r[c] === e;
                        if (t.push(n),
                        r.push(e),
                        u) {
                            if ((c = n.length) !== e.length)
                                return !1;
                            for (; c--; )
                                if (!M(n[c], e[c], t, r))
                                    return !1
                        } else {
                            var a, s = p.keys(n), c = s.length;
                            if (p.keys(e).length !== c)
                                return !1;
                            for (; c--; )
                                if (a = s[c],
                                !b(e, a) || !M(n[a], e[a], t, r))
                                    return !1
                        }
                        return t.pop(),
                        r.pop(),
                        !0
                    }
                    ,
                    p.isEqual = function(n, e) {
                        return M(n, e)
                    }
                    ,
                    p.isEmpty = function(n) {
                        return null == n || (k(n) && (p.isArray(n) || p.isString(n) || p.isArguments(n)) ? 0 === n.length : 0 === p.keys(n).length)
                    }
                    ,
                    p.isElement = function(n) {
                        return !(!n || 1 !== n.nodeType)
                    }
                    ,
                    p.isArray = t || function(n) {
                        return "[object Array]" === f.call(n)
                    }
                    ,
                    p.isObject = function(n) {
                        var e = typeof n;
                        return "function" == e || "object" == e && !!n
                    }
                    ,
                    p.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error", "Symbol", "Map", "WeakMap", "Set", "WeakSet"], function(e) {
                        p["is" + e] = function(n) {
                            return f.call(n) === "[object " + e + "]"
                        }
                    }),
                    p.isArguments(arguments) || (p.isArguments = function(n) {
                        return b(n, "callee")
                    }
                    );
                    E = n.document && n.document.childNodes;
                    "function" != typeof /./ && "object" != typeof Int8Array && "function" != typeof E && (p.isFunction = function(n) {
                        return "function" == typeof n || !1
                    }
                    ),
                    p.isFinite = function(n) {
                        return !p.isSymbol(n) && isFinite(n) && !isNaN(parseFloat(n))
                    }
                    ,
                    p.isNaN = function(n) {
                        return p.isNumber(n) && isNaN(n)
                    }
                    ,
                    p.isBoolean = function(n) {
                        return !0 === n || !1 === n || "[object Boolean]" === f.call(n)
                    }
                    ,
                    p.isNull = function(n) {
                        return null === n
                    }
                    ,
                    p.isUndefined = function(n) {
                        return void 0 === n
                    }
                    ,
                    p.has = function(n, e) {
                        if (!p.isArray(e))
                            return b(n, e);
                        for (var t = e.length, r = 0; r < t; r++) {
                            var i = e[r];
                            if (null == n || !u.call(n, i))
                                return !1;
                            n = n[i]
                        }
                        return !!t
                    }
                    ,
                    p.noConflict = function() {
                        return n._ = e,
                        this
                    }
                    ,
                    p.identity = function(n) {
                        return n
                    }
                    ,
                    p.constant = function(n) {
                        return function() {
                            return n
                        }
                    }
                    ,
                    p.noop = function() {}
                    ,
                    p.property = function(e) {
                        return p.isArray(e) ? function(n) {
                            return S(n, e)
                        }
                        : m(e)
                    }
                    ,
                    p.propertyOf = function(e) {
                        return null == e ? function() {}
                        : function(n) {
                            return p.isArray(n) ? S(e, n) : e[n]
                        }
                    }
                    ,
                    p.matcher = p.matches = function(e) {
                        return e = p.extendOwn({}, e),
                        function(n) {
                            return p.isMatch(n, e)
                        }
                    }
                    ,
                    p.times = function(n, e, t) {
                        var r = Array(Math.max(0, n));
                        e = y(e, t, 1);
                        for (var i = 0; i < n; i++)
                            r[i] = e(i);
                        return r
                    }
                    ,
                    p.random = function(n, e) {
                        return null == e && (e = n,
                        n = 0),
                        n + Math.floor(Math.random() * (e - n + 1))
                    }
                    ,
                    p.now = Date.now || function() {
                        return (new Date).getTime()
                    }
                    ;
                    w = {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#x27;",
                        "`": "&#x60;"
                    },
                    t = p.invert(w),
                    E = function(e) {
                        function t(n) {
                            return e[n]
                        }
                        var n = "(?:" + p.keys(e).join("|") + ")"
                          , r = RegExp(n)
                          , i = RegExp(n, "g");
                        return function(n) {
                            return r.test(n = null == n ? "" : "" + n) ? n.replace(i, t) : n
                        }
                    }
                    ;
                    p.escape = E(w),
                    p.unescape = E(t),
                    p.result = function(n, e, t) {
                        var r = (e = !p.isArray(e) ? [e] : e).length;
                        if (!r)
                            return p.isFunction(t) ? t.call(n) : t;
                        for (var i = 0; i < r; i++) {
                            var u = null == n ? void 0 : n[e[i]];
                            void 0 === u && (u = t,
                            i = r),
                            n = p.isFunction(u) ? u.call(n) : u
                        }
                        return n
                    }
                    ;
                    var N = 0;
                    p.uniqueId = function(n) {
                        var e = ++N + "";
                        return n ? n + e : e
                    }
                    ,
                    p.templateSettings = {
                        evaluate: /<%([\s\S]+?)%>/g,
                        interpolate: /<%=([\s\S]+?)%>/g,
                        escape: /<%-([\s\S]+?)%>/g
                    };
                    function L(n) {
                        return "\\" + Q[n]
                    }
                    var R = /(.)^/
                      , Q = {
                        "'": "'",
                        "\\": "\\",
                        "\r": "r",
                        "\n": "n",
                        "\u2028": "u2028",
                        "\u2029": "u2029"
                    }
                      , B = /\\|'|\r|\n|\u2028|\u2029/g;
                    p.template = function(u, n, e) {
                        n = p.defaults({}, n = !n && e ? e : n, p.templateSettings);
                        var t, e = RegExp([(n.escape || R).source, (n.interpolate || R).source, (n.evaluate || R).source].join("|") + "|$", "g"), o = 0, c = "__p+='";
                        u.replace(e, function(n, e, t, r, i) {
                            return c += u.slice(o, i).replace(B, L),
                            o = i + n.length,
                            e ? c += "'+\n((__t=(" + e + "))==null?'':_.escape(__t))+\n'" : t ? c += "'+\n((__t=(" + t + "))==null?'':__t)+\n'" : r && (c += "';\n" + r + "\n__p+='"),
                            n
                        }),
                        c += "';\n",
                        c = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + (c = !n.variable ? "with(obj||{}){\n" + c + "}\n" : c) + "return __p;\n";
                        try {
                            t = new Function(n.variable || "obj","_",c)
                        } catch (n) {
                            throw n.source = c,
                            n
                        }
                        e = function(n) {
                            return t.call(this, n, p)
                        }
                        ,
                        n = n.variable || "obj";
                        return e.source = "function(" + n + "){\n" + c + "}",
                        e
                    }
                    ,
                    p.chain = function(n) {
                        n = p(n);
                        return n._chain = !0,
                        n
                    }
                    ;
                    function P(n, e) {
                        return n._chain ? p(e).chain() : e
                    }
                    p.mixin = function(t) {
                        return p.each(p.functions(t), function(n) {
                            var e = p[n] = t[n];
                            p.prototype[n] = function() {
                                var n = [this._wrapped];
                                return i.apply(n, arguments),
                                P(this, e.apply(p, n))
                            }
                        }),
                        p
                    }
                    ,
                    p.mixin(p),
                    p.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(e) {
                        var t = r[e];
                        p.prototype[e] = function() {
                            var n = this._wrapped;
                            return t.apply(n, arguments),
                            "shift" !== e && "splice" !== e || 0 !== n.length || delete n[0],
                            P(this, n)
                        }
                    }),
                    p.each(["concat", "join", "slice"], function(n) {
                        var e = r[n];
                        p.prototype[n] = function() {
                            return P(this, e.apply(this._wrapped, arguments))
                        }
                    }),
                    p.prototype.value = function() {
                        return this._wrapped
                    }
                    ,
                    p.prototype.valueOf = p.prototype.toJSON = p.prototype.value,
                    p.prototype.toString = function() {
                        return String(this._wrapped)
                    }
                    ,
                    "function" == typeof define && define.amd && define("underscore", [], function() {
                        return p
                    })
                }()
            }
            .call(this)
        }
        .call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    3: [function(n, e, t) {
        "use strict";
        var i = n("underscore")
          , u = n("../events");
        e.exports = function(n) {
            var r = n.getComponent("MenuItem");
            return n.extend(r, {
                constructor: function(n, e) {
                    var t = e.source;
                    if (!i.isObject(t))
                        throw new Error('was not provided a "source" object, but rather: ' + typeof t);
                    e = i.extend({
                        selectable: !0,
                        label: t.label
                    }, e),
                    r.call(this, n, e),
                    this.source = t
                },
                handleClick: function(n) {
                    r.prototype.handleClick.call(this, n),
                    this.player().trigger(u.QUALITY_REQUESTED, this.source)
                }
            })
        }
    }
    , {
        "../events": 5,
        underscore: 2
    }],
    4: [function(n, e, t) {
        "use strict";
        var i = n("underscore")
          , u = n("../events")
          , s = n("./QualityOption")
          , l = "vjs-quality-changing";
        e.exports = function(n) {
            var e = n.getComponent("MenuButton")
              , o = n.getComponent("Component")
              , c = n.getComponent("Button")
              , a = n.getComponent("Menu")
              , t = s(n)
              , r = n.extend(e, {
                constructor: function(t, n) {
                    e.call(this, t, n),
                    this.menuButton_.off("mouseenter"),
                    this.menuButton_.off("mouseleave"),
                    t.on(u.QUALITY_REQUESTED, function(n, e) {
                        this.setSelectedSource(e),
                        t.addClass(l),
                        t.one("loadeddata", function() {
                            t.removeClass(l)
                        })
                    }
                    .bind(this)),
                    t.on(u.PLAYER_SOURCES_CHANGED, function() {
                        this.update()
                    }
                    .bind(this)),
                    t.on(u.QUALITY_SELECTED, function(n, e) {
                        this.setSelectedSource(e)
                    }
                    .bind(this)),
                    t.one("ready", function() {
                        this.selectedSrc = t.src(),
                        this.update()
                    }
                    .bind(this)),
                    this.controlText("Open quality selector menu")
                },
                update: function() {
                    var n = this.createMenu();
                    this.menu && (this.menu.dispose(),
                    this.removeChild(this.menu)),
                    this.menu = n,
                    (540 < window.innerWidth ? this : this.player_).addChild(n),
                    this.player_.trigger("vjs-quality-menu-created"),
                    this.buttonPressed_ = !1,
                    this.menuButton_.el_.setAttribute("aria-expanded", "false"),
                    this.items && this.items.length <= this.hideThreshold_ ? this.hide() : this.show()
                },
                setSelectedSource: function(n) {
                    var e = n ? n.src : void 0;
                    this.selectedSrc !== e && (this.selectedSrc = e,
                    i.each(this.items, function(n) {
                        n.selected(n.source.src === e)
                    }))
                },
                createDomEl: function(n, e, t) {
                    var r = document.createElement(n);
                    if (r.innerHTML = e,
                    "object" == typeof t)
                        for (var i = t.length - 1; 0 <= i; i--)
                            r.classList.add(t[i]);
                    return "string" == typeof t && r.classList.add(t),
                    r
                },
                createMenu: function() {
                    var e = this
                      , n = new o(this.player_,{
                        el: this.createDomEl("div", "", ["vjs-menu", "vjs-settings-menu", "vjs-settings-quality-menu", "vjs-hidden"])
                    })
                      , t = new o(this.player_,{
                        el: this.createDomEl("div", "", "vjs-settings-heading")
                    })
                      , r = new o(this.player_,{
                        el: this.createDomEl("div", "", "vjs-settings-body")
                    });
                    t.addChild(new c(this.player_,{
                        el: this.createDomEl("button", '<span class="vjs-icon-placeholder vjs-icon-close"></span>', ["vjs-heading-button", "heading-close-button"]),
                        clickHandler: function(n) {
                            e.unpressButton()
                        }
                    }));
                    var i = new a(this.player_,{
                        menuButton: this
                    });
                    if (this.hideThreshold_ = 0,
                    this.items = this.createItems(),
                    this.items)
                        for (var u = 0; u < this.items.length; u++)
                            i.addItem(this.items[u]);
                    return r.addChild(i),
                    n.addChild(t),
                    n.addChild(r),
                    n
                },
                createItems: function() {
                    var e = this.player()
                      , n = e.currentSources();
                    return !n || n.length < 2 ? [] : i.map(n, function(n) {
                        return new t(e,{
                            source: n,
                            selected: n.src === this.selectedSrc
                        })
                    }
                    .bind(this))
                },
                buildWrapperCSSClass: function() {
                    return "vjs-quality-selector " + e.prototype.buildWrapperCSSClass.call(this)
                }
            });
            return n.registerComponent("QualitySelector", r),
            r
        }
    }
    , {
        "../events": 5,
        "./QualityOption": 3,
        underscore: 2
    }],
    5: [function(n, e, t) {
        "use strict";
        e.exports = {
            QUALITY_REQUESTED: "qualityRequested",
            QUALITY_SELECTED: "qualitySelected",
            PLAYER_SOURCES_CHANGED: "playerSourcesChanged"
        }
    }
    , {}],
    6: [function(n, e, t) {
        "use strict";
        var c = n("underscore")
          , r = n("./events")
          , i = n("./components/QualitySelector")
          , u = n("./middleware/SourceInterceptor")
          , a = n("./util/SafeSeek");
        e.exports = function(n) {
            n = n || window.videojs,
            i(n),
            u(n),
            n.hook("setup", function(o) {
                o.on(r.QUALITY_REQUESTED, function(n, e) {
                    var t = o.currentSources()
                      , r = o.currentTime()
                      , i = o.playbackRate()
                      , u = o.paused();
                    c.each(t, function(n) {
                        n.selected = !1
                    }),
                    c.findWhere(t, {
                        src: e.src
                    }).selected = !0,
                    o._qualitySelectorSafeSeek && o._qualitySelectorSafeSeek.onQualitySelectionChange(),
                    o.src(t),
                    o.ready(function() {
                        o._qualitySelectorSafeSeek && !o._qualitySelectorSafeSeek.hasFinished() || (o._qualitySelectorSafeSeek = new a(o,r),
                        o.playbackRate(i)),
                        u || o.play()
                    })
                })
            })
        }
        ,
        e.exports.EVENTS = r
    }
    , {
        "./components/QualitySelector": 4,
        "./events": 5,
        "./middleware/SourceInterceptor": 7,
        "./util/SafeSeek": 9,
        underscore: 2
    }],
    7: [function(n, e, t) {
        "use strict";
        var i = n("underscore")
          , u = n("../events");
        e.exports = function(n) {
            n.use("*", function(r) {
                return {
                    setSource: function(n, e) {
                        var t = r.currentSources();
                        r._qualitySelectorSafeSeek && r._qualitySelectorSafeSeek.onPlayerSourcesChange(),
                        i.isEqual(t, r._qualitySelectorPreviousSources) || (r.trigger(u.PLAYER_SOURCES_CHANGED, t),
                        r._qualitySelectorPreviousSources = t),
                        t = i.find(t, function(n) {
                            return !0 === n.selected || "true" === n.selected || "selected" === n.selected
                        }),
                        r.trigger(u.QUALITY_SELECTED, n = t || n),
                        e(null, n)
                    }
                }
            })
        }
    }
    , {
        "../events": 5,
        underscore: 2
    }],
    8: [function(n, e, t) {
        "use strict";
        n("./index")()
    }
    , {
        "./index": 6
    }],
    9: [function(n, e, t) {
        "use strict";
        n = n("class.extend");
        e.exports = n.extend({
            init: function(n, e) {
                this._player = n,
                this._seekToTime = e,
                this._hasFinished = !1,
                this._keepThisInstanceWhenPlayerSourcesChange = !1,
                this._seekWhenSafe()
            },
            _seekWhenSafe: function() {
                this._player.readyState() < 3 ? (this._seekFn = this._seek.bind(this),
                this._player.one("canplay", this._seekFn)) : this._seek()
            },
            onPlayerSourcesChange: function() {
                this._keepThisInstanceWhenPlayerSourcesChange ? this._keepThisInstanceWhenPlayerSourcesChange = !1 : this.cancel()
            },
            onQualitySelectionChange: function() {
                this.hasFinished() || (this._keepThisInstanceWhenPlayerSourcesChange = !0)
            },
            _seek: function() {
                this._player.currentTime(this._seekToTime),
                this._keepThisInstanceWhenPlayerSourcesChange = !1,
                this._hasFinished = !0
            },
            hasFinished: function() {
                return this._hasFinished
            },
            cancel: function() {
                this._player.off("canplay", this._seekFn),
                this._keepThisInstanceWhenPlayerSourcesChange = !1,
                this._hasFinished = !0
            }
        })
    }
    , {
        "class.extend": 1
    }]
}, {}, [8]);
//# sourceMappingURL=silvermine-videojs-quality-selector.min.js.map
;/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/486ab4c2/js/silvermine-videojs-quality-selector.min.js ***/
/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/fb0befa7/silvermine-videojs-chromecast.js.tmp ***/
/*

 Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.arrayIteratorImpl = function(A) {
    var G = 0;
    return function() {
        return G < A.length ? {
            done: !1,
            value: A[G++]
        } : {
            done: !0
        }
    }
}
;
$jscomp.arrayIterator = function(A) {
    return {
        next: $jscomp.arrayIteratorImpl(A)
    }
}
;
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.ISOLATE_POLYFILLS = !1;
$jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(A, G, H) {
    if (A == Array.prototype || A == Object.prototype)
        return A;
    A[G] = H.value;
    return A
}
;
$jscomp.getGlobal = function(A) {
    A = ["object" == typeof globalThis && globalThis, A, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global];
    for (var G = 0; G < A.length; ++G) {
        var H = A[G];
        if (H && H.Math == Math)
            return H
    }
    throw Error("Cannot find global object");
}
;
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.IS_SYMBOL_NATIVE = "function" === typeof Symbol && "symbol" === typeof Symbol("x");
$jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE;
$jscomp.polyfills = {};
$jscomp.propertyToPolyfillSymbol = {};
$jscomp.POLYFILL_PREFIX = "$jscp$";
var $jscomp$lookupPolyfilledValue = function(A, G) {
    var H = $jscomp.propertyToPolyfillSymbol[G];
    if (null == H)
        return A[G];
    H = A[H];
    return void 0 !== H ? H : A[G]
};
$jscomp.polyfill = function(A, G, H, f) {
    G && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(A, G, H, f) : $jscomp.polyfillUnisolated(A, G, H, f))
}
;
$jscomp.polyfillUnisolated = function(A, G, H, f) {
    H = $jscomp.global;
    A = A.split(".");
    for (f = 0; f < A.length - 1; f++) {
        var p = A[f];
        if (!(p in H))
            return;
        H = H[p]
    }
    A = A[A.length - 1];
    f = H[A];
    G = G(f);
    G != f && null != G && $jscomp.defineProperty(H, A, {
        configurable: !0,
        writable: !0,
        value: G
    })
}
;
$jscomp.polyfillIsolated = function(A, G, H, f) {
    var p = A.split(".");
    A = 1 === p.length;
    f = p[0];
    f = !A && f in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global;
    for (var t = 0; t < p.length - 1; t++) {
        var q = p[t];
        if (!(q in f))
            return;
        f = f[q]
    }
    p = p[p.length - 1];
    H = $jscomp.IS_SYMBOL_NATIVE && "es6" === H ? f[p] : null;
    G = G(H);
    null != G && (A ? $jscomp.defineProperty($jscomp.polyfills, p, {
        configurable: !0,
        writable: !0,
        value: G
    }) : G !== H && ($jscomp.propertyToPolyfillSymbol[p] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol(p) : $jscomp.POLYFILL_PREFIX + p,
    p = $jscomp.propertyToPolyfillSymbol[p],
    $jscomp.defineProperty(f, p, {
        configurable: !0,
        writable: !0,
        value: G
    })))
}
;
$jscomp.initSymbol = function() {}
;
$jscomp.polyfill("Symbol", function(A) {
    if (A)
        return A;
    var G = function(p, t) {
        this.$jscomp$symbol$id_ = p;
        $jscomp.defineProperty(this, "description", {
            configurable: !0,
            writable: !0,
            value: t
        })
    };
    G.prototype.toString = function() {
        return this.$jscomp$symbol$id_
    }
    ;
    var H = 0
      , f = function(p) {
        if (this instanceof f)
            throw new TypeError("Symbol is not a constructor");
        return new G("jscomp_symbol_" + (p || "") + "_" + H++,p)
    };
    return f
}, "es6", "es3");
$jscomp.polyfill("Symbol.iterator", function(A) {
    if (A)
        return A;
    A = Symbol("Symbol.iterator");
    for (var G = "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "), H = 0; H < G.length; H++) {
        var f = $jscomp.global[G[H]];
        "function" === typeof f && "function" != typeof f.prototype[A] && $jscomp.defineProperty(f.prototype, A, {
            configurable: !0,
            writable: !0,
            value: function() {
                return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))
            }
        })
    }
    return A
}, "es6", "es3");
$jscomp.iteratorPrototype = function(A) {
    A = {
        next: A
    };
    A[Symbol.iterator] = function() {
        return this
    }
    ;
    return A
}
;
$jscomp.iteratorFromArray = function(A, G) {
    A instanceof String && (A += "");
    var H = 0
      , f = !1
      , p = {
        next: function() {
            if (!f && H < A.length) {
                var t = H++;
                return {
                    value: G(t, A[t]),
                    done: !1
                }
            }
            f = !0;
            return {
                done: !0,
                value: void 0
            }
        }
    };
    p[Symbol.iterator] = function() {
        return p
    }
    ;
    return p
}
;
$jscomp.polyfill("Array.prototype.keys", function(A) {
    return A ? A : function() {
        return $jscomp.iteratorFromArray(this, function(G) {
            return G
        })
    }
}, "es6", "es3");
$jscomp.findInternal = function(A, G, H) {
    A instanceof String && (A = String(A));
    for (var f = A.length, p = 0; p < f; p++) {
        var t = A[p];
        if (G.call(H, t, p, A))
            return {
                i: p,
                v: t
            }
    }
    return {
        i: -1,
        v: void 0
    }
}
;
$jscomp.polyfill("Array.prototype.findIndex", function(A) {
    return A ? A : function(G, H) {
        return $jscomp.findInternal(this, G, H).i
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.values", function(A) {
    return A ? A : function() {
        return $jscomp.iteratorFromArray(this, function(G, H) {
            return H
        })
    }
}, "es8", "es3");
$jscomp.polyfill("Array.prototype.find", function(A) {
    return A ? A : function(G, H) {
        return $jscomp.findInternal(this, G, H).v
    }
}, "es6", "es3");
$jscomp.checkEs6ConformanceViaProxy = function() {
    try {
        var A = {}
          , G = Object.create(new $jscomp.global.Proxy(A,{
            get: function(H, f, p) {
                return H == A && "q" == f && p == G
            }
        }));
        return !0 === G.q
    } catch (H) {
        return !1
    }
}
;
$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS = !1;
$jscomp.ES6_CONFORMANCE = $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS && $jscomp.checkEs6ConformanceViaProxy();
$jscomp.makeIterator = function(A) {
    var G = "undefined" != typeof Symbol && Symbol.iterator && A[Symbol.iterator];
    return G ? G.call(A) : $jscomp.arrayIterator(A)
}
;
$jscomp.owns = function(A, G) {
    return Object.prototype.hasOwnProperty.call(A, G)
}
;
$jscomp.polyfill("WeakMap", function(A) {
    function G() {
        if (!A || !Object.seal)
            return !1;
        try {
            var h = Object.seal({})
              , x = Object.seal({})
              , E = new A([[h, 2], [x, 3]]);
            if (2 != E.get(h) || 3 != E.get(x))
                return !1;
            E.delete(h);
            E.set(x, 4);
            return !E.has(h) && 4 == E.get(x)
        } catch (B) {
            return !1
        }
    }
    function H() {}
    function f(h) {
        var x = typeof h;
        return "object" === x && null !== h || "function" === x
    }
    function p(h) {
        if (!$jscomp.owns(h, q)) {
            var x = new H;
            $jscomp.defineProperty(h, q, {
                value: x
            })
        }
    }
    function t(h) {
        if (!$jscomp.ISOLATE_POLYFILLS) {
            var x = Object[h];
            x && (Object[h] = function(E) {
                if (E instanceof H)
                    return E;
                Object.isExtensible(E) && p(E);
                return x(E)
            }
            )
        }
    }
    if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
        if (A && $jscomp.ES6_CONFORMANCE)
            return A
    } else if (G())
        return A;
    var q = "$jscomp_hidden_" + Math.random();
    t("freeze");
    t("preventExtensions");
    t("seal");
    var g = 0
      , e = function(h) {
        this.id_ = (g += Math.random() + 1).toString();
        if (h) {
            h = $jscomp.makeIterator(h);
            for (var x; !(x = h.next()).done; )
                x = x.value,
                this.set(x[0], x[1])
        }
    };
    e.prototype.set = function(h, x) {
        if (!f(h))
            throw Error("Invalid WeakMap key");
        p(h);
        if (!$jscomp.owns(h, q))
            throw Error("WeakMap key fail: " + h);
        h[q][this.id_] = x;
        return this
    }
    ;
    e.prototype.get = function(h) {
        return f(h) && $jscomp.owns(h, q) ? h[q][this.id_] : void 0
    }
    ;
    e.prototype.has = function(h) {
        return f(h) && $jscomp.owns(h, q) && $jscomp.owns(h[q], this.id_)
    }
    ;
    e.prototype.delete = function(h) {
        return f(h) && $jscomp.owns(h, q) && $jscomp.owns(h[q], this.id_) ? delete h[q][this.id_] : !1
    }
    ;
    return e
}, "es6", "es3");
(function() {
    function A(G, H, f) {
        function p(g, e) {
            if (!H[g]) {
                if (!G[g]) {
                    var h = "function" == typeof require && require;
                    if (!e && h)
                        return h(g, !0);
                    if (t)
                        return t(g, !0);
                    e = Error("Cannot find module '" + g + "'");
                    throw e.code = "MODULE_NOT_FOUND",
                    e;
                }
                e = H[g] = {
                    exports: {}
                };
                G[g][0].call(e.exports, function(x) {
                    return p(G[g][1][x] || x)
                }, e, e.exports, A, G, H, f)
            }
            return H[g].exports
        }
        for (var t = "function" == typeof require && require, q = 0; q < f.length; q++)
            p(f[q]);
        return p
    }
    return A
}
)()({
    1: [function(A, G, H) {
        (function() {
            var f = !1
              , p = /xyz/.test(function() {
                xyz
            }) ? /\b_super\b/ : /.*/;
            this.Class = function() {}
            ;
            Class.extend = function(t) {
                function q() {
                    !f && this.init && this.init.apply(this, arguments)
                }
                var g = this.prototype;
                f = !0;
                var e = new this;
                f = !1;
                for (var h in t)
                    e[h] = "function" == typeof t[h] && "function" == typeof g[h] && p.test(t[h]) ? function(x, E) {
                        return function() {
                            var B = this._super;
                            this._super = g[x];
                            var n = E.apply(this, arguments);
                            this._super = B;
                            return n
                        }
                    }(h, t[h]) : t[h];
                q.prototype = e;
                q.prototype.constructor = q;
                q.extend = arguments.callee;
                return q
            }
            ;
            G.exports = Class
        }
        )()
    }
    , {}],
    2: [function(A, G, H) {
        (function() {
            function f(a) {
                return function(c, d, k, m) {
                    d = l(d, m, 4);
                    var u = !M(c) && b.keys(c)
                      , F = (u || c).length
                      , L = 0 < a ? 0 : F - 1;
                    3 > arguments.length && (k = c[u ? u[L] : L],
                    L += a);
                    for (var Q = d, P = k; 0 <= L && L < F; L += a) {
                        var S = u ? u[L] : L;
                        P = Q(P, c[S], S, c)
                    }
                    return P
                }
            }
            function p(a) {
                return function(c, d, k) {
                    d = v(d, k);
                    k = r(c);
                    for (var m = 0 < a ? 0 : k - 1; 0 <= m && m < k; m += a)
                        if (d(c[m], m, c))
                            return m;
                    return -1
                }
            }
            function t(a, c, d) {
                return function(k, m, u) {
                    var F = 0
                      , L = r(k);
                    if ("number" == typeof u)
                        0 < a ? F = 0 <= u ? u : Math.max(u + L, F) : L = 0 <= u ? Math.min(u + 1, L) : u + L + 1;
                    else if (d && u && L)
                        return u = d(k, m),
                        k[u] === m ? u : -1;
                    if (m !== m)
                        return u = c(B.call(k, F, L), b.isNaN),
                        0 <= u ? u + F : -1;
                    for (u = 0 < a ? F : L - 1; 0 <= u && u < L; u += a)
                        if (k[u] === m)
                            return u;
                    return -1
                }
            }
            function q(a, c) {
                var d = Z.length
                  , k = a.constructor;
                k = b.isFunction(k) && k.prototype || x;
                var m = "constructor";
                for (b.has(a, m) && !b.contains(c, m) && c.push(m); d--; )
                    m = Z[d],
                    m in a && a[m] !== k[m] && !b.contains(c, m) && c.push(m)
            }
            var g = this
              , e = g._
              , h = Array.prototype
              , x = Object.prototype
              , E = h.push
              , B = h.slice
              , n = x.toString
              , J = x.hasOwnProperty
              , y = Array.isArray
              , C = Object.keys
              , w = Function.prototype.bind
              , I = Object.create
              , K = function() {}
              , b = function(a) {
                if (a instanceof b)
                    return a;
                if (!(this instanceof b))
                    return new b(a);
                this._wrapped = a
            };
            "undefined" !== typeof H ? ("undefined" !== typeof G && G.exports && (H = G.exports = b),
            H._ = b) : g._ = b;
            b.VERSION = "1.8.3";
            var l = function(a, c, d) {
                if (void 0 === c)
                    return a;
                switch (null == d ? 3 : d) {
                case 1:
                    return function(k) {
                        return a.call(c, k)
                    }
                    ;
                case 2:
                    return function(k, m) {
                        return a.call(c, k, m)
                    }
                    ;
                case 3:
                    return function(k, m, u) {
                        return a.call(c, k, m, u)
                    }
                    ;
                case 4:
                    return function(k, m, u, F) {
                        return a.call(c, k, m, u, F)
                    }
                }
                return function() {
                    return a.apply(c, arguments)
                }
            }
              , v = function(a, c, d) {
                return null == a ? b.identity : b.isFunction(a) ? l(a, c, d) : b.isObject(a) ? b.matcher(a) : b.property(a)
            };
            b.iteratee = function(a, c) {
                return v(a, c, Infinity)
            }
            ;
            var z = function(a, c) {
                return function(d) {
                    var k = arguments.length;
                    if (2 > k || null == d)
                        return d;
                    for (var m = 1; m < k; m++)
                        for (var u = arguments[m], F = a(u), L = F.length, Q = 0; Q < L; Q++) {
                            var P = F[Q];
                            c && void 0 !== d[P] || (d[P] = u[P])
                        }
                    return d
                }
            }
              , N = function(a) {
                if (!b.isObject(a))
                    return {};
                if (I)
                    return I(a);
                K.prototype = a;
                a = new K;
                K.prototype = null;
                return a
            }
              , O = function(a) {
                return function(c) {
                    return null == c ? void 0 : c[a]
                }
            }
              , D = Math.pow(2, 53) - 1
              , r = O("length")
              , M = function(a) {
                a = r(a);
                return "number" == typeof a && 0 <= a && a <= D
            };
            b.each = b.forEach = function(a, c, d) {
                c = l(c, d);
                var k;
                if (M(a))
                    for (d = 0,
                    k = a.length; d < k; d++)
                        c(a[d], d, a);
                else {
                    var m = b.keys(a);
                    d = 0;
                    for (k = m.length; d < k; d++)
                        c(a[m[d]], m[d], a)
                }
                return a
            }
            ;
            b.map = b.collect = function(a, c, d) {
                c = v(c, d);
                d = !M(a) && b.keys(a);
                for (var k = (d || a).length, m = Array(k), u = 0; u < k; u++) {
                    var F = d ? d[u] : u;
                    m[u] = c(a[F], F, a)
                }
                return m
            }
            ;
            b.reduce = b.foldl = b.inject = f(1);
            b.reduceRight = b.foldr = f(-1);
            b.find = b.detect = function(a, c, d) {
                c = M(a) ? b.findIndex(a, c, d) : b.findKey(a, c, d);
                if (void 0 !== c && -1 !== c)
                    return a[c]
            }
            ;
            b.filter = b.select = function(a, c, d) {
                var k = [];
                c = v(c, d);
                b.each(a, function(m, u, F) {
                    c(m, u, F) && k.push(m)
                });
                return k
            }
            ;
            b.reject = function(a, c, d) {
                return b.filter(a, b.negate(v(c)), d)
            }
            ;
            b.every = b.all = function(a, c, d) {
                c = v(c, d);
                d = !M(a) && b.keys(a);
                for (var k = (d || a).length, m = 0; m < k; m++) {
                    var u = d ? d[m] : m;
                    if (!c(a[u], u, a))
                        return !1
                }
                return !0
            }
            ;
            b.some = b.any = function(a, c, d) {
                c = v(c, d);
                d = !M(a) && b.keys(a);
                for (var k = (d || a).length, m = 0; m < k; m++) {
                    var u = d ? d[m] : m;
                    if (c(a[u], u, a))
                        return !0
                }
                return !1
            }
            ;
            b.contains = b.includes = b.include = function(a, c, d, k) {
                M(a) || (a = b.values(a));
                if ("number" != typeof d || k)
                    d = 0;
                return 0 <= b.indexOf(a, c, d)
            }
            ;
            b.invoke = function(a, c) {
                var d = B.call(arguments, 2)
                  , k = b.isFunction(c);
                return b.map(a, function(m) {
                    var u = k ? c : m[c];
                    return null == u ? u : u.apply(m, d)
                })
            }
            ;
            b.pluck = function(a, c) {
                return b.map(a, b.property(c))
            }
            ;
            b.where = function(a, c) {
                return b.filter(a, b.matcher(c))
            }
            ;
            b.findWhere = function(a, c) {
                return b.find(a, b.matcher(c))
            }
            ;
            b.max = function(a, c, d) {
                var k = -Infinity, m = -Infinity, u;
                if (null == c && null != a) {
                    a = M(a) ? a : b.values(a);
                    for (var F = 0, L = a.length; F < L; F++)
                        d = a[F],
                        d > k && (k = d)
                } else
                    c = v(c, d),
                    b.each(a, function(Q, P, S) {
                        u = c(Q, P, S);
                        if (u > m || -Infinity === u && -Infinity === k)
                            k = Q,
                            m = u
                    });
                return k
            }
            ;
            b.min = function(a, c, d) {
                var k = Infinity, m = Infinity, u;
                if (null == c && null != a) {
                    a = M(a) ? a : b.values(a);
                    for (var F = 0, L = a.length; F < L; F++)
                        d = a[F],
                        d < k && (k = d)
                } else
                    c = v(c, d),
                    b.each(a, function(Q, P, S) {
                        u = c(Q, P, S);
                        if (u < m || Infinity === u && Infinity === k)
                            k = Q,
                            m = u
                    });
                return k
            }
            ;
            b.shuffle = function(a) {
                a = M(a) ? a : b.values(a);
                for (var c = a.length, d = Array(c), k = 0, m; k < c; k++)
                    m = b.random(0, k),
                    m !== k && (d[k] = d[m]),
                    d[m] = a[k];
                return d
            }
            ;
            b.sample = function(a, c, d) {
                return null == c || d ? (M(a) || (a = b.values(a)),
                a[b.random(a.length - 1)]) : b.shuffle(a).slice(0, Math.max(0, c))
            }
            ;
            b.sortBy = function(a, c, d) {
                c = v(c, d);
                return b.pluck(b.map(a, function(k, m, u) {
                    return {
                        value: k,
                        index: m,
                        criteria: c(k, m, u)
                    }
                }).sort(function(k, m) {
                    var u = k.criteria
                      , F = m.criteria;
                    if (u !== F) {
                        if (u > F || void 0 === u)
                            return 1;
                        if (u < F || void 0 === F)
                            return -1
                    }
                    return k.index - m.index
                }), "value")
            }
            ;
            var T = function(a) {
                return function(c, d, k) {
                    var m = {};
                    d = v(d, k);
                    b.each(c, function(u, F) {
                        F = d(u, F, c);
                        a(m, u, F)
                    });
                    return m
                }
            };
            b.groupBy = T(function(a, c, d) {
                b.has(a, d) ? a[d].push(c) : a[d] = [c]
            });
            b.indexBy = T(function(a, c, d) {
                a[d] = c
            });
            b.countBy = T(function(a, c, d) {
                b.has(a, d) ? a[d]++ : a[d] = 1
            });
            b.toArray = function(a) {
                return a ? b.isArray(a) ? B.call(a) : M(a) ? b.map(a, b.identity) : b.values(a) : []
            }
            ;
            b.size = function(a) {
                return null == a ? 0 : M(a) ? a.length : b.keys(a).length
            }
            ;
            b.partition = function(a, c, d) {
                c = v(c, d);
                var k = []
                  , m = [];
                b.each(a, function(u, F, L) {
                    (c(u, F, L) ? k : m).push(u)
                });
                return [k, m]
            }
            ;
            b.first = b.head = b.take = function(a, c, d) {
                if (null != a)
                    return null == c || d ? a[0] : b.initial(a, a.length - c)
            }
            ;
            b.initial = function(a, c, d) {
                return B.call(a, 0, Math.max(0, a.length - (null == c || d ? 1 : c)))
            }
            ;
            b.last = function(a, c, d) {
                if (null != a)
                    return null == c || d ? a[a.length - 1] : b.rest(a, Math.max(0, a.length - c))
            }
            ;
            b.rest = b.tail = b.drop = function(a, c, d) {
                return B.call(a, null == c || d ? 1 : c)
            }
            ;
            b.compact = function(a) {
                return b.filter(a, b.identity)
            }
            ;
            var R = function(a, c, d, k) {
                var m = []
                  , u = 0;
                k = k || 0;
                for (var F = r(a); k < F; k++) {
                    var L = a[k];
                    if (M(L) && (b.isArray(L) || b.isArguments(L))) {
                        c || (L = R(L, c, d));
                        var Q = 0
                          , P = L.length;
                        for (m.length += P; Q < P; )
                            m[u++] = L[Q++]
                    } else
                        d || (m[u++] = L)
                }
                return m
            };
            b.flatten = function(a, c) {
                return R(a, c, !1)
            }
            ;
            b.without = function(a) {
                return b.difference(a, B.call(arguments, 1))
            }
            ;
            b.uniq = b.unique = function(a, c, d, k) {
                b.isBoolean(c) || (k = d,
                d = c,
                c = !1);
                null != d && (d = v(d, k));
                k = [];
                for (var m = [], u = 0, F = r(a); u < F; u++) {
                    var L = a[u]
                      , Q = d ? d(L, u, a) : L;
                    c ? (u && m === Q || k.push(L),
                    m = Q) : d ? b.contains(m, Q) || (m.push(Q),
                    k.push(L)) : b.contains(k, L) || k.push(L)
                }
                return k
            }
            ;
            b.union = function() {
                return b.uniq(R(arguments, !0, !0))
            }
            ;
            b.intersection = function(a) {
                for (var c = [], d = arguments.length, k = 0, m = r(a); k < m; k++) {
                    var u = a[k];
                    if (!b.contains(c, u)) {
                        for (var F = 1; F < d && b.contains(arguments[F], u); F++)
                            ;
                        F === d && c.push(u)
                    }
                }
                return c
            }
            ;
            b.difference = function(a) {
                var c = R(arguments, !0, !0, 1);
                return b.filter(a, function(d) {
                    return !b.contains(c, d)
                })
            }
            ;
            b.zip = function() {
                return b.unzip(arguments)
            }
            ;
            b.unzip = function(a) {
                for (var c = a && b.max(a, r).length || 0, d = Array(c), k = 0; k < c; k++)
                    d[k] = b.pluck(a, k);
                return d
            }
            ;
            b.object = function(a, c) {
                for (var d = {}, k = 0, m = r(a); k < m; k++)
                    c ? d[a[k]] = c[k] : d[a[k][0]] = a[k][1];
                return d
            }
            ;
            b.findIndex = p(1);
            b.findLastIndex = p(-1);
            b.sortedIndex = function(a, c, d, k) {
                d = v(d, k, 1);
                c = d(c);
                k = 0;
                for (var m = r(a); k < m; ) {
                    var u = Math.floor((k + m) / 2);
                    d(a[u]) < c ? k = u + 1 : m = u
                }
                return k
            }
            ;
            b.indexOf = t(1, b.findIndex, b.sortedIndex);
            b.lastIndexOf = t(-1, b.findLastIndex);
            b.range = function(a, c, d) {
                null == c && (c = a || 0,
                a = 0);
                d = d || 1;
                c = Math.max(Math.ceil((c - a) / d), 0);
                for (var k = Array(c), m = 0; m < c; m++,
                a += d)
                    k[m] = a;
                return k
            }
            ;
            var V = function(a, c, d, k, m) {
                if (!(k instanceof c))
                    return a.apply(d, m);
                c = N(a.prototype);
                a = a.apply(c, m);
                return b.isObject(a) ? a : c
            };
            b.bind = function(a, c) {
                if (w && a.bind === w)
                    return w.apply(a, B.call(arguments, 1));
                if (!b.isFunction(a))
                    throw new TypeError("Bind must be called on a function");
                var d = B.call(arguments, 2)
                  , k = function() {
                    return V(a, k, c, this, d.concat(B.call(arguments)))
                };
                return k
            }
            ;
            b.partial = function(a) {
                var c = B.call(arguments, 1)
                  , d = function() {
                    for (var k = 0, m = c.length, u = Array(m), F = 0; F < m; F++)
                        u[F] = c[F] === b ? arguments[k++] : c[F];
                    for (; k < arguments.length; )
                        u.push(arguments[k++]);
                    return V(a, d, this, this, u)
                };
                return d
            }
            ;
            b.bindAll = function(a) {
                var c, d = arguments.length;
                if (1 >= d)
                    throw Error("bindAll must be passed function names");
                for (c = 1; c < d; c++) {
                    var k = arguments[c];
                    a[k] = b.bind(a[k], a)
                }
                return a
            }
            ;
            b.memoize = function(a, c) {
                var d = function(k) {
                    var m = d.cache
                      , u = "" + (c ? c.apply(this, arguments) : k);
                    b.has(m, u) || (m[u] = a.apply(this, arguments));
                    return m[u]
                };
                d.cache = {};
                return d
            }
            ;
            b.delay = function(a, c) {
                var d = B.call(arguments, 2);
                return setTimeout(function() {
                    return a.apply(null, d)
                }, c)
            }
            ;
            b.defer = b.partial(b.delay, b, 1);
            b.throttle = function(a, c, d) {
                var k, m, u, F = null, L = 0;
                d || (d = {});
                var Q = function() {
                    L = !1 === d.leading ? 0 : b.now();
                    F = null;
                    u = a.apply(k, m);
                    F || (k = m = null)
                };
                return function() {
                    var P = b.now();
                    L || !1 !== d.leading || (L = P);
                    var S = c - (P - L);
                    k = this;
                    m = arguments;
                    0 >= S || S > c ? (F && (clearTimeout(F),
                    F = null),
                    L = P,
                    u = a.apply(k, m),
                    F || (k = m = null)) : F || !1 === d.trailing || (F = setTimeout(Q, S));
                    return u
                }
            }
            ;
            b.debounce = function(a, c, d) {
                var k, m, u, F, L, Q = function() {
                    var P = b.now() - F;
                    P < c && 0 <= P ? k = setTimeout(Q, c - P) : (k = null,
                    d || (L = a.apply(u, m),
                    k || (u = m = null)))
                };
                return function() {
                    u = this;
                    m = arguments;
                    F = b.now();
                    var P = d && !k;
                    k || (k = setTimeout(Q, c));
                    P && (L = a.apply(u, m),
                    u = m = null);
                    return L
                }
            }
            ;
            b.wrap = function(a, c) {
                return b.partial(c, a)
            }
            ;
            b.negate = function(a) {
                return function() {
                    return !a.apply(this, arguments)
                }
            }
            ;
            b.compose = function() {
                var a = arguments
                  , c = a.length - 1;
                return function() {
                    for (var d = c, k = a[c].apply(this, arguments); d--; )
                        k = a[d].call(this, k);
                    return k
                }
            }
            ;
            b.after = function(a, c) {
                return function() {
                    if (1 > --a)
                        return c.apply(this, arguments)
                }
            }
            ;
            b.before = function(a, c) {
                var d;
                return function() {
                    0 < --a && (d = c.apply(this, arguments));
                    1 >= a && (c = null);
                    return d
                }
            }
            ;
            b.once = b.partial(b.before, 2);
            var U = !{
                toString: null
            }.propertyIsEnumerable("toString")
              , Z = "valueOf isPrototypeOf toString propertyIsEnumerable hasOwnProperty toLocaleString".split(" ");
            b.keys = function(a) {
                if (!b.isObject(a))
                    return [];
                if (C)
                    return C(a);
                var c = [], d;
                for (d in a)
                    b.has(a, d) && c.push(d);
                U && q(a, c);
                return c
            }
            ;
            b.allKeys = function(a) {
                if (!b.isObject(a))
                    return [];
                var c = [], d;
                for (d in a)
                    c.push(d);
                U && q(a, c);
                return c
            }
            ;
            b.values = function(a) {
                for (var c = b.keys(a), d = c.length, k = Array(d), m = 0; m < d; m++)
                    k[m] = a[c[m]];
                return k
            }
            ;
            b.mapObject = function(a, c, d) {
                c = v(c, d);
                d = b.keys(a);
                for (var k = d.length, m = {}, u, F = 0; F < k; F++)
                    u = d[F],
                    m[u] = c(a[u], u, a);
                return m
            }
            ;
            b.pairs = function(a) {
                for (var c = b.keys(a), d = c.length, k = Array(d), m = 0; m < d; m++)
                    k[m] = [c[m], a[c[m]]];
                return k
            }
            ;
            b.invert = function(a) {
                for (var c = {}, d = b.keys(a), k = 0, m = d.length; k < m; k++)
                    c[a[d[k]]] = d[k];
                return c
            }
            ;
            b.functions = b.methods = function(a) {
                var c = [], d;
                for (d in a)
                    b.isFunction(a[d]) && c.push(d);
                return c.sort()
            }
            ;
            b.extend = z(b.allKeys);
            b.extendOwn = b.assign = z(b.keys);
            b.findKey = function(a, c, d) {
                c = v(c, d);
                d = b.keys(a);
                for (var k, m = 0, u = d.length; m < u; m++)
                    if (k = d[m],
                    c(a[k], k, a))
                        return k
            }
            ;
            b.pick = function(a, c, d) {
                var k = {}
                  , m = a;
                if (null == m)
                    return k;
                if (b.isFunction(c)) {
                    var u = b.allKeys(m);
                    var F = l(c, d)
                } else
                    u = R(arguments, !1, !1, 1),
                    F = function(ha, aa, ba) {
                        return aa in ba
                    }
                    ,
                    m = Object(m);
                for (var L = 0, Q = u.length; L < Q; L++) {
                    var P = u[L]
                      , S = m[P];
                    F(S, P, m) && (k[P] = S)
                }
                return k
            }
            ;
            b.omit = function(a, c, d) {
                if (b.isFunction(c))
                    c = b.negate(c);
                else {
                    var k = b.map(R(arguments, !1, !1, 1), String);
                    c = function(m, u) {
                        return !b.contains(k, u)
                    }
                }
                return b.pick(a, c, d)
            }
            ;
            b.defaults = z(b.allKeys, !0);
            b.create = function(a, c) {
                a = N(a);
                c && b.extendOwn(a, c);
                return a
            }
            ;
            b.clone = function(a) {
                return b.isObject(a) ? b.isArray(a) ? a.slice() : b.extend({}, a) : a
            }
            ;
            b.tap = function(a, c) {
                c(a);
                return a
            }
            ;
            b.isMatch = function(a, c) {
                var d = b.keys(c)
                  , k = d.length;
                if (null == a)
                    return !k;
                a = Object(a);
                for (var m = 0; m < k; m++) {
                    var u = d[m];
                    if (c[u] !== a[u] || !(u in a))
                        return !1
                }
                return !0
            }
            ;
            var W = function(a, c, d, k) {
                if (a === c)
                    return 0 !== a || 1 / a === 1 / c;
                if (null == a || null == c)
                    return a === c;
                a instanceof b && (a = a._wrapped);
                c instanceof b && (c = c._wrapped);
                var m = n.call(a);
                if (m !== n.call(c))
                    return !1;
                switch (m) {
                case "[object RegExp]":
                case "[object String]":
                    return "" + a === "" + c;
                case "[object Number]":
                    return +a !== +a ? +c !== +c : 0 === +a ? 1 / +a === 1 / c : +a === +c;
                case "[object Date]":
                case "[object Boolean]":
                    return +a === +c
                }
                m = "[object Array]" === m;
                if (!m) {
                    if ("object" != typeof a || "object" != typeof c)
                        return !1;
                    var u = a.constructor
                      , F = c.constructor;
                    if (u !== F && !(b.isFunction(u) && u instanceof u && b.isFunction(F) && F instanceof F) && "constructor"in a && "constructor"in c)
                        return !1
                }
                d = d || [];
                k = k || [];
                for (u = d.length; u--; )
                    if (d[u] === a)
                        return k[u] === c;
                d.push(a);
                k.push(c);
                if (m) {
                    u = a.length;
                    if (u !== c.length)
                        return !1;
                    for (; u--; )
                        if (!W(a[u], c[u], d, k))
                            return !1
                } else {
                    m = b.keys(a);
                    u = m.length;
                    if (b.keys(c).length !== u)
                        return !1;
                    for (; u--; )
                        if (F = m[u],
                        !b.has(c, F) || !W(a[F], c[F], d, k))
                            return !1
                }
                d.pop();
                k.pop();
                return !0
            };
            b.isEqual = function(a, c) {
                return W(a, c)
            }
            ;
            b.isEmpty = function(a) {
                return null == a ? !0 : M(a) && (b.isArray(a) || b.isString(a) || b.isArguments(a)) ? 0 === a.length : 0 === b.keys(a).length
            }
            ;
            b.isElement = function(a) {
                return !(!a || 1 !== a.nodeType)
            }
            ;
            b.isArray = y || function(a) {
                return "[object Array]" === n.call(a)
            }
            ;
            b.isObject = function(a) {
                var c = typeof a;
                return "function" === c || "object" === c && !!a
            }
            ;
            b.each("Arguments Function String Number Date RegExp Error".split(" "), function(a) {
                b["is" + a] = function(c) {
                    return n.call(c) === "[object " + a + "]"
                }
            });
            b.isArguments(arguments) || (b.isArguments = function(a) {
                return b.has(a, "callee")
            }
            );
            "function" != typeof /./ && "object" != typeof Int8Array && (b.isFunction = function(a) {
                return "function" == typeof a || !1
            }
            );
            b.isFinite = function(a) {
                return isFinite(a) && !isNaN(parseFloat(a))
            }
            ;
            b.isNaN = function(a) {
                return b.isNumber(a) && a !== +a
            }
            ;
            b.isBoolean = function(a) {
                return !0 === a || !1 === a || "[object Boolean]" === n.call(a)
            }
            ;
            b.isNull = function(a) {
                return null === a
            }
            ;
            b.isUndefined = function(a) {
                return void 0 === a
            }
            ;
            b.has = function(a, c) {
                return null != a && J.call(a, c)
            }
            ;
            b.noConflict = function() {
                g._ = e;
                return this
            }
            ;
            b.identity = function(a) {
                return a
            }
            ;
            b.constant = function(a) {
                return function() {
                    return a
                }
            }
            ;
            b.noop = function() {}
            ;
            b.property = O;
            b.propertyOf = function(a) {
                return null == a ? function() {}
                : function(c) {
                    return a[c]
                }
            }
            ;
            b.matcher = b.matches = function(a) {
                a = b.extendOwn({}, a);
                return function(c) {
                    return b.isMatch(c, a)
                }
            }
            ;
            b.times = function(a, c, d) {
                var k = Array(Math.max(0, a));
                c = l(c, d, 1);
                for (d = 0; d < a; d++)
                    k[d] = c(d);
                return k
            }
            ;
            b.random = function(a, c) {
                null == c && (c = a,
                a = 0);
                return a + Math.floor(Math.random() * (c - a + 1))
            }
            ;
            b.now = Date.now || function() {
                return (new Date).getTime()
            }
            ;
            y = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#x27;",
                "`": "&#x60;"
            };
            z = b.invert(y);
            O = function(a) {
                var c = function(u) {
                    return a[u]
                }
                  , d = "(?:" + b.keys(a).join("|") + ")"
                  , k = RegExp(d)
                  , m = RegExp(d, "g");
                return function(u) {
                    u = null == u ? "" : "" + u;
                    return k.test(u) ? u.replace(m, c) : u
                }
            }
            ;
            b.escape = O(y);
            b.unescape = O(z);
            b.result = function(a, c, d) {
                c = null == a ? void 0 : a[c];
                void 0 === c && (c = d);
                return b.isFunction(c) ? c.call(a) : c
            }
            ;
            var ca = 0;
            b.uniqueId = function(a) {
                var c = ++ca + "";
                return a ? a + c : c
            }
            ;
            b.templateSettings = {
                evaluate: /<%([\s\S]+?)%>/g,
                interpolate: /<%=([\s\S]+?)%>/g,
                escape: /<%-([\s\S]+?)%>/g
            };
            var X = /(.)^/
              , da = {
                "'": "'",
                "\\": "\\",
                "\r": "r",
                "\n": "n",
                "\u2028": "u2028",
                "\u2029": "u2029"
            }
              , ea = /\\|'|\r|\n|\u2028|\u2029/g
              , fa = function(a) {
                return "\\" + da[a]
            };
            b.template = function(a, c, d) {
                !c && d && (c = d);
                c = b.defaults({}, c, b.templateSettings);
                d = RegExp([(c.escape || X).source, (c.interpolate || X).source, (c.evaluate || X).source].join("|") + "|$", "g");
                var k = 0
                  , m = "__p+='";
                a.replace(d, function(F, L, Q, P, S) {
                    m += a.slice(k, S).replace(ea, fa);
                    k = S + F.length;
                    L ? m += "'+\n((__t=(" + L + "))==null?'':_.escape(__t))+\n'" : Q ? m += "'+\n((__t=(" + Q + "))==null?'':__t)+\n'" : P && (m += "';\n" + P + "\n__p+='");
                    return F
                });
                m += "';\n";
                c.variable || (m = "with(obj||{}){\n" + m + "}\n");
                m = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + m + "return __p;\n";
                try {
                    var u = new Function(c.variable || "obj","_",m)
                } catch (F) {
                    throw F.source = m,
                    F;
                }
                d = function(F) {
                    return u.call(this, F, b)
                }
                ;
                d.source = "function(" + (c.variable || "obj") + "){\n" + m + "}";
                return d
            }
            ;
            b.chain = function(a) {
                a = b(a);
                a._chain = !0;
                return a
            }
            ;
            var Y = function(a, c) {
                return a._chain ? b(c).chain() : c
            };
            b.mixin = function(a) {
                b.each(b.functions(a), function(c) {
                    var d = b[c] = a[c];
                    b.prototype[c] = function() {
                        var k = [this._wrapped];
                        E.apply(k, arguments);
                        return Y(this, d.apply(b, k))
                    }
                })
            }
            ;
            b.mixin(b);
            b.each("pop push reverse shift sort splice unshift".split(" "), function(a) {
                var c = h[a];
                b.prototype[a] = function() {
                    var d = this._wrapped;
                    c.apply(d, arguments);
                    "shift" !== a && "splice" !== a || 0 !== d.length || delete d[0];
                    return Y(this, d)
                }
            });
            b.each(["concat", "join", "slice"], function(a) {
                var c = h[a];
                b.prototype[a] = function() {
                    return Y(this, c.apply(this._wrapped, arguments))
                }
            });
            b.prototype.value = function() {
                return this._wrapped
            }
            ;
            b.prototype.valueOf = b.prototype.toJSON = b.prototype.value;
            b.prototype.toString = function() {
                return "" + this._wrapped
            }
            ;
            "function" === typeof define && define.amd && define("underscore", [], function() {
                return b
            })
        }
        ).call(this)
    }
    , {}],
    3: [function(A, G, H) {
        (function() {
            window.WebComponents = window.WebComponents || {
                flags: {}
            };
            var f = document.querySelector('script[src*="webcomponents-lite.js"]')
              , p = {};
            if (!p.noOpts) {
                location.search.slice(1).split("&").forEach(function(g) {
                    g = g.split("=");
                    var e;
                    g[0] && (e = g[0].match(/wc-(.+)/)) && (p[e[1]] = g[1] || !0)
                });
                if (f)
                    for (var t = 0, q; q = f.attributes[t]; t++)
                        "src" !== q.name && (p[q.name] = q.value || !0);
                p.log && p.log.split ? (f = p.log.split(","),
                p.log = {},
                f.forEach(function(g) {
                    p.log[g] = !0
                })) : p.log = {}
            }
            p.register && (window.CustomElements = window.CustomElements || {
                flags: {}
            },
            window.CustomElements.flags.register = p.register);
            WebComponents.flags = p
        }
        )();
        (function(f) {
            function p(w) {
                "" == w && (e.call(this),
                this._isInvalid = !0);
                return w.toLowerCase()
            }
            function t(w) {
                var I = w.charCodeAt(0);
                return 32 < I && 127 > I && -1 == [34, 35, 60, 62, 63, 96].indexOf(I) ? w : encodeURIComponent(w)
            }
            function q(w) {
                var I = w.charCodeAt(0);
                return 32 < I && 127 > I && -1 == [34, 35, 60, 62, 96].indexOf(I) ? w : encodeURIComponent(w)
            }
            function g(w, I, K) {
                function b(T) {
                    D.push(T)
                }
                var l = I || "scheme start"
                  , v = 0
                  , z = ""
                  , N = !1
                  , O = !1
                  , D = [];
                a: for (; (void 0 != w[v - 1] || 0 == v) && !this._isInvalid; ) {
                    var r = w[v];
                    switch (l) {
                    case "scheme start":
                        if (r && J.test(r))
                            z += r.toLowerCase(),
                            l = "scheme";
                        else if (I) {
                            b("Invalid scheme.");
                            break a
                        } else {
                            z = "";
                            l = "no scheme";
                            continue
                        }
                        break;
                    case "scheme":
                        if (r && y.test(r))
                            z += r.toLowerCase();
                        else if (":" == r) {
                            this._scheme = z;
                            z = "";
                            if (I)
                                break a;
                            void 0 !== B[this._scheme] && (this._isRelative = !0);
                            l = "file" == this._scheme ? "relative" : this._isRelative && K && K._scheme == this._scheme ? "relative or authority" : this._isRelative ? "authority first slash" : "scheme data"
                        } else if (I) {
                            void 0 != r && b("Code point not allowed in scheme: " + r);
                            break a
                        } else {
                            z = "";
                            v = 0;
                            l = "no scheme";
                            continue
                        }
                        break;
                    case "scheme data":
                        "?" == r ? (this._query = "?",
                        l = "query") : "#" == r ? (this._fragment = "#",
                        l = "fragment") : void 0 != r && "\t" != r && "\n" != r && "\r" != r && (this._schemeData += t(r));
                        break;
                    case "no scheme":
                        if (K && void 0 !== B[K._scheme]) {
                            l = "relative";
                            continue
                        } else
                            b("Missing scheme."),
                            e.call(this),
                            this._isInvalid = !0;
                        break;
                    case "relative or authority":
                        if ("/" == r && "/" == w[v + 1])
                            l = "authority ignore slashes";
                        else {
                            b("Expected /, got: " + r);
                            l = "relative";
                            continue
                        }
                        break;
                    case "relative":
                        this._isRelative = !0;
                        "file" != this._scheme && (this._scheme = K._scheme);
                        if (void 0 == r) {
                            this._host = K._host;
                            this._port = K._port;
                            this._path = K._path.slice();
                            this._query = K._query;
                            this._username = K._username;
                            this._password = K._password;
                            break a
                        } else if ("/" == r || "\\" == r)
                            "\\" == r && b("\\ is an invalid code point."),
                            l = "relative slash";
                        else if ("?" == r)
                            this._host = K._host,
                            this._port = K._port,
                            this._path = K._path.slice(),
                            this._query = "?",
                            this._username = K._username,
                            this._password = K._password,
                            l = "query";
                        else if ("#" == r)
                            this._host = K._host,
                            this._port = K._port,
                            this._path = K._path.slice(),
                            this._query = K._query,
                            this._fragment = "#",
                            this._username = K._username,
                            this._password = K._password,
                            l = "fragment";
                        else {
                            l = w[v + 1];
                            var M = w[v + 2];
                            if ("file" != this._scheme || !J.test(r) || ":" != l && "|" != l || void 0 != M && "/" != M && "\\" != M && "?" != M && "#" != M)
                                this._host = K._host,
                                this._port = K._port,
                                this._username = K._username,
                                this._password = K._password,
                                this._path = K._path.slice(),
                                this._path.pop();
                            l = "relative path";
                            continue
                        }
                        break;
                    case "relative slash":
                        if ("/" == r || "\\" == r)
                            "\\" == r && b("\\ is an invalid code point."),
                            l = "file" == this._scheme ? "file host" : "authority ignore slashes";
                        else {
                            "file" != this._scheme && (this._host = K._host,
                            this._port = K._port,
                            this._username = K._username,
                            this._password = K._password);
                            l = "relative path";
                            continue
                        }
                        break;
                    case "authority first slash":
                        if ("/" == r)
                            l = "authority second slash";
                        else {
                            b("Expected '/', got: " + r);
                            l = "authority ignore slashes";
                            continue
                        }
                        break;
                    case "authority second slash":
                        l = "authority ignore slashes";
                        if ("/" != r) {
                            b("Expected '/', got: " + r);
                            continue
                        }
                        break;
                    case "authority ignore slashes":
                        if ("/" != r && "\\" != r) {
                            l = "authority";
                            continue
                        } else
                            b("Expected authority, got: " + r);
                        break;
                    case "authority":
                        if ("@" == r) {
                            N && (b("@ already seen."),
                            z += "%40");
                            N = !0;
                            for (r = 0; r < z.length; r++)
                                M = z[r],
                                "\t" == M || "\n" == M || "\r" == M ? b("Invalid whitespace in authority.") : ":" == M && null === this._password ? this._password = "" : (M = t(M),
                                null !== this._password ? this._password += M : this._username += M);
                            z = ""
                        } else if (void 0 == r || "/" == r || "\\" == r || "?" == r || "#" == r) {
                            v -= z.length;
                            z = "";
                            l = "host";
                            continue
                        } else
                            z += r;
                        break;
                    case "file host":
                        if (void 0 == r || "/" == r || "\\" == r || "?" == r || "#" == r) {
                            2 != z.length || !J.test(z[0]) || ":" != z[1] && "|" != z[1] ? (0 != z.length && (this._host = p.call(this, z),
                            z = ""),
                            l = "relative path start") : l = "relative path";
                            continue
                        } else
                            "\t" == r || "\n" == r || "\r" == r ? b("Invalid whitespace in file host.") : z += r;
                        break;
                    case "host":
                    case "hostname":
                        if (":" != r || O)
                            if (void 0 == r || "/" == r || "\\" == r || "?" == r || "#" == r) {
                                this._host = p.call(this, z);
                                z = "";
                                l = "relative path start";
                                if (I)
                                    break a;
                                continue
                            } else
                                "\t" != r && "\n" != r && "\r" != r ? ("[" == r ? O = !0 : "]" == r && (O = !1),
                                z += r) : b("Invalid code point in host/hostname: " + r);
                        else if (this._host = p.call(this, z),
                        z = "",
                        l = "port",
                        "hostname" == I)
                            break a;
                        break;
                    case "port":
                        if (/[0-9]/.test(r))
                            z += r;
                        else if (void 0 == r || "/" == r || "\\" == r || "?" == r || "#" == r || I) {
                            "" != z && (z = parseInt(z, 10),
                            z != B[this._scheme] && (this._port = z + ""),
                            z = "");
                            if (I)
                                break a;
                            l = "relative path start";
                            continue
                        } else
                            "\t" == r || "\n" == r || "\r" == r ? b("Invalid code point in port: " + r) : (e.call(this),
                            this._isInvalid = !0);
                        break;
                    case "relative path start":
                        "\\" == r && b("'\\' not allowed in path.");
                        l = "relative path";
                        if ("/" != r && "\\" != r)
                            continue;
                        break;
                    case "relative path":
                        if (void 0 != r && "/" != r && "\\" != r && (I || "?" != r && "#" != r))
                            "\t" != r && "\n" != r && "\r" != r && (z += t(r));
                        else {
                            "\\" == r && b("\\ not allowed in relative path.");
                            if (M = n[z.toLowerCase()])
                                z = M;
                            ".." == z ? (this._path.pop(),
                            "/" != r && "\\" != r && this._path.push("")) : "." == z && "/" != r && "\\" != r ? this._path.push("") : "." != z && ("file" == this._scheme && 0 == this._path.length && 2 == z.length && J.test(z[0]) && "|" == z[1] && (z = z[0] + ":"),
                            this._path.push(z));
                            z = "";
                            "?" == r ? (this._query = "?",
                            l = "query") : "#" == r && (this._fragment = "#",
                            l = "fragment")
                        }
                        break;
                    case "query":
                        I || "#" != r ? void 0 != r && "\t" != r && "\n" != r && "\r" != r && (this._query += q(r)) : (this._fragment = "#",
                        l = "fragment");
                        break;
                    case "fragment":
                        void 0 != r && "\t" != r && "\n" != r && "\r" != r && (this._fragment += r)
                    }
                    v++
                }
            }
            function e() {
                this._username = this._schemeData = this._scheme = "";
                this._password = null;
                this._port = this._host = "";
                this._path = [];
                this._fragment = this._query = "";
                this._isRelative = this._isInvalid = !1
            }
            function h(w, I) {
                void 0 === I || I instanceof h || (I = new h(String(I)));
                this._url = w;
                e.call(this);
                w = w.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g, "");
                g.call(this, w, null, I)
            }
            var x = !1;
            if (!f.forceJURL)
                try {
                    var E = new URL("b","http://a");
                    E.pathname = "c%20d";
                    x = "http://a/c%20d" === E.href
                } catch (w) {}
            if (!x) {
                var B = Object.create(null);
                B.ftp = 21;
                B.file = 0;
                B.gopher = 70;
                B.http = 80;
                B.https = 443;
                B.ws = 80;
                B.wss = 443;
                var n = Object.create(null);
                n["%2e"] = ".";
                n[".%2e"] = "..";
                n["%2e."] = "..";
                n["%2e%2e"] = "..";
                var J = /[a-zA-Z]/
                  , y = /[a-zA-Z0-9\+\-\.]/;
                h.prototype = {
                    toString: function() {
                        return this.href
                    },
                    get href() {
                        if (this._isInvalid)
                            return this._url;
                        var w = "";
                        if ("" != this._username || null != this._password)
                            w = this._username + (null != this._password ? ":" + this._password : "") + "@";
                        return this.protocol + (this._isRelative ? "//" + w + this.host : "") + this.pathname + this._query + this._fragment
                    },
                    set href(w) {
                        e.call(this);
                        g.call(this, w)
                    },
                    get protocol() {
                        return this._scheme + ":"
                    },
                    set protocol(w) {
                        this._isInvalid || g.call(this, w + ":", "scheme start")
                    },
                    get host() {
                        return this._isInvalid ? "" : this._port ? this._host + ":" + this._port : this._host
                    },
                    set host(w) {
                        !this._isInvalid && this._isRelative && g.call(this, w, "host")
                    },
                    get hostname() {
                        return this._host
                    },
                    set hostname(w) {
                        !this._isInvalid && this._isRelative && g.call(this, w, "hostname")
                    },
                    get port() {
                        return this._port
                    },
                    set port(w) {
                        !this._isInvalid && this._isRelative && g.call(this, w, "port")
                    },
                    get pathname() {
                        return this._isInvalid ? "" : this._isRelative ? "/" + this._path.join("/") : this._schemeData
                    },
                    set pathname(w) {
                        !this._isInvalid && this._isRelative && (this._path = [],
                        g.call(this, w, "relative path start"))
                    },
                    get search() {
                        return this._isInvalid || !this._query || "?" == this._query ? "" : this._query
                    },
                    set search(w) {
                        !this._isInvalid && this._isRelative && (this._query = "?",
                        "?" == w[0] && (w = w.slice(1)),
                        g.call(this, w, "query"))
                    },
                    get hash() {
                        return this._isInvalid || !this._fragment || "#" == this._fragment ? "" : this._fragment
                    },
                    set hash(w) {
                        this._isInvalid || (this._fragment = "#",
                        "#" == w[0] && (w = w.slice(1)),
                        g.call(this, w, "fragment"))
                    },
                    get origin() {
                        var w;
                        if (this._isInvalid || !this._scheme)
                            return "";
                        switch (this._scheme) {
                        case "data":
                        case "file":
                        case "javascript":
                        case "mailto":
                            return "null"
                        }
                        return (w = this.host) ? this._scheme + "://" + w : ""
                    }
                };
                var C = f.URL;
                C && (h.createObjectURL = function(w) {
                    return C.createObjectURL.apply(C, arguments)
                }
                ,
                h.revokeObjectURL = function(w) {
                    C.revokeObjectURL(w)
                }
                );
                f.URL = h
            }
        }
        )(self);
        "undefined" === typeof WeakMap && function() {
            var f = Object.defineProperty
              , p = Date.now() % 1E9
              , t = function() {
                this.name = "__st" + (1E9 * Math.random() >>> 0) + (p++ + "__")
            };
            t.prototype = {
                set: function(q, g) {
                    var e = q[this.name];
                    e && e[0] === q ? e[1] = g : f(q, this.name, {
                        value: [q, g],
                        writable: !0
                    });
                    return this
                },
                get: function(q) {
                    var g;
                    return (g = q[this.name]) && g[0] === q ? g[1] : void 0
                },
                "delete": function(q) {
                    var g = q[this.name];
                    if (!g || g[0] !== q)
                        return !1;
                    g[0] = g[1] = void 0;
                    return !0
                },
                has: function(q) {
                    var g = q[this.name];
                    return g ? g[0] === q : !1
                }
            };
            window.WeakMap = t
        }();
        (function(f) {
            function p() {
                C = !1;
                var l = w;
                w = [];
                l.sort(function(z, N) {
                    return z.uid_ - N.uid_
                });
                var v = !1;
                l.forEach(function(z) {
                    var N = z.takeRecords();
                    t(z);
                    N.length && (z.callback_(N, z),
                    v = !0)
                });
                v && p()
            }
            function t(l) {
                l.nodes_.forEach(function(v) {
                    (v = B.get(v)) && v.forEach(function(z) {
                        z.observer === l && z.removeTransientObservers()
                    })
                })
            }
            function q(l, v) {
                for (var z = l; z; z = z.parentNode) {
                    var N = B.get(z);
                    if (N)
                        for (var O = 0; O < N.length; O++) {
                            var D = N[O]
                              , r = D.options;
                            (z === l || r.subtree) && (r = v(r)) && D.enqueue(r)
                        }
                }
            }
            function g(l) {
                this.callback_ = l;
                this.nodes_ = [];
                this.records_ = [];
                this.uid_ = ++I
            }
            function e(l, v) {
                this.type = l;
                this.target = v;
                this.addedNodes = [];
                this.removedNodes = [];
                this.oldValue = this.attributeNamespace = this.attributeName = this.nextSibling = this.previousSibling = null
            }
            function h(l, v) {
                return K = new e(l,v)
            }
            function x(l) {
                if (b)
                    return b;
                var v = K
                  , z = new e(v.type,v.target);
                z.addedNodes = v.addedNodes.slice();
                z.removedNodes = v.removedNodes.slice();
                z.previousSibling = v.previousSibling;
                z.nextSibling = v.nextSibling;
                z.attributeName = v.attributeName;
                z.attributeNamespace = v.attributeNamespace;
                z.oldValue = v.oldValue;
                b = z;
                b.oldValue = l;
                return b
            }
            function E(l, v, z) {
                this.observer = l;
                this.target = v;
                this.options = z;
                this.transientObservedNodes = []
            }
            if (!f.JsMutationObserver) {
                var B = new WeakMap;
                if (/Trident|Edge/.test(navigator.userAgent))
                    var n = setTimeout;
                else if (window.setImmediate)
                    n = window.setImmediate;
                else {
                    var J = []
                      , y = String(Math.random());
                    window.addEventListener("message", function(l) {
                        l.data === y && (l = J,
                        J = [],
                        l.forEach(function(v) {
                            v()
                        }))
                    });
                    n = function(l) {
                        J.push(l);
                        window.postMessage(y, "*")
                    }
                }
                var C = !1
                  , w = []
                  , I = 0;
                g.prototype = {
                    observe: function(l, v) {
                        l = window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(l) || l;
                        if (!v.childList && !v.attributes && !v.characterData || v.attributeOldValue && !v.attributes || v.attributeFilter && v.attributeFilter.length && !v.attributes || v.characterDataOldValue && !v.characterData)
                            throw new SyntaxError;
                        var z = B.get(l);
                        z || B.set(l, z = []);
                        for (var N, O = 0; O < z.length; O++)
                            if (z[O].observer === this) {
                                N = z[O];
                                N.removeListeners();
                                N.options = v;
                                break
                            }
                        N || (N = new E(this,l,v),
                        z.push(N),
                        this.nodes_.push(l));
                        N.addListeners()
                    },
                    disconnect: function() {
                        this.nodes_.forEach(function(l) {
                            l = B.get(l);
                            for (var v = 0; v < l.length; v++) {
                                var z = l[v];
                                if (z.observer === this) {
                                    z.removeListeners();
                                    l.splice(v, 1);
                                    break
                                }
                            }
                        }, this);
                        this.records_ = []
                    },
                    takeRecords: function() {
                        var l = this.records_;
                        this.records_ = [];
                        return l
                    }
                };
                var K, b;
                E.prototype = {
                    enqueue: function(l) {
                        var v = this.observer.records_
                          , z = v.length;
                        if (0 < v.length) {
                            var N = v[z - 1];
                            N = N === l ? N : !b || N !== b && N !== K ? null : b;
                            if (N) {
                                v[z - 1] = N;
                                return
                            }
                        } else
                            w.push(this.observer),
                            C || (C = !0,
                            n(p));
                        v[z] = l
                    },
                    addListeners: function() {
                        this.addListeners_(this.target)
                    },
                    addListeners_: function(l) {
                        var v = this.options;
                        v.attributes && l.addEventListener("DOMAttrModified", this, !0);
                        v.characterData && l.addEventListener("DOMCharacterDataModified", this, !0);
                        v.childList && l.addEventListener("DOMNodeInserted", this, !0);
                        (v.childList || v.subtree) && l.addEventListener("DOMNodeRemoved", this, !0)
                    },
                    removeListeners: function() {
                        this.removeListeners_(this.target)
                    },
                    removeListeners_: function(l) {
                        var v = this.options;
                        v.attributes && l.removeEventListener("DOMAttrModified", this, !0);
                        v.characterData && l.removeEventListener("DOMCharacterDataModified", this, !0);
                        v.childList && l.removeEventListener("DOMNodeInserted", this, !0);
                        (v.childList || v.subtree) && l.removeEventListener("DOMNodeRemoved", this, !0)
                    },
                    addTransientObserver: function(l) {
                        if (l !== this.target) {
                            this.addListeners_(l);
                            this.transientObservedNodes.push(l);
                            var v = B.get(l);
                            v || B.set(l, v = []);
                            v.push(this)
                        }
                    },
                    removeTransientObservers: function() {
                        var l = this.transientObservedNodes;
                        this.transientObservedNodes = [];
                        l.forEach(function(v) {
                            this.removeListeners_(v);
                            v = B.get(v);
                            for (var z = 0; z < v.length; z++)
                                if (v[z] === this) {
                                    v.splice(z, 1);
                                    break
                                }
                        }, this)
                    },
                    handleEvent: function(l) {
                        l.stopImmediatePropagation();
                        switch (l.type) {
                        case "DOMAttrModified":
                            var v = l.attrName
                              , z = l.relatedNode.namespaceURI
                              , N = l.target
                              , O = new h("attributes",N);
                            O.attributeName = v;
                            O.attributeNamespace = z;
                            var D = l.attrChange === MutationEvent.ADDITION ? null : l.prevValue;
                            q(N, function(R) {
                                if (R.attributes && (!R.attributeFilter || !R.attributeFilter.length || -1 !== R.attributeFilter.indexOf(v) || -1 !== R.attributeFilter.indexOf(z)))
                                    return R.attributeOldValue ? x(D) : O
                            });
                            break;
                        case "DOMCharacterDataModified":
                            N = l.target;
                            O = h("characterData", N);
                            D = l.prevValue;
                            q(N, function(R) {
                                if (R.characterData)
                                    return R.characterDataOldValue ? x(D) : O
                            });
                            break;
                        case "DOMNodeRemoved":
                            this.addTransientObserver(l.target);
                        case "DOMNodeInserted":
                            var r = l.target;
                            if ("DOMNodeInserted" === l.type) {
                                N = [r];
                                var M = []
                            } else
                                N = [],
                                M = [r];
                            var T = r.previousSibling;
                            r = r.nextSibling;
                            O = h("childList", l.target.parentNode);
                            O.addedNodes = N;
                            O.removedNodes = M;
                            O.previousSibling = T;
                            O.nextSibling = r;
                            q(l.relatedNode, function(R) {
                                if (R.childList)
                                    return O
                            })
                        }
                        K = b = void 0
                    }
                };
                f.JsMutationObserver = g;
                f.MutationObserver || (f.MutationObserver = g,
                g._isPolyfilled = !0)
            }
        }
        )(self);
        (function() {
            var f = "undefined" === typeof HTMLTemplateElement;
            /Trident/.test(navigator.userAgent) && function() {
                var y = document.importNode;
                document.importNode = function() {
                    var C = y.apply(document, arguments);
                    if (C.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
                        var w = document.createDocumentFragment();
                        w.appendChild(C);
                        return w
                    }
                    return C
                }
            }();
            var p = function() {
                if (!f) {
                    var y = document.createElement("template")
                      , C = document.createElement("template");
                    C.content.appendChild(document.createElement("div"));
                    y.content.appendChild(C);
                    y = y.cloneNode(!0);
                    return 0 === y.content.childNodes.length || 0 === y.content.firstChild.content.childNodes.length
                }
            }()
              , t = function() {};
            if (f) {
                var q = function(y) {
                    switch (y) {
                    case "&":
                        return "&amp;";
                    case "<":
                        return "&lt;";
                    case ">":
                        return "&gt;";
                    case "\u00a0":
                        return "&nbsp;"
                    }
                }
                  , g = document.implementation.createHTMLDocument("template")
                  , e = !0
                  , h = document.createElement("style");
                h.textContent = "template{display:none;}";
                var x = document.head;
                x.insertBefore(h, x.firstElementChild);
                t.prototype = Object.create(HTMLElement.prototype);
                t.decorate = function(y) {
                    if (!y.content) {
                        y.content = g.createDocumentFragment();
                        for (var C; C = y.firstChild; )
                            y.content.appendChild(C);
                        y.cloneNode = function(w) {
                            return t.cloneNode(this, w)
                        }
                        ;
                        if (e)
                            try {
                                Object.defineProperty(y, "innerHTML", {
                                    get: function() {
                                        for (var w = "", I = this.content.firstChild; I; I = I.nextSibling)
                                            w += I.outerHTML || I.data.replace(B, q);
                                        return w
                                    },
                                    set: function(w) {
                                        g.body.innerHTML = w;
                                        for (t.bootstrap(g); this.content.firstChild; )
                                            this.content.removeChild(this.content.firstChild);
                                        for (; g.body.firstChild; )
                                            this.content.appendChild(g.body.firstChild)
                                    },
                                    configurable: !0
                                })
                            } catch (w) {
                                e = !1
                            }
                        t.bootstrap(y.content)
                    }
                }
                ;
                t.bootstrap = function(y) {
                    y = y.querySelectorAll("template");
                    for (var C = 0, w = y.length, I; C < w && (I = y[C]); C++)
                        t.decorate(I)
                }
                ;
                document.addEventListener("DOMContentLoaded", function() {
                    t.bootstrap(document)
                });
                var E = document.createElement;
                document.createElement = function() {
                    var y = E.apply(document, arguments);
                    "template" === y.localName && t.decorate(y);
                    return y
                }
                ;
                var B = /[&\u00A0<>]/g
            }
            if (f || p) {
                var n = Node.prototype.cloneNode;
                t.cloneNode = function(y, C) {
                    var w = n.call(y, !1);
                    this.decorate && this.decorate(w);
                    C && (w.content.appendChild(n.call(y.content, !0)),
                    this.fixClonedDom(w.content, y.content));
                    return w
                }
                ;
                t.fixClonedDom = function(y, C) {
                    if (C.querySelectorAll) {
                        C = C.querySelectorAll("template");
                        y = y.querySelectorAll("template");
                        for (var w = 0, I = y.length, K, b; w < I; w++)
                            b = C[w],
                            K = y[w],
                            this.decorate && this.decorate(b),
                            K.parentNode.replaceChild(b.cloneNode(!0), K)
                    }
                }
                ;
                var J = document.importNode;
                Node.prototype.cloneNode = function(y) {
                    var C = n.call(this, y);
                    y && t.fixClonedDom(C, this);
                    return C
                }
                ;
                document.importNode = function(y, C) {
                    if ("template" === y.localName)
                        return t.cloneNode(y, C);
                    var w = J.call(document, y, C);
                    C && t.fixClonedDom(w, y);
                    return w
                }
                ;
                p && (HTMLTemplateElement.prototype.cloneNode = function(y) {
                    return t.cloneNode(this, y)
                }
                )
            }
            f && (window.HTMLTemplateElement = t)
        }
        )();
        (function(f) {
            if (!window.performance || !window.performance.now) {
                var p = Date.now();
                window.performance = {
                    now: function() {
                        return Date.now() - p
                    }
                }
            }
            window.requestAnimationFrame || (window.requestAnimationFrame = function() {
                var q = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;
                return q ? function(g) {
                    return q(function() {
                        g(performance.now())
                    })
                }
                : function(g) {
                    return window.setTimeout(g, 1E3 / 60)
                }
            }());
            window.cancelAnimationFrame || (window.cancelAnimationFrame = function() {
                return window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function(q) {
                    clearTimeout(q)
                }
            }());
            if (!function() {
                var q = document.createEvent("Event");
                q.initEvent("foo", !0, !0);
                q.preventDefault();
                return q.defaultPrevented
            }()) {
                var t = Event.prototype.preventDefault;
                Event.prototype.preventDefault = function() {
                    this.cancelable && (t.call(this),
                    Object.defineProperty(this, "defaultPrevented", {
                        get: function() {
                            return !0
                        },
                        configurable: !0
                    }))
                }
            }
            f = /Trident/.test(navigator.userAgent);
            if (!window.CustomEvent || f && "function" !== typeof window.CustomEvent)
                window.CustomEvent = function(q, g) {
                    g = g || {};
                    var e = document.createEvent("CustomEvent");
                    e.initCustomEvent(q, !!g.bubbles, !!g.cancelable, g.detail);
                    return e
                }
                ,
                window.CustomEvent.prototype = window.Event.prototype;
            if (!window.Event || f && "function" !== typeof window.Event)
                f = window.Event,
                window.Event = function(q, g) {
                    g = g || {};
                    var e = document.createEvent("Event");
                    e.initEvent(q, !!g.bubbles, !!g.cancelable);
                    return e
                }
                ,
                window.Event.prototype = f.prototype
        }
        )(window.WebComponents);
        window.HTMLImports = window.HTMLImports || {
            flags: {}
        };
        (function(f) {
            function p(y, C) {
                C = C || x;
                t(function() {
                    g(y, C)
                }, C)
            }
            function t(y, C) {
                if ("complete" !== C.readyState && C.readyState !== B) {
                    var w = function() {
                        if ("complete" === C.readyState || C.readyState === B)
                            C.removeEventListener(n, w),
                            t(y, C)
                    };
                    C.addEventListener(n, w)
                } else
                    y && y()
            }
            function q(y) {
                y.target.__loaded = !0
            }
            function g(y, C) {
                function w() {
                    l == v && y && y({
                        allImports: b,
                        loadedImports: z,
                        errorImports: N
                    })
                }
                function I(D) {
                    q(D);
                    z.push(this);
                    l++;
                    w()
                }
                function K(D) {
                    N.push(this);
                    l++;
                    w()
                }
                var b = C.querySelectorAll("link[rel=import]")
                  , l = 0
                  , v = b.length
                  , z = []
                  , N = [];
                if (v) {
                    C = 0;
                    for (var O; C < v && (O = b[C]); C++)
                        (e ? O.__loaded || O.import && "loading" !== O.import.readyState : O.__importParsed) ? (z.push(this),
                        l++,
                        w()) : (O.addEventListener("load", I),
                        O.addEventListener("error", K))
                } else
                    w()
            }
            var e = "import"in document.createElement("link")
              , h = !!window.ShadowDOMPolyfill
              , x = h ? window.ShadowDOMPolyfill.wrapIfNeeded(document) : document
              , E = {
                get: function() {
                    var y = window.HTMLImports.currentScript || document.currentScript || ("complete" !== document.readyState ? document.scripts[document.scripts.length - 1] : null);
                    return h ? window.ShadowDOMPolyfill.wrapIfNeeded(y) : y
                },
                configurable: !0
            };
            Object.defineProperty(document, "_currentScript", E);
            Object.defineProperty(x, "_currentScript", E);
            var B = (E = /Trident/.test(navigator.userAgent)) ? "complete" : "interactive"
              , n = "readystatechange";
            if (e) {
                var J = function(y) {
                    y.import ? q({
                        target: y
                    }) : (y.addEventListener("load", q),
                    y.addEventListener("error", q))
                };
                (new MutationObserver(function(y) {
                    for (var C = 0, w = y.length, I; C < w && (I = y[C]); C++)
                        if (I.addedNodes)
                            for (var K = void 0, b = I.addedNodes, l = 0, v = b.length; l < v && (K = b[l]); l++)
                                "link" === K.localName && "import" === K.rel && J(K)
                }
                )).observe(document.head, {
                    childList: !0
                });
                (function() {
                    if ("loading" === document.readyState)
                        for (var y = document.querySelectorAll("link[rel=import]"), C = 0, w = y.length, I; C < w && (I = y[C]); C++)
                            J(I)
                }
                )()
            }
            p(function(y) {
                window.HTMLImports.ready = !0;
                window.HTMLImports.readyTime = (new Date).getTime();
                var C = x.createEvent("CustomEvent");
                C.initCustomEvent("HTMLImportsLoaded", !0, !0, y);
                x.dispatchEvent(C)
            });
            f.IMPORT_LINK_TYPE = "import";
            f.useNative = e;
            f.rootDocument = x;
            f.whenReady = p;
            f.isIE = E
        }
        )(window.HTMLImports);
        (function(f) {
            var p = [];
            f.addModule = function(t) {
                p.push(t)
            }
            ;
            f.initializeModules = function() {
                p.forEach(function(t) {
                    t(f)
                })
            }
        }
        )(window.HTMLImports);
        window.HTMLImports.addModule(function(f) {
            var p = /(url\()([^)]*)(\))/g
              , t = /(@import[\s]+(?!url\())([^;]*)(;)/g;
            f.path = {
                resolveUrlsInStyle: function(q, g) {
                    var e = q.ownerDocument.createElement("a");
                    q.textContent = this.resolveUrlsInCssText(q.textContent, g, e);
                    return q
                },
                resolveUrlsInCssText: function(q, g, e) {
                    q = this.replaceUrls(q, e, g, p);
                    return q = this.replaceUrls(q, e, g, t)
                },
                replaceUrls: function(q, g, e, h) {
                    return q.replace(h, function(x, E, B, n) {
                        x = B.replace(/["']/g, "");
                        e && (x = (new URL(x,e)).href);
                        g.href = x;
                        x = g.href;
                        return E + "'" + x + "'" + n
                    })
                }
            }
        });
        window.HTMLImports.addModule(function(f) {
            var p = {
                async: !0,
                ok: function(t) {
                    return 200 <= t.status && 300 > t.status || 304 === t.status || 0 === t.status
                },
                load: function(t, q, g) {
                    var e = new XMLHttpRequest;
                    if (f.flags.debug || f.flags.bust)
                        t += "?" + Math.random();
                    e.open("GET", t, p.async);
                    e.addEventListener("readystatechange", function(h) {
                        if (4 === e.readyState) {
                            h = null;
                            try {
                                var x = e.getResponseHeader("Location");
                                x && (h = "/" === x.substr(0, 1) ? location.origin + x : x)
                            } catch (E) {
                                console.error(E.message)
                            }
                            q.call(g, !p.ok(e) && e, e.response || e.responseText, h)
                        }
                    });
                    e.send();
                    return e
                },
                loadDocument: function(t, q, g) {
                    this.load(t, q, g).responseType = "document"
                }
            };
            f.xhr = p
        });
        window.HTMLImports.addModule(function(f) {
            var p = f.xhr
              , t = f.flags
              , q = function(g, e) {
                this.cache = {};
                this.onload = g;
                this.oncomplete = e;
                this.inflight = 0;
                this.pending = {}
            };
            q.prototype = {
                addNodes: function(g) {
                    this.inflight += g.length;
                    for (var e = 0, h = g.length, x; e < h && (x = g[e]); e++)
                        this.require(x);
                    this.checkDone()
                },
                addNode: function(g) {
                    this.inflight++;
                    this.require(g);
                    this.checkDone()
                },
                require: function(g) {
                    var e = g.src || g.href;
                    g.__nodeUrl = e;
                    this.dedupe(e, g) || this.fetch(e, g)
                },
                dedupe: function(g, e) {
                    if (this.pending[g])
                        return this.pending[g].push(e),
                        !0;
                    if (this.cache[g])
                        return this.onload(g, e, this.cache[g]),
                        this.tail(),
                        !0;
                    this.pending[g] = [e];
                    return !1
                },
                fetch: function(g, e) {
                    t.load && console.log("fetch", g, e);
                    if (g)
                        if (g.match(/^data:/)) {
                            var h = g.split(",")
                              , x = h[1];
                            x = -1 < h[0].indexOf(";base64") ? atob(x) : decodeURIComponent(x);
                            setTimeout(function() {
                                this.receive(g, e, null, x)
                            }
                            .bind(this), 0)
                        } else
                            h = function(E, B, n) {
                                this.receive(g, e, E, B, n)
                            }
                            .bind(this),
                            p.load(g, h);
                    else
                        setTimeout(function() {
                            this.receive(g, e, {
                                error: "href must be specified"
                            }, null)
                        }
                        .bind(this), 0)
                },
                receive: function(g, e, h, x, E) {
                    this.cache[g] = x;
                    e = this.pending[g];
                    for (var B = 0, n = e.length, J; B < n && (J = e[B]); B++)
                        this.onload(g, J, x, h, E),
                        this.tail();
                    this.pending[g] = null
                },
                tail: function() {
                    --this.inflight;
                    this.checkDone()
                },
                checkDone: function() {
                    if (!this.inflight)
                        this.oncomplete()
                }
            };
            f.Loader = q
        });
        window.HTMLImports.addModule(function(f) {
            var p = function(t) {
                this.addCallback = t;
                this.mo = new MutationObserver(this.handler.bind(this))
            };
            p.prototype = {
                handler: function(t) {
                    for (var q = 0, g = t.length, e; q < g && (e = t[q]); q++)
                        "childList" === e.type && e.addedNodes.length && this.addedNodes(e.addedNodes)
                },
                addedNodes: function(t) {
                    this.addCallback && this.addCallback(t);
                    for (var q = 0, g = t.length, e; q < g && (e = t[q]); q++)
                        e.children && e.children.length && this.addedNodes(e.children)
                },
                observe: function(t) {
                    this.mo.observe(t, {
                        childList: !0,
                        subtree: !0
                    })
                }
            };
            f.Observer = p
        });
        window.HTMLImports.addModule(function(f) {
            function p(n) {
                return "link" === n.localName && n.rel === x
            }
            function t(n) {
                var J = n.textContent
                  , y = n.ownerDocument;
                y.__importedScripts = y.__importedScripts || 0;
                n = n.ownerDocument.baseURI;
                var C = y.__importedScripts ? "-" + y.__importedScripts : "";
                y.__importedScripts++;
                return "data:text/javascript;charset=utf-8," + encodeURIComponent(J + ("\n//# sourceURL=" + n + C + ".js\n"))
            }
            var q = f.path
              , g = f.rootDocument
              , e = f.flags
              , h = f.isIE
              , x = f.IMPORT_LINK_TYPE
              , E = "link[rel=" + x + "]"
              , B = {
                documentSelectors: E,
                importsSelectors: [E, 'link[rel=stylesheet]:not([type]),style:not([type]),script:not([type]),script[type="application/javascript"],script[type="text/javascript"]'].join(),
                map: {
                    link: "parseLink",
                    script: "parseScript",
                    style: "parseStyle"
                },
                dynamicElements: [],
                parseNext: function() {
                    var n = this.nextToParse();
                    n && this.parse(n)
                },
                parse: function(n) {
                    if (this.isParsed(n))
                        e.parse && console.log("[%s] is already parsed", n.localName);
                    else {
                        var J = this[this.map[n.localName]];
                        J && (this.markParsing(n),
                        J.call(this, n))
                    }
                },
                parseDynamic: function(n, J) {
                    this.dynamicElements.push(n);
                    J || this.parseNext()
                },
                markParsing: function(n) {
                    e.parse && console.log("parsing", n);
                    this.parsingElement = n
                },
                markParsingComplete: function(n) {
                    n.__importParsed = !0;
                    this.markDynamicParsingComplete(n);
                    n.__importElement && (n.__importElement.__importParsed = !0,
                    this.markDynamicParsingComplete(n.__importElement));
                    this.parsingElement = null;
                    e.parse && console.log("completed", n)
                },
                markDynamicParsingComplete: function(n) {
                    n = this.dynamicElements.indexOf(n);
                    0 <= n && this.dynamicElements.splice(n, 1)
                },
                parseImport: function(n) {
                    n.import = n.__doc;
                    window.HTMLImports.__importsParsingHook && window.HTMLImports.__importsParsingHook(n);
                    n.import && (n.import.__importParsed = !0);
                    this.markParsingComplete(n);
                    n.__resource && !n.__error ? n.dispatchEvent(new CustomEvent("load",{
                        bubbles: !1
                    })) : n.dispatchEvent(new CustomEvent("error",{
                        bubbles: !1
                    }));
                    if (n.__pending)
                        for (var J; n.__pending.length; )
                            (J = n.__pending.shift()) && J({
                                target: n
                            });
                    this.parseNext()
                },
                parseLink: function(n) {
                    p(n) ? this.parseImport(n) : (n.href = n.href,
                    this.parseGeneric(n))
                },
                parseStyle: function(n) {
                    var J = n
                      , y = n.ownerDocument.createElement("style");
                    y.textContent = n.textContent;
                    q.resolveUrlsInStyle(y);
                    n = y;
                    J.__appliedElement = n;
                    n.__importElement = J;
                    this.parseGeneric(n)
                },
                parseGeneric: function(n) {
                    this.trackElement(n);
                    this.addElementToDocument(n)
                },
                rootImportForElement: function(n) {
                    for (; n.ownerDocument.__importLink; )
                        n = n.ownerDocument.__importLink;
                    return n
                },
                addElementToDocument: function(n) {
                    var J = this.rootImportForElement(n.__importElement || n);
                    J.parentNode.insertBefore(n, J)
                },
                trackElement: function(n, J) {
                    var y = this
                      , C = function(v) {
                        n.removeEventListener("load", C);
                        n.removeEventListener("error", C);
                        J && J(v);
                        y.markParsingComplete(n);
                        y.parseNext()
                    };
                    n.addEventListener("load", C);
                    n.addEventListener("error", C);
                    if (h && "style" === n.localName) {
                        var w = !1;
                        if (-1 == n.textContent.indexOf("@import"))
                            w = !0;
                        else if (n.sheet) {
                            w = !0;
                            for (var I = n.sheet.cssRules, K = I ? I.length : 0, b = 0, l; b < K && (l = I[b]); b++)
                                l.type === CSSRule.IMPORT_RULE && (w = w && !!l.styleSheet)
                        }
                        w && setTimeout(function() {
                            n.dispatchEvent(new CustomEvent("load",{
                                bubbles: !1
                            }))
                        })
                    }
                },
                parseScript: function(n) {
                    var J = document.createElement("script");
                    J.__importElement = n;
                    J.src = n.src ? n.src : t(n);
                    f.currentScript = n;
                    this.trackElement(J, function(y) {
                        J.parentNode && J.parentNode.removeChild(J);
                        f.currentScript = null
                    });
                    this.addElementToDocument(J)
                },
                nextToParse: function() {
                    this._mayParse = [];
                    return !this.parsingElement && (this.nextToParseInDoc(g) || this.nextToParseDynamic())
                },
                nextToParseInDoc: function(n, J) {
                    if (n && 0 > this._mayParse.indexOf(n)) {
                        this._mayParse.push(n);
                        n = n.querySelectorAll(this.parseSelectorsForNode(n));
                        for (var y = 0, C = n.length, w; y < C && (w = n[y]); y++)
                            if (!this.isParsed(w)) {
                                if (this.hasResource(w))
                                    return p(w) ? this.nextToParseInDoc(w.__doc, w) : w;
                                return
                            }
                    }
                    return J
                },
                nextToParseDynamic: function() {
                    return this.dynamicElements[0]
                },
                parseSelectorsForNode: function(n) {
                    return (n.ownerDocument || n) === g ? this.documentSelectors : this.importsSelectors
                },
                isParsed: function(n) {
                    return n.__importParsed
                },
                needsDynamicParsing: function(n) {
                    return 0 <= this.dynamicElements.indexOf(n)
                },
                hasResource: function(n) {
                    return p(n) && void 0 === n.__doc ? !1 : !0
                }
            };
            f.parser = B;
            f.IMPORT_SELECTOR = E
        });
        window.HTMLImports.addModule(function(f) {
            var p = f.flags
              , t = f.IMPORT_LINK_TYPE
              , q = f.IMPORT_SELECTOR
              , g = f.rootDocument
              , e = f.Loader
              , h = f.Observer
              , x = f.parser;
            q = {
                documents: {},
                documentPreloadSelectors: q,
                importsPreloadSelectors: [q].join(),
                loadNode: function(B) {
                    E.addNode(B)
                },
                loadSubtree: function(B) {
                    B = this.marshalNodes(B);
                    E.addNodes(B)
                },
                marshalNodes: function(B) {
                    return B.querySelectorAll(this.loadSelectorsForNode(B))
                },
                loadSelectorsForNode: function(B) {
                    return (B.ownerDocument || B) === g ? this.documentPreloadSelectors : this.importsPreloadSelectors
                },
                loaded: function(B, n, J, y, C) {
                    p.load && console.log("loaded", B, n);
                    n.__resource = J;
                    n.__error = y;
                    if ("link" === n.localName && n.getAttribute("rel") === t) {
                        var w = this.documents[B];
                        if (void 0 === w) {
                            y ? J = null : (w = C || B,
                            y = document.implementation.createHTMLDocument(t),
                            y._URL = w,
                            C = y.createElement("base"),
                            C.setAttribute("href", w),
                            y.baseURI || Object.getOwnPropertyDescriptor(y, "baseURI") || Object.defineProperty(y, "baseURI", {
                                value: w
                            }),
                            w = y.createElement("meta"),
                            w.setAttribute("charset", "utf-8"),
                            y.head.appendChild(w),
                            y.head.appendChild(C),
                            y.body.innerHTML = J,
                            window.HTMLTemplateElement && HTMLTemplateElement.bootstrap && HTMLTemplateElement.bootstrap(y),
                            J = y);
                            if (w = J)
                                w.__importLink = n,
                                this.bootDocument(w);
                            this.documents[B] = w
                        }
                        n.__doc = w
                    }
                    x.parseNext()
                },
                bootDocument: function(B) {
                    this.loadSubtree(B);
                    this.observer.observe(B);
                    x.parseNext()
                },
                loadedAll: function() {
                    x.parseNext()
                }
            };
            var E = new e(q.loaded.bind(q),q.loadedAll.bind(q));
            q.observer = new h;
            document.baseURI || (e = {
                get: function() {
                    var B = document.querySelector("base");
                    return B ? B.href : window.location.href
                },
                configurable: !0
            },
            Object.defineProperty(document, "baseURI", e),
            Object.defineProperty(g, "baseURI", e));
            f.importer = q;
            f.importLoader = E
        });
        window.HTMLImports.addModule(function(f) {
            var p = f.parser
              , t = f.importer;
            f = {
                added: function(g) {
                    for (var e, h, x, E = 0, B = g.length, n; E < B && (n = g[E]); E++)
                        e || (e = n.ownerDocument,
                        h = p.isParsed(e)),
                        (x = this.shouldLoadNode(n)) && t.loadNode(n),
                        this.shouldParseNode(n) && h && p.parseDynamic(n, x)
                },
                shouldLoadNode: function(g) {
                    return 1 === g.nodeType && q.call(g, t.loadSelectorsForNode(g))
                },
                shouldParseNode: function(g) {
                    return 1 === g.nodeType && q.call(g, p.parseSelectorsForNode(g))
                }
            };
            t.observer.addCallback = f.added.bind(f);
            var q = HTMLElement.prototype.matches || HTMLElement.prototype.matchesSelector || HTMLElement.prototype.webkitMatchesSelector || HTMLElement.prototype.mozMatchesSelector || HTMLElement.prototype.msMatchesSelector
        });
        (function(f) {
            function p() {
                window.HTMLImports.importer.bootDocument(q)
            }
            var t = f.initializeModules;
            if (!f.useNative) {
                t();
                var q = f.rootDocument;
                "complete" === document.readyState || "interactive" === document.readyState && !window.attachEvent ? p() : document.addEventListener("DOMContentLoaded", p)
            }
        }
        )(window.HTMLImports);
        window.CustomElements = window.CustomElements || {
            flags: {}
        };
        (function(f) {
            var p = f.flags
              , t = [];
            f.addModule = function(q) {
                t.push(q)
            }
            ;
            f.initializeModules = function() {
                t.forEach(function(q) {
                    q(f)
                })
            }
            ;
            f.hasNative = !!document.registerElement;
            f.isIE = /Trident/.test(navigator.userAgent);
            f.useNative = !p.register && f.hasNative && !window.ShadowDOMPolyfill && (!window.HTMLImports || window.HTMLImports.useNative)
        }
        )(window.CustomElements);
        window.CustomElements.addModule(function(f) {
            function p(h, x) {
                t(h, function(E) {
                    if (x(E))
                        return !0;
                    q(E, x)
                });
                q(h, x)
            }
            function t(h, x, E) {
                var B = h.firstElementChild;
                if (!B)
                    for (B = h.firstChild; B && B.nodeType !== Node.ELEMENT_NODE; )
                        B = B.nextSibling;
                for (; B; )
                    !0 !== x(B, E) && t(B, x, E),
                    B = B.nextElementSibling;
                return null
            }
            function q(h, x) {
                for (h = h.shadowRoot; h; )
                    p(h, x),
                    h = h.olderShadowRoot
            }
            function g(h, x, E) {
                h = window.wrap(h);
                if (!(0 <= E.indexOf(h))) {
                    E.push(h);
                    for (var B = h.querySelectorAll("link[rel=" + e + "]"), n = 0, J = B.length, y; n < J && (y = B[n]); n++)
                        y.import && g(y.import, x, E);
                    x(h)
                }
            }
            var e = window.HTMLImports ? window.HTMLImports.IMPORT_LINK_TYPE : "none";
            f.forDocumentTree = function(h, x) {
                g(h, x, [])
            }
            ;
            f.forSubtree = p
        });
        window.CustomElements.addModule(function(f) {
            function p(D, r) {
                return t(D, r) || q(D, r)
            }
            function t(D, r) {
                if (f.upgrade(D, r))
                    return !0;
                r && h(D)
            }
            function q(D, r) {
                K(D, function(M) {
                    if (t(M, r))
                        return !0
                })
            }
            function g(D) {
                z.push(D);
                v || (v = !0,
                setTimeout(e))
            }
            function e() {
                v = !1;
                for (var D = z, r = 0, M = D.length, T; r < M && (T = D[r]); r++)
                    T();
                z = []
            }
            function h(D) {
                l ? g(function() {
                    x(D)
                }) : x(D)
            }
            function x(D) {
                D.__upgraded__ && !D.__attached && (D.__attached = !0,
                D.attachedCallback && D.attachedCallback())
            }
            function E(D) {
                B(D);
                K(D, function(r) {
                    B(r)
                })
            }
            function B(D) {
                l ? g(function() {
                    n(D)
                }) : n(D)
            }
            function n(D) {
                D.__upgraded__ && D.__attached && (D.__attached = !1,
                D.detachedCallback && D.detachedCallback())
            }
            function J(D) {
                for (var r = window.wrap(document); D; ) {
                    if (D == r)
                        return !0;
                    D = D.parentNode || D.nodeType === Node.DOCUMENT_FRAGMENT_NODE && D.host
                }
            }
            function y(D, r) {
                if (I.dom) {
                    var M = r[0];
                    if (M && "childList" === M.type && M.addedNodes && M.addedNodes) {
                        for (M = M.addedNodes[0]; M && M !== document && !M.host; )
                            M = M.parentNode;
                        var T = M && (M.URL || M._URL || M.host && M.host.localName) || "";
                        T = T.split("/?").shift().split("/").pop()
                    }
                    console.group("mutations (%d) [%s]", r.length, T || "")
                }
                var R = J(D);
                r.forEach(function(V) {
                    "childList" === V.type && (N(V.addedNodes, function(U) {
                        U.localName && p(U, R)
                    }),
                    N(V.removedNodes, function(U) {
                        U.localName && E(U)
                    }))
                });
                I.dom && console.groupEnd()
            }
            function C(D) {
                if (!D.__observer) {
                    var r = new MutationObserver(y.bind(this, D));
                    r.observe(D, {
                        childList: !0,
                        subtree: !0
                    });
                    D.__observer = r
                }
            }
            function w(D) {
                D = window.wrap(D);
                I.dom && console.group("upgradeDocument: ", D.baseURI.split("/").pop());
                var r = D === window.wrap(document);
                p(D, r);
                C(D);
                I.dom && console.groupEnd()
            }
            var I = f.flags
              , K = f.forSubtree
              , b = f.forDocumentTree
              , l = window.MutationObserver._isPolyfilled && I["throttle-attached"];
            f.hasPolyfillMutations = l;
            f.hasThrottledAttached = l;
            var v = !1
              , z = []
              , N = Array.prototype.forEach.call.bind(Array.prototype.forEach)
              , O = Element.prototype.createShadowRoot;
            O && (Element.prototype.createShadowRoot = function() {
                var D = O.call(this);
                window.CustomElements.watchShadow(this);
                return D
            }
            );
            f.watchShadow = function(D) {
                if (D.shadowRoot && !D.shadowRoot.__watched)
                    for (I.dom && console.log("watching shadow-root for: ", D.localName),
                    D = D.shadowRoot; D; )
                        C(D),
                        D = D.olderShadowRoot
            }
            ;
            f.upgradeDocumentTree = function(D) {
                b(D, w)
            }
            ;
            f.upgradeDocument = w;
            f.upgradeSubtree = q;
            f.upgradeAll = p;
            f.attached = h;
            f.takeRecords = function(D) {
                for ((D = window.wrap(D)) || (D = window.wrap(document)); D.parentNode; )
                    D = D.parentNode;
                var r = D.__observer;
                r && (y(D, r.takeRecords()),
                e())
            }
        });
        window.CustomElements.addModule(function(f) {
            function p(g, e, h) {
                q.upgrade && console.group("upgrade:", g.localName);
                e.is && g.setAttribute("is", e.is);
                t(g, e);
                g.__upgraded__ = !0;
                g.createdCallback && g.createdCallback();
                h && f.attached(g);
                f.upgradeSubtree(g, h);
                q.upgrade && console.groupEnd();
                return g
            }
            function t(g, e) {
                if (!Object.__proto__)
                    for (var h = e.native, x = {}, E = e.prototype; E !== h && E !== HTMLElement.prototype; ) {
                        for (var B = Object.getOwnPropertyNames(E), n = 0, J; J = B[n]; n++)
                            x[J] || (Object.defineProperty(g, J, Object.getOwnPropertyDescriptor(E, J)),
                            x[J] = 1);
                        E = Object.getPrototypeOf(E)
                    }
                g.__proto__ = e.prototype
            }
            var q = f.flags;
            f.upgrade = function(g, e) {
                "template" === g.localName && window.HTMLTemplateElement && HTMLTemplateElement.decorate && HTMLTemplateElement.decorate(g);
                if (!g.__upgraded__ && g.nodeType === Node.ELEMENT_NODE) {
                    var h = g.getAttribute("is")
                      , x = f.getRegisteredDefinition(g.localName) || f.getRegisteredDefinition(h);
                    if (x && (h && x.tag == g.localName || !h && !x.extends))
                        return p(g, x, e)
                }
            }
            ;
            f.upgradeWithDefinition = p;
            f.implementPrototype = t
        });
        window.CustomElements.addModule(function(f) {
            function p(b) {
                if (!b.setAttribute._polyfilled) {
                    var l = b.setAttribute;
                    b.setAttribute = function(z, N) {
                        t.call(this, z, N, l)
                    }
                    ;
                    var v = b.removeAttribute;
                    b.removeAttribute = function(z) {
                        t.call(this, z, null, v)
                    }
                    ;
                    b.setAttribute._polyfilled = !0
                }
            }
            function t(b, l, v) {
                b = b.toLowerCase();
                var z = this.getAttribute(b);
                v.apply(this, arguments);
                var N = this.getAttribute(b);
                this.attributeChangedCallback && N !== z && this.attributeChangedCallback(b, z, N)
            }
            function q(b) {
                return (b = g(b)) ? q(b.extends).concat([b]) : []
            }
            function g(b) {
                if (b)
                    return w[b.toLowerCase()]
            }
            function e(b) {
                return function() {
                    return n(I(b.tag), b)
                }
            }
            function h(b, l) {
                b && (b = b.toLowerCase());
                l && (l = l.toLowerCase());
                var v = g(l || b);
                if (v && (b == v.tag && l == v.is || !l && !v.is))
                    return new v.ctor;
                if (l)
                    return v = h(b),
                    v.setAttribute("is", l),
                    v;
                v = I(b);
                0 <= b.indexOf("-") && J(v, HTMLElement);
                return v
            }
            function x(b, l) {
                var v = b[l];
                b[l] = function() {
                    var z = v.apply(this, arguments);
                    B(z);
                    return z
                }
            }
            var E = f.upgradeDocumentTree
              , B = f.upgradeAll
              , n = f.upgradeWithDefinition
              , J = f.implementPrototype
              , y = f.useNative
              , C = "annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" ")
              , w = {}
              , I = document.createElement.bind(document)
              , K = document.createElementNS.bind(document);
            y = Object.__proto__ || y ? function(b, l) {
                return b instanceof l
            }
            : function(b, l) {
                if (b instanceof l)
                    return !0;
                for (; b; ) {
                    if (b === l.prototype)
                        return !0;
                    b = b.__proto__
                }
                return !1
            }
            ;
            x(Node.prototype, "cloneNode");
            x(document, "importNode");
            document.registerElement = function(b, l) {
                l = l || {};
                if (!b)
                    throw Error("document.registerElement: first argument `name` must not be empty");
                if (0 > b.indexOf("-"))
                    throw Error("document.registerElement: first argument ('name') must contain a dash ('-'). Argument provided was '" + String(b) + "'.");
                var v;
                a: {
                    for (v = 0; v < C.length; v++)
                        if (b === C[v]) {
                            v = !0;
                            break a
                        }
                    v = void 0
                }
                if (v)
                    throw Error("Failed to execute 'registerElement' on 'Document': Registration failed for type '" + String(b) + "'. The type name is invalid.");
                if (g(b))
                    throw Error("DuplicateDefinitionError: a type with name '" + String(b) + "' is already registered");
                l.prototype || (l.prototype = Object.create(HTMLElement.prototype));
                l.__name = b.toLowerCase();
                l.extends && (l.extends = l.extends.toLowerCase());
                l.lifecycle = l.lifecycle || {};
                l.ancestry = q(l.extends);
                b = l.extends;
                v = 0;
                for (var z; z = l.ancestry[v]; v++)
                    b = z.is && z.tag;
                l.tag = b || l.__name;
                b && (l.is = l.__name);
                if (!Object.__proto__) {
                    b = HTMLElement.prototype;
                    l.is && (b = document.createElement(l.tag),
                    b = Object.getPrototypeOf(b));
                    v = l.prototype;
                    for (var N = !1; v; ) {
                        v == b && (N = !0);
                        if (z = Object.getPrototypeOf(v))
                            v.__proto__ = z;
                        v = z
                    }
                    N || console.warn(l.tag + " prototype not found in prototype chain for " + l.is);
                    l.native = b
                }
                p(l.prototype);
                w[l.__name] = l;
                l.ctor = e(l);
                l.ctor.prototype = l.prototype;
                l.prototype.constructor = l.ctor;
                f.ready && E(document);
                return l.ctor
            }
            ;
            document.createElement = h;
            document.createElementNS = function(b, l, v) {
                return "http://www.w3.org/1999/xhtml" === b ? h(l, v) : K(b, l)
            }
            ;
            f.registry = w;
            f.instanceof = y;
            f.reservedTagList = C;
            f.getRegisteredDefinition = g;
            document.register = document.registerElement
        });
        (function(f) {
            function p() {
                q(window.wrap(document));
                window.CustomElements.ready = !0;
                (window.requestAnimationFrame || function(e) {
                    setTimeout(e, 16)
                }
                )(function() {
                    setTimeout(function() {
                        window.CustomElements.readyTime = Date.now();
                        window.HTMLImports && (window.CustomElements.elapsed = window.CustomElements.readyTime - window.HTMLImports.readyTime);
                        document.dispatchEvent(new CustomEvent("WebComponentsReady",{
                            bubbles: !0
                        }))
                    })
                })
            }
            var t = f.initializeModules;
            f.useNative ? (t = function() {}
            ,
            f.watchShadow = t,
            f.upgrade = t,
            f.upgradeAll = t,
            f.upgradeDocumentTree = t,
            f.upgradeSubtree = t,
            f.takeRecords = t,
            f.instanceof = function(e, h) {
                return e instanceof h
            }
            ) : t();
            var q = f.upgradeDocumentTree
              , g = f.upgradeDocument;
            window.wrap || (window.ShadowDOMPolyfill ? (window.wrap = window.ShadowDOMPolyfill.wrapIfNeeded,
            window.unwrap = window.ShadowDOMPolyfill.unwrapIfNeeded) : window.wrap = window.unwrap = function(e) {
                return e
            }
            );
            window.HTMLImports && (window.HTMLImports.__importsParsingHook = function(e) {
                e.import && g(wrap(e.import))
            }
            );
            "complete" === document.readyState || f.flags.eager ? p() : "interactive" !== document.readyState || window.attachEvent || window.HTMLImports && !window.HTMLImports.ready ? window.addEventListener(window.HTMLImports && !window.HTMLImports.ready ? "HTMLImportsLoaded" : "DOMContentLoaded", p) : p()
        }
        )(window.CustomElements);
        (function(f) {
            f = document.createElement("style");
            f.textContent = "body {transition: opacity ease-in 0.2s; } \nbody[unresolved] {opacity: 0; display: block; overflow: hidden; position: relative; } \n";
            var p = document.querySelector("head");
            p.insertBefore(f, p.firstChild)
        }
        )(window.WebComponents)
    }
    , {}],
    4: [function(A, G, H) {
        function f() {
            return cast.framework.CastContext.getInstance()
        }
        H = A("class.extend");
        var p = A("underscore")
          , t = !1;
        var q = H.extend({
            init: function(g) {
                this.player = g;
                this._addCastContextEventListeners();
                this.player.on("dispose", this._removeCastContextEventListeners.bind(this));
                this._notifyPlayerOfDevicesAvailabilityChange(this.getCastContext().getCastState());
                this.remotePlayer = new cast.framework.RemotePlayer;
                this.remotePlayerController = new cast.framework.RemotePlayerController(this.remotePlayer)
            },
            _addCastContextEventListeners: function() {
                var g = cast.framework.CastContextEventType.SESSION_STATE_CHANGED
                  , e = cast.framework.CastContextEventType.CAST_STATE_CHANGED;
                this.getCastContext().addEventListener(g, this._onSessionStateChange.bind(this));
                this.getCastContext().addEventListener(e, this._onCastStateChange.bind(this))
            },
            _removeCastContextEventListeners: function() {
                var g = cast.framework.CastContextEventType.SESSION_STATE_CHANGED
                  , e = cast.framework.CastContextEventType.CAST_STATE_CHANGED;
                this.getCastContext().removeEventListener(g);
                this.getCastContext().removeEventListener(e)
            },
            _onSessionStateChange: function(g) {
                g.sessionState === cast.framework.SessionState.SESSION_ENDED && (this.player.trigger("chromecastDisconnected"),
                this._reloadTech())
            },
            _onCastStateChange: function(g) {
                this._notifyPlayerOfDevicesAvailabilityChange(g.castState)
            },
            _notifyPlayerOfDevicesAvailabilityChange: function(g) {
                this.hasAvailableDevices(g) ? this.player.trigger("chromecastDevicesAvailable") : this.player.trigger("chromecastDevicesUnavailable")
            },
            hasAvailableDevices: function(g) {
                g = g || this.getCastContext().getCastState();
                return g === cast.framework.CastState.NOT_CONNECTED || g === cast.framework.CastState.CONNECTING || g === cast.framework.CastState.CONNECTED
            },
            openCastMenu: function() {
                if (this.player.currentSource()) {
                    var g = function() {
                        t = !0;
                        this.player.trigger("chromecastConnected");
                        this._reloadTech()
                    }
                    .bind(this);
                    this.getCastContext().requestSession().then(g, p.noop)
                }
            },
            _reloadTech: function() {
                var g = this.player
                  , e = g.currentTime()
                  , h = g.paused()
                  , x = g.currentSources();
                g.src(x);
                g.ready(function() {
                    h ? g.pause() : g.play();
                    g.currentTime(e || 0)
                })
            },
            getCastContext: f,
            getRemotePlayer: function() {
                return this.remotePlayer
            },
            getRemotePlayerController: function() {
                return this.remotePlayerController
            }
        });
        q.isChromecastAPIAvailable = function() {
            return window.chrome && window.chrome.cast && window.cast
        }
        ;
        q.isChromecastConnected = function() {
            return q.isChromecastAPIAvailable() && f().getCastState() === cast.framework.CastState.CONNECTED && t
        }
        ;
        G.exports = q
    }
    , {
        "class.extend": 1,
        underscore: 2
    }],
    5: [function(A, G, H) {
        var f = {
            constructor: function(p) {
                this.constructor.super_.apply(this, arguments);
                p.on("chromecastConnected", this._onChromecastConnected.bind(this));
                p.on("chromecastDisconnected", this._onChromecastDisconnected.bind(this));
                p.on("chromecastDevicesAvailable", this._onChromecastDevicesAvailable.bind(this));
                p.on("chromecastDevicesUnavailable", this._onChromecastDevicesUnavailable.bind(this));
                this.controlText("Open Chromecast menu");
                p.chromecastSessionManager && p.chromecastSessionManager.hasAvailableDevices() ? this._onChromecastDevicesAvailable() : this._onChromecastDevicesUnavailable()
            },
            buildCSSClass: function() {
                return "vjs-chromecast-button " + (this._isChromecastConnected ? "vjs-chromecast-casting-state " : "") + this.constructor.super_.prototype.buildCSSClass()
            },
            handleClick: function() {
                this.player().trigger("chromecastRequested")
            },
            _onChromecastConnected: function() {
                this._isChromecastConnected = !0;
                this._reloadCSSClasses()
            },
            _onChromecastDisconnected: function() {
                this._isChromecastConnected = !1;
                this._reloadCSSClasses()
            },
            _onChromecastDevicesAvailable: function() {
                this.show()
            },
            _onChromecastDevicesUnavailable: function() {
                this.hide()
            },
            _reloadCSSClasses: function() {
                this.el_ && (this.el_.className = this.buildCSSClass())
            }
        };
        G.exports = function(p) {
            var t = p.extend(p.getComponent("Button"), f);
            p.registerComponent("chromecastButton", t)
        }
    }
    , {}],
    6: [function(A, G, H) {
        function f(h) {
            cast.framework.CastContext.getInstance().setOptions({
                receiverApplicationId: h.receiverAppID || chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,
                autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED
            })
        }
        function p(h) {
            h.chromecastSessionManager.openCastMenu()
        }
        function t(h, x) {
            if (x.addButtonToControlBar && !h.controlBar.getChild("chromecastButton")) {
                var E = h.controlBar.children().length;
                "undefined" !== typeof x.buttonPositionIndex && (E = 0 <= x.buttonPositionIndex ? x.buttonPositionIndex : h.controlBar.children().length + x.buttonPositionIndex);
                h.controlBar.addChild("chromecastButton", x, E)
            }
            h.on("chromecastRequested", p.bind(null, h))
        }
        function q(h, x) {
            var E = 1;
            var B = setInterval(function() {
                30 < E ? clearInterval(B) : (g.isChromecastAPIAvailable() && (clearInterval(B),
                f(x),
                h.chromecastSessionManager || (h.chromecastSessionManager = new g(h)),
                t(h, x)),
                E += 1)
            }, 1E3)
        }
        var g = A("./chromecast/ChromecastSessionManager")
          , e = A("underscore");
        G.exports = function(h) {
            h.registerPlugin("chromecast", function(x) {
                var E = e.extend({
                    addButtonToControlBar: !0
                }, x || {});
                this.ready(function() {
                    this.controlBar && (g.isChromecastAPIAvailable() ? (f(E),
                    this.chromecastSessionManager || (this.chromecastSessionManager = new g(this)),
                    t(this, E)) : q(this, E))
                }
                .bind(this))
            })
        }
    }
    , {
        "./chromecast/ChromecastSessionManager": 4,
        underscore: 2
    }],
    7: [function(A, G, H) {
        var f = A("underscore")
          , p = A("./preloadWebComponents")
          , t = A("./components/ChromecastButton")
          , q = A("./tech/ChromecastTech")
          , g = A("./enableChromecast");
        G.exports = function(e, h) {
            f.defaults(f.extend({}, h), {
                preloadWebComponents: !1
            }).preloadWebComponents && p();
            e = e || window.videojs;
            t(e);
            q(e);
            g(e)
        }
    }
    , {
        "./components/ChromecastButton": 5,
        "./enableChromecast": 6,
        "./preloadWebComponents": 8,
        "./tech/ChromecastTech": 10,
        underscore: 2
    }],
    8: [function(A, G, H) {
        function f(t) {
            return p.isString(window.navigator.userAgent) && 0 <= window.navigator.userAgent.indexOf(t)
        }
        var p = A("underscore");
        G.exports = function() {
            var t = !document.registerElement
              , q = f("CriOS");
            (f("Android") && f("Chrome/") && window.navigator.presentation || q) && t && A("webcomponents.js/webcomponents-lite.js")
        }
    }
    , {
        underscore: 2,
        "webcomponents.js/webcomponents-lite.js": 3
    }],
    9: [function(A, G, H) {
        A("./index")(void 0, window.SILVERMINE_VIDEOJS_CHROMECAST_CONFIG)
    }
    , {
        "./index": 7
    }],
    10: [function(A, G, H) {
        var f = A("../chromecast/ChromecastSessionManager")
          , p = A("./ChromecastTechUI")
          , t = A("../vjsTextTrackStylesMap")
          , q = A("underscore");
        var g = {
            constructor: function(e) {
                this._eventListeners = [];
                this.videojsPlayer = this.videojs(e.playerId);
                this._chromecastSessionManager = this.videojsPlayer.chromecastSessionManager;
                this._ui = new p;
                this._textTracks = this.videojsPlayer.remoteTextTracks();
                var h = this.constructor.super_.apply(this, arguments);
                this._remotePlayer = this._chromecastSessionManager.getRemotePlayer();
                this._remotePlayerController = this._chromecastSessionManager.getRemotePlayerController();
                this._listenToPlayerControllerEvents();
                this._listenToVideoJsPlayerEvents();
                this.on("dispose", this._removeAllEventListeners.bind(this));
                this.on("dispose", this._removeVideoJsAllEventListeners.bind(this));
                this._hasPlayedAnyItem = !1;
                this._requestTitle = e.requestTitleFn || q.noop;
                this._requestSubtitle = e.requestSubtitleFn || q.noop;
                this._requestPoster = e.requestPosterFn || q.noop;
                this._requestCustomData = e.requestCustomDataFn || q.noop;
                this._initialStartTime = e.startTime || 0;
                setTimeout(function() {
                    this._playSource(e.source, this._initialStartTime, this._textTracks)
                }
                .bind(this), 50);
                this.ready(function() {
                    this.setMuted(e.muted)
                }
                .bind(this));
                return h
            },
            createEl: function() {
                return this._ui.getDOMElement()
            },
            play: function() {
                this.paused() && (this.ended() && !this._isMediaLoading ? this._playSource({
                    src: this.videojsPlayer.src()
                }, 0) : this._remotePlayerController.playOrPause())
            },
            pause: function() {
                !this.paused() && this._remotePlayer.canPause && this._remotePlayerController.playOrPause()
            },
            paused: function() {
                return this._remotePlayer.isPaused || this.ended() || null === this._remotePlayer.playerState
            },
            vjsTextTrackStylesToCAF: function() {
                var e = this.videojsPlayer.textTrackSettings.getValues()
                  , h = new chrome.cast.media.TextTrackStyle;
                h.foregroundColor = t.getTextColorWithOpacity(e.color, e.textOpacity);
                h.backgroundColor = t.getTextColorWithOpacity(e.backgroundColor, e.backgroundOpacity);
                h.fontScale = parseFloat(e.fontPercent);
                h.edgeType = t.translateTextTrackEdgeType(e.edgeStyle);
                h.fontFamily = t.translateFontFamily(e.fontFamily);
                return h
            },
            setSource: function(e) {
                this._currentSource && this._currentSource.src === e.src && this._currentSource.type === e.type || (this._currentSource = e,
                this._playSource(e, this.currentTime(), this._textTracks))
            },
            _listenToVideoJsPlayerEvents: function() {
                this._textTracks.on("change", this._textTrackChanged.bind(this));
                this.videojsPlayer.on("textTrackDisplayChanged", this._textTrackStyleChanged.bind(this))
            },
            _removeVideoJsAllEventListeners: function() {
                this._textTracks.off("change", this._textTrackChanged.bind(this));
                this.videojsPlayer.off("textTrackDisplayChanged", this._textTrackStyleChanged.bind(this))
            },
            _textTrackChanged: function() {
                this._playSource(this.videojsPlayer.currentSource(), this.currentTime(), this._textTracks)
            },
            _textTrackStyleChanged: function() {
                for (var e = null, h = this.vjsTextTrackStylesToCAF(), x = this._getMediaSession(), E = 0; E < this._textTracks.length; E++)
                    if ("showing" === this._textTracks[E].mode) {
                        e = E;
                        break
                    }
                if (null === e)
                    return !1;
                e = new chrome.cast.media.EditTracksInfoRequest([e],h);
                x.editTracksInfo(e)
            },
            _playSource: function(e, h, x) {
                var E = this._getCastSession()
                  , B = []
                  , n = new chrome.cast.media.MediaInfo(e.src,e.type)
                  , J = this._requestTitle(e)
                  , y = this._requestPoster(e)
                  , C = this._requestSubtitle(e);
                e = this._requestCustomData(e);
                this.trigger("waiting");
                this._clearSessionTimeout();
                n.metadata = new chrome.cast.media.GenericMediaMetadata;
                n.metadata.metadataType = chrome.cast.media.MetadataType.GENERIC;
                n.textTrackStyle = this.vjsTextTrackStylesToCAF();
                n.metadata.title = J;
                n.metadata.subtitle = C;
                n.metadata.images = [new chrome.cast.Image(y)];
                e && (n.customData = e);
                n.tracks = [];
                var w = this;
                q.each(x, function(I, K) {
                    if (("subtitles" === I.kind || "subtitles" === I.kind) && "showing" === I.mode) {
                        var b = new chrome.cast.media.Track(K,chrome.cast.media.TrackType.TEXT);
                        b.name = I.label;
                        b.subtype = "CAPTIONS";
                        b.trackContentType = "text/vtt";
                        b.trackContentId = I.src;
                        n.tracks = [b];
                        B = [K]
                    }
                }
                .bind(this));
                this._ui.updateTitle(J);
                this._ui.updateSubtitle(C);
                x = new chrome.cast.media.LoadRequest(n);
                x.activeTrackIds = B;
                x.autoplay = !0;
                x.currentTime = h;
                this._isMediaLoading = !0;
                this._hasPlayedCurrentItem = !1;
                w = this;
                E.loadMedia(x).then(function() {
                    this._hasPlayedAnyItem || this.triggerReady();
                    setTimeout(function() {
                        w.trigger("loadstart");
                        w.trigger("loadeddata");
                        w.trigger("play");
                        w.trigger("playing")
                    }, 50);
                    this._hasPlayedAnyItem = !0;
                    this._isMediaLoading = !1;
                    this._getMediaSession().addUpdateListener(this._onMediaSessionStatusChanged.bind(this))
                }
                .bind(this), this._triggerErrorEvent.bind(this))
            },
            setCurrentTime: function(e) {
                var h = this.duration();
                e > h || !this._remotePlayer.canSeek || (this._remotePlayer.currentTime = Math.min(h - 1, e),
                this._remotePlayerController.seek(),
                this._triggerTimeUpdateEvent())
            },
            currentTime: function() {
                return this._hasPlayedAnyItem ? this._remotePlayer.currentTime : this._initialStartTime
            },
            duration: function() {
                return this._hasPlayedAnyItem ? this._remotePlayer.duration : this.videojsPlayer.duration()
            },
            ended: function() {
                var e = this._getMediaSession();
                return !e && this._hasMediaSessionEnded ? !0 : e ? e.idleReason === chrome.cast.media.IdleReason.FINISHED : !1
            },
            volume: function() {
                return this._remotePlayer.volumeLevel
            },
            setVolume: function(e) {
                this._remotePlayer.volumeLevel = e;
                this._remotePlayerController.setVolumeLevel();
                this._triggerVolumeChangeEvent()
            },
            muted: function() {
                return this._remotePlayer.isMuted
            },
            setMuted: function(e) {
                (this._remotePlayer.isMuted && !e || !this._remotePlayer.isMuted && e) && this._remotePlayerController.muteOrUnmute()
            },
            poster: function() {
                return this._ui.getPoster()
            },
            setPoster: function(e) {},
            buffered: function() {},
            seekable: function() {
                return this.videojs.createTimeRange(0, this.duration())
            },
            controls: function() {
                return !1
            },
            playsinline: function() {
                return !0
            },
            supportsFullScreen: function() {
                return !0
            },
            setAutoplay: function() {},
            playbackRate: function() {
                var e = this._getMediaSession();
                return e ? e.playbackRate : 1
            },
            setPlaybackRate: function() {},
            load: function() {},
            readyState: function() {
                return "IDLE" === this._remotePlayer.playerState || "BUFFERING" === this._remotePlayer.playerState ? 0 : 4
            },
            _listenToPlayerControllerEvents: function() {
                var e = cast.framework.RemotePlayerEventType;
                this._addEventListener(this._remotePlayerController, e.PLAYER_STATE_CHANGED, this._onPlayerStateChanged, this);
                this._addEventListener(this._remotePlayerController, e.VOLUME_LEVEL_CHANGED, this._triggerVolumeChangeEvent, this);
                this._addEventListener(this._remotePlayerController, e.IS_MUTED_CHANGED, this._triggerVolumeChangeEvent, this);
                this._addEventListener(this._remotePlayerController, e.CURRENT_TIME_CHANGED, this._triggerTimeUpdateEvent, this);
                this._addEventListener(this._remotePlayerController, e.DURATION_CHANGED, this._triggerDurationChangeEvent, this)
            },
            _addEventListener: function(e, h, x, E) {
                x = {
                    target: e,
                    type: h,
                    callback: x,
                    context: E,
                    listener: x.bind(E)
                };
                e.addEventListener(h, x.listener);
                this._eventListeners.push(x)
            },
            _removeAllEventListeners: function() {
                for (; 0 < this._eventListeners.length; )
                    this._removeEventListener(this._eventListeners[0]);
                this._eventListeners = []
            },
            _removeEventListener: function(e) {
                e.target.removeEventListener(e.type, e.listener);
                var h = q.findIndex(this._eventListeners, function(x) {
                    return x.target === e.target && x.type === e.type && x.callback === e.callback && x.context === e.context
                });
                -1 !== h && this._eventListeners.splice(h, 1)
            },
            _onPlayerStateChanged: function() {
                var e = chrome.cast.media.PlayerState
                  , h = this._remotePlayer.playerState;
                h === e.PLAYING ? (this._hasPlayedCurrentItem = !0,
                this.trigger("play"),
                this.trigger("playing")) : h === e.PAUSED ? this.trigger("pause") : h === e.IDLE && this.ended() || null === h && this._hasPlayedCurrentItem ? (this._hasPlayedCurrentItem = !1,
                this.trigger("ended"),
                this._triggerTimeUpdateEvent()) : h === e.BUFFERING && this.trigger("waiting")
            },
            _onMediaSessionStatusChanged: function(e) {
                this._hasMediaSessionEnded = !!e
            },
            _closeSessionOnTimeout: function() {
                this._clearSessionTimeout();
                this._sessionTimeoutID = setTimeout(function() {
                    var e = this._getCastSession();
                    e && e.endSession(!0);
                    this._clearSessionTimeout()
                }
                .bind(this), 1E4)
            },
            _clearSessionTimeout: function() {
                this._sessionTimeoutID && (clearTimeout(this._sessionTimeoutID),
                this._sessionTimeoutID = !1)
            },
            _getCastContext: function() {
                return this._chromecastSessionManager.getCastContext()
            },
            _getCastSession: function() {
                return this._getCastContext().getCurrentSession()
            },
            _getMediaSession: function() {
                var e = this._getCastSession();
                return e ? e.getMediaSession() : null
            },
            _triggerVolumeChangeEvent: function() {
                this.trigger("volumechange")
            },
            _triggerTimeUpdateEvent: function() {
                this.trigger("timeupdate")
            },
            _triggerDurationChangeEvent: function() {
                this.trigger("durationchange")
            },
            _triggerErrorEvent: function() {
                this.trigger("error")
            }
        };
        G.exports = function(e) {
            var h = e.getComponent("Tech");
            h = e.extend(h, g);
            h.canPlaySource = f.isChromecastConnected.bind(f);
            h.isSupported = f.isChromecastConnected.bind(f);
            h.prototype.featuresVolumeControl = !0;
            h.prototype.featuresPlaybackRate = !1;
            h.prototype.movingMediaElementInDOM = !1;
            h.prototype.featuresFullscreenResize = !0;
            h.prototype.featuresTimeupdateEvents = !0;
            h.prototype.featuresProgressEvents = !1;
            h.prototype.featuresNativeTextTracks = !1;
            h.prototype.featuresNativeAudioTracks = !1;
            h.prototype.featuresNativeVideoTracks = !1;
            h.prototype.videojs = e;
            e.registerTech("chromecast", h)
        }
    }
    , {
        "../chromecast/ChromecastSessionManager": 4,
        "../vjsTextTrackStylesMap": 12,
        "./ChromecastTechUI": 11,
        underscore: 2
    }],
    11: [function(A, G, H) {
        A = A("class.extend").extend({
            init: function() {
                this._el = this._createDOMElement()
            },
            _createDOMElement: function() {
                var f = this._createElement("div", "vjs-tech vjs-tech-chromecast")
                  , p = this._createElement("div", "vjs-tech-chromecast-title")
                  , t = this._createElement("div", "vjs-tech-chromecast-subtitle")
                  , q = this._createElement("div", "vjs-tech-chromecast-title-container");
                q.appendChild(p);
                q.appendChild(t);
                f.appendChild(q);
                return f
            },
            _createElement: function(f, p) {
                f = document.createElement(f);
                f.className = p;
                return f
            },
            getDOMElement: function() {
                return this._el
            },
            _findPosterEl: function() {
                return this._el.querySelector(".vjs-tech-chromecast-poster")
            },
            _findPosterImageEl: function() {
                return this._el.querySelector(".vjs-tech-chromecast-poster-img")
            },
            _findTitleEl: function() {
                return this._el.querySelector(".vjs-tech-chromecast-title")
            },
            _findSubtitleEl: function() {
                return this._el.querySelector(".vjs-tech-chromecast-subtitle")
            },
            getPoster: function() {
                return this._poster
            },
            updateTitle: function(f) {
                var p = this._findTitleEl();
                (this._title = f) ? (p.innerHTML = f,
                p.classList.remove("vjs-tech-chromecast-title-empty")) : p.classList.add("vjs-tech-chromecast-title-empty")
            },
            updateSubtitle: function(f) {
                var p = this._findSubtitleEl();
                (this._subtitle = f) ? (p.innerHTML = f,
                p.classList.remove("vjs-tech-chromecast-subtitle-empty")) : p.classList.add("vjs-tech-chromecast-subtitle-empty")
            }
        });
        G.exports = A
    }
    , {
        "class.extend": 1
    }],
    12: [function(A, G, H) {
        var f = {
            none: "NONE",
            raised: "RAISED",
            depressed: "DEPRESSED",
            uniform: "OUTLINE",
            dropshadow: "DROP_SHADOW"
        }
          , p = {
            proportionalSansSerif: "SANS_SERIF",
            monospaceSansSerif: "MONOSPACED_SANS_SERIF",
            proportionalSerif: "SERIF",
            monospaceSerif: "MONOSPACED_SERIF",
            casual: "CASUAL",
            script: "CURSIVE",
            "small-caps": "SMALL_CAPITALS"
        };
        G.exports = {
            translateTextTrackEdgeType: function(t) {
                return "undefined" !== typeof f[t] ? f[t] : "NONE"
            },
            getTextColorWithOpacity: function(t, q) {
                q = parseInt(255 * parseFloat(q), 10).toString(16);
                if (3 === t.substr(1).length) {
                    var g = "#";
                    for (var e = 0; e < t.substr(1).length; e++)
                        g += t.substr(1)[e] + t.substr(1)[e]
                }
                "undefined" === typeof g && (g = t);
                return g + q
            },
            translateFontFamily: function(t) {
                return "undefined" !== typeof p[t] ? p[t] : "SANS_SERIF"
            }
        }
    }
    , {}]
}, {}, [9]);
/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/fb0befa7/silvermine-videojs-chromecast.js.tmp ***/
/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/c0fa1a92/videojs.airplay.js.tmp ***/
(function e$jscomp$0(l, m, p) {
    function n(d, g) {
        if (!m[d]) {
            if (!l[d]) {
                var b = "function" == typeof require && require;
                if (!g && b)
                    return b(d, !0);
                if (q)
                    return q(d, !0);
                g = Error("Cannot find module '" + d + "'");
                throw g.code = "MODULE_NOT_FOUND",
                g;
            }
            g = m[d] = {
                exports: {}
            };
            l[d][0].call(g.exports, function(a) {
                var e = l[d][1][a];
                return n(e ? e : a)
            }, g, g.exports, e$jscomp$0, l, m, p)
        }
        return m[d].exports
    }
    for (var q = "function" == typeof require && require, k = 0; k < p.length; k++)
        n(p[k]);
    return n
}
)({
    1: [function(l, m, p) {
        (function(f) {
            function n(b, a) {
                if ("function" !== typeof a && null !== a)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof a);
                b.prototype = Object.create(a && a.prototype, {
                    constructor: {
                        value: b,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                });
                a && (Object.setPrototypeOf ? Object.setPrototypeOf(b, a) : b.__proto__ = a)
            }
            var q = function() {
                function b(a, e) {
                    for (var c = 0; c < e.length; c++) {
                        var h = e[c];
                        h.enumerable = h.enumerable || !1;
                        h.configurable = !0;
                        "value"in h && (h.writable = !0);
                        Object.defineProperty(a, h.key, h)
                    }
                }
                return function(a, e, c) {
                    e && b(a.prototype, e);
                    c && b(a, c);
                    return a
                }
            }()
              , k = function(b, a, e) {
                var c = !0;
                for (; c; )
                    if (null === b && (b = Function.prototype),
                    c = Object.getOwnPropertyDescriptor(b, a),
                    void 0 === c) {
                        b = Object.getPrototypeOf(b);
                        if (null === b)
                            break;
                        c = !0
                    } else {
                        if ("value"in c)
                            return c.value;
                        a = c.get;
                        return void 0 === a ? void 0 : a.call(e)
                    }
            };
            f = (f = "undefined" !== typeof window ? window.videojs : "undefined" !== typeof f ? f.videojs : null) && f.__esModule ? f : {
                "default": f
            };
            f["default"].getComponent("Component");
            var d = f["default"].getComponent("Button")
              , g = f["default"].registerPlugin || f["default"].plugin;
            d = function(b) {
                function a(e, c) {
                    if (!(this instanceof a))
                        throw new TypeError("Cannot call a class as a function");
                    k(Object.getPrototypeOf(a.prototype), "constructor", this).call(this, e, c)
                }
                n(a, b);
                q(a, [{
                    key: "buildCSSClass",
                    value: function() {
                        return "vjs-airplay-control " + k(Object.getPrototypeOf(a.prototype), "buildCSSClass", this).call(this)
                    }
                }, {
                    key: "handleClick",
                    value: function() {
                        this.player().el().getElementsByTagName("video")[0].webkitShowPlaybackTargetPicker();
                        this.player().trigger("airplayStart")
                    }
                }]);
                return a
            }(d);
            d.prototype.controlText_ = "Airplay";
            f["default"].registerComponent("AirplayToggle", d);
            g("airplayButton", function(b) {
                var a = this;
                window.WebKitPlaybackTargetAvailabilityEvent && (a.el().getElementsByTagName("video"),
                a.on("loadeddata", function() {
                    if (window.videojs.browser.IS_ANY_SAFARI && !a.controlBar.childNameIndex_.hasOwnProperty("AirplayToggle")) {
                        var e = this.controlBar.addChild("AirplayToggle", b);
                        a.controlBar.el().insertBefore(e.el(), a.controlBar.fullscreenToggle.el())
                    }
                }))
            })
        }
        ).call(this, "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {})
    }
    , {}]
}, {}, [1]);
/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/c0fa1a92/videojs.airplay.js.tmp ***/
/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/d3a991ab/videojs-landscape-fullscreen.min.js ***/
/*! @name videojs-landscape-fullscreen @version 1.6.1 @license ISC */
!function(e, n) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = n(require("video.js"), require("global/window")) : "function" == typeof define && define.amd ? define(["video.js", "global/window"], n) : (e = "undefined" != typeof globalThis ? globalThis : e || self).videojsLandscapeFullscreen = n(e.videojs, e.window)
}(this, (function(e, n) {
    "use strict";
    function t(e) {
        return e && "object" == typeof e && "default"in e ? e : {
            default: e
        }
    }
    var o = t(e)
      , i = t(n)
      , l = {
        fullscreen: {
            enterOnRotate: !0,
            alwaysInLandscapeMode: !0,
            iOS: !0
        }
    }
      , r = i.default.screen;
    r.lockOrientationUniversal = function(e) {
        return r.orientation && r.orientation.lock(e).then((function() {}
        ), (function(e) {
            return console.log(e)
        }
        )) || r.mozLockOrientation && r.mozLockOrientation(e) || r.msLockOrientation && r.msLockOrientation(e)
    }
    ;
    var a = function() {
        return "number" == typeof i.default.orientation || r && r.orientation && r.orientation.angle ? i.default.orientation : (o.default.log("angle unknown"),
        0)
    }
      , s = o.default.registerPlugin || o.default.plugin
      , u = function(e) {
        var n = this;
        (o.default.browser.IS_ANDROID || o.default.browser.IS_IOS) && this.ready((function() {
            !function(e, n) {
                e.addClass("vjs-landscape-fullscreen"),
                n.fullscreen.iOS && o.default.browser.IS_IOS && o.default.browser.IOS_VERSION > 9 && !e.el_.ownerDocument.querySelector(".bc-iframe") && (e.tech_.el_.setAttribute("playsinline", "playsinline"),
                e.tech_.supportsFullScreen = function() {
                    return !1
                }
                );
                var t = function() {
                    var n = a();
                    90 !== n && 270 !== n && -90 !== n || !1 === e.paused() && (e.requestFullscreen(),
                    r.lockOrientationUniversal("landscape")),
                    0 !== n && 180 !== n || e.isFullscreen() && e.exitFullscreen()
                };
                o.default.browser.IS_IOS ? i.default.addEventListener("orientationchange", t) : r && r.orientation && (r.orientation.onchange = t),
                e.on("fullscreenchange", (function(t) {
                    (o.default.browser.IS_ANDROID || o.default.browser.IS_IOS) && !a() && e.isFullscreen() && n.fullscreen.alwaysInLandscapeMode && r.lockOrientationUniversal("landscape")
                }
                ))
            }(n, o.default.mergeOptions(l, e))
        }
        ))
    };
    return s("landscapeFullscreen", u),
    u.VERSION = "1.6.1",
    fetch("https://cdn.jsdelivr.net/npm/videojs-landscape-fullscreen@1.6.1/dist/videojs-landscape-fullscreen.min.js"),
    u
}
));
/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/d3a991ab/videojs-landscape-fullscreen.min.js ***/
/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/10f6fbd4/videojs-mobile-ui.js.tmp ***/
/*
 2021 mister-ben <git@misterben.me>
 @license MIT
*/
(function(d, e) {
    "object" === typeof exports && "undefined" !== typeof module ? module.exports = e(require("video.js"), require("global/window")) : "function" === typeof define && define.amd ? define(["video.js", "global/window"], e) : d.videojsMobileUi = e(d.videojs, d.window)
}
)(this, function(d, e) {
    d = d && d.hasOwnProperty("default") ? d["default"] : d;
    e = e && e.hasOwnProperty("default") ? e["default"] : e;
    var m = function(c, b) {
        if ("function" !== typeof b && null !== b)
            throw new TypeError("Super expression must either be null or a function, not " + typeof b);
        c.prototype = Object.create(b && b.prototype, {
            constructor: {
                value: c,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        });
        b && (Object.setPrototypeOf ? Object.setPrototypeOf(c, b) : c.__proto__ = b)
    }
      , k = d.getComponent("Component")
      , n = d.dom || d
      , p = function(c) {
        function b(a, f) {
            if (!(this instanceof b))
                throw new TypeError("Cannot call a class as a function");
            a = c.call(this, a, f);
            if (!this)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            a = !a || "object" !== typeof a && "function" !== typeof a ? this : a;
            a.seekSeconds = f.seekSeconds;
            a.tapTimeout = f.tapTimeout;
            a.addChild("playToggle", {});
            0 === a.player_.options_.inactivityTimeout && (a.player_.options_.inactivityTimeout = 5E3);
            a.enable();
            return a
        }
        m(b, c);
        b.prototype.createEl = function() {
            return n.createEl("div", {
                className: "vjs-touch-overlay",
                tabIndex: -1
            })
        }
        ;
        b.prototype.handleTap = function(a) {
            var f = this;
            a.target === this.el_ && (a.preventDefault(),
            this.firstTapCaptured ? (this.firstTapCaptured = !1,
            this.timeout && e.clearTimeout(this.timeout),
            this.handleDoubleTap(a)) : (this.firstTapCaptured = !0,
            this.timeout = e.setTimeout(function() {
                f.firstTapCaptured = !1
            }, this.tapTimeout)))
        }
        ;
        b.prototype.handleDoubleTap = function(a) {
            var f = this.el_.getBoundingClientRect();
            a = a.changedTouches[0].clientX - f.left;
            a < .4 * f.width ? this.player_.currentTime(Math.max(0, this.player_.currentTime() - this.seekSeconds)) : a > f.width - .4 * f.width && this.player_.currentTime(Math.min(this.player_.duration(), this.player_.currentTime() + this.seekSeconds))
        }
        ;
        b.prototype.enable = function() {
            this.firstTapCaptured = !1;
            this.on("touchend", this.handleTap)
        }
        ;
        b.prototype.disable = function() {
            this.off("touchend", this.handleTap)
        }
        ;
        return b
    }(k);
    k.registerComponent("TouchOverlay", p);
    var q = {
        fullscreen: {
            enterOnRotate: !0,
            exitOnRotate: !0,
            lockOnRotate: !0,
            iOS: !1
        },
        touchControls: {
            seekSeconds: 10,
            tapTimeout: 300,
            disableOnEnd: !1
        }
    }
      , g = e.screen
      , r = function(c, b) {
        c.addClass("vjs-mobile-ui");
        (b.touchControls.disableOnEnd || "function" === typeof c.endscreen) && c.addClass("vjs-mobile-ui-disable-end");
        b.fullscreen.iOS && d.browser.IS_IOS && 9 < d.browser.IOS_VERSION && !c.el_.ownerDocument.querySelector(".bc-iframe") && (c.tech_.el_.setAttribute("playsinline", "playsinline"),
        c.tech_.supportsFullScreen = function() {
            return !1
        }
        );
        var a = void 0
          , f = d.VERSION.split(".");
        a = parseInt(f[0], 10);
        f = parseInt(f[1], 10);
        a = 7 > a || 7 === a && 7 > f ? Array.prototype.indexOf.call(c.el_.children, c.getChild("ControlBar").el_) : c.children_.indexOf(c.getChild("ControlBar"));
        c.addChild("TouchOverlay", b.touchControls, a);
        var l = !1;
        a = function() {
            if ("number" === typeof e.orientation || g && g.orientation && g.orientation.angle)
                var h = e.orientation;
            else
                d.log("angle unknown"),
                h = 0;
            90 !== h && 270 !== h && -90 !== h || !b.enterOnRotate || !1 !== c.paused() || (c.requestFullscreen(),
            b.fullscreen.lockOnRotate && g.orientation && g.orientation.lock && g.orientation.lock("landscape").then(function() {
                l = !0
            }).catch(function() {
                d.log("orientation lock not allowed")
            }));
            0 !== h && 180 !== h || !b.exitOnRotate || c.isFullscreen() && c.exitFullscreen()
        }
        ;
        d.browser.IS_IOS ? e.addEventListener("orientationchange", a) : g.orientation && (g.orientation.onchange = a);
        c.on("ended", function(h) {
            !0 === l && (g.orientation.unlock(),
            l = !1)
        })
    };
    k = function() {
        var c = this
          , b = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};
        (b.forceForTesting || d.browser.IS_ANDROID || d.browser.IS_IOS) && this.ready(function() {
            r(c, d.mergeOptions(q, b))
        })
    }
    ;
    (d.registerPlugin || d.plugin)("mobileUi", k);
    k.VERSION = "0.5.0";
    return k
});
/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/10f6fbd4/videojs-mobile-ui.js.tmp ***/
/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/57292b98/upnext.js.tmp ***/
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.ISOLATE_POLYFILLS = !1;
$jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(b, a, d) {
    if (b == Array.prototype || b == Object.prototype)
        return b;
    b[a] = d.value;
    return b
}
;
$jscomp.getGlobal = function(b) {
    b = ["object" == typeof globalThis && globalThis, b, "object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global];
    for (var a = 0; a < b.length; ++a) {
        var d = b[a];
        if (d && d.Math == Math)
            return d
    }
    throw Error("Cannot find global object");
}
;
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.IS_SYMBOL_NATIVE = "function" === typeof Symbol && "symbol" === typeof Symbol("x");
$jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE;
$jscomp.polyfills = {};
$jscomp.propertyToPolyfillSymbol = {};
$jscomp.POLYFILL_PREFIX = "$jscp$";
var $jscomp$lookupPolyfilledValue = function(b, a) {
    var d = $jscomp.propertyToPolyfillSymbol[a];
    if (null == d)
        return b[a];
    d = b[d];
    return void 0 !== d ? d : b[a]
};
$jscomp.polyfill = function(b, a, d, c) {
    a && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(b, a, d, c) : $jscomp.polyfillUnisolated(b, a, d, c))
}
;
$jscomp.polyfillUnisolated = function(b, a, d, c) {
    d = $jscomp.global;
    b = b.split(".");
    for (c = 0; c < b.length - 1; c++) {
        var e = b[c];
        if (!(e in d))
            return;
        d = d[e]
    }
    b = b[b.length - 1];
    c = d[b];
    a = a(c);
    a != c && null != a && $jscomp.defineProperty(d, b, {
        configurable: !0,
        writable: !0,
        value: a
    })
}
;
$jscomp.polyfillIsolated = function(b, a, d, c) {
    var e = b.split(".");
    b = 1 === e.length;
    c = e[0];
    c = !b && c in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global;
    for (var n = 0; n < e.length - 1; n++) {
        var p = e[n];
        if (!(p in c))
            return;
        c = c[p]
    }
    e = e[e.length - 1];
    d = $jscomp.IS_SYMBOL_NATIVE && "es6" === d ? c[e] : null;
    a = a(d);
    null != a && (b ? $jscomp.defineProperty($jscomp.polyfills, e, {
        configurable: !0,
        writable: !0,
        value: a
    }) : a !== d && ($jscomp.propertyToPolyfillSymbol[e] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol(e) : $jscomp.POLYFILL_PREFIX + e,
    e = $jscomp.propertyToPolyfillSymbol[e],
    $jscomp.defineProperty(c, e, {
        configurable: !0,
        writable: !0,
        value: a
    })))
}
;
$jscomp.underscoreProtoCanBeSet = function() {
    var b = {
        a: !0
    }
      , a = {};
    try {
        return a.__proto__ = b,
        a.a
    } catch (d) {}
    return !1
}
;
$jscomp.setPrototypeOf = $jscomp.TRUST_ES6_POLYFILLS && "function" == typeof Object.setPrototypeOf ? Object.setPrototypeOf : $jscomp.underscoreProtoCanBeSet() ? function(b, a) {
    b.__proto__ = a;
    if (b.__proto__ !== a)
        throw new TypeError(b + " is not extensible");
    return b
}
: null;
$jscomp.polyfill("Object.setPrototypeOf", function(b) {
    return b || $jscomp.setPrototypeOf
}, "es6", "es5");
!function(b) {
    function a(c) {
        if (d[c])
            return d[c].exports;
        var e = d[c] = {
            i: c,
            l: !1,
            exports: {}
        };
        return b[c].call(e.exports, e, e.exports, a),
        e.l = !0,
        e.exports
    }
    var d = {};
    a.m = b;
    a.c = d;
    a.d = function(c, e, n) {
        a.o(c, e) || Object.defineProperty(c, e, {
            enumerable: !0,
            get: n
        })
    }
    ;
    a.r = function(c) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(c, Symbol.toStringTag, {
            value: "Module"
        });
        Object.defineProperty(c, "__esModule", {
            value: !0
        })
    }
    ;
    a.t = function(c, e) {
        if ((1 & e && (c = a(c)),
        8 & e) || 4 & e && "object" == typeof c && c && c.__esModule)
            return c;
        var n = Object.create(null);
        if (a.r(n),
        Object.defineProperty(n, "default", {
            enumerable: !0,
            value: c
        }),
        2 & e && "string" != typeof c)
            for (var p in c)
                a.d(n, p, function(r) {
                    return c[r]
                }
                .bind(null, p));
        return n
    }
    ;
    a.n = function(c) {
        var e = c && c.__esModule ? function() {
            return c.default
        }
        : function() {
            return c
        }
        ;
        return a.d(e, "a", e),
        e
    }
    ;
    a.o = function(c, e) {
        return Object.prototype.hasOwnProperty.call(c, e)
    }
    ;
    a.p = "../dist/";
    a(a.s = 1)
}([function(b, a) {
    b.exports = videojs
}
, function(b, a, d) {
    function c(m) {
        return (c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(h) {
            return typeof h
        }
        : function(h) {
            return h && "function" == typeof Symbol && h.constructor === Symbol && h !== Symbol.prototype ? "symbol" : typeof h
        }
        )(m)
    }
    function e(m, h) {
        for (var l = 0; l < h.length; l++) {
            var f = h[l];
            f.enumerable = f.enumerable || !1;
            f.configurable = !0;
            "value"in f && (f.writable = !0);
            Object.defineProperty(m, f.key, f)
        }
    }
    function n(m) {
        if (void 0 === m)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return m
    }
    function p(m, h, l) {
        return (p = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(f, g, k) {
            for (; !Object.prototype.hasOwnProperty.call(f, g) && null !== (f = r(f)); )
                ;
            if (f)
                return g = Object.getOwnPropertyDescriptor(f, g),
                g.get ? g.get.call(k) : g.value
        }
        )(m, h, l || m)
    }
    function r(m) {
        return (r = Object.setPrototypeOf ? Object.getPrototypeOf : function(h) {
            return h.__proto__ || Object.getPrototypeOf(h)
        }
        )(m)
    }
    function v(m, h) {
        return (v = Object.setPrototypeOf || function(l, f) {
            return l.__proto__ = f,
            l
        }
        )(m, h)
    }
    d.r(a);
    d.d(a, "EndCard", function() {
        return w
    });
    b = d(0);
    var t = d.n(b);
    d(2);
    var x = {};
    d = t.a.registerPlugin || t.a.plugin;
    var w = function(m) {
        function h(f, g) {
            if (!(this instanceof h))
                throw new TypeError("Cannot call a class as a function");
            !0;
            g = r(h).call(this, f, g);
            var k = !g || "object" !== c(g) && "function" != typeof g ? n(this) : g;
            var q = n(k);
            return k.getTitle = k.options_.getTitle,
            k.next = k.options_.next,
            k.upNextEvents = new t.a.EventTarget,
            k.dashOffsetTotal = 586,
            k.dashOffsetStart = 293,
            k.interval = 50,
            k.chunkSize = (k.dashOffsetTotal - k.dashOffsetStart) / (k.options_.timeout / k.interval),
            f.on("ended", function(y) {
                f.addClass("vjs-upnext--showing");
                k.showCard(function(u) {
                    f.removeClass("vjs-upnext--showing");
                    q.el() && (q.dispose(),
                    u || k.next())
                })
            }),
            f.on("playing", function() {
                this.upNextEvents.trigger("playing")
            }
            .bind(n(k))),
            k
        }
        var l;
        return function(f, g) {
            if ("function" != typeof g && null !== g)
                throw new TypeError("Super expression must either be null or a function");
            f.prototype = Object.create(g && g.prototype, {
                constructor: {
                    value: f,
                    writable: !0,
                    configurable: !0
                }
            });
            g && v(f, g)
        }(h, m),
        l = [{
            key: "createEl",
            value: function() {
                var f, g = p(r(h.prototype), "createEl", this).call(this, "div", {
                    className: "vjs-upnext-content",
                    innerHTML: (f = this.options_,
                    '\n    <div class="vjs-upnext-top">\n      <span class="vjs-upnext-headtext">'.concat(f.headText, '</span>\n      <div class="vjs-upnext-title"></div>\n    </div>\n    <div class="vjs-upnext-autoplay-icon">\n      <svg height="100%" version="1.1" viewbox="0 0 98 98" width="100%">\n        <circle class="vjs-upnext-svg-autoplay-circle" cx="49" cy="49" fill="#000" fill-opacity="0.8" r="48"></circle>\n        <circle class="vjs-upnext-svg-autoplay-ring" cx="-49" cy="49" fill-opacity="0" r="46.5" stroke="#FFFFFF" stroke-width="4" transform="rotate(-90)"></circle>\n        <polygon class="vjs-upnext-svg-autoplay-triangle" fill="#fff" points="32,27 72,49 32,71"></polygon></svg>\n    </div>\n    <span class="vjs-upnext-bottom">\n      <span class="vjs-upnext-cancel">\n        <button class="vjs-upnext-cancel-button" tabindex="0" aria-label="Cancel autoplay">').concat(f.cancelText, "</button>\n      </span>\n    </span>\n  "))
                });
                return this.container = g,
                g.style.display = "none",
                this.autoplayRing = g.getElementsByClassName("vjs-upnext-svg-autoplay-ring")[0],
                this.title = g.getElementsByClassName("vjs-upnext-title")[0],
                this.cancelButton = g.getElementsByClassName("vjs-upnext-cancel-button")[0],
                this.nextButton = g.getElementsByClassName("vjs-upnext-autoplay-icon")[0],
                this.cancelButton.onclick = function() {
                    this.upNextEvents.trigger("cancel")
                }
                .bind(this),
                this.nextButton.onclick = function() {
                    this.upNextEvents.trigger("next")
                }
                .bind(this),
                g
            }
        }, {
            key: "showCard",
            value: function(f) {
                var g;
                this.autoplayRing.setAttribute("stroke-dasharray", this.dashOffsetStart);
                this.autoplayRing.setAttribute("stroke-dashoffset", -this.dashOffsetStart);
                this.title.innerHTML = this.getTitle();
                this.upNextEvents.one("cancel", function() {
                    clearTimeout(q);
                    f(!0)
                });
                this.upNextEvents.one("playing", function() {
                    clearTimeout(q);
                    f(!0)
                });
                this.upNextEvents.one("next", function() {
                    clearTimeout(q);
                    f(!1)
                });
                this.container.style.display = "block";
                var k = (new Date).getTime();
                var q = setTimeout(function u() {
                    0 >= this.options_.timeout - ((new Date).getTime() - k) ? (clearTimeout(q),
                    f(!1)) : (g = Math.max(-this.dashOffsetTotal, this.autoplayRing.getAttribute("stroke-dashoffset") - this.chunkSize),
                    this.autoplayRing.setAttribute("stroke-dashoffset", g),
                    q = setTimeout(u.bind(this), this.interval))
                }
                .bind(this), this.interval)
            }
        }],
        e(h.prototype, l),
        h
    }(t.a.getComponent("Component"));
    t.a.registerComponent("EndCard", w);
    b = function(m) {
        var h = this;
        this.ready(function() {
            t.a.mergeOptions(x, m);
            h.addClass("vjs-upnext")
        });
        var l = m || {};
        l = {
            next: l.next,
            getTitle: l.getTitle,
            timeout: l.timeout || 5E3,
            cancelText: l.cancelText || "Cancel",
            headText: l.headText || "Up Next"
        };
        this.removeChild("endCard");
        this.addChild("endCard", l)
    }
    ;
    d("upnext", b);
    b.VERSION = "__VERSION__";
    a.default = b
}
, function(b, a, d) {}
]);
/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/57292b98/upnext.js.tmp ***/
/*** BEGIN FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/86c9b585/p2p-engine-v2.10.3.min.js ***/
!function(e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.P2pEngineHls = t() : e.P2pEngineHls = t()
}(this, (()=>(()=>{
    var e = {
        415: e=>{
            "use strict";
            var t, s = "object" == typeof Reflect ? Reflect : null, i = s && "function" == typeof s.apply ? s.apply : function(e, t, s) {
                return Function.prototype.apply.call(e, t, s)
            }
            ;
            t = s && "function" == typeof s.ownKeys ? s.ownKeys : Object.getOwnPropertySymbols ? function(e) {
                return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
            }
            : function(e) {
                return Object.getOwnPropertyNames(e)
            }
            ;
            var r = Number.isNaN || function(e) {
                return e != e
            }
            ;
            function n() {
                n.init.call(this)
            }
            e.exports = n,
            e.exports.once = function(e, t) {
                return new Promise((function(s, i) {
                    function r(s) {
                        e.removeListener(t, n),
                        i(s)
                    }
                    function n() {
                        "function" == typeof e.removeListener && e.removeListener("error", r),
                        s([].slice.call(arguments))
                    }
                    p(e, t, n, {
                        once: !0
                    }),
                    "error" !== t && function(e, t, s) {
                        "function" == typeof e.on && p(e, "error", t, s)
                    }(e, r, {
                        once: !0
                    })
                }
                ))
            }
            ,
            n.EventEmitter = n,
            n.prototype._events = void 0,
            n.prototype._eventsCount = 0,
            n.prototype._maxListeners = void 0;
            var o = 10;
            function a(e) {
                if ("function" != typeof e)
                    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e)
            }
            function h(e) {
                return void 0 === e._maxListeners ? n.defaultMaxListeners : e._maxListeners
            }
            function l(e, t, s, i) {
                var r, n, o, l;
                if (a(s),
                void 0 === (n = e._events) ? (n = e._events = Object.create(null),
                e._eventsCount = 0) : (void 0 !== n.newListener && (e.emit("newListener", t, s.listener ? s.listener : s),
                n = e._events),
                o = n[t]),
                void 0 === o)
                    o = n[t] = s,
                    ++e._eventsCount;
                else if ("function" == typeof o ? o = n[t] = i ? [s, o] : [o, s] : i ? o.unshift(s) : o.push(s),
                (r = h(e)) > 0 && o.length > r && !o.warned) {
                    o.warned = !0;
                    var c = new Error("Possible EventEmitter memory leak detected. " + o.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                    c.name = "MaxListenersExceededWarning",
                    c.emitter = e,
                    c.type = t,
                    c.count = o.length,
                    l = c,
                    console && console.warn && console.warn(l)
                }
                return e
            }
            function c() {
                if (!this.fired)
                    return this.target.removeListener(this.type, this.wrapFn),
                    this.fired = !0,
                    0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
            }
            function d(e, t, s) {
                var i = {
                    fired: !1,
                    wrapFn: void 0,
                    target: e,
                    type: t,
                    listener: s
                }
                  , r = c.bind(i);
                return r.listener = s,
                i.wrapFn = r,
                r
            }
            function u(e, t, s) {
                var i = e._events;
                if (void 0 === i)
                    return [];
                var r = i[t];
                return void 0 === r ? [] : "function" == typeof r ? s ? [r.listener || r] : [r] : s ? function(e) {
                    for (var t = new Array(e.length), s = 0; s < t.length; ++s)
                        t[s] = e[s].listener || e[s];
                    return t
                }(r) : f(r, r.length)
            }
            function g(e) {
                var t = this._events;
                if (void 0 !== t) {
                    var s = t[e];
                    if ("function" == typeof s)
                        return 1;
                    if (void 0 !== s)
                        return s.length
                }
                return 0
            }
            function f(e, t) {
                for (var s = new Array(t), i = 0; i < t; ++i)
                    s[i] = e[i];
                return s
            }
            function p(e, t, s, i) {
                if ("function" == typeof e.on)
                    i.once ? e.once(t, s) : e.on(t, s);
                else {
                    if ("function" != typeof e.addEventListener)
                        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e);
                    e.addEventListener(t, (function r(n) {
                        i.once && e.removeEventListener(t, r),
                        s(n)
                    }
                    ))
                }
            }
            Object.defineProperty(n, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                    return o
                },
                set: function(e) {
                    if ("number" != typeof e || e < 0 || r(e))
                        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
                    o = e
                }
            }),
            n.init = function() {
                void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null),
                this._eventsCount = 0),
                this._maxListeners = this._maxListeners || void 0
            }
            ,
            n.prototype.setMaxListeners = function(e) {
                if ("number" != typeof e || e < 0 || r(e))
                    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
                return this._maxListeners = e,
                this
            }
            ,
            n.prototype.getMaxListeners = function() {
                return h(this)
            }
            ,
            n.prototype.emit = function(e) {
                for (var t = [], s = 1; s < arguments.length; s++)
                    t.push(arguments[s]);
                var r = "error" === e
                  , n = this._events;
                if (void 0 !== n)
                    r = r && void 0 === n.error;
                else if (!r)
                    return !1;
                if (r) {
                    var o;
                    if (t.length > 0 && (o = t[0]),
                    o instanceof Error)
                        throw o;
                    var a = new Error("Unhandled error." + (o ? " (" + o.message + ")" : ""));
                    throw a.context = o,
                    a
                }
                var h = n[e];
                if (void 0 === h)
                    return !1;
                if ("function" == typeof h)
                    i(h, this, t);
                else {
                    var l = h.length
                      , c = f(h, l);
                    for (s = 0; s < l; ++s)
                        i(c[s], this, t)
                }
                return !0
            }
            ,
            n.prototype.addListener = function(e, t) {
                return l(this, e, t, !1)
            }
            ,
            n.prototype.on = n.prototype.addListener,
            n.prototype.prependListener = function(e, t) {
                return l(this, e, t, !0)
            }
            ,
            n.prototype.once = function(e, t) {
                return a(t),
                this.on(e, d(this, e, t)),
                this
            }
            ,
            n.prototype.prependOnceListener = function(e, t) {
                return a(t),
                this.prependListener(e, d(this, e, t)),
                this
            }
            ,
            n.prototype.removeListener = function(e, t) {
                var s, i, r, n, o;
                if (a(t),
                void 0 === (i = this._events))
                    return this;
                if (void 0 === (s = i[e]))
                    return this;
                if (s === t || s.listener === t)
                    0 == --this._eventsCount ? this._events = Object.create(null) : (delete i[e],
                    i.removeListener && this.emit("removeListener", e, s.listener || t));
                else if ("function" != typeof s) {
                    for (r = -1,
                    n = s.length - 1; n >= 0; n--)
                        if (s[n] === t || s[n].listener === t) {
                            o = s[n].listener,
                            r = n;
                            break
                        }
                    if (r < 0)
                        return this;
                    0 === r ? s.shift() : function(e, t) {
                        for (; t + 1 < e.length; t++)
                            e[t] = e[t + 1];
                        e.pop()
                    }(s, r),
                    1 === s.length && (i[e] = s[0]),
                    void 0 !== i.removeListener && this.emit("removeListener", e, o || t)
                }
                return this
            }
            ,
            n.prototype.off = n.prototype.removeListener,
            n.prototype.removeAllListeners = function(e) {
                var t, s, i;
                if (void 0 === (s = this._events))
                    return this;
                if (void 0 === s.removeListener)
                    return 0 === arguments.length ? (this._events = Object.create(null),
                    this._eventsCount = 0) : void 0 !== s[e] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete s[e]),
                    this;
                if (0 === arguments.length) {
                    var r, n = Object.keys(s);
                    for (i = 0; i < n.length; ++i)
                        "removeListener" !== (r = n[i]) && this.removeAllListeners(r);
                    return this.removeAllListeners("removeListener"),
                    this._events = Object.create(null),
                    this._eventsCount = 0,
                    this
                }
                if ("function" == typeof (t = s[e]))
                    this.removeListener(e, t);
                else if (void 0 !== t)
                    for (i = t.length - 1; i >= 0; i--)
                        this.removeListener(e, t[i]);
                return this
            }
            ,
            n.prototype.listeners = function(e) {
                return u(this, e, !0)
            }
            ,
            n.prototype.rawListeners = function(e) {
                return u(this, e, !1)
            }
            ,
            n.listenerCount = function(e, t) {
                return "function" == typeof e.listenerCount ? e.listenerCount(t) : g.call(e, t)
            }
            ,
            n.prototype.listenerCount = g,
            n.prototype.eventNames = function() {
                return this._eventsCount > 0 ? t(this._events) : []
            }
        }
        ,
        558: function(e) {
            !function(t) {
                var s = /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/
                  , i = /^(?=([^\/?#]*))\1([^]*)$/
                  , r = /(?:\/|^)\.(?=\/)/g
                  , n = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g
                  , o = {
                    buildAbsoluteURL: function(e, t, s) {
                        if (s = s || {},
                        e = e.trim(),
                        !(t = t.trim())) {
                            if (!s.alwaysNormalize)
                                return e;
                            var r = o.parseURL(e);
                            if (!r)
                                throw new Error("Error trying to parse base URL.");
                            return r.path = o.normalizePath(r.path),
                            o.buildURLFromParts(r)
                        }
                        var n = o.parseURL(t);
                        if (!n)
                            throw new Error("Error trying to parse relative URL.");
                        if (n.scheme)
                            return s.alwaysNormalize ? (n.path = o.normalizePath(n.path),
                            o.buildURLFromParts(n)) : t;
                        var a = o.parseURL(e);
                        if (!a)
                            throw new Error("Error trying to parse base URL.");
                        if (!a.netLoc && a.path && "/" !== a.path[0]) {
                            var h = i.exec(a.path);
                            a.netLoc = h[1],
                            a.path = h[2]
                        }
                        a.netLoc && !a.path && (a.path = "/");
                        var l = {
                            scheme: a.scheme,
                            netLoc: n.netLoc,
                            path: null,
                            params: n.params,
                            query: n.query,
                            fragment: n.fragment
                        };
                        if (!n.netLoc && (l.netLoc = a.netLoc,
                        "/" !== n.path[0]))
                            if (n.path) {
                                var c = a.path
                                  , d = c.substring(0, c.lastIndexOf("/") + 1) + n.path;
                                l.path = o.normalizePath(d)
                            } else
                                l.path = a.path,
                                n.params || (l.params = a.params,
                                n.query || (l.query = a.query));
                        return null === l.path && (l.path = s.alwaysNormalize ? o.normalizePath(n.path) : n.path),
                        o.buildURLFromParts(l)
                    },
                    parseURL: function(e) {
                        var t = s.exec(e);
                        return t ? {
                            scheme: t[1] || "",
                            netLoc: t[2] || "",
                            path: t[3] || "",
                            params: t[4] || "",
                            query: t[5] || "",
                            fragment: t[6] || ""
                        } : null
                    },
                    normalizePath: function(e) {
                        for (e = e.split("").reverse().join("").replace(r, ""); e.length !== (e = e.replace(n, "")).length; )
                            ;
                        return e.split("").reverse().join("")
                    },
                    buildURLFromParts: function(e) {
                        return e.scheme + e.netLoc + e.path + e.params + e.query + e.fragment
                    }
                };
                e.exports = o
            }()
        },
        424: (e,t)=>{
            "use strict";
            t.h = r;
            var s = 2147483647;
            function i(e) {
                if (e > s)
                    throw new RangeError('The value "' + e + '" is invalid for option "size"');
                var t = new Uint8Array(e);
                return t.__proto__ = r.prototype,
                t
            }
            function r(e, t, s) {
                if ("number" == typeof e) {
                    if ("string" == typeof t)
                        throw new TypeError('The "string" argument must be of type string. Received type number');
                    return a(e)
                }
                return n(e, t, s)
            }
            function n(e, t, s) {
                if ("string" == typeof e)
                    return function(e, t) {
                        "string" == typeof t && "" !== t || (t = "utf8");
                        if (!r.isEncoding(t))
                            throw new TypeError("Unknown encoding: " + t);
                        var s = 0 | c(e, t)
                          , n = i(s)
                          , o = n.write(e, t);
                        o !== s && (n = n.slice(0, o));
                        return n
                    }(e, t);
                if (ArrayBuffer.isView(e))
                    return h(e);
                if (null == e)
                    throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
                if (_(e, ArrayBuffer) || e && _(e.buffer, ArrayBuffer))
                    return function(e, t, s) {
                        if (t < 0 || e.byteLength < t)
                            throw new RangeError('"offset" is outside of buffer bounds');
                        if (e.byteLength < t + (s || 0))
                            throw new RangeError('"length" is outside of buffer bounds');
                        var i;
                        i = void 0 === t && void 0 === s ? new Uint8Array(e) : void 0 === s ? new Uint8Array(e,t) : new Uint8Array(e,t,s);
                        return i.__proto__ = r.prototype,
                        i
                    }(e, t, s);
                if ("number" == typeof e)
                    throw new TypeError('The "value" argument must not be of type number. Received type number');
                var n = e.valueOf && e.valueOf();
                if (null != n && n !== e)
                    return r.from(n, t, s);
                var o = function(e) {
                    if (r.isBuffer(e)) {
                        var t = 0 | l(e.length)
                          , s = i(t);
                        return 0 === s.length || e.copy(s, 0, 0, t),
                        s
                    }
                    if (void 0 !== e.length)
                        return "number" != typeof e.length || y(e.length) ? i(0) : h(e);
                    if ("Buffer" === e.type && Array.isArray(e.data))
                        return h(e.data)
                }(e);
                if (o)
                    return o;
                if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e[Symbol.toPrimitive])
                    return r.from(e[Symbol.toPrimitive]("string"), t, s);
                throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e)
            }
            function o(e) {
                if ("number" != typeof e)
                    throw new TypeError('"size" argument must be of type number');
                if (e < 0)
                    throw new RangeError('The value "' + e + '" is invalid for option "size"')
            }
            function a(e) {
                return o(e),
                i(e < 0 ? 0 : 0 | l(e))
            }
            function h(e) {
                for (var t = e.length < 0 ? 0 : 0 | l(e.length), s = i(t), r = 0; r < t; r += 1)
                    s[r] = 255 & e[r];
                return s
            }
            function l(e) {
                if (e >= s)
                    throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s.toString(16) + " bytes");
                return 0 | e
            }
            function c(e, t) {
                if (r.isBuffer(e))
                    return e.length;
                if (ArrayBuffer.isView(e) || _(e, ArrayBuffer))
                    return e.byteLength;
                if ("string" != typeof e)
                    throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
                var s = e.length
                  , i = arguments.length > 2 && !0 === arguments[2];
                if (!i && 0 === s)
                    return 0;
                for (var n = !1; ; )
                    switch (t) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                        return s;
                    case "utf8":
                    case "utf-8":
                        return m(e).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return 2 * s;
                    case "hex":
                        return s >>> 1;
                    default:
                        if (n)
                            return i ? -1 : m(e).length;
                        t = ("" + t).toLowerCase(),
                        n = !0
                    }
            }
            function d(e, t, s, i) {
                s = Number(s) || 0;
                const r = e.length - s;
                i ? (i = Number(i)) > r && (i = r) : i = r;
                const n = t.length;
                let o;
                for (i > n / 2 && (i = n / 2),
                o = 0; o < i; ++o) {
                    const i = parseInt(t.substr(2 * o, 2), 16);
                    if (y(i))
                        return o;
                    e[s + o] = i
                }
                return o
            }
            function u(e, t, s, i) {
                return p(m(t, e.length - s), e, s, i)
            }
            function g(e, t, s, i) {
                return p(function(e) {
                    const t = [];
                    for (let s = 0; s < e.length; ++s)
                        t.push(255 & e.charCodeAt(s));
                    return t
                }(t), e, s, i)
            }
            function f(e, t, s, i) {
                return p(function(e, t) {
                    let s, i, r;
                    const n = [];
                    for (let o = 0; o < e.length && !((t -= 2) < 0); ++o)
                        s = e.charCodeAt(o),
                        i = s >> 8,
                        r = s % 256,
                        n.push(r),
                        n.push(i);
                    return n
                }(t, e.length - s), e, s, i)
            }
            function p(e, t, s, i) {
                let r;
                for (r = 0; r < i && !(r + s >= t.length || r >= e.length); ++r)
                    t[r + s] = e[r];
                return r
            }
            function m(e, t) {
                var s;
                t = t || 1 / 0;
                for (var i = e.length, r = null, n = [], o = 0; o < i; ++o) {
                    if ((s = e.charCodeAt(o)) > 55295 && s < 57344) {
                        if (!r) {
                            if (s > 56319) {
                                (t -= 3) > -1 && n.push(239, 191, 189);
                                continue
                            }
                            if (o + 1 === i) {
                                (t -= 3) > -1 && n.push(239, 191, 189);
                                continue
                            }
                            r = s;
                            continue
                        }
                        if (s < 56320) {
                            (t -= 3) > -1 && n.push(239, 191, 189),
                            r = s;
                            continue
                        }
                        s = 65536 + (r - 55296 << 10 | s - 56320)
                    } else
                        r && (t -= 3) > -1 && n.push(239, 191, 189);
                    if (r = null,
                    s < 128) {
                        if ((t -= 1) < 0)
                            break;
                        n.push(s)
                    } else if (s < 2048) {
                        if ((t -= 2) < 0)
                            break;
                        n.push(s >> 6 | 192, 63 & s | 128)
                    } else if (s < 65536) {
                        if ((t -= 3) < 0)
                            break;
                        n.push(s >> 12 | 224, s >> 6 & 63 | 128, 63 & s | 128)
                    } else {
                        if (!(s < 1114112))
                            throw new Error("Invalid code point");
                        if ((t -= 4) < 0)
                            break;
                        n.push(s >> 18 | 240, s >> 12 & 63 | 128, s >> 6 & 63 | 128, 63 & s | 128)
                    }
                }
                return n
            }
            function _(e, t) {
                return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name
            }
            function y(e) {
                return e != e
            }
            "undefined" != typeof Symbol && null != Symbol.species && r[Symbol.species] === r && Object.defineProperty(r, Symbol.species, {
                value: null,
                configurable: !0,
                enumerable: !1,
                writable: !1
            }),
            r.from = function(e, t, s) {
                return n(e, t, s)
            }
            ,
            r.prototype.__proto__ = Uint8Array.prototype,
            r.__proto__ = Uint8Array,
            r.alloc = function(e, t, s) {
                return function(e, t, s) {
                    return o(e),
                    e <= 0 ? i(e) : void 0 !== t ? "string" == typeof s ? i(e).fill(t, s) : i(e).fill(t) : i(e)
                }(e, t, s)
            }
            ,
            r.allocUnsafe = function(e) {
                return a(e)
            }
            ,
            r.isBuffer = function(e) {
                return null != e && !0 === e._isBuffer && e !== r.prototype
            }
            ,
            r.isEncoding = function(e) {
                switch (String(e).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return !0;
                default:
                    return !1
                }
            }
            ,
            r.concat = function(e, t) {
                if (!Array.isArray(e))
                    throw new TypeError('"list" argument must be an Array of Buffers');
                if (0 === e.length)
                    return r.alloc(0);
                var s;
                if (void 0 === t)
                    for (t = 0,
                    s = 0; s < e.length; ++s)
                        t += e[s].length;
                var i = r.allocUnsafe(t)
                  , n = 0;
                for (s = 0; s < e.length; ++s) {
                    var o = e[s];
                    if (_(o, Uint8Array) && (o = r.from(o)),
                    !r.isBuffer(o))
                        throw new TypeError('"list" argument must be an Array of Buffers');
                    o.copy(i, n),
                    n += o.length
                }
                return i
            }
            ,
            r.byteLength = c,
            r.prototype._isBuffer = !0,
            r.prototype.copy = function(e, t, s, i) {
                if (!r.isBuffer(e))
                    throw new TypeError("argument should be a Buffer");
                if (s || (s = 0),
                i || 0 === i || (i = this.length),
                t >= e.length && (t = e.length),
                t || (t = 0),
                i > 0 && i < s && (i = s),
                i === s)
                    return 0;
                if (0 === e.length || 0 === this.length)
                    return 0;
                if (t < 0)
                    throw new RangeError("targetStart out of bounds");
                if (s < 0 || s >= this.length)
                    throw new RangeError("Index out of range");
                if (i < 0)
                    throw new RangeError("sourceEnd out of bounds");
                i > this.length && (i = this.length),
                e.length - t < i - s && (i = e.length - t + s);
                var n = i - s;
                if (this === e && "function" == typeof Uint8Array.prototype.copyWithin)
                    this.copyWithin(t, s, i);
                else if (this === e && s < t && t < i)
                    for (var o = n - 1; o >= 0; --o)
                        e[o + t] = this[o + s];
                else
                    Uint8Array.prototype.set.call(e, this.subarray(s, i), t);
                return n
            }
            ,
            r.prototype.write = function(e, t, s, i) {
                if (void 0 === t)
                    i = "utf8",
                    s = this.length,
                    t = 0;
                else if (void 0 === s && "string" == typeof t)
                    i = t,
                    s = this.length,
                    t = 0;
                else {
                    if (!isFinite(t))
                        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                    t >>>= 0,
                    isFinite(s) ? (s >>>= 0,
                    void 0 === i && (i = "utf8")) : (i = s,
                    s = void 0)
                }
                const r = this.length - t;
                if ((void 0 === s || s > r) && (s = r),
                e.length > 0 && (s < 0 || t < 0) || t > this.length)
                    throw new RangeError("Attempt to write outside buffer bounds");
                i || (i = "utf8");
                let n = !1;
                for (; ; )
                    switch (i) {
                    case "hex":
                        return d(this, e, t, s);
                    case "utf8":
                    case "utf-8":
                        return u(this, e, t, s);
                    case "ascii":
                    case "latin1":
                    case "binary":
                        return g(this, e, t, s);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return f(this, e, t, s);
                    default:
                        if (n)
                            throw new TypeError("Unknown encoding: " + i);
                        i = ("" + i).toLowerCase(),
                        n = !0
                    }
            }
        }
        ,
        333: e=>{
            "use strict";
            function t(e, t) {
                for (const s in t)
                    Object.defineProperty(e, s, {
                        value: t[s],
                        enumerable: !0,
                        configurable: !0
                    });
                return e
            }
            e.exports = function(e, s, i) {
                if (!e || "string" == typeof e)
                    throw new TypeError("Please pass an Error to err-code");
                i || (i = {}),
                "object" == typeof s && (i = s,
                s = void 0),
                null != s && (i.code = s);
                try {
                    return t(e, i)
                } catch (s) {
                    i.message = e.message,
                    i.stack = e.stack;
                    const r = function() {};
                    return r.prototype = Object.create(Object.getPrototypeOf(e)),
                    t(new r, i)
                }
            }
        }
        ,
        832: function(e, t, s) {
            var i;
            !function(r) {
                "use strict";
                function n(e, t) {
                    var s = (65535 & e) + (65535 & t);
                    return (e >> 16) + (t >> 16) + (s >> 16) << 16 | 65535 & s
                }
                function o(e, t, s, i, r, o) {
                    return n((a = n(n(t, e), n(i, o))) << (h = r) | a >>> 32 - h, s);
                    var a, h
                }
                function a(e, t, s, i, r, n, a) {
                    return o(t & s | ~t & i, e, t, r, n, a)
                }
                function h(e, t, s, i, r, n, a) {
                    return o(t & i | s & ~i, e, t, r, n, a)
                }
                function l(e, t, s, i, r, n, a) {
                    return o(t ^ s ^ i, e, t, r, n, a)
                }
                function c(e, t, s, i, r, n, a) {
                    return o(s ^ (t | ~i), e, t, r, n, a)
                }
                function d(e, t) {
                    var s, i, r, o, d;
                    e[t >> 5] |= 128 << t % 32,
                    e[14 + (t + 64 >>> 9 << 4)] = t;
                    var u = 1732584193
                      , g = -271733879
                      , f = -1732584194
                      , p = 271733878;
                    for (s = 0; s < e.length; s += 16)
                        i = u,
                        r = g,
                        o = f,
                        d = p,
                        u = a(u, g, f, p, e[s], 7, -680876936),
                        p = a(p, u, g, f, e[s + 1], 12, -389564586),
                        f = a(f, p, u, g, e[s + 2], 17, 606105819),
                        g = a(g, f, p, u, e[s + 3], 22, -1044525330),
                        u = a(u, g, f, p, e[s + 4], 7, -176418897),
                        p = a(p, u, g, f, e[s + 5], 12, 1200080426),
                        f = a(f, p, u, g, e[s + 6], 17, -1473231341),
                        g = a(g, f, p, u, e[s + 7], 22, -45705983),
                        u = a(u, g, f, p, e[s + 8], 7, 1770035416),
                        p = a(p, u, g, f, e[s + 9], 12, -1958414417),
                        f = a(f, p, u, g, e[s + 10], 17, -42063),
                        g = a(g, f, p, u, e[s + 11], 22, -1990404162),
                        u = a(u, g, f, p, e[s + 12], 7, 1804603682),
                        p = a(p, u, g, f, e[s + 13], 12, -40341101),
                        f = a(f, p, u, g, e[s + 14], 17, -1502002290),
                        u = h(u, g = a(g, f, p, u, e[s + 15], 22, 1236535329), f, p, e[s + 1], 5, -165796510),
                        p = h(p, u, g, f, e[s + 6], 9, -1069501632),
                        f = h(f, p, u, g, e[s + 11], 14, 643717713),
                        g = h(g, f, p, u, e[s], 20, -373897302),
                        u = h(u, g, f, p, e[s + 5], 5, -701558691),
                        p = h(p, u, g, f, e[s + 10], 9, 38016083),
                        f = h(f, p, u, g, e[s + 15], 14, -660478335),
                        g = h(g, f, p, u, e[s + 4], 20, -405537848),
                        u = h(u, g, f, p, e[s + 9], 5, 568446438),
                        p = h(p, u, g, f, e[s + 14], 9, -1019803690),
                        f = h(f, p, u, g, e[s + 3], 14, -187363961),
                        g = h(g, f, p, u, e[s + 8], 20, 1163531501),
                        u = h(u, g, f, p, e[s + 13], 5, -1444681467),
                        p = h(p, u, g, f, e[s + 2], 9, -51403784),
                        f = h(f, p, u, g, e[s + 7], 14, 1735328473),
                        u = l(u, g = h(g, f, p, u, e[s + 12], 20, -1926607734), f, p, e[s + 5], 4, -378558),
                        p = l(p, u, g, f, e[s + 8], 11, -2022574463),
                        f = l(f, p, u, g, e[s + 11], 16, 1839030562),
                        g = l(g, f, p, u, e[s + 14], 23, -35309556),
                        u = l(u, g, f, p, e[s + 1], 4, -1530992060),
                        p = l(p, u, g, f, e[s + 4], 11, 1272893353),
                        f = l(f, p, u, g, e[s + 7], 16, -155497632),
                        g = l(g, f, p, u, e[s + 10], 23, -1094730640),
                        u = l(u, g, f, p, e[s + 13], 4, 681279174),
                        p = l(p, u, g, f, e[s], 11, -358537222),
                        f = l(f, p, u, g, e[s + 3], 16, -722521979),
                        g = l(g, f, p, u, e[s + 6], 23, 76029189),
                        u = l(u, g, f, p, e[s + 9], 4, -640364487),
                        p = l(p, u, g, f, e[s + 12], 11, -421815835),
                        f = l(f, p, u, g, e[s + 15], 16, 530742520),
                        u = c(u, g = l(g, f, p, u, e[s + 2], 23, -995338651), f, p, e[s], 6, -198630844),
                        p = c(p, u, g, f, e[s + 7], 10, 1126891415),
                        f = c(f, p, u, g, e[s + 14], 15, -1416354905),
                        g = c(g, f, p, u, e[s + 5], 21, -57434055),
                        u = c(u, g, f, p, e[s + 12], 6, 1700485571),
                        p = c(p, u, g, f, e[s + 3], 10, -1894986606),
                        f = c(f, p, u, g, e[s + 10], 15, -1051523),
                        g = c(g, f, p, u, e[s + 1], 21, -2054922799),
                        u = c(u, g, f, p, e[s + 8], 6, 1873313359),
                        p = c(p, u, g, f, e[s + 15], 10, -30611744),
                        f = c(f, p, u, g, e[s + 6], 15, -1560198380),
                        g = c(g, f, p, u, e[s + 13], 21, 1309151649),
                        u = c(u, g, f, p, e[s + 4], 6, -145523070),
                        p = c(p, u, g, f, e[s + 11], 10, -1120210379),
                        f = c(f, p, u, g, e[s + 2], 15, 718787259),
                        g = c(g, f, p, u, e[s + 9], 21, -343485551),
                        u = n(u, i),
                        g = n(g, r),
                        f = n(f, o),
                        p = n(p, d);
                    return [u, g, f, p]
                }
                function u(e) {
                    var t, s = "", i = 32 * e.length;
                    for (t = 0; t < i; t += 8)
                        s += String.fromCharCode(e[t >> 5] >>> t % 32 & 255);
                    return s
                }
                function g(e) {
                    var t, s = [];
                    for (s[(e.length >> 2) - 1] = void 0,
                    t = 0; t < s.length; t += 1)
                        s[t] = 0;
                    var i = 8 * e.length;
                    for (t = 0; t < i; t += 8)
                        s[t >> 5] |= (255 & e.charCodeAt(t / 8)) << t % 32;
                    return s
                }
                function f(e) {
                    var t, s, i = "0123456789abcdef", r = "";
                    for (s = 0; s < e.length; s += 1)
                        t = e.charCodeAt(s),
                        r += i.charAt(t >>> 4 & 15) + i.charAt(15 & t);
                    return r
                }
                function p(e) {
                    return unescape(encodeURIComponent(e))
                }
                function m(e) {
                    return function(e) {
                        return u(d(g(e), 8 * e.length))
                    }(p(e))
                }
                function _(e, t) {
                    return function(e, t) {
                        var s, i, r = g(e), n = [], o = [];
                        for (n[15] = o[15] = void 0,
                        r.length > 16 && (r = d(r, 8 * e.length)),
                        s = 0; s < 16; s += 1)
                            n[s] = 909522486 ^ r[s],
                            o[s] = 1549556828 ^ r[s];
                        return i = d(n.concat(g(t)), 512 + 8 * t.length),
                        u(d(o.concat(i), 640))
                    }(p(e), p(t))
                }
                function y(e, t, s) {
                    return t ? s ? _(t, e) : f(_(t, e)) : s ? m(e) : f(m(e))
                }
                void 0 === (i = function() {
                    return y
                }
                .call(t, s, t, e)) || (e.exports = i)
            }()
        },
        365: e=>{
            const t = {
                ANDROID_WEB: "android-web",
                IOS_WEB: "iOS-web",
                PC_NATIVE: "PC-native",
                PC_WEB: "PC-web"
            };
            var s = {
                getNetType: function() {
                    let e = (new RegExp("nettype\\/(\\w*)").exec(i()) || [, ""])[1].toLowerCase();
                    if (!e && navigator.connection) {
                        switch (navigator.connection.type) {
                        case "ethernet":
                            e = "ethernet";
                            break;
                        case "cellular":
                            e = "cellular";
                            break;
                        default:
                            e = "wifi"
                        }
                    }
                    return e
                },
                getPlatform: function() {
                    return s.isAndroid() ? t.ANDROID_WEB : s.isIOS() || s.isIpad() ? t.IOS_WEB : s.isElectron() ? t.PC_NATIVE : t.PC_WEB
                },
                isX5: function() {
                    return this.isAndroid() && /\s(TBS|X5Core)\/[\w\.\-]+/i.test(i())
                },
                isPC: function() {
                    return !n(r("os ")) && !n(r("android[/ ]"))
                },
                isIOS: function() {
                    return n(r("os "))
                },
                isIpad: function() {
                    return navigator.userAgent.match(/(iPad)/) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1
                },
                isAndroid: function() {
                    return n(r("android[/ ]"))
                },
                isIOSSafari: function() {
                    return this.isIOS() && this.isSafari()
                },
                isIpadSafari: function() {
                    return this.isIpad() && this.isSafari()
                },
                isElectron: function() {
                    return /electron/i.test(i())
                },
                isMobile: function() {
                    return s.isAndroid() || s.isIOS()
                },
                isSafari: function() {
                    return /^((?!chrome|android).)*safari/i.test(i())
                },
                isFirefox: function() {
                    return /firefox/i.test(i())
                },
                isChrome: function() {
                    return /chrome/i.test(i())
                },
                isLocalHost: function() {
                    return "localhost" === location.hostname
                },
                device: t,
                getBrowser: function() {
                    return s.isX5() ? "X5" : s.isChrome() ? "Chrome" : s.isFirefox() ? "Firefox" : s.isIpadSafari() ? "iPad-Safari" : s.isIOSSafari() ? "iPhone-Safari" : s.isSafari() ? "Mac-Safari" : "Unknown"
                }
            };
            function i() {
                return navigator.userAgent.toLowerCase()
            }
            function r(e) {
                return "" + (new RegExp(e + "(\\d+((\\.|_)\\d+)*)").exec(i()) || [, 0])[1] || void 0
            }
            function n(e) {
                return parseFloat((e || "").replace(/\_/g, ".")) || 0
            }
            e.exports = s
        }
        ,
        363: e=>{
            let t;
            e.exports = "function" == typeof queueMicrotask ? queueMicrotask.bind(globalThis) : e=>(t || (t = Promise.resolve())).then(e).catch((e=>setTimeout((()=>{
                throw e
            }
            ), 0)))
        }
    }
      , t = {};
    function s(i) {
        var r = t[i];
        if (void 0 !== r)
            return r.exports;
        var n = t[i] = {
            exports: {}
        };
        return e[i].call(n.exports, n, n.exports, s),
        n.exports
    }
    s.n = e=>{
        var t = e && e.__esModule ? ()=>e.default : ()=>e;
        return s.d(t, {
            a: t
        }),
        t
    }
    ,
    s.d = (e,t)=>{
        for (var i in t)
            s.o(t, i) && !s.o(e, i) && Object.defineProperty(e, i, {
                enumerable: !0,
                get: t[i]
            })
    }
    ,
    s.o = (e,t)=>Object.prototype.hasOwnProperty.call(e, t);
    var i = {};
    return (()=>{
        "use strict";
        s.d(i, {
            default: ()=>rs
        });
        const e = {
            DC_SIGNAL: "SIGNAL",
            DC_SIGNAL_BATCH: "SIGNAL_BATCH",
            DC_OPEN: "OPEN",
            DC_REQUEST: "REQUEST",
            DC_PIECE_NOT_FOUND: "PIECE_NOT_FOUND",
            DC_PIECE_ABORT: "PIECE_ABORT",
            DC_PIECE_CANCEL: "PIECE_CANCEL",
            DC_CLOSE: "CLOSE",
            DC_DISCONNECT: "DISCONNECT",
            DC_RESPONSE: "RESPONSE",
            DC_ERROR: "ERROR",
            DC_PIECE: "PIECE",
            DC_PIECE_DATA: "PIECE_DATA",
            DC_TIMEOUT: "TIMEOUT",
            DC_PIECE_ACK: "PIECE_ACK",
            DC_METADATA: "METADATA",
            DC_PLAT_ANDROID: "ANDROID",
            DC_PLAT_IOS: "IOS",
            DC_PLAT_WEB: "WEB",
            DC_CHOKE: "CHOKE",
            DC_UNCHOKE: "UNCHOKE",
            DC_HAVE: "HAVE",
            DC_HAVE_REVERSE: "HAVE_REVERSE",
            DC_LOST: "LOST",
            DC_GET_PEERS: "GET_PEERS",
            DC_PEERS: "PEERS",
            DC_STATS: "STATS",
            DC_PEER_SIGNAL: "PEER_SIGNAL",
            DC_PLAYLIST: "PLAYLIST",
            BM_LOST: "lost",
            BM_ADDED_SEG_: "BM_ADDED_SEG_",
            BM_ADDED_SN_: "BM_ADDED_SN_",
            BM_SEG_ADDED: "BM_SEG_ADDED",
            BM_FATAL_ERROR: "BM_FATAL_ERROR",
            FRAG_CHANGED: "FRAG_CHANGED",
            FRAG_LOADED: "FRAG_LOADED",
            FRAG_LOADING: "FRAG_LOADING",
            RESTART_P2P: "RESTART_P2P",
            EXCEPTION: "exception",
            SYN_OUTPUT: "SYN_OUTPUT",
            SYN_ERROR: "SYN_ERROR",
            SYN_PROGRESS: "SYN_PROGRESS",
            MEDIA_REBUFFER: "MEDIA_REBUFFER"
        }
          , t = {
            ...e,
            SCH_DCHAVE: "SCH_DCHAVE",
            SCH_WAIT_PEER: "SCH_WAIT_PEER",
            SW_PLAYLIST: "SW_PLAYLIST",
            SW_GET_PLAYLIST: "SW_GET_PLAYLIST",
            SW_GET_MEDIA: "SW_GET_MEDIA",
            LEVEL_LOADED: "LEVEL_LOADED",
            MANIFEST_PARSED: "MANIFEST_PARSED"
        };
        var r = s(415)
          , n = s.n(r)
          , o = s(424)
          , a = s(558)
          , h = s.n(a);
        const l = "__PROXY_IDENTIFIER__";
        const c = 64e3;
        function d() {
            return !0
        }
        function u(e) {
            return new URL(location.href).searchParams.get(e)
        }
        function g(e, t, s) {
            const i = new URL(e);
            return i.searchParams.append(t, s),
            i.href
        }
        function f() {
            return Date.parse(new Date) / 1e3
        }
        function p(e, t) {
            return parseInt(Math.random() * (t - e + 1) + e, 10)
        }
        function m() {
            if ("undefined" == typeof self)
                return null;
            var e = {
                RTCPeerConnection: self.RTCPeerConnection || self.mozRTCPeerConnection || self.webkitRTCPeerConnection,
                RTCSessionDescription: self.RTCSessionDescription || self.mozRTCSessionDescription || self.webkitRTCSessionDescription,
                RTCIceCandidate: self.RTCIceCandidate || self.mozRTCIceCandidate || self.webkitRTCIceCandidate
            };
            return e.RTCPeerConnection && e.RTCPeerConnection.prototype ? e : null
        }
        function _() {
            return location.protocol.startsWith("https")
        }
        function y(e, t, s) {
            if (e.size <= t)
                return;
            const i = [...e.keys()];
            do {
                const t = i.shift();
                s && s(e.get(t)),
                e.delete(t)
            } while (e.size > t)
        }
        function v(e, t) {
            if (e.size <= t)
                return;
            const s = [...e.values()];
            do {
                e.delete(s.shift())
            } while (e.size > t)
        }
        function S(e) {
            return e instanceof ArrayBuffer && 0 !== e.byteLength
        }
        function P(e) {
            if (!e)
                return {};
            const t = (e = e.substring(6)).split("-");
            if (2 !== t.length)
                return {};
            const s = Number(t[0])
              , i = t[1] ? Number(t[1]) : -1;
            return {
                rangeStart: s,
                rangeEnd: i >= 0 ? i + 1 : void 0
            }
        }
        function b(e) {
            return e.split("?")[0]
        }
        function w() {
            let e = new Date
              , t = e.getHours()
              , s = e.getMinutes()
              , i = e.getSeconds()
              , r = e.getMilliseconds();
            return `${t.toString().padStart(2, "0")}:${s.toString().padStart(2, "0")}:${i.toString().padStart(2, "0")}.${r}`
        }
        function E(e) {
            return e && "function" == typeof e
        }
        var C = function(e, t) {
            return C = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(e, t) {
                e.__proto__ = t
            }
            || function(e, t) {
                for (var s in t)
                    t.hasOwnProperty(s) && (e[s] = t[s])
            }
            ,
            C(e, t)
        };
        function I(e, t) {
            function s() {
                this.constructor = e
            }
            C(e, t),
            e.prototype = null === t ? Object.create(t) : (s.prototype = t.prototype,
            new s)
        }
        function T(e, t) {
            var s = "function" == typeof Symbol && e[Symbol.iterator];
            if (!s)
                return e;
            var i, r, n = s.call(e), o = [];
            try {
                for (; (void 0 === t || t-- > 0) && !(i = n.next()).done; )
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (s = n.return) && s.call(n)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        }
        var L = function(e, t) {
            this.target = t,
            this.type = e
        }
          , R = function(e) {
            function t(t, s) {
                var i = e.call(this, "error", s) || this;
                return i.message = t.message,
                i.error = t,
                i
            }
            return I(t, e),
            t
        }(L)
          , A = function(e) {
            function t(t, s, i) {
                void 0 === t && (t = 1e3),
                void 0 === s && (s = "");
                var r = e.call(this, "close", i) || this;
                return r.wasClean = !0,
                r.code = t,
                r.reason = s,
                r
            }
            return I(t, e),
            t
        }(L)
          , D = function() {
            if ("undefined" != typeof WebSocket)
                return WebSocket
        }
          , M = {
            maxReconnectionDelay: 1e4,
            minReconnectionDelay: 1e3 + 4e3 * Math.random(),
            minUptime: 5e3,
            reconnectionDelayGrowFactor: 1.3,
            connectionTimeout: 4e3,
            maxRetries: 1 / 0,
            maxEnqueuedMessages: 1 / 0,
            startClosed: !1,
            debug: !1
        };
        const N = function() {
            function e(e, t, s) {
                var i = this;
                void 0 === s && (s = {}),
                this._listeners = {
                    error: [],
                    message: [],
                    open: [],
                    close: []
                },
                this._retryCount = -1,
                this._shouldReconnect = !0,
                this._connectLock = !1,
                this._binaryType = "blob",
                this._closeCalled = !1,
                this._messageQueue = [],
                this.onclose = null,
                this.onerror = null,
                this.onmessage = null,
                this.onopen = null,
                this._handleOpen = function(e) {
                    i._debug("open event");
                    var t = i._options.minUptime
                      , s = void 0 === t ? M.minUptime : t;
                    clearTimeout(i._connectTimeout),
                    i._uptimeTimeout = setTimeout((function() {
                        return i._acceptOpen()
                    }
                    ), s),
                    i._ws.binaryType = i._binaryType,
                    i._messageQueue.forEach((function(e) {
                        return i._ws.send(e)
                    }
                    )),
                    i._messageQueue = [],
                    i.onopen && i.onopen(e),
                    i._listeners.open.forEach((function(t) {
                        return i._callEventListener(e, t)
                    }
                    ))
                }
                ,
                this._handleMessage = function(e) {
                    i._debug("message event"),
                    i.onmessage && i.onmessage(e),
                    i._listeners.message.forEach((function(t) {
                        return i._callEventListener(e, t)
                    }
                    ))
                }
                ,
                this._handleError = function(e) {
                    i._debug("error event", e.message),
                    i._disconnect(void 0, "TIMEOUT" === e.message ? "timeout" : void 0),
                    i.onerror && i.onerror(e),
                    i._debug("exec error listeners"),
                    i._listeners.error.forEach((function(t) {
                        return i._callEventListener(e, t)
                    }
                    )),
                    i._connect()
                }
                ,
                this._handleClose = function(e) {
                    i._debug("close event"),
                    i._clearTimeouts(),
                    i._shouldReconnect && i._connect(),
                    i.onclose && i.onclose(e),
                    i._listeners.close.forEach((function(t) {
                        return i._callEventListener(e, t)
                    }
                    ))
                }
                ,
                this._url = e,
                this._protocols = t,
                this._options = s,
                this._options.startClosed && (this._shouldReconnect = !1),
                this._connect()
            }
            return Object.defineProperty(e, "CONNECTING", {
                get: function() {
                    return 0
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e, "OPEN", {
                get: function() {
                    return 1
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e, "CLOSING", {
                get: function() {
                    return 2
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e, "CLOSED", {
                get: function() {
                    return 3
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "CONNECTING", {
                get: function() {
                    return e.CONNECTING
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "OPEN", {
                get: function() {
                    return e.OPEN
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "CLOSING", {
                get: function() {
                    return e.CLOSING
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "CLOSED", {
                get: function() {
                    return e.CLOSED
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "binaryType", {
                get: function() {
                    return this._ws ? this._ws.binaryType : this._binaryType
                },
                set: function(e) {
                    this._binaryType = e,
                    this._ws && (this._ws.binaryType = e)
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "retryCount", {
                get: function() {
                    return Math.max(this._retryCount, 0)
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "bufferedAmount", {
                get: function() {
                    return this._messageQueue.reduce((function(e, t) {
                        return "string" == typeof t ? e += t.length : t instanceof Blob ? e += t.size : e += t.byteLength,
                        e
                    }
                    ), 0) + (this._ws ? this._ws.bufferedAmount : 0)
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "extensions", {
                get: function() {
                    return this._ws ? this._ws.extensions : ""
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "protocol", {
                get: function() {
                    return this._ws ? this._ws.protocol : ""
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "readyState", {
                get: function() {
                    return this._ws ? this._ws.readyState : this._options.startClosed ? e.CLOSED : e.CONNECTING
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "url", {
                get: function() {
                    return this._ws ? this._ws.url : ""
                },
                enumerable: !0,
                configurable: !0
            }),
            e.prototype.close = function(e, t) {
                void 0 === e && (e = 1e3),
                this._closeCalled = !0,
                this._shouldReconnect = !1,
                this._clearTimeouts(),
                this._ws ? this._ws.readyState !== this.CLOSED ? this._ws.close(e, t) : this._debug("close: already closed") : this._debug("close enqueued: no ws instance")
            }
            ,
            e.prototype.reconnect = function(e, t) {
                this._shouldReconnect = !0,
                this._closeCalled = !1,
                this._retryCount = -1,
                this._ws && this._ws.readyState !== this.CLOSED ? (this._disconnect(e, t),
                this._connect()) : this._connect()
            }
            ,
            e.prototype.send = function(e) {
                if (this._ws && this._ws.readyState === this.OPEN)
                    this._debug("send", e),
                    this._ws.send(e);
                else {
                    var t = this._options.maxEnqueuedMessages
                      , s = void 0 === t ? M.maxEnqueuedMessages : t;
                    this._messageQueue.length < s && (this._debug("enqueue", e),
                    this._messageQueue.push(e))
                }
            }
            ,
            e.prototype.addEventListener = function(e, t) {
                this._listeners[e] && this._listeners[e].push(t)
            }
            ,
            e.prototype.dispatchEvent = function(e) {
                var t, s, i = this._listeners[e.type];
                if (i)
                    try {
                        for (var r = function(e) {
                            var t = "function" == typeof Symbol && e[Symbol.iterator]
                              , s = 0;
                            return t ? t.call(e) : {
                                next: function() {
                                    return e && s >= e.length && (e = void 0),
                                    {
                                        value: e && e[s++],
                                        done: !e
                                    }
                                }
                            }
                        }(i), n = r.next(); !n.done; n = r.next()) {
                            var o = n.value;
                            this._callEventListener(e, o)
                        }
                    } catch (e) {
                        t = {
                            error: e
                        }
                    } finally {
                        try {
                            n && !n.done && (s = r.return) && s.call(r)
                        } finally {
                            if (t)
                                throw t.error
                        }
                    }
                return !0
            }
            ,
            e.prototype.removeEventListener = function(e, t) {
                this._listeners[e] && (this._listeners[e] = this._listeners[e].filter((function(e) {
                    return e !== t
                }
                )))
            }
            ,
            e.prototype._debug = function() {
                for (var e = [], t = 0; t < arguments.length; t++)
                    e[t] = arguments[t];
                this._options.debug && console.log.apply(console, function() {
                    for (var e = [], t = 0; t < arguments.length; t++)
                        e = e.concat(T(arguments[t]));
                    return e
                }(["RWS>"], e))
            }
            ,
            e.prototype._getNextDelay = function() {
                var e = this._options
                  , t = e.reconnectionDelayGrowFactor
                  , s = void 0 === t ? M.reconnectionDelayGrowFactor : t
                  , i = e.minReconnectionDelay
                  , r = void 0 === i ? M.minReconnectionDelay : i
                  , n = e.maxReconnectionDelay
                  , o = void 0 === n ? M.maxReconnectionDelay : n
                  , a = 0;
                return this._retryCount > 0 && (a = r * Math.pow(s, this._retryCount - 1)) > o && (a = o),
                this._debug("next delay", a),
                a
            }
            ,
            e.prototype._wait = function() {
                var e = this;
                return new Promise((function(t) {
                    setTimeout(t, e._getNextDelay())
                }
                ))
            }
            ,
            e.prototype._getNextUrl = function(e) {
                if ("string" == typeof e)
                    return Promise.resolve(e);
                if ("function" == typeof e) {
                    var t = e();
                    if ("string" == typeof t)
                        return Promise.resolve(t);
                    if (t.then)
                        return t
                }
                throw Error("Invalid URL")
            }
            ,
            e.prototype._connect = function() {
                var e = this;
                if (!this._connectLock && this._shouldReconnect) {
                    this._connectLock = !0;
                    var t = this._options
                      , s = t.maxRetries
                      , i = void 0 === s ? M.maxRetries : s
                      , r = t.connectionTimeout
                      , n = void 0 === r ? M.connectionTimeout : r
                      , o = t.WebSocket
                      , a = void 0 === o ? D() : o;
                    if (this._retryCount >= i)
                        this._debug("max retries reached", this._retryCount, ">=", i);
                    else {
                        if (this._retryCount++,
                        this._debug("connect", this._retryCount),
                        this._removeListeners(),
                        void 0 === (h = a) || !h || 2 !== h.CLOSING)
                            throw Error("No valid WebSocket class provided");
                        var h;
                        this._wait().then((function() {
                            return e._getNextUrl(e._url)
                        }
                        )).then((function(t) {
                            e._closeCalled || (e._debug("connect", {
                                url: t,
                                protocols: e._protocols
                            }),
                            e._ws = e._protocols ? new a(t,e._protocols) : new a(t),
                            e._ws.binaryType = e._binaryType,
                            e._connectLock = !1,
                            e._addListeners(),
                            e._connectTimeout = setTimeout((function() {
                                return e._handleTimeout()
                            }
                            ), n))
                        }
                        ))
                    }
                }
            }
            ,
            e.prototype._handleTimeout = function() {
                this._debug("timeout event"),
                this._handleError(new R(Error("TIMEOUT"),this))
            }
            ,
            e.prototype._disconnect = function(e, t) {
                if (void 0 === e && (e = 1e3),
                this._clearTimeouts(),
                this._ws) {
                    this._removeListeners();
                    try {
                        this._ws.close(e, t),
                        this._handleClose(new A(e,t,this))
                    } catch (e) {}
                }
            }
            ,
            e.prototype._acceptOpen = function() {
                this._debug("accept open"),
                this._retryCount = 0
            }
            ,
            e.prototype._callEventListener = function(e, t) {
                "handleEvent"in t ? t.handleEvent(e) : t(e)
            }
            ,
            e.prototype._removeListeners = function() {
                this._ws && (this._debug("removeListeners"),
                this._ws.removeEventListener("open", this._handleOpen),
                this._ws.removeEventListener("close", this._handleClose),
                this._ws.removeEventListener("message", this._handleMessage),
                this._ws.removeEventListener("error", this._handleError))
            }
            ,
            e.prototype._addListeners = function() {
                this._ws && (this._debug("addListeners"),
                this._ws.addEventListener("open", this._handleOpen),
                this._ws.addEventListener("close", this._handleClose),
                this._ws.addEventListener("message", this._handleMessage),
                this._ws.addEventListener("error", this._handleError))
            }
            ,
            e.prototype._clearTimeouts = function() {
                clearTimeout(this._connectTimeout),
                clearTimeout(this._uptimeTimeout)
            }
            ,
            e
        }()
          , O = {
            debug: 3,
            info: 4,
            warn: 5,
            error: 6
        };
        class k {
            constructor(e, t, s, i) {
                this.wsAddr = `${e}?app=${t}&id=${s}&v=${i}`,
                this.destroyed = !1;
                try {
                    this._ws = this._init()
                } catch (e) {
                    console.error(e)
                }
            }
            _init() {
                const e = {
                    maxRetries: 3,
                    minReconnectionDelay: p(5e3, 15e3),
                    maxReconnectionDelay: 6e5,
                    maxEnqueuedMessages: 200
                };
                return new N(this.wsAddr,void 0,e)
            }
            send(e, t) {
                if (this.destroyed)
                    return;
                const s = O[e];
                this._ws.send(JSON.stringify({
                    records: [{
                        level: s,
                        text: `${w()}: ${t}`
                    }]
                }))
            }
            sendBatch(e) {
                const t = [];
                for (let s of e)
                    t.push({
                        level: O[s.levelKey],
                        text: s.message
                    });
                this._ws.send(JSON.stringify({
                    records: t
                }))
            }
            destroy() {
                this._ws && (this._ws.close(1e3, "normal close"),
                this._ws = null,
                this.destroyed = !0)
            }
        }
        const $ = e=>{
            const t = localStorage.getItem(e);
            try {
                const e = JSON.parse(t);
                return e.value ? e.value : e
            } catch (e) {
                return t
            }
        }
          , B = (e,t,s)=>{
            ((e,t)=>{
                "object" == typeof t && (t = JSON.stringify(t)),
                localStorage.setItem(e, t)
            }
            )(e, {
                value: t,
                duration: s,
                startTime: Date.now()
            })
        }
          , x = {
            debug: 0,
            info: 1,
            warn: 2,
            error: 3,
            none: 4
        };
        const F = class {
            constructor(e) {
                this.logLevel = e,
                this.onlineDebug = !1,
                this.logCache = [];
                try {
                    console.debug = console.log
                } catch (e) {}
                "debug" !== e && "info" !== e || (this.logLevel = "error"),
                $("SW_DEBUG") && (this.logLevel = "debug"),
                !0 === e ? this.logLevel = "warn" : !1 === e ? this.logLevel = "none" : e in x || (this.logLevel = "error"),
                this.resetLogger()
            }
            enableDebug() {
                this.onlineDebug = !0;
                for (let e in x)
                    this[e] = console[e];
                this._hookLogFunc(((e,t)=>{
                    this.logUploader && this.logUploader.send(e, t)
                }
                ))
            }
            enableReport(e) {
                this.reportUrl = e,
                this._hookLogFunc(((e,t)=>{
                    this.reportUrl ? (this.logCache.push({
                        levelKey: e,
                        message: `${w()}: ${t}`
                    }),
                    this.logCache.length > 250 && this.logCache.shift()) : this.reporter && this.reporter.send(e, t)
                }
                ))
            }
            report(e, t, s, i, r=5e3) {
                e && this.logCache.unshift({
                    levelKey: "info",
                    message: e
                }),
                this.reporter = new k(this.reportUrl,t,s,i),
                this.reporter._ws.addEventListener("open", (()=>{
                    this.reportUrl = void 0,
                    this.reporter.sendBatch(this.logCache),
                    setTimeout((()=>{
                        this.reporter.destroy(),
                        this.reporter = null
                    }
                    ), r)
                }
                ), {
                    once: !0
                })
            }
            _hookLogFunc(e) {
                for (let t in x) {
                    const s = this[t];
                    this[t] = i=>{
                        e(t, i),
                        s(i)
                    }
                }
            }
            setUploader(e) {
                this.logUploader = e
            }
            resetLogger() {
                this.onlineDebug = !1;
                for (let e in x)
                    x[e] < x[this.logLevel] ? this[e] = d : this[e] = console[e]
            }
            get isDebugLevel() {
                return x[this.logLevel] <= 2 || this.onlineDebug
            }
        }
        ;
        var q = s(363)
          , z = s.n(q);
        const U = 65536;
        function W(e) {
            return e.replace(/a=ice-options:trickle\s\n/g, "")
        }
        class G extends (n()) {
            constructor(e) {
                super(),
                this.channelName = e.initiator ? e.channelName : null,
                this.initiator = e.initiator || !1,
                this.channelConfig = e.channelConfig || G.channelConfig,
                this.channelNegotiated = this.channelConfig.negotiated,
                this.config = Object.assign({}, G.config, e.config),
                this.offerOptions = e.offerOptions || {},
                this.answerOptions = e.answerOptions || {},
                this.sdpTransform = e.sdpTransform || (e=>e),
                this.trickle = void 0 === e.trickle || e.trickle,
                this.allowHalfTrickle = void 0 !== e.allowHalfTrickle && e.allowHalfTrickle,
                this.iceCompleteTimeout = e.iceCompleteTimeout || 5e3,
                this.destroyed = !1,
                this.destroying = !1,
                this._connected = !1,
                this.remoteAddress = void 0,
                this.remoteFamily = void 0,
                this.remotePort = void 0,
                this.localAddress = void 0,
                this.localFamily = void 0,
                this.localPort = void 0,
                this._wrtc = e.wrtc && "object" == typeof e.wrtc ? e.wrtc : m(),
                this._pcReady = !1,
                this._channelReady = !1,
                this._iceComplete = !1,
                this._iceCompleteTimer = null,
                this._channel = null,
                this._pendingCandidates = [],
                this._pendingData = [],
                this._isNegotiating = !1,
                this._firstNegotiation = !0,
                this._batchedNegotiation = !1,
                this._queuedNegotiation = !1,
                this._sendersAwaitingStable = [],
                this._senderMap = new Map,
                this._closingInterval = null,
                this._chunk = null,
                this._cb = null,
                this._interval = null;
                try {
                    this._pc = new this._wrtc.RTCPeerConnection(this.config)
                } catch (e) {
                    return void z()((()=>this.destroy(e)))
                }
                this._pc.oniceconnectionstatechange = ()=>{
                    this._onIceStateChange()
                }
                ,
                this._pc.onicegatheringstatechange = ()=>{
                    this._onIceStateChange()
                }
                ,
                this._pc.onconnectionstatechange = ()=>{
                    this._onConnectionStateChange()
                }
                ,
                this._pc.onsignalingstatechange = ()=>{
                    this._onSignalingStateChange()
                }
                ,
                this._pc.onicecandidate = e=>{
                    this._onIceCandidate(e)
                }
                ,
                this.initiator || this.channelNegotiated ? this._setupData({
                    channel: this._pc.createDataChannel(this.channelName, this.channelConfig)
                }) : this._pc.ondatachannel = e=>{
                    this._setupData(e)
                }
                ,
                this._needsNegotiation()
            }
            get bufferSize() {
                return this._channel && this._channel.bufferedAmount || 0
            }
            get connected() {
                return this._connected && "open" === this._channel.readyState
            }
            signal(e) {
                if (!this.destroyed && this._pc) {
                    if ("string" == typeof e)
                        try {
                            e = JSON.parse(e)
                        } catch (t) {
                            e = {}
                        }
                    if (e.renegotiate && this.initiator && this._needsNegotiation(),
                    e.candidate)
                        if (this._pc.remoteDescription && this._pc.remoteDescription.type)
                            try {
                                this._addIceCandidate(e.candidate)
                            } catch (e) {}
                        else
                            this._pendingCandidates.push(e.candidate);
                    e.sdp && this._pc.setRemoteDescription(new this._wrtc.RTCSessionDescription(e)).then((()=>{
                        this.destroyed || (this._pendingCandidates.forEach((e=>{
                            try {
                                this._addIceCandidate(e)
                            } catch (e) {}
                        }
                        )),
                        this._pendingCandidates = [],
                        "offer" === this._pc.remoteDescription.type && this._createAnswer())
                    }
                    )).catch((e=>{
                        this.destroy(e)
                    }
                    )),
                    e.sdp || e.candidate || e.renegotiate || e.transceiverRequest || this.destroy(new Error("signal() called with invalid signal data"))
                }
            }
            _addIceCandidate(e) {
                const t = new this._wrtc.RTCIceCandidate(e);
                this._pc.addIceCandidate(t).catch((e=>{
                    var s;
                    !t.address || t.address.endsWith(".local") ? (s = "Ignoring unsupported ICE candidate.",
                    console.warn(s)) : this.destroy(e)
                }
                ))
            }
            send(e) {
                if ("string" == typeof e) {
                    RTCDataChannel.prototype.send.toString().includes("[native code]") && this._channel.send(e)
                } else
                    this._channel.send(e)
            }
            _needsNegotiation() {
                this._batchedNegotiation || (this._batchedNegotiation = !0,
                z()((()=>{
                    this._batchedNegotiation = !1,
                    !this.initiator && this._firstNegotiation || this.negotiate(),
                    this._firstNegotiation = !1
                }
                )))
            }
            negotiate() {
                this.initiator ? this._isNegotiating ? this._queuedNegotiation = !0 : setTimeout((()=>{
                    this._createOffer()
                }
                ), 0) : this._isNegotiating ? this._queuedNegotiation = !0 : this.emit("signal", {
                    type: "renegotiate",
                    renegotiate: !0
                }),
                this._isNegotiating = !0
            }
            destroy(e) {
                this._destroy(e)
            }
            _destroy(e) {
                this.destroyed || this.destroying || (this.destroying = !0,
                z()((()=>{
                    if (this.destroyed = !0,
                    this.destroying = !1,
                    this._connected = !1,
                    this._pcReady = !1,
                    this._channelReady = !1,
                    this._senderMap = null,
                    clearInterval(this._closingInterval),
                    this._closingInterval = null,
                    clearInterval(this._interval),
                    this._interval = null,
                    this._chunk = null,
                    this._cb = null,
                    this._channel) {
                        try {
                            this._channel.close()
                        } catch (e) {}
                        this._channel.onmessage = null,
                        this._channel.onopen = null,
                        this._channel.onclose = null,
                        this._channel.onerror = null
                    }
                    if (this._pc) {
                        try {
                            this._pc.close()
                        } catch (e) {}
                        this._pc.oniceconnectionstatechange = null,
                        this._pc.onicegatheringstatechange = null,
                        this._pc.onsignalingstatechange = null,
                        this._pc.onicecandidate = null,
                        this._pc.ondatachannel = null
                    }
                    this._pc = null,
                    this._channel = null,
                    e && this.emit("error", e),
                    this.emit("close")
                }
                )))
            }
            _setupData(e) {
                if (!e.channel)
                    return this.destroy(new Error("Data channel event is missing `channel` property"));
                this._channel = e.channel,
                this._channel.binaryType = "arraybuffer",
                "number" == typeof this._channel.bufferedAmountLowThreshold && (this._channel.bufferedAmountLowThreshold = U),
                this.channelName = this._channel.label,
                this._channel.onmessage = e=>{
                    this._onChannelMessage(e)
                }
                ,
                this._channel.onbufferedamountlow = ()=>{
                    this._onChannelBufferedAmountLow()
                }
                ,
                this._channel.onopen = ()=>{
                    this._onChannelOpen()
                }
                ,
                this._channel.onclose = ()=>{
                    this._onChannelClose()
                }
                ,
                this._channel.onerror = e=>{
                    this.destroy(e)
                }
                ;
                let t = !1;
                this._closingInterval = setInterval((()=>{
                    this._channel && "closing" === this._channel.readyState ? (t && this._onChannelClose(),
                    t = !0) : t = !1
                }
                ), 5e3)
            }
            get isBufferedAmountHigh() {
                return this._channel.bufferedAmount > U
            }
            write(e, t) {
                if (this.destroyed)
                    return t(new Error("cannot write after peer is destroyed"));
                if (this._connected) {
                    try {
                        this.send(e)
                    } catch (e) {
                        return this.destroy(e)
                    }
                    this.isBufferedAmountHigh ? this._cb = t : t(null)
                } else
                    this._chunk = e,
                    this._cb = t
            }
            _startIceCompleteTimeout() {
                this.destroyed || this._iceCompleteTimer || (this._iceCompleteTimer = setTimeout((()=>{
                    this._iceComplete || (this._iceComplete = !0,
                    this.emit("iceTimeout"),
                    this.emit("_iceComplete"))
                }
                ), this.iceCompleteTimeout))
            }
            _createOffer() {
                this.destroyed || this._pc.createOffer(this.offerOptions).then((e=>{
                    if (this.destroyed)
                        return;
                    this.trickle || this.allowHalfTrickle || (e.sdp = W(e.sdp)),
                    e.sdp = this.sdpTransform(e.sdp);
                    const t = ()=>{
                        if (this.destroyed)
                            return;
                        const t = this._pc.localDescription || e;
                        this.emit("signal", {
                            type: t.type,
                            sdp: t.sdp
                        })
                    }
                    ;
                    this._pc.setLocalDescription(e).then((()=>{
                        this.destroyed || (this.trickle || this._iceComplete ? t() : this.once("_iceComplete", t))
                    }
                    )).catch((e=>{
                        this.destroy(e)
                    }
                    ))
                }
                )).catch((e=>{
                    this.destroy(e)
                }
                ))
            }
            _createAnswer() {
                this.destroyed || this._pc.createAnswer(this.answerOptions).then((e=>{
                    if (this.destroyed)
                        return;
                    this.trickle || this.allowHalfTrickle || (e.sdp = W(e.sdp)),
                    e.sdp = this.sdpTransform(e.sdp);
                    const t = ()=>{
                        if (this.destroyed)
                            return;
                        const t = this._pc.localDescription || e;
                        this.emit("signal", {
                            type: t.type,
                            sdp: t.sdp
                        })
                    }
                    ;
                    this._pc.setLocalDescription(e).then((()=>{
                        this.destroyed || (this.trickle || this._iceComplete ? t() : this.once("_iceComplete", t))
                    }
                    )).catch((e=>{
                        this.destroy(e)
                    }
                    ))
                }
                )).catch((e=>{
                    this.destroy(e)
                }
                ))
            }
            _onConnectionStateChange() {
                this.destroyed || "failed" === this._pc.connectionState && this.destroy(new Error("Connection failed."))
            }
            _onIceStateChange() {
                if (this.destroyed)
                    return;
                const e = this._pc.iceConnectionState
                  , t = this._pc.iceGatheringState;
                this.emit("iceStateChange", e, t),
                "connected" !== e && "completed" !== e || (this._pcReady = !0,
                this._maybeReady()),
                "failed" === e && this.destroy(new Error("Ice connection failed.")),
                "closed" === e && this.destroy(new Error("Ice connection closed."))
            }
            getStats(e) {
                const t = e=>("[object Array]" === Object.prototype.toString.call(e.values) && e.values.forEach((t=>{
                    Object.assign(e, t)
                }
                )),
                e);
                0 === this._pc.getStats.length ? this._pc.getStats().then((s=>{
                    const i = [];
                    s.forEach((e=>{
                        i.push(t(e))
                    }
                    )),
                    e(null, i)
                }
                ), (t=>e(t))) : this._pc.getStats.length > 0 ? this._pc.getStats((s=>{
                    if (this.destroyed)
                        return;
                    const i = [];
                    s.result().forEach((e=>{
                        const s = {};
                        e.names().forEach((t=>{
                            s[t] = e.stat(t)
                        }
                        )),
                        s.id = e.id,
                        s.type = e.type,
                        s.timestamp = e.timestamp,
                        i.push(t(s))
                    }
                    )),
                    e(null, i)
                }
                ), (t=>e(t))) : e(null, [])
            }
            _maybeReady() {
                if (this._connected || this._connecting || !this._pcReady || !this._channelReady)
                    return;
                this._connecting = !0;
                const e = ()=>{
                    this.destroyed || this.getStats(((t,s)=>{
                        if (this.destroyed)
                            return;
                        t && (s = []);
                        const i = {}
                          , r = {}
                          , n = {};
                        let o = !1;
                        s.forEach((e=>{
                            "remotecandidate" !== e.type && "remote-candidate" !== e.type || (i[e.id] = e),
                            "localcandidate" !== e.type && "local-candidate" !== e.type || (r[e.id] = e),
                            "candidatepair" !== e.type && "candidate-pair" !== e.type || (n[e.id] = e)
                        }
                        ));
                        const a = e=>{
                            o = !0;
                            let t = r[e.localCandidateId];
                            t && (t.ip || t.address) ? (this.localAddress = t.ip || t.address,
                            this.localPort = Number(t.port)) : t && t.ipAddress ? (this.localAddress = t.ipAddress,
                            this.localPort = Number(t.portNumber)) : "string" == typeof e.googLocalAddress && (t = e.googLocalAddress.split(":"),
                            this.localAddress = t[0],
                            this.localPort = Number(t[1])),
                            this.localAddress && (this.localFamily = this.localAddress.includes(":") ? "IPv6" : "IPv4");
                            let s = i[e.remoteCandidateId];
                            s && (s.ip || s.address) ? (this.remoteAddress = s.ip || s.address,
                            this.remotePort = Number(s.port)) : s && s.ipAddress ? (this.remoteAddress = s.ipAddress,
                            this.remotePort = Number(s.portNumber)) : "string" == typeof e.googRemoteAddress && (s = e.googRemoteAddress.split(":"),
                            this.remoteAddress = s[0],
                            this.remotePort = Number(s[1])),
                            this.remoteAddress && (this.remoteFamily = this.remoteAddress.includes(":") ? "IPv6" : "IPv4")
                        }
                        ;
                        if (s.forEach((e=>{
                            "transport" === e.type && e.selectedCandidatePairId && a(n[e.selectedCandidatePairId]),
                            ("googCandidatePair" === e.type && "true" === e.googActiveConnection || ("candidatepair" === e.type || "candidate-pair" === e.type) && e.selected) && a(e)
                        }
                        )),
                        o || Object.keys(n).length && !Object.keys(r).length) {
                            if (this._connecting = !1,
                            this._connected = !0,
                            this._chunk) {
                                try {
                                    this.send(this._chunk)
                                } catch (t) {
                                    return this.destroy(t)
                                }
                                this._chunk = null;
                                const e = this._cb;
                                this._cb = null,
                                e(null)
                            }
                            "number" != typeof this._channel.bufferedAmountLowThreshold && (this._interval = setInterval((()=>this._onInterval()), 150),
                            this._interval.unref && this._interval.unref()),
                            this.emit("connect");
                            for (let e of this._pendingData)
                                this.emit("data", e);
                            this._pendingData = []
                        } else
                            setTimeout(e, 100)
                    }
                    ))
                }
                ;
                e()
            }
            _onInterval() {
                !this._cb || !this._channel || this._channel.bufferedAmount > U || this._onChannelBufferedAmountLow()
            }
            _onSignalingStateChange() {
                this.destroyed || ("stable" === this._pc.signalingState && (this._isNegotiating = !1,
                this._sendersAwaitingStable.forEach((e=>{
                    this._queuedNegotiation = !0
                }
                )),
                this._sendersAwaitingStable = [],
                this._queuedNegotiation ? (this._queuedNegotiation = !1,
                this._needsNegotiation()) : this.emit("negotiated")),
                this.emit("signalingStateChange", this._pc.signalingState))
            }
            _onIceCandidate(e) {
                this.destroyed || (e.candidate && this.trickle ? this.emit("signal", {
                    type: "candidate",
                    candidate: {
                        candidate: e.candidate.candidate,
                        sdpMLineIndex: e.candidate.sdpMLineIndex,
                        sdpMid: e.candidate.sdpMid
                    }
                }) : e.candidate || this._iceComplete || (this._iceComplete = !0,
                this.emit("_iceComplete")),
                e.candidate && this._startIceCompleteTimeout())
            }
            _onChannelMessage(e) {
                if (this.destroyed)
                    return;
                let t = e.data;
                t instanceof ArrayBuffer && (t = o.h.from(t)),
                this._connected ? this.emit("data", t) : this._pendingData.length < 10 && this._pendingData.push(t)
            }
            _onChannelBufferedAmountLow() {
                if (this.destroyed || !this._cb)
                    return;
                const e = this._cb;
                this._cb = null,
                e(null)
            }
            _onChannelOpen() {
                this._connected || this.destroyed || (this._channelReady = !0,
                this._maybeReady())
            }
            _onChannelClose() {
                this.destroyed || this.destroy()
            }
        }
        G.config = {
            iceServers: [{
                urls: ["stun:stun.l.google.com:19302", "stun:global.stun.twilio.com:3478"]
            }],
            sdpSemantics: "unified-plan"
        },
        G.channelConfig = {};
        const j = G;
        class H {
            constructor(e, t, s, i, r=0) {
                this.sn = e,
                this.segId = t,
                this.data = s,
                this.fromPeerId = i,
                this.level = r || 0
            }
            static fromSegment(e) {
                const t = new H(e.sn,e.segId,e.data,e.fromPeerId,e.level);
                return t.from = e.from,
                t
            }
            get size() {
                return this.data.byteLength
            }
            get isSequential() {
                return this.sn >= 0
            }
        }
        var X = s(365)
          , V = s.n(X);
        class Y extends (n()) {
            static get defaultPacketSize() {
                return c
            }
            static get VERSION() {
                return "8"
            }
            constructor(e, t, s, i, r, n={}) {
                super(),
                this.channel = e.fetcher.channelId,
                this.logger = e.logger,
                this.config = r,
                this.isInitiator = i,
                this.options = n,
                this.intermediator = n.intermediator || null,
                this.signalMsgs = [],
                this.assignPeerId(t, s),
                this.platform = "unknown",
                this.super = !1,
                this.mobile = !1,
                this.mobileWeb = !1,
                this.mobileNet = !1,
                this.connected = !1,
                this.msgQueue = [],
                this.miss = 0,
                this.notifySet = new Set,
                this.bufArr = [],
                this.packetSize = c,
                this.sendReqQueue = [],
                this.downloading = !1,
                this.uploading = !1,
                this.choked = !1,
                this.streamListeners = [],
                this.pieceMsg = {},
                this.uploadInterrupter = {
                    targetSegId: void 0,
                    currentSegId: void 0,
                    canceled: !1
                },
                this.datasToSend = [],
                this.bytesUploaded = 0,
                this.dataWriting = !1,
                this.timeSendRequest = 0,
                this.timeReceivePiece = 0,
                this.timeSendPiece = 0,
                this.weight = 0,
                this.peersConnected = 1,
                this.uploadSpeed = 0,
                this.currentLevel = 0,
                this.currentPos = 0,
                this.useBackupSignal = !1,
                this.gotPeersTS = 0,
                this.webRTCConfig = {};
                const {stuns: o} = this.options;
                if (o && o.length > 0) {
                    const e = [];
                    o.forEach((t=>{
                        this.logger.info(`use stun ${t}`),
                        e.push({
                            urls: t
                        })
                    }
                    )),
                    this.webRTCConfig.iceServers = e
                }
                this.config.webRTCConfig && (this.webRTCConfig = {
                    ...this.config.webRTCConfig,
                    ...this.webRTCConfig
                }),
                this.playlistMap = new Map,
                this._initPeerChannel(),
                this.notFatalClosed = !1,
                this.startSN = Number.MAX_SAFE_INTEGER,
                this.endSN = -1,
                this._loadedBytes = 0
            }
            assignPeerId(t, s) {
                this.remotePeerId = s,
                this.channelId = this.isInitiator ? `${t}-${s}` : `${s}-${t}`,
                s && (this.timeJoin = f(),
                this.dataExchangeTs = this.timeJoin,
                this.gotStatsTs = this.timeJoin,
                this._startTimer()),
                setTimeout((()=>{
                    this.signalMsgs.length > 0 && this.emit(e.DC_SIGNAL_BATCH, this.signalMsgs)
                }
                ), 0)
            }
            _startTimer() {
                this.connTimeout = setTimeout((()=>{
                    this.logger.warn(`dc ${this.channelId} connection timeout`),
                    this.emit(e.DC_TIMEOUT)
                }
                ), 15e3)
            }
            get isAvailable() {
                return this.downloadNum < 2 && !this.choked
            }
            get isAvailableUrgently() {
                return !this.downloading && !this.choked
            }
            cancelDownload(t, s, i) {
                if (i && this.downloading && !(this.streamListeners.length > 0 || this.remainAttachments <= 2))
                    return this.logger.info(`cancel download ${i} remain packets ${this.remainAttachments}`),
                    this.timeReceivePiece = 0,
                    this.sendJson({
                        event: e.DC_PIECE_CANCEL,
                        sn: t,
                        level: s,
                        seg_id: i
                    })
            }
            addStreamListener(e, t, s) {
                this.streamListeners.push({
                    handler: s,
                    peerId: t
                })
            }
            removeStreamListener(e) {
                this.streamListeners = this.streamListeners.filter((t=>t.peerId !== e || (t.handler(void 0, void 0, !0, "aborted by cancel"),
                !1)))
            }
            _initPeerChannel() {
                const t = new j({
                    initiator: this.isInitiator,
                    trickle: this.options.trickle || !1,
                    config: this.webRTCConfig
                });
                this._datachannel = t,
                t.on("error", (t=>{
                    let s = !0;
                    (this.connected || this.notFatalClosed) && (s = !1),
                    this.emit(e.DC_ERROR, s)
                }
                )),
                t.on("signal", (t=>{
                    !this.useBackupSignal && this.signalMsgs.length < 10 && this.signalMsgs.push(t),
                    this.emit(e.DC_SIGNAL, t)
                }
                ));
                t.on("connect", (()=>{
                    for (this.logger.info(`datachannel CONNECTED from ${this.intermediator ? "peer" : "server"} to ${this.remotePeerId}`),
                    this.connected = !0,
                    clearTimeout(this.connTimeout),
                    this.signalMsgs = [],
                    this.emit(e.DC_OPEN); this.msgQueue.length > 0; ) {
                        let e = this.msgQueue.shift();
                        this.emit(e.event, e)
                    }
                }
                )),
                t.on("data", (t=>{
                    const {logger: s} = this;
                    if ("string" == typeof t) {
                        let i = JSON.parse(t);
                        if (!i)
                            return void s.error("dc received string is null");
                        if (!this.connected)
                            return void this.msgQueue.push(i);
                        let r, n = i.event;
                        switch (r = n !== e.DC_PLAYLIST && n !== e.DC_PEER_SIGNAL ? `string: ${t}` : `event: ${n}`,
                        s.debug(`datachannel receive ${r} from ${this.remotePeerId}`),
                        n) {
                        case e.DC_HAVE:
                            if (this.emit(i.event, i),
                            !i.sn)
                                return;
                            this.config.live || (i.sn < this.startSN && (this.startSN = i.sn),
                            i.sn > this.endSN && (this.endSN = i.sn));
                            break;
                        case e.DC_PIECE:
                            this.downloading = !0,
                            this.dataExchangeTs = f(),
                            this.timeReceivePiece = performance.now(),
                            this.pieceMsg = i,
                            this._prepareForBinary(i.attachments, i.seg_id, i.sn, i.size),
                            this.emit(i.event, i);
                            break;
                        case e.DC_PIECE_CANCEL:
                            this.uploadInterrupter.targetSegId = i.seg_id,
                            this.emit(i.event, i);
                            break;
                        case e.DC_PIECE_NOT_FOUND:
                            this._sendNextReq() || (this.downloading = !1),
                            this.emit(i.event, i);
                            break;
                        case e.DC_REQUEST:
                            this._handleRequestMsg(i);
                            break;
                        case e.DC_PIECE_ACK:
                            this.uploadInterrupter.canceled || (this._handlePieceAck(i.size, i.miss),
                            this.emit(i.event, i));
                            break;
                        case e.DC_STATS:
                            this._handleStats(i);
                            break;
                        case e.DC_PLAYLIST:
                            this.config.sharePlaylist && this._handlePlaylist(i);
                            break;
                        case e.DC_METADATA:
                            this._handleMetadata(i);
                            break;
                        case e.DC_PIECE_ABORT:
                            this.downloading && (this._notifyDownloadListenersAbort("aborted by upstream peer"),
                            this.emit(e.DC_PIECE_ABORT, i));
                            break;
                        case e.DC_CHOKE:
                            s.info(`choke peer ${this.remotePeerId}`),
                            this.choked = !0;
                            break;
                        case e.DC_UNCHOKE:
                            s.info(`unchoke peer ${this.remotePeerId}`),
                            this.choked = !1;
                            break;
                        case e.DC_CLOSE:
                            this.emit(i.event, i.fatal || !1);
                            break;
                        default:
                            this.emit(i.event, i)
                        }
                    } else {
                        if (!t)
                            return void s.error("datachannel on data is undefined!");
                        if (!this.downloading)
                            return void s.warn(`peer ${this.remotePeerId} not downloading, data size ${t.byteLength} pieceMsg ${JSON.stringify(this.pieceMsg)}`);
                        this._handleBinaryMsg(t)
                    }
                }
                )),
                t.once("close", (()=>{
                    this.emit(e.DC_CLOSE, !1)
                }
                )),
                t.on("iceStateChange", ((t,s)=>{
                    this.connected && "disconnected" === t && (this.logger.warn(`${this.remotePeerId} disconnected`),
                    this.emit(e.DC_DISCONNECT))
                }
                ))
            }
            sendJson(t) {
                if (!this.remotePeerId)
                    return;
                t.event !== e.DC_PLAYLIST && t.event !== e.DC_PEER_SIGNAL ? this.logger.debug(`dc bufferSize ${this._datachannel.bufferSize} send ${JSON.stringify(t)} to ${this.remotePeerId}`) : this.logger.debug(`dc send event ${t.event} to ${this.remotePeerId}`);
                const s = JSON.stringify(t);
                return s.length > c ? (this.logger.error("string to send is too large"),
                !1) : this.send(s, !1)
            }
            send(e, t=!0) {
                return t ? (this.datasToSend.push(e),
                this.dataWriting || this._sendDataSync(),
                !0) : this.sendImmediately(e)
            }
            _checkIfNeedInterrupt() {
                const {targetSegId: t, currentSegId: s, canceled: i} = this.uploadInterrupter;
                return !!i || !(!t || t !== s) && (this.logger.info("cancel send data"),
                this.datasToSend = [],
                this.uploadInterrupter.canceled = !0,
                this.sendMsgPieceAbort(`${s} transfer canceled`, !1),
                this._handlePieceAck(this.bytesUploaded, 0),
                this.emit(e.DC_PIECE_ACK, {
                    seg_id: s,
                    size: this.bytesUploaded,
                    canceled: !0
                }),
                !0)
            }
            _sendDataSync() {
                if (this._checkIfNeedInterrupt() || !this._datachannel.connected || 0 === this.datasToSend.length)
                    return void (this.dataWriting = !1);
                this.dataWriting = !0;
                const t = this.datasToSend.shift();
                t ? ("string" != typeof t && (this.bytesUploaded += t.byteLength),
                this._datachannel.write(t, (t=>{
                    if (t)
                        return this.dataWriting = !1,
                        this.logger.warn(t.message),
                        void this.emit(e.DC_ERROR, !1);
                    this._sendDataSync()
                }
                ))) : this.logger.error("sendDataSync data is undefined!")
            }
            sendImmediately(t) {
                if (this._datachannel.connected)
                    try {
                        return this._datachannel.send(t),
                        !0
                    } catch (t) {
                        this.logger.warn(`datachannel ${this.channelId} send data failed, close it`),
                        this.emit(e.DC_ERROR, !1)
                    }
                return !1
            }
            sendMsgHave(t, s, i={}) {
                const r = i.reverse || void 0;
                delete i.reverse,
                this.sendJson({
                    event: r ? e.DC_HAVE_REVERSE : e.DC_HAVE,
                    sn: t,
                    seg_id: s,
                    ...i
                })
            }
            sendPieceNotFound(t, s, i={}) {
                this.uploading = !1,
                this.sendJson({
                    event: e.DC_PIECE_NOT_FOUND,
                    seg_id: s || void 0,
                    sn: t,
                    ...i
                })
            }
            sendPeers(t) {
                this.sendJson({
                    event: e.DC_PEERS,
                    peers: t
                })
            }
            sendPeersRequest() {
                this.sendJson({
                    event: e.DC_GET_PEERS
                })
            }
            sendMsgStats(t, s={}) {
                const i = {
                    event: e.DC_STATS,
                    total_conns: t,
                    ...s
                };
                this.sendJson(i)
            }
            sendMsgPlaylist(t, s, i) {
                const r = this.playlistMap.get(t);
                if (r && r.seq >= i)
                    return;
                const n = {
                    event: e.DC_PLAYLIST,
                    url: t,
                    data: s,
                    seq: i
                };
                this.playlistMap.set(t, {
                    data: s,
                    seq: i
                }),
                this.sendJson(n)
            }
            sendMsgSignal(t, s, i) {
                return this.sendJson({
                    event: e.DC_PEER_SIGNAL,
                    action: "signal",
                    to_peer_id: t,
                    from_peer_id: s,
                    data: i
                })
            }
            sendMsgSignalReject(t, s, i, r=!1) {
                return this.sendJson({
                    event: e.DC_PEER_SIGNAL,
                    action: "reject",
                    to_peer_id: t,
                    from_peer_id: s,
                    reason: i,
                    fatal: r
                })
            }
            sendMetaData(t, s, i, r, n=!1) {
                this.isInitiator && (this.timeSendRequest = performance.now()),
                this.sendJson({
                    event: e.DC_METADATA,
                    field: t,
                    platform: e.DC_PLAT_WEB,
                    mobile: !!V().isMobile(),
                    mobile_net: n,
                    channel: this.channel,
                    version: "2.10.3",
                    sequential: s,
                    peers: i,
                    region: r
                })
            }
            sendPartialBuffer(e, t, s={}) {
                this.sendMsgPiece(e, s);
                for (let e = 0; e < t.length; e++)
                    this.send(t[e])
            }
            sendMsgPiece(e, t={}) {
                const {targetSegId: s} = this.uploadInterrupter;
                if (s && s === e.seg_id)
                    return this.logger.info("cancel send piece msg"),
                    this.datasToSend = [],
                    this.uploadInterrupter.canceled = !0,
                    void this.sendMsgPieceAbort(`${s} piece canceled`, !1);
                this.uploadInterrupter = {
                    currentSegId: e.seg_id,
                    targetSegId: void 0,
                    canceled: !1
                },
                this.datasToSend = [],
                this.bytesUploaded = 0,
                e.ext || (e.ext = {}),
                e.ext.from && t.from && (t.from = `${e.ext.from}->${t.from}`),
                t.incompletes && e.ext.incompletes && (t.incompletes += e.ext.incompletes),
                t = Object.assign({}, e.ext, t);
                const i = {
                    ...e,
                    ext: t
                };
                this.sendJson(i)
            }
            sendBuffer(t, s, i, r={}) {
                const n = r.reverse || void 0;
                if (delete r.reverse,
                !i)
                    return void this.logger.error("sendBuffer payload is undefined!");
                let o = i.byteLength
                  , a = 0
                  , h = 0;
                o % this.packetSize == 0 ? h = o / this.packetSize : (h = Math.floor(o / this.packetSize) + 1,
                a = o % this.packetSize);
                let l = {
                    event: e.DC_PIECE,
                    attachments: h,
                    seg_id: s,
                    sn: t,
                    level: r.level,
                    size: o,
                    reverse: n
                };
                delete r.level,
                this.sendMsgPiece(l, r);
                const c = function(e, t, s, i) {
                    let r = [];
                    if (i) {
                        let n;
                        for (let i = 0; i < s - 1; i++)
                            n = e.slice(i * t, (i + 1) * t),
                            r.push(n);
                        n = e.slice(e.byteLength - i, e.byteLength),
                        r.push(n)
                    } else {
                        let i;
                        for (let n = 0; n < s; n++)
                            i = e.slice(n * t, (n + 1) * t),
                            r.push(i)
                    }
                    return r
                }(i, this.packetSize, h, a);
                this._sendBufferArray(c, n),
                this.uploading = !1,
                this.timeSendPiece = performance.now()
            }
            get downloadNum() {
                return this.downloading ? this.sendReqQueue.length + 1 : 0
            }
            requestDataById(t, s, i=!1, r={}) {
                const n = {
                    event: e.DC_REQUEST,
                    seg_id: t,
                    sn: s,
                    ...r,
                    urgent: i
                };
                this.downloading ? (this.logger.info(`${this.remotePeerId} add req ${t} in queue`),
                i ? this.sendReqQueue.unshift(n) : this.sendReqQueue.push(n)) : this._realRequestData(n)
            }
            requestDataBySN(t, s=!1, i={}) {
                const r = {
                    event: e.DC_REQUEST,
                    sn: t,
                    ...i,
                    urgent: s
                };
                this.downloading ? (this.logger.info(`add req ${t} in queue`),
                s ? this.sendReqQueue.unshift(r) : this.sendReqQueue.push(r)) : this._realRequestData(r)
            }
            _sendBufferArray(e, t=!1) {
                const s = t ? e.reverse() : e;
                for (let e = 0; e < s.length; e++)
                    this.send(s[e])
            }
            _realRequestData(e) {
                this.sendJson(e),
                this.timeSendRequest = performance.now(),
                this.downloading = !0
            }
            shouldWaitForRemain(e) {
                return 0 !== this.bufArrSize && (0 !== this.timeReceivePiece && this.currentLoadSpeed() >= this.minRequiredSpeed(e))
            }
            close(t) {
                t || (this.notFatalClosed = !0),
                this.emit(e.DC_CLOSE, t)
            }
            receiveSignal(e) {
                e && this._datachannel.signal(e)
            }
            _notifyDownloadListenersAbort(e) {
                for (let t of this.streamListeners) {
                    const {handler: s} = t;
                    s(void 0, void 0, !0, e)
                }
                this.streamListeners = []
            }
            destroy(t=!0) {
                this.logger.info(`destroy datachannel ${this.channelId}`),
                this.chokeTimer && clearTimeout(this.chokeTimer),
                this.connTimeout && clearTimeout(this.connTimeout),
                this.uploading && this.sendMsgPieceAbort("peer is closing"),
                this._notifyDownloadListenersAbort("upstream peer is closed");
                let s = {
                    event: e.DC_CLOSE,
                    fatal: t
                };
                this.sendJson(s),
                this._datachannel.removeAllListeners(),
                this.removeAllListeners(),
                this._datachannel.destroy()
            }
            _handleBinaryMsg(t) {
                const {attachments: s, level: i, reverse: r} = this.pieceMsg;
                this.listenerCount(e.DC_RESPONSE) > 0 && this.bufArr.push(t),
                this._loadedBytes += t.byteLength,
                this.remainAttachments--;
                let n = r ? this.remainAttachments + 1 : s - this.remainAttachments;
                const o = 0 === this.remainAttachments;
                if (this.emit(e.DC_PIECE_DATA, this.bufSN, this.segId, t, n, o, this.pieceMsg),
                this.streamListeners.length > 0)
                    for (let e of this.streamListeners) {
                        const {handler: s} = e;
                        s(this.bufSN, this.segId, !1, t, o)
                    }
                if (o) {
                    if (this.streamListeners = [],
                    this.timeSendRequest > 0)
                        if (this.super)
                            this.weight = 1;
                        else {
                            const e = this.expectedSize / (performance.now() - this.timeSendRequest);
                            this.weight = this.weight > 0 ? .6 * this.weight + .4 * e : e
                        }
                    this.sendJson({
                        event: e.DC_PIECE_ACK,
                        sn: this.bufSN,
                        seg_id: this.segId,
                        level: i,
                        size: this.expectedSize,
                        miss: this.miss || void 0
                    }),
                    this.timeSendRequest = 0,
                    this.timeReceivePiece = 0,
                    this._sendNextReq() || (this.downloading = !1),
                    this._handleBinaryData(r)
                }
            }
            _sendNextReq() {
                if (this.sendReqQueue.length > 0) {
                    const e = this.sendReqQueue.shift();
                    return this.logger.info(`get msg from sendReqQueue ${JSON.stringify(e)}`),
                    this._realRequestData(e),
                    !0
                }
                return !1
            }
            _handlePlaylist(e) {
                const {url: t, data: s, seq: i} = e;
                this.playlistMap.set(t, {
                    data: s,
                    seq: i
                })
            }
            getLatestPlaylist(e, t) {
                if (!this.playlistMap.has(e))
                    return null;
                const s = this.playlistMap.get(e);
                return s.seq <= t || s.seq > t + 2 ? null : s
            }
            _handleMetadata(t) {
                const {logger: s} = this;
                if (this.isInitiator) {
                    const e = performance.now() - this.timeSendRequest;
                    e > 0 && (this.weight = 1e5 / e,
                    s.info(`handle Metadata from ${this.remotePeerId} initial weight ${this.weight}`)),
                    this.timeSendRequest = 0
                }
                const i = t.channel;
                if (this.channel !== i)
                    return s.error(`peer channel ${i} not matched!`),
                    void this.emit(e.DC_ERROR, !0);
                if (t.super) {
                    s.info(`got super peer ${this.remotePeerId}`),
                    this.super = !0;
                    const {token: i} = this.config;
                    if (i && t.token !== i)
                        return s.warn(`super peer token ${t.token} not matched!`),
                        void this.emit(e.DC_ERROR, !0)
                }
                t.region && (this.region = t.region);
                switch (t.platform) {
                case e.DC_PLAT_ANDROID:
                    this.platform = e.DC_PLAT_ANDROID;
                    break;
                case e.DC_PLAT_IOS:
                    this.platform = e.DC_PLAT_IOS;
                    break;
                case e.DC_PLAT_WEB:
                    this.platform = e.DC_PLAT_WEB
                }
                if (this.mobile = t.mobile || !1,
                this.mobileNet = t.mobile_net || !1,
                this.mobileWeb = this.mobile && this.platform === e.DC_PLAT_WEB || !1,
                this.sequential = t.sequential,
                s.info(`${this.remotePeerId} platform ${this.platform} sequential ${this.sequential}`),
                t.peers && (this.peersConnected += t.peers,
                s.info(`${this.remotePeerId} now has ${this.peersConnected} peers`)),
                this.emit(e.DC_METADATA, t),
                t.field && !this.config.live && t.sequential) {
                    const {field: e} = t;
                    if (Array.isArray(e))
                        this._handleField(e);
                    else
                        for (let t in e)
                            this._handleField(e[t])
                }
            }
            _handleField(e) {
                e.forEach((e=>{
                    e >= 0 && (e < this.startSN && (this.startSN = e),
                    e > this.endSN && (this.endSN = e))
                }
                ))
            }
            _handleStats(e) {
                this.gotStatsTs = f();
                const t = e.total_conns;
                t > 0 && this.peersConnected !== t && (this.peersConnected = t,
                this.logger.info(`${this.remotePeerId} now has ${this.peersConnected} peers`)),
                e.level && (this.currentLevel = e.level),
                e.pos && (this.currentPos = e.pos)
            }
            _handleRequestMsg(t) {
                if (this.dataExchangeTs = f(),
                this.uploading)
                    return this.logger.warn(`${this.remotePeerId} is uploading when receive request`),
                    void this.sendPieceNotFound(t.sn, t.seg_id, {
                        level: t.level
                    });
                this.uploading = !0,
                this.emit(e.DC_REQUEST, t)
            }
            _handlePieceAck(e, t) {
                0 !== this.timeSendPiece && (this.uploadSpeed = Math.round(e / (performance.now() - this.timeSendPiece) * 2),
                this.timeSendPiece = 0,
                this.logger.info(`${this.remotePeerId} uploadSpeed is ${this.uploadSpeed}`)),
                t > 0 && this.logger.warn(`peer ${this.remotePeerId} miss ${t}`)
            }
            _prepareForBinary(e, t, s, i) {
                this.bufArr = [],
                this._loadedBytes = 0,
                this.remainAttachments = e,
                this.segId = t,
                this.bufSN = s,
                this.expectedSize = i
            }
            _handleBinaryData(t=!1) {
                if (this.listenerCount(e.DC_RESPONSE) > 0) {
                    t && this.bufArr.reverse();
                    let s = o.h.concat(this.bufArr);
                    const i = s.byteLength;
                    if (i === this.expectedSize) {
                        let t = s.buffer;
                        const i = new H(this.bufSN,this.segId,t,this.remotePeerId,this.pieceMsg.level);
                        this.emit(e.DC_RESPONSE, i, this.weight)
                    } else
                        this.logger.error(`${this.segId} expectedSize ${this.expectedSize} != byteLength ${i}`)
                }
                this.segId = "",
                this.bufArr = []
            }
            checkIfNeedChoke(e=!1) {
                const {logger: t} = this
                  , s = performance.now() - this.timeSendRequest;
                if ((e || !(s < 1500)) && (this.miss++,
                t.info(`${this.remotePeerId} miss ${this.miss}`),
                this.miss > 2 && !this.choked)) {
                    this.choked = !0;
                    const e = 30 * this.miss;
                    e <= 150 ? (t.warn(`datachannel ${this.channelId} is choked`),
                    this.chokeTimer = setTimeout((()=>{
                        this.choked = !1,
                        t.warn(`datachannel ${this.channelId} is unchoked`)
                    }
                    ), 1e3 * e)) : t.warn(`datachannel ${this.channelId} is choked permanently`)
                }
            }
            get bufArrSize() {
                return this.downloading ? this.pieceMsg.attachments - this.remainAttachments : 0
            }
            loadtimeout() {
                const {logger: e, pieceMsg: t} = this;
                return e.warn(`timeout while downloading from ${this.remotePeerId}, ${this.bufArrSize} of ${t.attachments} packets loaded`),
                this.checkIfNeedChoke(),
                !0
            }
            sendMsgPieceAbort(t, s=!0) {
                if (!this.uploading && 0 === this.datasToSend.length)
                    return;
                this.uploading = !1;
                const i = {
                    event: e.DC_PIECE_ABORT,
                    reason: t
                };
                if (s) {
                    const e = JSON.stringify(i);
                    return this.send(e, !0)
                }
                return this.sendJson(i)
            }
            loadedBytes() {
                return this._loadedBytes
            }
            currentLoadSpeed() {
                return 0 === this.timeReceivePiece ? 0 : this.loadedBytes() / (performance.now() - this.timeReceivePiece)
            }
            minRequiredSpeed(e) {
                return (this.pieceMsg.size - this.loadedBytes()) / e
            }
        }
        const J = Y
          , Q = {
            DPlayer: "dplayer",
            CBPlayer: "cbplayer",
            jwplayer: "jwplayer",
            videojs: "videojs",
            Clappr: "clappr",
            ckplayer: "ckplayer",
            MediaElementPlayer: "mediaelement",
            MediaElement: "mediaelement",
            TcPlayer: "tcplayer",
            flowplayer: "flowplayer",
            Chimee: "chimee",
            ChimeePlayer: "chimee",
            HlsJsPlayer: "xgplayer",
            fluidPlayer: "fluidplayer",
            OpenPlayer: "openplayer",
            Plyr: "plyr",
            Playerjs: "playerjs",
            Aliplayer: "aliplayer",
            shaka: "shakaplayer",
            RadiantMP: "rmp",
            bitmovin: "bitmovin"
        };
        function K() {
            let e;
            for (let t in Q)
                if (self[t]) {
                    e = Q[t];
                    break
                }
            return e
        }
        const Z = "nllL"
          , ee = "d3NzJ"
          , te = "=="
          , se = "TNBLy9z"
          , ie = "aWduY"
          , re = "mNvbQ"
          , ne = "WwuY2RuY";
        class oe extends (n()) {
            constructor(e={}) {
                if (super(),
                this.p2pEnabled = !(!1 === e.p2pEnabled || "0" === u("_p2p")),
                e.tag && e.tag.length > 20)
                    throw new Error("Tag is too long");
                if (e.appName && e.appName.length > 30)
                    throw new Error("appName is too long");
                if (e.appId && e.appId.length > 30)
                    throw new Error("appId is too long");
                if (e.token && e.token.length > 20)
                    throw new Error("Token is too long");
                this.segmentLoadCount = 0
            }
            initLogger() {
                const {config: e} = this;
                e.showSlogan && "en" == ("zh-CN" === (navigator.language || navigator.userLanguage) ? "cn" : "en") && console.log(`%cLet the browsers become your unlimitedly scalable CDN!\n%c${self.atob("aHR0cHM6Ly9zd2FybWNsb3VkLm5ldA==")}`, "color: dodgerblue; padding:20px 0; font-size: x-large", "font-size: medium; padding-bottom:15px");
                const t = new F(e.logLevel);
                return e.logger = this.logger = t,
                t
            }
            getExtraForStats() {
                return {}
            }
            getExtraForPeersRequest() {
                const e = {};
                return e.num_want = this._getNumWant(),
                e
            }
            _getNumWant() {
                const {tracker: e} = this;
                if (!e.scheduler)
                    return;
                const t = e.scheduler.peersNum;
                return t > 0 && e.maxConnsActive - t > 0 ? e.maxConnsActive - t : void 0
            }
            makeChannelId(e, t) {
                if (!e || "string" != typeof e) {
                    const e = "token is required while using customized channelId!";
                    throw console.error(e),
                    new Error(e)
                }
                return E(t) ? (s,i)=>`${e}-${t(s, i)}` : ()=>`${e}-${t}`
            }
            makeSignalId() {
                let e = "";
                const {config: t} = this
                  , s = decodeURIComponent(self.atob(ee + se + ie + ne + Z + re + te));
                t.signalConfig && (t.wsSignalerAddr = t.signalConfig);
                const {wsSignalerAddr: i} = t;
                if (i) {
                    let r;
                    "object" == typeof i ? (i.main || (i.main = s),
                    r = i.main) : "string" == typeof i && (r = i,
                    t.wsSignalerAddr = {
                        main: r
                    }),
                    r === s && (r = void 0),
                    r && !t.wsSignalerAddr.backup && (e = h().parseURL(r).netLoc.substr(2))
                } else
                    t.wsSignalerAddr = {
                        main: s,
                        byDefault: !0
                    };
                return e
            }
            get commonBrowserInfo() {
                const e = V().getPlatform()
                  , t = V().getNetType() || "wifi";
                this.netType = t;
                const {main: s, backup: i, byDefault: r} = this.config.wsSignalerAddr || {};
                return {
                    signal: r ? void 0 : s,
                    signal2: i,
                    device: e,
                    netType: t,
                    player: K() || void 0
                }
            }
            get isMobileNet() {
                return "wifi" !== this.netType && "ethernet" !== this.netType
            }
            setupWindowListeners(e) {
                const t = ["iPad", "iPhone"].indexOf(navigator.platform) >= 0 ? "pagehide" : "beforeunload"
                  , s = ()=>{
                    this.fetcher && this.fetcher.postStatsWithBeacon(),
                    this.p2pEnabled && this.disableP2P(),
                    self.removeEventListener(t, s)
                }
                ;
                e ? self.removeEventListener(t, s) : self.addEventListener(t, s)
            }
            destroy() {
                this.disableP2P(!0),
                this.removeAllListeners(),
                this.setupWindowListeners(!0)
            }
            enableP2P() {
                return this.p2pEnabled ? null : (this.logger && this.logger.info("enable P2P"),
                this.config.p2pEnabled = this.p2pEnabled = !0,
                this.browserInfo ? (this._init(this.channel, this.browserInfo),
                this) : null)
            }
            get version() {
                return oe.version
            }
            static isSupported() {
                const e = m();
                return !(!e || void 0 === e.RTCPeerConnection.prototype.createDataChannel)
            }
            static get TrackerZone() {
                return {
                    EU: "eu",
                    HK: "hk",
                    USA: "us"
                }
            }
            determineHttpLoadTime(e) {
                let t = 2.5;
                if (e && e.length > 0) {
                    const s = e.length;
                    t = s <= 3 ? 1 : s <= 4 ? 1.5 : s <= 5 ? 2 : s <= 8 ? 2.5 : 3
                }
                return t
            }
        }
        oe.version = "2.10.3",
        oe.protocolVersion = J.VERSION;
        const ae = oe;
        function he() {
            if (!function() {
                if ("undefined" != typeof self)
                    return self.ManagedMediaSource || self.MediaSource || self.WebKitMediaSource
            }())
                return !1;
            const e = self.SourceBuffer || self.WebKitSourceBuffer;
            return !e || e.prototype && "function" == typeof e.prototype.appendBuffer && "function" == typeof e.prototype.remove
        }
        function le(e, t) {
            let s;
            if (e && ("string" == typeof e ? (s = document.querySelector(e),
            ce(s) || (s = function(e) {
                const t = document.getElementById(e);
                if (ce(t))
                    return t;
                const s = t.getElementsByTagName("*");
                for (let e = 0; e < s.length; e++)
                    if (ce(s[e]))
                        return s[e];
                return null
            }(e))) : e instanceof HTMLMediaElement && (s = e)),
            !s) {
                const e = [...document.getElementsByTagName("video"), ...document.getElementsByTagName("audio")];
                1 === e.length ? s = e[0] : (t && (s = e.find((e=>e.src === t))),
                s || (s = e.find((e=>e.currentTime > 0))))
            }
            return s
        }
        function ce(e) {
            if (!e)
                return null;
            const t = e.tagName.toLowerCase();
            return "video" === t || "audio" === t
        }
        function de(e, t, s, i=0, r=0) {
            const n = c;
            let o = i
              , a = r || s - 1;
            const h = Math.floor(s / n)
              , l = s % n > 0 ? h + 1 : h;
            if (e >= 0 && (o += (e + 1) * n),
            t >= 0 && t < l) {
                a -= s % n + (l - t - 1) * n
            }
            return {
                rangeStart: o,
                rangeEnd: a + 1
            }
        }
        function ue(e, t) {
            return `${e}-${t}`
        }
        function ge(e, t, s, i) {
            let r = s.split("?")[0];
            return r.startsWith("http") && (r = r.split("://")[1]),
            i ? `${r}|${i}` : `${r}`
        }
        function fe(e, t) {
            return "number" != typeof t && (t = Number(t)),
            `${t}-${e}`
        }
        let pe = {
            wsMaxRetries: 10,
            p2pEnabled: !0,
            wifiOnly: !1,
            memoryCacheLimit: {
                pc: 419430400,
                mobile: 104857600
            },
            dcDownloadTimeout: 25,
            logLevel: "error",
            tag: "",
            webRTCConfig: {},
            token: void 0,
            appName: void 0,
            appId: void 0,
            prefetchNum: 3,
            showSlogan: !0,
            trickleICE: !0,
            announceLocation: "eu",
            trackerZone: void 0,
            geoIpPreflight: !0,
            useDiskCache: !0,
            startFromSegmentOffset: 0,
            getStats: function(e, t, s) {},
            getPeerId: function(e) {},
            getPeersInfo: function(e) {}
        };
        const me = {
            ...pe,
            httpLoadTime: 0,
            sharePlaylist: !1,
            useHttpRange: !0,
            hlsjsInstance: null,
            proxyOnly: !1,
            proxyFirst: !1,
            p2pBlackList: ["vtt", "webvtt", "key"],
            live: !0,
            swFile: "./sw.js",
            swScope: "./",
            swAutoRegister: !0,
            mediaElem: void 0,
            httpStreamEnabled: !0,
            diskCacheLimit: {
                pc: 1572864e3,
                mobile: 1048576e3
            },
            waitForPeer: !1,
            waitForPeerTimeout: 4,
            strictSegmentId: !1,
            prefetchOnly: !1
        }
          , _e = "store not init"
          , ye = 1e3;
        function ve(e) {
            const t = new Promise(((t,s)=>{
                e.oncomplete = e.onsuccess = ()=>t(e.result),
                e.onabort = e.onerror = ()=>s(e.error)
            }
            ))
              , s = (i = ye,
            r = "indexedDB timeout",
            new Promise(((e,t)=>setTimeout((()=>{
                t(r)
            }
            ), i))));
            var i, r;
            return Promise.race([t, s])
        }
        function Se(e, t) {
            return t ? t("readonly", (t=>ve(t.get(e)))) : Promise.reject(_e)
        }
        function Pe(e, t, s) {
            return s ? s("readwrite", (s=>(s.put(t, e),
            ve(s.transaction)))) : Promise.reject(_e)
        }
        function be(e, t) {
            return t ? t("readwrite", (t=>(t.delete(e),
            ve(t.transaction)))) : Promise.reject(_e)
        }
        function we(e) {
            return e ? e("readwrite", (e=>(e.clear(),
            ve(e.transaction)))) : Promise.reject(_e)
        }
        function Ee(e, t) {
            return e.openCursor().onsuccess = function() {
                this.result && (t(this.result),
                this.result.continue())
            }
            ,
            ve(e.transaction)
        }
        const Ce = "size";
        class Ie extends (n()) {
            constructor(e, t) {
                super(),
                this.name = "SegmentStore",
                this.logger = t.logger,
                this.logger.info(`use ${this.name}`),
                this.engine = e,
                this.channel = e.channel;
                const s = e.browserInfo.device;
                this.isPC = s === V().device.PC_WEB || s === V().device.PC_NATIVE,
                this.maxBufSize = this.isPC ? t.diskCacheLimit.pc : t.diskCacheLimit.mobile,
                this.overflowed = !1,
                this.countErrors = 0,
                this.isCleared = !0,
                this.destroyed = !1
            }
            async setupStore() {
                if (navigator.storage && navigator.storage.estimate) {
                    const e = await navigator.storage.estimate()
                      , t = Math.floor(e.quota - e.usage);
                    t < this.maxBufSize && (this.maxBufSize = t - 104857600)
                }
                return new Promise((async(e,t)=>{
                    if (this.isPC && this.maxBufSize < 419430400 || !this.isPC && this.maxBufSize < 104857600)
                        return void t("disk storage not enough");
                    const s = this.stores;
                    let i;
                    try {
                        i = function(e, t) {
                            const s = indexedDB.open(e);
                            s.onupgradeneeded = ()=>{
                                const e = s.result;
                                t.forEach((t=>{
                                    e.createObjectStore(t)
                                }
                                ))
                            }
                            ;
                            const i = ve(s);
                            return t.map((e=>(t,s)=>i.then((i=>s(i.transaction(e, t).objectStore(e))))))
                        }(this.channel, s)
                    } catch (e) {
                        return void t(e)
                    }
                    this._createStores(i),
                    this._initMetaStore().then((()=>{
                        e()
                    }
                    )).catch((e=>{
                        t(e)
                    }
                    ))
                }
                ))
            }
            _initMetaStore() {
                return Pe(Ce, 0, this.metaStore)
            }
            currBufSize() {
                return new Promise((async(e,t)=>{
                    try {
                        const s = await Se(Ce, this.metaStore);
                        if (isNaN(s))
                            return void t("size is NaN");
                        e(s)
                    } catch (e) {
                        t(e)
                    }
                }
                ))
            }
            async putSeg(t) {
                if (this.destroyed)
                    return;
                this.isCleared = !1;
                const {logger: s} = this;
                if (S(t.data))
                    return new Promise((i=>{
                        this._addSeg(t).then((t=>{
                            this._onSegPut(t),
                            this.emit(e.BM_SEG_ADDED, t),
                            i()
                        }
                        )).catch((t=>{
                            this._handleFataError(),
                            t && (s.warn(`putSeg ${t}`),
                            ("QuotaExceededError" === t.name || t.inner && "QuotaExceededError" === t.inner.name) && this.currBufSize().then((e=>{
                                this._trimDisk(e, !0)
                            }
                            )).catch((t=>{
                                this.logger.error(`putSeg ${t}`),
                                this.engine.emit(e.BM_FATAL_ERROR)
                            }
                            ))),
                            i()
                        }
                        ))
                    }
                    ));
                s.error(`putSeg ${t.segId} is not buffer`)
            }
            _handleFataError() {
                this.countErrors++,
                this.countErrors >= 3 && (this.engine.emit(e.BM_FATAL_ERROR),
                this.countErrors = 0)
            }
            _decreaseBufSize(e) {
                this.currBufSize().then((t=>{
                    t && Pe(Ce, t - e, this.metaStore)
                }
                )).catch((e=>{
                    this.logger.warn(`decreaseBufSize ${e}`)
                }
                ))
            }
            _increaseBufSize(t) {
                this.destroyed || this.currBufSize().then((e=>{
                    Pe(Ce, e + t, this.metaStore),
                    this._trimDisk(e + t)
                }
                )).catch((t=>{
                    this.logger.warn(`increaseBufSize ${t}`),
                    this.engine.emit(e.BM_FATAL_ERROR)
                }
                ))
            }
            clear(e=!1) {
                if (!this.isCleared) {
                    this.logger.warn("clear segment store");
                    try {
                        this._clearDisk(e)
                    } catch (e) {}
                    this.isCleared = !0
                }
            }
            _clearDisk(e) {
                we(this.segmentsStore),
                e ? this._initMetaStore() : we(this.metaStore),
                this.overflowed = !1
            }
            destroy() {
                this.clear(),
                this.removeAllListeners(),
                this.destroyed = !0
            }
        }
        const Te = Ie;
        const Le = class extends Te {
            constructor(e, t) {
                super(e, t),
                this.loadingSN = -1,
                this.stores = ["segments", "id2Sn", "metadata"]
            }
            _createStores(e) {
                this.segmentsStore = e[0],
                this.id2SnStore = e[1],
                this.metaStore = e[2]
            }
            async hasSegOfId(e) {
                if (!e)
                    return Promise.resolve(!1);
                let t;
                try {
                    t = await Se(e, this.id2SnStore)
                } catch (e) {
                    return Promise.resolve(!1)
                }
                return new Promise((s=>{
                    void 0 !== t ? Se(t, this.segmentsStore).then((t=>{
                        t && t.length > 0 && t.some((t=>t.segId === e)) ? s(!0) : s(!1)
                    }
                    )).catch((e=>{
                        this.logger.warn(`hasSegOfId ${e}`),
                        s(!1)
                    }
                    )) : s(!1)
                }
                ))
            }
            async getSegById(e) {
                if (!e)
                    return null;
                const {logger: t} = this;
                let s;
                try {
                    s = await Se(e, this.id2SnStore)
                } catch (e) {
                    return null
                }
                return new Promise((i=>{
                    void 0 !== s ? Se(s, this.segmentsStore).then((s=>{
                        if (s && s.length > 0) {
                            const r = s.find((t=>t.segId === e));
                            if (!r)
                                return void i(null);
                            if (!S(r.data))
                                return t.error(`getSegById ${r.sn} is not buffer`),
                                void i(null);
                            i(H.fromSegment(r))
                        } else
                            i(null)
                    }
                    )).catch((e=>{
                        t.warn(`getSegById ${e}`),
                        this._handleFataError(),
                        i(null)
                    }
                    )) : i(null)
                }
                ))
            }
            getSegIdBySN(e) {
                return new Promise((t=>{
                    Se(e, this.segmentsStore).then((e=>{
                        e && e.length > 0 ? t(e[0].segId) : t(null)
                    }
                    )).catch((e=>{
                        this.logger.warn(`getSegIdBySN ${e}`),
                        t(null)
                    }
                    ))
                }
                ))
            }
            _addSeg(e) {
                const {segId: t, sn: s, size: i} = e;
                return Pe(t, s, this.id2SnStore),
                new Promise(((r,n)=>{
                    Se(s, this.segmentsStore).then((o=>{
                        o ? 0 === o.filter((e=>e.segId === t)).length ? (o.push(this._segmentToCache(e)),
                        Pe(s, o, this.segmentsStore).then((()=>{
                            this._increaseBufSize(i),
                            r(e)
                        }
                        )).catch((e=>{
                            n(e)
                        }
                        ))) : r(e) : Pe(s, [this._segmentToCache(e)], this.segmentsStore).then((()=>{
                            this._increaseBufSize(i),
                            r(e)
                        }
                        )).catch((e=>{
                            n(e)
                        }
                        ))
                    }
                    )).catch((e=>{
                        n(e)
                    }
                    ))
                }
                ))
            }
            async _trimDisk(t, s=!1) {
                if (this.isCleared || this.destroyed)
                    return;
                let i = this.maxBufSize;
                const {logger: r} = this;
                var n;
                (s && (i = t - 104857600,
                i < 0 && (i = 0)),
                t < i) || (r.warn(`_trimDisk currentSize ${t} upBound ${i}`),
                (n = this.segmentsStore,
                n ? n("readonly", (e=>{
                    if (e.getAllKeys)
                        return ve(e.getAllKeys());
                    const t = [];
                    return Ee(e, (e=>t.push(e.key))).then((()=>t))
                }
                )) : Promise.reject(_e)).then((async s=>{
                    const n = s.sort(((e,t)=>e - t));
                    let o = 0;
                    do {
                        if (o++ > 10) {
                            r.warn("too much loops in SegmentStore");
                            break
                        }
                        const s = n.shift();
                        if (void 0 === s) {
                            r.warn("lastSN not found");
                            continue
                        }
                        if (s >= this.loadingSN) {
                            r.warn(`trimDisk failed, loadingSN ${this.loadingSN}`);
                            break
                        }
                        const i = n[0]
                          , a = await Se(s, this.segmentsStore);
                        if (!a) {
                            r.warn("lastSeg not found");
                            continue
                        }
                        let h = 0;
                        a.forEach((e=>{
                            h += e.data.byteLength
                        }
                        )),
                        be(s, this.segmentsStore).then((()=>{
                            this._decreaseBufSize(parseInt(h))
                        }
                        )),
                        a.forEach((t=>{
                            be(t.segId, this.id2SnStore),
                            r.info(`pop seg ${t.segId} size ${t.data.byteLength}`),
                            this.emit(e.BM_LOST, {
                                sn: s,
                                segId: t.segId,
                                next: i,
                                level: t.level
                            })
                        }
                        )),
                        t -= h,
                        r.info(`pop sn ${s} size ${h} currBufSize ${t}`),
                        this.overflowed || (this.overflowed = !0)
                    } while (t >= i)
                }
                )))
            }
            _segmentToCache(e) {
                return {
                    data: e.data,
                    level: e.level,
                    segId: e.segId,
                    sn: e.sn
                }
            }
            _onSegPut(t) {
                this.emit(`${e.BM_ADDED_SN_}${t.sn}`, t)
            }
            _clearDisk(e) {
                try {
                    super._clearDisk(e)
                } catch (e) {}
                we(this.id2SnStore).catch((e=>{}
                ))
            }
        }
        ;
        class Re extends (n()) {
            constructor(e, t) {
                super(),
                this.name = "SegmentCache",
                this.logger = t.logger,
                this.logger.info(`use ${this.name}`);
                const s = e.browserInfo.device;
                if (this.maxBufSize = s === V().device.PC_WEB || s === V().device.PC_NATIVE ? t.memoryCacheLimit.pc : t.memoryCacheLimit.mobile,
                this.isLive = t.live,
                this.isLive)
                    this.maxBufSize = 47185920;
                else {
                    if (0 === this.maxBufSize)
                        throw new Error("cannot use SegmentCache");
                    const e = function() {
                        const {memory: e} = performance;
                        return e ? e.jsHeapSizeLimit - e.usedJSHeapSize : -1
                    }();
                    e >= 0 && e < this.maxBufSize && (this.maxBufSize = e - 31457280)
                }
                this._segPool = new Map,
                this._currBufSize = 0,
                this.overflowed = !1,
                this.isCleared = !0,
                this.destroyed = !1
            }
            get currBufSize() {
                return this._currBufSize
            }
            _calSegPoolSize() {
                let e = 0;
                return this._segPool.forEach((t=>{
                    t.forEach((t=>{
                        e += t.size
                    }
                    ))
                }
                )),
                e
            }
            async putSeg(e) {
                this.destroyed || (this.isCleared = !1,
                this._currBufSize >= 1.5 * this.maxBufSize && (this._currBufSize = this._calSegPoolSize(),
                this._currBufSize >= 1.5 * this.maxBufSize && (this.clear(),
                this.overflowed = !1)),
                S(e.data) ? this._addSeg(e) : this.logger.error(`putSeg ${e.segId} is not buffer`))
            }
            clear() {
                this.isCleared || (this.logger.warn("clear segment cache"),
                this._segPool.clear(),
                this._currBufSize = 0,
                this.isCleared = !0,
                this.overflowed = !1)
            }
            destroy() {
                this.clear(),
                this.removeAllListeners(),
                this.destroyed = !0
            }
        }
        const Ae = Re;
        const De = class extends Ae {
            constructor(e, t) {
                super(e, t),
                this.id2Sn = new Map,
                this.loadingSN = -1
            }
            hasSegOfId(e) {
                return new Promise(((t,s)=>{
                    const i = this.id2Sn.get(e);
                    this._segPool.has(i) ? t(this._segPool.get(i).some((t=>t.segId === e))) : t(!1)
                }
                ))
            }
            getSegById(e) {
                const t = this.id2Sn.get(e);
                return new Promise(((s,i)=>{
                    if (!this._segPool.has(t))
                        return void s(null);
                    s(this._segPool.get(t).find((t=>t.segId === e)))
                }
                ))
            }
            getSegIdBySN(e) {
                return new Promise(((t,s)=>{
                    if (this._segPool.has(e)) {
                        t(this._segPool.get(e)[0].segId)
                    } else
                        t(null)
                }
                ))
            }
            _addSeg(t) {
                const {logger: s} = this
                  , {segId: i, sn: r, size: n} = t;
                if (this.id2Sn.set(i, r),
                this._segPool.has(r)) {
                    this._segPool.get(r).push(t)
                } else
                    this._segPool.set(r, [t]);
                this._currBufSize += parseInt(n);
                const o = this._segPool.size;
                if (this.emit(`${e.BM_ADDED_SN_}${t.sn}`, t),
                this.emit(e.BM_SEG_ADDED, t),
                this._currBufSize < this.maxBufSize || o <= 5)
                    return;
                let a = Array.from(this._segPool.keys());
                this.isLive || (a = a.sort(((e,t)=>e - t)));
                let h = 0;
                do {
                    if (h++ > 10) {
                        s.error("too much loops in SegmentCache");
                        break
                    }
                    const t = a.shift();
                    if (void 0 === t) {
                        s.error("lastSN not found");
                        continue
                    }
                    const i = a[0]
                      , r = this._segPool.get(t);
                    if (!r) {
                        s.error("lastSeg not found");
                        continue
                    }
                    let n = 0;
                    r.forEach((e=>{
                        n += e.size
                    }
                    )),
                    this._currBufSize -= parseInt(n),
                    this._segPool.delete(t),
                    r.forEach((s=>{
                        this.id2Sn.delete(s.segId),
                        this.emit(e.BM_LOST, {
                            sn: t,
                            segId: s.segId,
                            next: i,
                            level: s.level
                        })
                    }
                    )),
                    s.info(`pop sn ${t} size ${n} currBufSize ${this._currBufSize}`),
                    this.overflowed || (this.overflowed = !0)
                } while (this._currBufSize >= this.maxBufSize && this._segPool.size > 5)
            }
            clear() {
                super.clear(),
                this.id2Sn.clear()
            }
        }
        ;
        var Me = s(832)
          , Ne = s.n(Me)
          , Oe = s(333)
          , ke = s.n(Oe);
        class $e {
            constructor() {
                this.p2p = 0,
                this.share = 0,
                this.http = 0
            }
            recordP2p(e) {
                this.p2p += e
            }
            recordShare(e) {
                this.share += e
            }
            recordHttp(e) {
                this.http += e
            }
            resetTraffic() {
                this.p2p = 0,
                this.share = 0,
                this.http = 0
            }
            get healthRatio() {
                if (0 === this.http)
                    return 1e3;
                let e = Math.round((this.p2p + this.share) / this.http * 100);
                return e <= 0 && (e = 1),
                e
            }
        }
        const Be = "SW_GEOIP_KEY"
          , xe = 2592e5
          , Fe = 432e5
          , qe = "TRACKER_EXPT"
          , ze = "IPAPI_ERROR"
          , Ue = "ZXU"
          , We = "uY2R"
          , Ge = "LmNv"
          , je = "uYnll"
          , He = "bQ=="
          , Xe = "aGsuc3d"
          , Ve = "hcm1j"
          , Ye = "bG91ZC"
          , Je = "5uZXQ="
          , Qe = Symbol("httpDownloaded")
          , Ke = Symbol("p2pDownloaded")
          , Ze = Symbol("p2pUploaded");
        class et extends (n()) {
            constructor(e, t, s, i, r) {
                let n;
                super(),
                this.config = e.config;
                let o = this.config.announceLocation;
                switch (this.config.trackerZone && (o = this.config.trackerZone),
                o) {
                case "hk":
                    n = Xe + Ve + Ye + Je;
                    break;
                case "us":
                    n = "dXMuaGR0dmNsb3VkLmNvbQ==";
                    break;
                default:
                    n = Ue + We + je + Ge + He
                }
                this.engine = e,
                this.key = t || void 0,
                this.baseUrl = i || `https://${self.atob(n)}/v1`,
                this.channelId = self.btoa(s),
                this.timestamp = f(),
                this.health = new $e;
                const a = h().parseURL(this.baseUrl).netLoc;
                this.announce = a.replace(/\/\//, "");
                const l = function(e, t, s, i, r, n) {
                    let o = location.hostname;
                    "localhost" === o && n && (o = `${n}.${o}`);
                    function a(e, t, s, i, r, n) {
                        return Ne()(e + t + s + i + r, n)
                    }
                    const h = a(o, t, s, i, r, e).substr(0, 8);
                    return h
                }(this.timestamp, "2.10.3", this.announce, this.channelId, r.type, this.key);
                this.native = !!r.bundle,
                this.announceInfo = {
                    ...r,
                    channel: this.channelId,
                    ts: this.timestamp,
                    version: "2.10.3",
                    v: l,
                    announce: this.announce,
                    k: st(this.key)
                },
                this.announceURL = `${this.baseUrl}/channel`,
                this.reportFails = 0,
                this.statsRequesting = !1,
                this.forbidden = !1,
                this.failConns = 0,
                this.totalHTTPDownloaded = 0,
                this.totalP2PDownloaded = 0,
                this.totalP2PUploaded = 0,
                this[Qe] = 0,
                this[Ke] = 0,
                this[Ze] = 0,
                this.speed = 0,
                this.offline = !1,
                this.errsBufStalled = 0,
                this.mediaRequests = 0,
                this.errsInternalExpt = 0
            }
            geoipRequest() {
                const {logger: e} = this.engine;
                return new Promise(((t,s)=>{
                    if ((e=>{
                        const t = localStorage.getItem(e);
                        try {
                            const e = JSON.parse(t);
                            return !(!e.duration || !e.startTime) && Date.now() - e.startTime < e.duration
                        } catch (e) {
                            return !1
                        }
                    }
                    )(Be)) {
                        const s = $(Be);
                        e.info("found local geo data"),
                        t(s)
                    } else
                        fetch(self.atob("aHR0cHM6Ly9wcm8uaXAtYXBpLmNvbS9qc29uP2ZpZWxkcz0yMTgxODI2JmtleT1YT3BpYW5zUmdZeEdUaG8=")).then((e=>e.json())).then((e=>{
                            if ("success" !== e.status) {
                                const t = new Error(`preflight status ${e.status}`);
                                throw ke()(t, ze)
                            }
                            {
                                const s = e.mobile ? Fe : xe;
                                B(Be, e, s),
                                t(e)
                            }
                        }
                        )).catch((e=>{
                            s(e)
                        }
                        ))
                }
                ))
            }
            btAnnouncePreflight() {
                const {logger: e} = this.engine;
                return this.announceInfo.asn ? this.btAnnounce() : (e.info("preflight ip-api"),
                Promise.race([this.geoipRequest(), new Promise(((e,t)=>{
                    setTimeout((()=>{
                        t(ke()(new Error("request timeout"), ze))
                    }
                    ), 600)
                }
                ))]).then((e=>(this._parseGeoResponse(e),
                this.btAnnounce()))).catch((t=>{
                    if (t.code !== qe) {
                        const t = $(Be);
                        return t && (e.info("use expired ipData"),
                        this._parseGeoResponse(t)),
                        this.btAnnounce()
                    }
                    throw t
                }
                )))
            }
            _parseGeoResponse(e) {
                const {lat: t, lon: s, isp: i, as: r, mobile: n, countryCode: o, continentCode: a} = e;
                n && (this.announceInfo.netType = "cellular");
                const h = r.split(" ")[0].substr(2);
                this.announceInfo = {
                    ...this.announceInfo,
                    lat: t,
                    lon: s,
                    isp: i,
                    asn: h,
                    country: o
                }
            }
            btAnnounce() {
                const {logger: e} = this.engine;
                return new Promise(((t,s)=>{
                    fetch(this.announceURL, {
                        headers: this._requestHeader,
                        method: "POST",
                        body: JSON.stringify(this.announceInfo)
                    }).then((e=>{
                        if (!e.ok) {
                            const t = e.status >= 500 && e.status < 600;
                            throw ke()(new Error(`server response code is ${e.status}`), qe, {
                                retry: t
                            })
                        }
                        return e.json()
                    }
                    )).then((e=>{
                        if (!this.engine)
                            throw ke()(new Error("runtime error"), qe, {
                                retry: !1
                            });
                        const s = e.data;
                        if (s.f && (this.forbidden = !0),
                        -1 === e.ret) {
                            const {code: t, msg: s} = e.data;
                            throw ke()(new Error(s), qe, {
                                retry: t >= 5e3
                            })
                        }
                        if (s.info && console.info(`${s.info}`),
                        s.warn && console.warn(`${s.warn}`),
                        s.min_conns || (s.min_conns = 8),
                        (!s.rejected || s.rejected && s.share_only) && s.id && s.report_interval && s.peers) {
                            if (this.peerId = this.id = s.id,
                            s.report_interval < 20 && (s.report_interval = 20),
                            this.btStats(s.report_interval),
                            this.getPeersURL = `${this.baseUrl}/channel/${this.channelId}/node/${this.peerId}/peers`,
                            this.statsURL = `${this.baseUrl}/channel/${this.channelId}/node/${this.peerId}/stats`,
                            !this.announceInfo.asn && s.asn) {
                                const {country: e, asn: t, mobile: i, isp: r, lat: n, lon: o} = s;
                                this.announceInfo = {
                                    ...this.announceInfo,
                                    country: e,
                                    asn: t
                                },
                                B(Be, {
                                    countryCode: e,
                                    as: `AS${t}`,
                                    mobile: i,
                                    isp: r,
                                    lat: n,
                                    lon: o,
                                    status: "success"
                                }, i ? Fe : xe)
                            }
                            t(s)
                        } else
                            this.engine && (this.engine.p2pEnabled = !1)
                    }
                    )).catch((t=>{
                        e.error(`btAnnounce error ${t}`),
                        s(ke()(t, t.code, {
                            retry: t.retry
                        }))
                    }
                    ))
                }
                ))
            }
            btStats(e=10) {
                this.heartbeater = setInterval((()=>{
                    this.postStats()
                }
                ), 1e3 * e)
            }
            postStatsWithBeacon() {
                if (this.offline)
                    return;
                this.offline = !0;
                let e = {
                    off: !0
                };
                this.statsRequesting || (e = {
                    ...e,
                    ...this._makeStatsBody()
                }),
                this.statsURL && navigator.sendBeacon && navigator.sendBeacon(this.statsURL, JSON.stringify(e))
            }
            postStats() {
                const {logger: t} = this.engine;
                this.statsRequesting = !0,
                fetch(this.statsURL, {
                    method: "POST",
                    body: JSON.stringify(this._makeStatsBody())
                }).then((e=>(this.statsRequesting = !1,
                this.reportFails = 0,
                e.text()))).then((s=>{
                    let i;
                    if (i = s ? JSON.parse(s) : {
                        ret: 0,
                        data: {}
                    },
                    -1 === i.ret)
                        clearInterval(this.heartbeater),
                        t.error(`${i.data.msg} code ${i.data.code}`),
                        this.engine.emit(e.RESTART_P2P);
                    else {
                        const {http: e=0, p2p: t=0, share: s=0, failConns: i=0, rebuffers: r=0, requests: n=0, errsInternalExpt: o=0} = this.lastStats || {};
                        this[Qe] >= e && (this[Qe] -= e),
                        this[Ke] >= t && (this[Ke] -= t),
                        this[Ze] >= s && (this[Ze] -= s),
                        this.failConns >= i && (this.failConns -= i),
                        this.errsBufStalled >= r && (this.errsBufStalled -= r),
                        this.mediaRequests >= n && (this.mediaRequests -= n),
                        this.errsInternalExpt >= o && (this.errsInternalExpt -= o),
                        this.exptMsg && (this.exptMsg = void 0)
                    }
                }
                )).catch((e=>{
                    t.error(`btStats error ${e}`),
                    this.statsRequesting = !1,
                    this.reportFails++,
                    this.reportFails >= 3 && clearInterval(this.heartbeater)
                }
                ))
            }
            btGetPeers(e, t=!1) {
                const {logger: s} = this.engine
                  , {asn: i, country: r} = this.announceInfo;
                let n = {
                    exclusions: e,
                    asn: i,
                    country: r,
                    ratio: this.health.healthRatio,
                    urgent: t || void 0
                }
                  , o = {};
                return this.engine.getExtraForPeersRequest && (o = this.engine.getExtraForPeersRequest()),
                n = Object.assign({}, n, o),
                new Promise(((e,t)=>{
                    this.reportFails >= 3 ? t(new Error("reportFails >= 3")) : fetch(this.getPeersURL, {
                        headers: this._requestHeader,
                        method: "POST",
                        body: JSON.stringify(n)
                    }).then((e=>e.json())).then((s=>{
                        -1 === s.ret ? t(s.data.msg) : e(s.data)
                    }
                    )).catch((e=>{
                        s.error(`btGetPeers error ${e}`),
                        t(e)
                    }
                    )).finally((()=>{
                        this.health.resetTraffic()
                    }
                    ))
                }
                ))
            }
            increFailConns() {
                this.failConns++
            }
            increRebuffers() {
                this.errsBufStalled++
            }
            increMediaRequests() {
                this.mediaRequests++,
                this.engine.emit(e.MEDIA_REBUFFER, this.errsBufStalled >= 2)
            }
            reportFlow(e) {
                const t = Math.round(e / 1024)
                  , {onHttpDownloaded: s} = this.config;
                E(s) && s(t),
                this[Qe] += t,
                this.totalHTTPDownloaded += t,
                this.health.recordHttp(t),
                this._emitStats()
            }
            reportDCTraffic(e, t) {
                const s = Math.round(e / 1024)
                  , {onP2pDownloaded: i} = this.config;
                this[Ke] += s,
                this.totalP2PDownloaded += s,
                this.health.recordP2p(s),
                this.speed = Math.round(t),
                E(i) && i(s, this.speed),
                this._emitStats()
            }
            reportUploaded(e=0) {
                const t = Math.round(e / 1024)
                  , {onP2pUploaded: s} = this.config;
                E(s) && s(t),
                this.totalP2PUploaded += t,
                this.health.recordShare(t),
                this[Ze] += t,
                this._emitStats()
            }
            destroy() {
                const {logger: e} = this.engine;
                e.warn("destroy fetcher"),
                this.removeAllListeners(),
                clearInterval(this.heartbeater)
            }
            _emitStats() {
                this.engine.emit("stats", {
                    totalHTTPDownloaded: this.totalHTTPDownloaded,
                    totalP2PDownloaded: this.totalP2PDownloaded,
                    totalP2PUploaded: this.totalP2PUploaded,
                    p2pDownloadSpeed: this.speed
                });
                const {getStats: e} = this.config;
                E(e) && e(this.totalP2PDownloaded, this.totalP2PUploaded, this.totalHTTPDownloaded, this.speed)
            }
            _makeStatsBody() {
                const {asn: e, country: t} = this.announceInfo;
                let s = {
                    totalConns: this.engine.tracker.totalConns,
                    failConns: this.failConns,
                    rebuffers: this.errsBufStalled || void 0,
                    requests: this.mediaRequests || void 0,
                    errsInternalExpt: this.errsInternalExpt,
                    http: Math.round(this[Qe]) || 0,
                    p2p: Math.round(this[Ke]) || 0,
                    share: Math.round(this[Ze]) || 0,
                    asn: e,
                    country: t
                }
                  , i = {};
                this.engine.getExtraForStats && (i = this.engine.getExtraForStats()),
                s = Object.assign({}, s, i),
                this.lastStats = JSON.parse(JSON.stringify(s)),
                Object.keys(s).forEach((e=>{
                    0 === s[e] && delete s[e]
                }
                ));
                const {logger: r} = this.engine;
                return r.isDebugLevel && r.info(`report ${JSON.stringify(s)}`),
                this.exptMsg && (s.exptMsg = "2.10.3 " + this.exptMsg),
                s
            }
            get _requestHeader() {
                let e = {};
                return this.native && (e = {
                    ...e,
                    "X-SW-Key": st(this.key),
                    "User-Agent": "electron",
                    "X-SW-ID": this.announceInfo.bundle
                }),
                e
            }
        }
        const tt = et;
        function st(e) {
            if (!e)
                return;
            const t = "C@K<#q";
            let s = "";
            for (let i = 0; i < e.length; i++) {
                const r = e.charCodeAt(i) ^ t.charCodeAt(i % 6);
                s += String.fromCharCode(r)
            }
            return self.btoa(s)
        }
        class it extends (n()) {
            constructor(e, t) {
                super(),
                this.logger = e,
                t.startsWith("wss") ? this.addr = t.replace("wss", "https") : t.startsWith("ws") && (this.addr = t.replace("ws", "http")),
                this.connected = !1,
                this.retryCount = 0,
                this.closed = !1,
                this.msgQueue = [],
                this.posting = !1
            }
            start() {
                this.closed = !1,
                this._hello((()=>{
                    this._longPolling()
                }
                ))
            }
            _hello(e) {
                fetch(this.addr + "&hello", {
                    method: "POST"
                }).then((e=>{
                    if (!e.ok)
                        throw new Error("hello response was not ok");
                    return e.json()
                }
                )).then((t=>{
                    this.connected = !0,
                    e(),
                    this.onopen && this.onopen(t.ver)
                }
                )).catch((e=>{
                    this.closed = !0,
                    this.onerror && this.onerror(e)
                }
                ))
            }
            send(e) {
                this.msgQueue.push(e),
                this.posting || this._realSend([...this.msgQueue])
            }
            _realSend(e) {
                0 !== e.length && (this.posting = !0,
                this.msgQueue = [],
                fetch(this.addr, {
                    method: "POST",
                    body: JSON.stringify(e)
                }).then((()=>{
                    this.posting = !1,
                    this.msgQueue.length > 0 && this._realSend([...this.msgQueue])
                }
                )).catch((e=>{
                    this.logger.error(e),
                    this.posting = !1
                }
                )))
            }
            close() {
                this.connected && (this.closed = !0,
                this.connected = !1,
                this.abortController && (this.abortController.abort(),
                this.abortController = null),
                this.onclose && this.onclose())
            }
            destroy() {
                this.close(),
                this.removeAllListeners()
            }
            _longPolling() {
                if (this.closed)
                    return;
                this.abortController = new AbortController;
                const e = this.abortController.signal;
                fetch(this.addr, {
                    signal: e
                }).then((e=>{
                    if (!e.ok)
                        throw new Error("polling response was not ok");
                    return e.text()
                }
                )).then((e=>{
                    e && this.onmessage && this.onmessage(JSON.parse(e)),
                    this.retryCount = 0,
                    this._longPolling()
                }
                )).catch((e=>{
                    this.connected && (this.retryCount <= 3 ? (this.retryCount++,
                    this._longPolling()) : (this.connected = !1,
                    this.onerror && this.onerror(e)))
                }
                ))
            }
        }
        const rt = class {
            constructor(e, t, s, i="main") {
                this.logger = e,
                this.config = t,
                this.wsAddr = s,
                this.serverVersion = 0,
                this.pingInterval = 95e3,
                this.name = i,
                this.normalClosed = !1,
                this.lastSendTs = performance.now(),
                this.pollingClient = new it(e,s);
                try {
                    this._ws = this._init()
                } catch (t) {
                    e.error(t),
                    this._startPolling()
                }
            }
            get batchSupported() {
                return this.serverVersion >= 50
            }
            _init() {
                const e = {
                    maxRetries: this.config.wsMaxRetries,
                    minReconnectionDelay: p(1e4, 6e4),
                    maxReconnectionDelay: 6e5,
                    maxEnqueuedMessages: 20,
                    connectionTimeout: 7e3
                };
                let t = new N(this.wsAddr,void 0,e);
                return t.addEventListener("open", (()=>{
                    this.logger.info(`signal ${this.name} ${this.wsAddr} connection opened`),
                    this.normalClosed = !1,
                    this.pollingClient.connected ? this.pollingClient.close() : this.onopen && this.onopen(),
                    this._startPing(this.pingInterval)
                }
                )),
                t.push = t.send,
                t.send = e=>{
                    this.lastSendTs = performance.now();
                    let s = JSON.stringify(e);
                    t.push(s)
                }
                ,
                t.addEventListener("message", (e=>{
                    let t = e.data;
                    const s = JSON.parse(t)
                      , i = s.action;
                    if ("pong" !== i) {
                        if ("ver" !== i)
                            return "close" === i ? (this.logger.warn(`server close signal ${this.name} reason ${s.reason}`),
                            void this.close()) : void (this.onmessage && this.onmessage(s, this.name));
                        this.serverVersion = s.ver
                    } else
                        clearTimeout(this.pongTimer)
                }
                )),
                t.addEventListener("close", (e=>{
                    this.logger.warn(`signal ${this.name} ${this.wsAddr} closed ${e.code} ${e.reason}`),
                    e.code >= 5e3 || e.code < 4e3 ? (this.onclose && this.onclose(),
                    this._stopPing()) : this.close()
                }
                )),
                t.addEventListener("error", (e=>{
                    this._stopPing(),
                    this.onerror && this.onerror(e),
                    this._startPolling()
                }
                )),
                t
            }
            _startPolling() {
                this.pollingClient.connected || (this.logger.info("start polling"),
                this.pollingClient.start(),
                this._setupPolling(this.pollingClient))
            }
            sendSignal(e, t) {
                const s = {
                    action: "signal",
                    to_peer_id: e,
                    data: t
                };
                this._send(s)
            }
            sendSignalBatch(e, t) {
                if (this.batchSupported && t.length > 1)
                    this._send({
                        action: "signals",
                        to_peer_id: e,
                        data: t
                    });
                else
                    for (let s of t)
                        this.sendSignal(e, s)
            }
            sendReject(e, t, s) {
                const i = {
                    action: "reject",
                    to_peer_id: e,
                    reason: t,
                    fatal: s
                };
                this._send(i)
            }
            _send(e) {
                this.pollingClient.connected ? this.pollingClient.send(e) : this._ws && this._ws.send(e)
            }
            _startPing(e) {
                this.connected && (this.pingTimer = setTimeout((()=>{
                    const e = 95e3 - (performance.now() - this.lastSendTs);
                    if (e >= 0)
                        return this._startPing(e);
                    const t = {
                        action: "ping"
                    };
                    this._ws && this._ws.push(JSON.stringify(t)),
                    this.serverVersion >= 22 && this._waitForPong(),
                    this._startPing(this.pingInterval)
                }
                ), e))
            }
            _waitForPong() {
                this.pongTimer = setTimeout((()=>{
                    this.logger.warn(`signal ${this.name} wait for pong timeout, reconnect`),
                    this.close(),
                    this.reconnect()
                }
                ), 15e3)
            }
            _stopPing() {
                clearTimeout(this.pingTimer),
                clearTimeout(this.pongTimer)
            }
            close() {
                this.logger.info(`close signal ${this.name}`),
                this._stopPing(),
                (()=>{
                    this._ws && this._ws.close(1e3, "normal close")
                }
                )(),
                this.pollingClient.close(),
                this.normalClosed = !0
            }
            reconnect() {
                this._ws && (this.logger.info(`reconnect signal ${this.name}`),
                this._ws.reconnect())
            }
            destroy() {
                this.close(),
                this._ws = null,
                this.pollingClient.destroy()
            }
            get connected() {
                return !!this.pollingClient.connected || this._connected
            }
            get _connected() {
                return !!this._ws && this._ws.readyState === N.OPEN
            }
            _setupPolling(e) {
                e.onopen = e=>{
                    e && (this.serverVersion = e),
                    this.logger.info("polling opened"),
                    this.onopen && this.onopen()
                }
                ,
                e.onerror = e=>{
                    this._connected || this.onerror && this.onerror(e)
                }
                ,
                e.onclose = ()=>{
                    this._connected || this.onclose && this.onclose()
                }
                ,
                e.onmessage = e=>{
                    if (this.onmessage)
                        for (let t of e)
                            this.onmessage(t, this.name)
                }
            }
        }
          , nt = class {
            constructor(e, t, s, i) {
                this.logger = e,
                this.config = t,
                this.mainAddr = s,
                this.backupAddr = i,
                this.mainWS = this._init(s),
                this.backupTimer = setTimeout((()=>{
                    this.destroyed || (this.backupWS = this._init(i, "backup"))
                }
                ), 900),
                this._connected = !1,
                this.destroyed = !1,
                this.normalClosed = !1
            }
            _init(e, t) {
                if (!e)
                    return null;
                let s = new rt(this.logger,this.config,e,t);
                return s.onopen = ()=>{
                    this.normalClosed = !1,
                    !this._connected && this.onopen && (this._connected = !0,
                    this.onopen())
                }
                ,
                s.onmessage = e=>{
                    this.onmessage && this.onmessage(e, s.name)
                }
                ,
                s.onclose = ()=>{
                    this._connected && !this.connected && this.onclose && (this._connected = !1,
                    this.onclose())
                }
                ,
                s.onerror = e=>{
                    this.onerror && this.onerror(e)
                }
                ,
                s
            }
            sendSignalBatch(e, t, s) {
                if (s) {
                    const i = this._getWSByName(s);
                    i && i.sendSignalBatch(e, t)
                } else
                    this.mainConnected ? this.mainWS.sendSignalBatch(e, t) : this.backupConnected && this.backupWS.sendSignalBatch(e, t)
            }
            sendSignal(e, t, s) {
                this.sendSignalBatch(e, [t], s)
            }
            sendReject(e, t, s, i) {
                if (i) {
                    const r = this._getWSByName(i);
                    if (r)
                        return void r.sendReject(e, t, s)
                }
                this.mainConnected ? this.mainWS.sendReject(e, t, s) : this.backupConnected ? this.backupWS.sendReject(e, t, s) : this.logger.warn("no signal available, send reject failed")
            }
            close() {
                this.mainWS && this.mainWS.close(),
                this.backupWS && this.backupWS.close(),
                this.normalClosed = !0
            }
            _getWSByName(e) {
                return this.mainWS && this.mainWS.name === e ? this.mainWS : this.backupWS && this.backupWS.name === e ? this.backupWS : null
            }
            reconnect() {
                this.mainWS && this.mainWS.reconnect(),
                this.backupWS && this.backupWS.reconnect()
            }
            destroy() {
                this.close(),
                clearTimeout(this.backupTimer),
                this.mainWS = null,
                this.backupWS = null,
                this.destroyed = !0
            }
            get connected() {
                return this.mainConnected || this.backupConnected
            }
            get mainConnected() {
                return this.mainWS && this.mainWS.connected
            }
            get backupConnected() {
                return this.backupWS && this.backupWS.connected
            }
        }
        ;
        const ot = function(e, t, s=40) {
            var i = null
              , r = !1
              , n = s;
            return function(s=!1) {
                if (s)
                    return clearTimeout(i),
                    void (r = !1);
                r || (r = !0,
                i = setTimeout((function() {
                    e.call(t, n),
                    r = !1,
                    i = null
                }
                ), 1e3 * n),
                n *= 1.1)
            }
        };
        class at {
            constructor(e, t, s=10) {
                this.engine = e,
                this.config = t,
                this.trickle = t.trickleICE,
                this.poolSize = s,
                this.pool = [],
                this.reset(),
                this.trickle = !1
            }
            reset() {
                this.destroy();
                for (let e = 0; e < this.poolSize; e++)
                    this.pool.push(this._createPeer())
            }
            _createPeer() {
                return new J(this.engine,void 0,void 0,!0,this.config,{
                    trickle: this.trickle
                })
            }
            get available() {
                return 0 !== this.pool.length && this.pool[0].signalMsgs.length > 0
            }
            getPeer() {
                if (0 === this.pool.length)
                    return this._createPeer();
                const e = this.pool.shift();
                return this.pool.length < 5 && this.pool.push(this._createPeer()),
                e
            }
            destroy() {
                for (let e of this.pool)
                    e.destroy(!0);
                this.pool = []
            }
        }
        class ht extends (n()) {
            constructor(e, t, s, i) {
                super(),
                this.engine = e,
                this.logger = e.logger,
                this.config = i,
                this.connected = !1,
                this.scheduler = s,
                this.sequential = this.scheduler.sequential,
                this.DCMap = new Map,
                this.failedDCSet = new Set,
                this.notFoundDCSet = new Set;
                const r = V().isMobile();
                this.peerPool = new at(e,i,15),
                this.signalerWs = null,
                this.fetcher = t,
                this.peers = [],
                this.requestPeersQueue = [],
                this.minConns = 5,
                this.stuns = [],
                this.requestMorePeers = ot(this._requestMorePeers, this),
                this.maxConns = r ? 15 : 22,
                this.maxConnsActive = r ? 10 : 13,
                this.peersIncrement = 0,
                this.gotPeersFromTracker = !1,
                this.requestPeersWaitCount = 0,
                this.fuseRate = -1,
                this.overloaded = !1
            }
            get totalConns() {
                return this.scheduler.peersNum + 1
            }
            resumeP2P() {
                if (!this.fetcher)
                    return;
                const {engine: t, config: s, fetcher: i} = this
                  , {btAnnounce: r, btAnnouncePreflight: n} = i
                  , {wsSignalerAddr: o, wifiOnly: a, geoIpPreflight: h, getPeerId: l} = s;
                (h ? n : r).call(i).then((e=>{
                    if (!this.scheduler)
                        return;
                    t.peerId = this.peerId = e.id,
                    this.minConns = e.min_conns,
                    this.scheduler.minConns = this.minConns;
                    const s = e.peers;
                    this.scheduler.notifyPeersLoaded(s.length),
                    t.netType = i.announceInfo.netType,
                    (e.wifi_only || a) && t.isMobileNet && (this.scheduler.downloadOnly = !0,
                    this.logger.info("downloadOnly mode"));
                    const r = o.main;
                    let n = o.backup;
                    e.signal && !e.signal2 && (n = void 0),
                    this.signalerWs = this._initSignalerWs(e.signal || r, e.signal2 || n, e.token, e.token2),
                    0 === s.length ? this.requestMorePeers() : this.peers = this._filterPeers(s),
                    t.emit("peerId", this.peerId),
                    E(l) && l(this.peerId),
                    e.stun && e.stun.length > 0 && (this.stuns = e.stun),
                    e.debug && (this.logger.enableDebug(),
                    e.log_url && (this.logUploader = new k(e.log_url,this.fetcher.key || location.hostname,this.peerId,"2.10.3"),
                    this.logger.setUploader(this.logUploader))),
                    t.onTrackerResume && t.onTrackerResume(e),
                    e.fuse_rate && (this.fuseRate = e.fuse_rate),
                    e.overload && (this.overloaded = !0,
                    this.logger.warn("server overloaded, degrade signaling")),
                    this.logger.info(`announce request response ${JSON.stringify(e, null, 2)}`)
                }
                )).catch((s=>{
                    if (this.scheduler && ("TRACKER_EXPT" === s.code && t.emit(e.EXCEPTION, s),
                    this.scheduler.notifyPeersLoaded(0),
                    s.retry)) {
                        const e = p(15e3, 4e4);
                        this.logger.warn(`announce retry after ${e}ms`),
                        this.announceTimer = setTimeout((()=>{
                            this.resumeP2P()
                        }
                        ), e)
                    }
                }
                ))
            }
            stopP2P() {
                this.fetcher.postStatsWithBeacon(),
                this.fetcher.destroy(),
                this.fetcher = null,
                this.requestMorePeers(!0),
                this.scheduler.destroy(),
                this.scheduler = null,
                this.signalerWs && (this.signalerWs.destroy(),
                this.signalerWs = null),
                this.peers = [];
                for (let e of this.DCMap.values())
                    e.destroy(!0);
                this.DCMap.clear(),
                this.peerPool.destroy(),
                this.peerPool = null,
                this.failedDCSet.clear(),
                this.notFoundDCSet.clear(),
                this.logUploader && (this.logUploader.destroy(),
                this.logUploader = null),
                this.logger.warn("tracker stop p2p")
            }
            destroy() {
                this.stopP2P(),
                this.removeAllListeners(),
                clearTimeout(this.announceTimer),
                clearTimeout(this.requestPeersTimer);
                const {config: e} = this;
                e.getStats = e.getPeerId = e.getPeersInfo = null,
                this.logger.warn("destroy tracker")
            }
            _filterPeers(e) {
                const t = []
                  , s = [...this.DCMap.keys(), ...this.failedDCSet.keys(), this.peerId];
                return e.filter((e=>!s.includes(e.id))).forEach((e=>{
                    t.push({
                        id: e.id,
                        intermediator: e.intermediator
                    })
                }
                )),
                t
            }
            _tryConnectToAllPeers() {
                const {logger: e} = this;
                if (0 !== this.peers.length)
                    for (e.info(`try connect to ${this.peers.length} peers, map size ${this.DCMap.size} limit ${this.maxConnsActive} peersNum ${this.scheduler.peersNum}`); this.peers.length > 0 && !(this.DCMap.size >= this.maxConnsActive); ) {
                        let t = this.peers.shift();
                        const s = t.intermediator;
                        this.signalerWs.connected || s && this.DCMap.has(s) ? (e.debug(`create DataChannel ${t.id} intermediator ${s}`),
                        this._createDatachannel(t.id, !0, s)) : e.info(`skip peer ${t.id} without intermediator`)
                    }
                else
                    e.info("no peers after filter")
            }
            _handleSendSignal(e, t) {
                const s = e.remotePeerId;
                if (e.intermediator) {
                    const i = this.DCMap.get(e.intermediator);
                    if (i) {
                        let r = !0;
                        for (let e of t)
                            i.sendMsgSignal(s, this.peerId, e) || (r = !1);
                        if (r)
                            return;
                        this.logger.warn(`intermediator ${e.intermediator} relay failed`)
                    }
                }
                e.intermediator = void 0,
                this.signalerWs.sendSignalBatch(s, t, e.signalName)
            }
            _setupDC(t) {
                t.on(e.DC_SIGNAL, (e=>{
                    this._handleSendSignal(t, [e])
                }
                )).on(e.DC_SIGNAL_BATCH, (e=>{
                    this._handleSendSignal(t, e)
                }
                )).on(e.DC_PEER_SIGNAL, (e=>{
                    const s = e.to_peer_id
                      , i = e.from_peer_id
                      , r = e.action;
                    if (s && i && r)
                        if (s !== this.peerId) {
                            this.logger.info(`relay signal for ${i}`);
                            const n = this.DCMap.get(s);
                            if (n) {
                                if ("signal" !== r)
                                    return void n.sendMsgSignalReject(s, i, e.reason, e.fatal);
                                if (n.sendMsgSignal(s, i, e.data))
                                    return
                            }
                            t.sendMsgSignal(i, s)
                        } else
                            "signal" === r ? this._handleSignalMsg(i, e, t.remotePeerId) : this._handSignalRejected(i, e)
                }
                )).on(e.DC_GET_PEERS, (()=>{
                    const e = f()
                      , s = this.scheduler.getPeers().filter((e=>e.peersConnected < (e.mobileWeb ? 15 : 22) && !e.super));
                    if (s && s.length > 0) {
                        const i = [];
                        s.forEach((s=>{
                            if (s.remotePeerId === t.remotePeerId || s.remotePeerId === this.peerId)
                                return;
                            if (!this.config.live && (s.currentPos - t.currentPos > 600 || s.currentPos < t.currentPos))
                                return;
                            e - s.timeJoin > 50 && i.push({
                                id: s.remotePeerId,
                                ...s.region
                            })
                        }
                        )),
                        this.logger.info(`send ${i.length} peers to ${t.remotePeerId}`),
                        t.sendPeers(i)
                    }
                }
                )).on(e.DC_PEERS, (e=>{
                    const s = e.peers;
                    this.logger.info(`receive ${s.length} peers from ${t.remotePeerId}`),
                    s && s.length > 0 && (s.forEach((e=>{
                        e.intermediator = t.remotePeerId,
                        e.region || (e.region = {})
                    }
                    )),
                    this.requestPeersQueue.push(...s)),
                    this.requestPeersWaitCount--,
                    this.requestPeersWaitCount <= 0 && this._handleRequestedPeers()
                }
                )).once(e.DC_ERROR, (e=>{
                    this.logger.info(`datachannel ${t.channelId} failed fatal ${e}`),
                    this.scheduler && (this.scheduler.deletePeer(t),
                    this._destroyAndDeletePeer(t.remotePeerId, e),
                    this.fetcher && (t.connected || e && this.fetcher.increFailConns(),
                    e && this.failedDCSet.add(t.remotePeerId),
                    this._doSignalFusing(this.scheduler.peersNum),
                    this._doPeersRequest()))
                }
                )).once(e.DC_TIMEOUT, (()=>{
                    t.intermediator || this.failedDCSet.add(t.remotePeerId),
                    this._destroyAndDeletePeer(t.remotePeerId, !1),
                    this._doPeersRequest()
                }
                )).once(e.DC_CLOSE, (e=>{
                    this.logger.info(`datachannel ${t.channelId} closed fatal ${e}`),
                    this.scheduler && (this.scheduler.deletePeer(t),
                    this._doSignalFusing(this.scheduler.peersNum)),
                    this._destroyAndDeletePeer(t.remotePeerId, e),
                    e && this.failedDCSet.add(t.remotePeerId),
                    this._doPeersRequest()
                }
                )).once(e.DC_OPEN, (()=>{
                    t.isInitiator && this.scheduler.handshakePeer(t)
                }
                )).once(e.DC_METADATA, (e=>{
                    const {scheduler: s} = this;
                    t.isInitiator || s.handshakePeer(t),
                    s.handleMetaData(t, e);
                    const i = this.DCMap.size >= this.maxConnsActive;
                    this.requestMorePeers(i),
                    t.intermediator && this.peersIncrement++,
                    this._doSignalFusing(s.peersNum)
                }
                ))
            }
            _doPeersRequest() {
                const e = this.scheduler.peersNum;
                !this.signalerWs.connected || this.overloaded && e > this.minConns ? this._requestPeersFromPeers(e) : this.requestMorePeers(),
                this._tryConnectToAllPeers()
            }
            _doSignalFusing(e) {
                if (this.fuseRate <= 0)
                    return;
                const t = this.signalerWs.connected;
                t && e >= this.fuseRate ? (this.logger.warn("reach fuseRate, report stats close signaler"),
                this.totalConns - 1 > 0 && this.fetcher.postStats(),
                this.signalerWs.close()) : !t && e <= this.minConns && this.signalerWs.normalClosed && (this.logger.warn(`low conns ${e}, reconnect signaler`),
                this.signalerWs.reconnect())
            }
            _initSignalerWs(t, s, i, r) {
                const n = (e,t)=>{
                    let s = `${e}?id=${this.peerId}&p=web&v=2.10.3`;
                    return t && (s = `${s}&token=${t}`),
                    s
                }
                ;
                let o, a = n(t, i);
                if (s && s !== t) {
                    let e = n(s, r);
                    o = new nt(this.logger,this.config,a,e)
                } else
                    o = new rt(this.logger,this.config,a);
                return o.onopen = ()=>{
                    this.connected = !0,
                    this.engine.emit("serverConnected", !0),
                    this._tryConnectToAllPeers()
                }
                ,
                o.onmessage = (e,t)=>{
                    let s = e.action;
                    const i = e.from_peer_id || e.from;
                    if (i)
                        switch (s) {
                        case "signal":
                            this._handleSignalMsg(i, e, null, t);
                            break;
                        case "reject":
                            this._handSignalRejected(i, e);
                            break;
                        default:
                            this.logger.warn(`Signal websocket unknown action ${s}`)
                        }
                    else
                        this.logger.warn("fromPeerId is missed")
                }
                ,
                o.onclose = ()=>{
                    this.connected = !1,
                    this.engine.emit("serverConnected", !1)
                }
                ,
                o.onerror = t=>{
                    t.message && this.logger.warn(`signal err: ${t.message}`),
                    t.message && this.engine.emit(e.EXCEPTION, ke()(t, "SIGNAL_EXPT"))
                }
                ,
                o
            }
            _handSignalRejected(e, t) {
                this.logger.warn(`signaling ${e} rejected, reason ${t.reason}`);
                const s = this.DCMap.get(e);
                s && !s.connected && (s.destroy(t.fatal),
                this.DCMap.delete(e)),
                this.requestMorePeers(),
                t.fatal && this.failedDCSet.add(e),
                this._tryConnectToAllPeers()
            }
            _handleSignalMsg(e, t, s, i) {
                if (!this.scheduler)
                    return;
                const {logger: r} = this;
                if (t.data) {
                    if (this.failedDCSet.has(e))
                        return void this._sendSignalReject(e, `${e} blocked`, s, i, !0);
                    this._handleSignal(e, t.data, s, i)
                } else {
                    const t = this.DCMap.get(e);
                    if (!t)
                        return;
                    if (this.signalerWs.backupConnected && t && t.signalMsgs.length > 0 && "main" === i && !t.useBackupSignal)
                        return t.useBackupSignal = !0,
                        t.signalName = "backup",
                        r.warn(`${e} not found from main, try backup signal`),
                        t.intermediator = void 0,
                        void this.signalerWs.sendSignalBatch(e, t.signalMsgs, "backup");
                    if (t.useBackupSignal)
                        return;
                    this._destroyAndDeletePeer(e),
                    r.info(`signaling ${e} not found`);
                    const {scheduler: n} = this;
                    n.waitForPeer && (n.waitingPeers--,
                    0 === n.waitingPeers && n.notifyPeersLoaded(0)),
                    this.requestMorePeers(),
                    this._tryConnectToAllPeers(),
                    s || this.notFoundDCSet.add(e)
                }
            }
            _handleSignal(e, t, s, i) {
                const r = t.type
                  , {logger: n} = this;
                let o = this.DCMap.get(e);
                if (o) {
                    if (o.connected)
                        return void n.info("datachannel had connected, signal ignored");
                    if ("offer" === r) {
                        if (!(this.peerId > e))
                            return void n.warn(`signal type wrong ${r}, ignored`);
                        this._destroyAndDeletePeer(e, !1),
                        n.warn(`signal type wrong ${r}, convert to non initiator`),
                        o = this._createDatachannel(e, !1, s)
                    }
                } else {
                    if ("answer" === r) {
                        const t = `type wrong ${r}`;
                        return n.warn(t),
                        this._sendSignalReject(e, t, s, i),
                        void this._destroyAndDeletePeer(e, !1)
                    }
                    if (n.debug(`receive node ${e} connection request`),
                    this.DCMap.size >= this.maxConns) {
                        const t = `reach limit ${this.maxConns}`;
                        return n.warn(t),
                        void this._sendSignalReject(e, t, s, i)
                    }
                    o = this._createDatachannel(e, !1, s)
                }
                o && (i && (o.signalName = i),
                o.receiveSignal(t))
            }
            _createDatachannel(e, t, s) {
                if (!this.fetcher)
                    return;
                let i;
                if (t && this.peerPool.available)
                    i = this.peerPool.getPeer(),
                    this.logger.info(`get peer from pool, signal size ${i.signalMsgs.length}`),
                    i.intermediator = s,
                    i.assignPeerId(this.peerId, e);
                else {
                    let r = this.config.trickleICE;
                    this.overloaded && (r = !1),
                    i = new J(this.engine,this.peerId,e,t,this.config,{
                        stuns: this.stuns,
                        intermediator: s,
                        trickle: !s && r
                    })
                }
                return this.DCMap.set(e, i),
                this._setupDC(i),
                i
            }
            _sendSignalReject(e, t, s, i, r) {
                if (s) {
                    const i = this.DCMap.get(s);
                    if (i && i.sendMsgSignalReject(e, this.peerId, t, r))
                        return
                }
                this.signalerWs.sendReject(e, t, r, i)
            }
            _requestMorePeers(e) {
                if (!this.fetcher)
                    return;
                const {logger: t} = this
                  , s = this.scheduler.peersNum;
                s >= this.maxConnsActive || (t.info(`requestMorePeers after delay ${e}, peersIncrement ${this.peersIncrement}`),
                s < 3 || this.peersIncrement <= 3 && !this.gotPeersFromTracker ? this._requestPeersFromServer(s) : this._requestPeersFromPeers(s) || this._requestPeersFromServer(s),
                this.peersIncrement = 0)
            }
            _requestPeersFromServer(e) {
                const {logger: t} = this;
                this.failedDCSet.size > 50 && (this.failedDCSet = new Set([...this.failedDCSet].slice(-50))),
                this.notFoundDCSet.size > 20 && (this.notFoundDCSet = new Set([...this.notFoundDCSet].slice(-20))),
                this.fetcher.btGetPeers([...this.DCMap.keys(), ...this.failedDCSet.keys(), ...this.notFoundDCSet.keys()], 0 === e).then((e=>{
                    e && e.peers && (t.info(`requestMorePeers resp ${JSON.stringify(e, null, 2)}`),
                    this.peers = this._filterPeers(e.peers),
                    this._tryConnectToAllPeers())
                }
                )).catch((e=>{
                    t.error(`requestMorePeers error ${e}`)
                }
                )),
                this.gotPeersFromTracker = !0
            }
            _requestPeersFromPeers(e) {
                return !!this.requestPeersTimer || (e >= this.maxConnsActive || (this.requestPeersWaitCount = this.scheduler.requestPeers(),
                0 !== this.requestPeersWaitCount && (this.gotPeersFromTracker = !1,
                this.requestPeersTimer = setTimeout((()=>{
                    this.logger.warn("requestPeersTimer timeout"),
                    this._handleRequestedPeers()
                }
                ), 1e4),
                !0)))
            }
            _handleRequestedPeers() {
                if (clearTimeout(this.requestPeersTimer),
                this.requestPeersTimer = void 0,
                this.fetcher) {
                    if (this.requestPeersQueue.length > 0) {
                        const e = function(e, t) {
                            const s = []
                              , i = new Set;
                            for (let t of e)
                                i.has(t.id) || (i.add(t.id),
                                s.push(t));
                            const {asn: r, country: n} = t;
                            if (!r || !n || s.length < 2)
                                return s;
                            const o = s.filter((e=>!e.asn && !e.country))
                              , a = s.filter((e=>e.country === n && e.asn !== r))
                              , h = s.filter((e=>e.asn === r && e.country === n))
                              , l = s.filter((e=>!o.includes(e) && !h.includes(e) && !a.includes(e)));
                            return h.concat(a).concat(o).concat(l)
                        }(this.requestPeersQueue, this.fetcher.announceInfo);
                        this.peers = this._filterPeers(e),
                        this.requestPeersQueue = []
                    }
                    this._tryConnectToAllPeers()
                }
            }
            _destroyAndDeletePeer(e, t=!0) {
                const s = this.DCMap.get(e);
                return !!s && (s.destroy(t),
                this.DCMap.delete(e),
                !0)
            }
        }
        const lt = ht;
        class ct extends ae {
            constructor(e={}, t=null) {
                if (super(e),
                e.validateSegment || (e.validateSegment = function(e, t) {
                    return !0
                }
                ),
                this.hlsjs = t,
                this.config = Object.assign({
                    useDiskCache: !e.live
                }, me, e),
                t) {
                    this.HLSEvents = t.constructor.Events;
                    const e = t.constructor.version;
                    this.hlsjsVersion = e,
                    this.config.isHlsV0 = e && "0" === e.split(".")[0]
                }
                this.rangeTested = !1,
                this.lastLevel = 0,
                this.multiBitrate = !1
            }
            setup() {
                let {token: e, channelId: t} = this.config
                  , s = e=>{
                    const t = h().parseURL(e);
                    return `${t.netLoc.substr(2) + t.path.substring(0, t.path.lastIndexOf("."))}`
                }
                ;
                t && (s = this.makeChannelId(e, t));
                return {
                    channelIdMaker: s,
                    signalId: this.makeSignalId(),
                    browserInfo: {
                        ...this.commonBrowserInfo
                    }
                }
            }
            setupElectron() {
                this.browserInfo.device === X.device.PC_NATIVE && (this.browserInfo = {
                    ...this.browserInfo,
                    app: this.config.appName,
                    bundle: this.config.appId
                })
            }
            getExtraForStats() {
                const e = super.getExtraForStats();
                return !this.config.live && this.media && (e.pos = Math.round(this.media.currentTime)),
                this.multiBitrate && this.currentLevel !== this.lastLevel && (e.level = this.currentLevel + "",
                this.lastLevel = this.currentLevel),
                e
            }
            getExtraForPeersRequest() {
                const e = super.getExtraForPeersRequest();
                return this.multiBitrate && (e.level = this.currentLevel + ""),
                e
            }
            destroy() {
                super.destroy()
            }
            async initSegmentManager(e) {
                const {logger: s, config: i} = this;
                if (self.indexedDB && i.useDiskCache && !i.live) {
                    const e = new Le(this,i);
                    try {
                        await e.setupStore(),
                        this.bufMgr = e
                    } catch (e) {
                        s.warn(e),
                        this.bufMgr = new De(this,i)
                    }
                } else
                    this.bufMgr = new De(this,i);
                if (this.bufMgr.maxBufSize <= 0)
                    throw new Error("bufMgr state is invalid");
                "SegmentStore" === this.bufMgr.name && this.once(t.BM_FATAL_ERROR, (()=>{
                    const t = "SegmentStoreFatalError";
                    s.error(`${t}, switch to SegmentCache`),
                    this.bufMgr.destroy(),
                    this.bufMgr = new De(this,i),
                    e && e(this.bufMgr),
                    s && s.reportUrl && s.report(JSON.stringify(this.browserInfo), t, this.peerId, "2.10.3", 5e4)
                }
                ))
            }
            generateTag() {
                let e = `${(0,
                X.getBrowser)()}${_() ? "s" : ""}`;
                return e.includes("iPhone") && "HlsSwP2pEngine" === this.engineName && (e = `${e}_p`),
                !this.config.live && this.bufMgr && (e = `${e}_${"SegmentStore" === this.bufMgr.name ? "d" : "m"}`),
                e
            }
            onTrackerResume(e) {
                e.report_url && this.logger.enableReport(e.report_url)
            }
            async _init(e, t, s) {
                const {logger: i, config: r} = this;
                await this.initSegmentManager((e=>{
                    if (this.tracker) {
                        const {scheduler: t} = this.tracker;
                        t.bufferManager = e,
                        t.bitset.clear()
                    }
                }
                )),
                s.live || this.media && (s.pos = Math.round(this.media.currentTime)),
                s.tag = r.tag || this.generateTag();
                let n = new tt(this,r.token,encodeURIComponent(e),r.announce || "",s);
                this.fetcher = n,
                this.tracker = new lt(this,n,t,r),
                t.bufferManager = this.bufMgr,
                this.setupWindowListeners()
            }
            _onHlsError(e, s) {
                if (!s || !this.hlsjs)
                    return;
                const {logger: i, tracker: r} = this
                  , n = `${s.type} details ${s.details} reason ${s.reason}`;
                if (s.fatal ? i.error(n) : i.warn(n),
                "networkError" === s.type)
                    return;
                const {player: o} = this.browserInfo
                  , a = `${o || ""} hlsjs ${this.hlsjsVersion} ${location.href}`
                  , h = this.hlsjs.constructor.ErrorDetails;
                switch (s.details) {
                case h.BUFFER_STALLED_ERROR:
                    this.fetcher && this.fetcher.increRebuffers(),
                    r && r.scheduler && i.warn("buffered: " + 1e3 * r.scheduler.getBufferedDuration());
                    break;
                case h.INTERNAL_EXCEPTION:
                    if (s.event && "demuxerWorker" !== s.event) {
                        s.error || (s.error = {});
                        const e = `${s.error.message} event ${s.event} ${a}`;
                        this.fetcher && s.fatal && (this.fetcher.errsInternalExpt++,
                        this.fetcher.exptMsg = e),
                        i.error(`INTERNAL_EXCEPTION event ${s.event} err ${s.error.message}`),
                        this.emit(t.EXCEPTION, ke()(s.error, "HLSJS_EXPT")),
                        i && i.reportUrl && i.report(e, s.event, this.peerId, "2.10.3")
                    }
                    break;
                default:
                    if (s.fatal) {
                        const e = `${s.type} ${s.details} ${s.err || ""} ${a}`;
                        i && i.reportUrl && i.report(e, s.details, this.peerId, "2.10.3"),
                        "mediaError" === s.type && this.tracker && this.tracker.scheduler && this.tracker.scheduler.clearCache()
                    }
                }
            }
        }
        class dt {
            constructor() {
                this.method = null,
                this.key = null,
                this.iv = null,
                this._uri = null
            }
            get uri() {
                return !this._uri && this.reluri && (this._uri = a.buildAbsoluteURL(this.baseuri, this.reluri, {
                    alwaysNormalize: !0
                })),
                this._uri
            }
        }
        class ut {
            constructor() {
                this._url = null,
                this._byteRange = null,
                this._decryptdata = null,
                this.tagList = [],
                this.programDateTime = null,
                this.rawProgramDateTime = null,
                this._elementaryStreams = {
                    [ut.ElementaryStreamTypes.AUDIO]: !1,
                    [ut.ElementaryStreamTypes.VIDEO]: !1
                }
            }
            static get ElementaryStreamTypes() {
                return {
                    AUDIO: "audio",
                    VIDEO: "video"
                }
            }
            get url() {
                return !this._url && this.relurl && (this._url = a.buildAbsoluteURL(this.baseurl, this.relurl, {
                    alwaysNormalize: !0
                })),
                this._url
            }
            set url(e) {
                this._url = e
            }
            get byteRange() {
                if (!this._byteRange && !this.rawByteRange)
                    return [];
                if (this._byteRange)
                    return this._byteRange;
                let e = [];
                if (this.rawByteRange) {
                    const t = this.rawByteRange.split("@", 2);
                    if (1 === t.length) {
                        const t = this.lastByteRangeEndOffset;
                        e[0] = t || 0
                    } else
                        e[0] = parseInt(t[1]);
                    e[1] = parseInt(t[0]) + e[0],
                    this._byteRange = e
                }
                return e
            }
            get byteRangeStartOffset() {
                return this.byteRange[0]
            }
            get byteRangeEndOffset() {
                return this.byteRange[1]
            }
            get decryptdata() {
                return this._decryptdata || (this._decryptdata = this.fragmentDecryptdataFromLevelkey(this.levelkey, this.sn)),
                this._decryptdata
            }
            get endProgramDateTime() {
                if (!Number.isFinite(this.programDateTime))
                    return null;
                let e = Number.isFinite(this.duration) ? this.duration : 0;
                return this.programDateTime + 1e3 * e
            }
            get encrypted() {
                return !(!this.decryptdata || null === this.decryptdata.uri || null !== this.decryptdata.key)
            }
            addElementaryStream(e) {
                this._elementaryStreams[e] = !0
            }
            hasElementaryStream(e) {
                return !0 === this._elementaryStreams[e]
            }
            createInitializationVector(e) {
                let t = new Uint8Array(16);
                for (let s = 12; s < 16; s++)
                    t[s] = e >> 8 * (15 - s) & 255;
                return t
            }
            fragmentDecryptdataFromLevelkey(e, t) {
                let s = e;
                return e && e.method && e.uri && !e.iv && (s = new dt,
                s.method = e.method,
                s.baseuri = e.baseuri,
                s.reluri = e.reluri,
                s.iv = this.createInitializationVector(t)),
                s
            }
        }
        class gt {
            constructor(e) {
                this.endCC = 0,
                this.endSN = 0,
                this.fragments = [],
                this.initSegment = null,
                this.live = !0,
                this.needSidxRanges = !1,
                this.startCC = 0,
                this.startSN = 0,
                this.startTimeOffset = null,
                this.targetduration = 0,
                this.totalduration = 0,
                this.type = null,
                this.url = e,
                this.version = null
            }
            get hasProgramDateTime() {
                return !(!this.fragments[0] || !Number.isFinite(this.fragments[0].programDateTime))
            }
        }
        const ft = /^(\d+)x(\d+)$/
          , pt = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g;
        class mt {
            constructor(e) {
                "string" == typeof e && (e = mt.parseAttrList(e));
                for (let t in e)
                    e.hasOwnProperty(t) && (this[t] = e[t])
            }
            decimalInteger(e) {
                const t = parseInt(this[e], 10);
                return t > Number.MAX_SAFE_INTEGER ? 1 / 0 : t
            }
            hexadecimalInteger(e) {
                if (this[e]) {
                    let t = (this[e] || "0x").slice(2);
                    t = (1 & t.length ? "0" : "") + t;
                    const s = new Uint8Array(t.length / 2);
                    for (let e = 0; e < t.length / 2; e++)
                        s[e] = parseInt(t.slice(2 * e, 2 * e + 2), 16);
                    return s
                }
                return null
            }
            hexadecimalIntegerAsNumber(e) {
                const t = parseInt(this[e], 16);
                return t > Number.MAX_SAFE_INTEGER ? 1 / 0 : t
            }
            decimalFloatingPoint(e) {
                return parseFloat(this[e])
            }
            enumeratedString(e) {
                return this[e]
            }
            decimalResolution(e) {
                const t = ft.exec(this[e]);
                if (null !== t)
                    return {
                        width: parseInt(t[1], 10),
                        height: parseInt(t[2], 10)
                    }
            }
            static parseAttrList(e) {
                let t, s = {};
                for (pt.lastIndex = 0; null !== (t = pt.exec(e)); ) {
                    let e = t[2]
                      , i = '"';
                    0 === e.indexOf(i) && e.lastIndexOf(i) === e.length - 1 && (e = e.slice(1, -1)),
                    s[t[1]] = e
                }
                return s
            }
        }
        const _t = mt
          , yt = {
            audio: {
                a3ds: !0,
                "ac-3": !0,
                "ac-4": !0,
                alac: !0,
                alaw: !0,
                dra1: !0,
                "dts+": !0,
                "dts-": !0,
                dtsc: !0,
                dtse: !0,
                dtsh: !0,
                "ec-3": !0,
                enca: !0,
                g719: !0,
                g726: !0,
                m4ae: !0,
                mha1: !0,
                mha2: !0,
                mhm1: !0,
                mhm2: !0,
                mlpa: !0,
                mp4a: !0,
                "raw ": !0,
                Opus: !0,
                samr: !0,
                sawb: !0,
                sawp: !0,
                sevc: !0,
                sqcp: !0,
                ssmv: !0,
                twos: !0,
                ulaw: !0
            },
            video: {
                avc1: !0,
                avc2: !0,
                avc3: !0,
                avc4: !0,
                avcp: !0,
                drac: !0,
                dvav: !0,
                dvhe: !0,
                encv: !0,
                hev1: !0,
                hvc1: !0,
                mjp2: !0,
                mp4v: !0,
                mvc1: !0,
                mvc2: !0,
                mvc3: !0,
                mvc4: !0,
                resv: !0,
                rv60: !0,
                s263: !0,
                svc1: !0,
                svc2: !0,
                "vc-1": !0,
                vp08: !0,
                vp09: !0
            }
        };
        const vt = /#EXT-X-STREAM-INF:([^\n\r]*)[\r\n]+([^\r\n]+)/g
          , St = /#EXT-X-MEDIA:(.*)/g
          , Pt = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /|(?!#)([\S+ ?]+)/.source, /|#EXT-X-BYTERANGE:*(.+)/.source, /|#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /|#.*/.source].join(""),"g")
          , bt = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)([^:]*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/
          , wt = /\.(mp4|m4s|m4v|m4a)$/i;
        class Et {
            static findGroup(e, t) {
                if (!e)
                    return null;
                let s = null;
                for (let i = 0; i < e.length; i++) {
                    const r = e[i];
                    r.id === t && (s = r)
                }
                return s
            }
            static convertAVC1ToAVCOTI(e) {
                let t, s = e.split(".");
                return s.length > 2 ? (t = s.shift() + ".",
                t += parseInt(s.shift()).toString(16),
                t += ("000" + parseInt(s.shift()).toString(16)).substr(-4)) : t = e,
                t
            }
            static resolve(e, t) {
                return a.buildAbsoluteURL(t, e, {
                    alwaysNormalize: !0
                })
            }
            static parseMasterPlaylist(e, t) {
                let s, i = [];
                function r(e, t) {
                    ["video", "audio"].forEach((s=>{
                        const i = e.filter((e=>function(e, t) {
                            const s = yt[t];
                            return !!s && !0 === s[e.slice(0, 4)]
                        }(e, s)));
                        if (i.length) {
                            const r = i.filter((e=>0 === e.lastIndexOf("avc1", 0) || 0 === e.lastIndexOf("mp4a", 0)));
                            t[`${s}Codec`] = r.length > 0 ? r[0] : i[0],
                            e = e.filter((e=>-1 === i.indexOf(e)))
                        }
                    }
                    )),
                    t.unknownCodecs = e
                }
                for (vt.lastIndex = 0; null != (s = vt.exec(e)); ) {
                    const e = {}
                      , n = e.attrs = new _t(s[1]);
                    e.url = Et.resolve(s[2], t);
                    const o = n.decimalResolution("RESOLUTION");
                    o && (e.width = o.width,
                    e.height = o.height),
                    e.bitrate = n.decimalInteger("AVERAGE-BANDWIDTH") || n.decimalInteger("BANDWIDTH"),
                    e.name = n.NAME,
                    r([].concat((n.CODECS || "").split(/[ ,]+/)), e),
                    e.videoCodec && -1 !== e.videoCodec.indexOf("avc1") && (e.videoCodec = Et.convertAVC1ToAVCOTI(e.videoCodec)),
                    i.push(e)
                }
                return i
            }
            static parseMasterPlaylistMedia(e, t, s, i=[]) {
                let r, n = [], o = 0;
                for (St.lastIndex = 0; null !== (r = St.exec(e)); ) {
                    const e = {}
                      , a = new _t(r[1]);
                    if (a.TYPE === s) {
                        if (e.groupId = a["GROUP-ID"],
                        e.name = a.NAME,
                        e.type = s,
                        e.default = "YES" === a.DEFAULT,
                        e.autoselect = "YES" === a.AUTOSELECT,
                        e.forced = "YES" === a.FORCED,
                        a.URI && (e.url = Et.resolve(a.URI, t)),
                        e.lang = a.LANGUAGE,
                        e.name || (e.name = e.lang),
                        i.length) {
                            const t = Et.findGroup(i, e.groupId);
                            e.audioCodec = t ? t.codec : i[0].codec
                        }
                        e.id = o++,
                        n.push(e)
                    }
                }
                return n
            }
            static parseLevelPlaylist(e, t) {
                let s, i, r = 0, n = 0, o = new gt(t), a = new dt, h = 0, l = null, c = new ut, d = null;
                for (Pt.lastIndex = 0; null !== (s = Pt.exec(e)); ) {
                    const e = s[1];
                    if (e) {
                        c.duration = parseFloat(e);
                        const t = (" " + s[2]).slice(1);
                        c.title = t || null,
                        c.tagList.push(t ? ["INF", e, t] : ["INF", e])
                    } else if (s[3]) {
                        if (Number.isFinite(c.duration)) {
                            const e = r++;
                            c.start = n,
                            c.levelkey = a,
                            c.sn = e,
                            c.cc = h,
                            c.baseurl = t,
                            c.relurl = (" " + s[3]).slice(1),
                            Ct(c, l),
                            o.fragments.push(c),
                            l = c,
                            n += c.duration,
                            c = new ut
                        }
                    } else if (s[4]) {
                        if (c.rawByteRange = (" " + s[4]).slice(1),
                        l) {
                            const e = l.byteRangeEndOffset;
                            e && (c.lastByteRangeEndOffset = e)
                        }
                    } else if (s[5])
                        c.rawProgramDateTime = (" " + s[5]).slice(1),
                        c.tagList.push(["PROGRAM-DATE-TIME", c.rawProgramDateTime]),
                        null === d && (d = o.fragments.length);
                    else {
                        for (s = s[0].match(bt),
                        i = 1; i < s.length && void 0 === s[i]; i++)
                            ;
                        const e = (" " + s[i + 1]).slice(1)
                          , n = (" " + s[i + 2]).slice(1);
                        switch (s[i]) {
                        case "#":
                            c.tagList.push(n ? [e, n] : [e]);
                            break;
                        case "PLAYLIST-TYPE":
                            o.type = e.toUpperCase();
                            break;
                        case "MEDIA-SEQUENCE":
                            r = o.startSN = parseInt(e);
                            break;
                        case "TARGETDURATION":
                            o.targetduration = parseFloat(e);
                            break;
                        case "VERSION":
                            o.version = parseInt(e);
                            break;
                        case "EXTM3U":
                            break;
                        case "ENDLIST":
                            o.live = !1;
                            break;
                        case "DIS":
                            h++,
                            c.tagList.push(["DIS"]);
                            break;
                        case "DISCONTINUITY-SEQ":
                            h = parseInt(e);
                            break;
                        case "KEY":
                            var u = new _t(e)
                              , g = u.enumeratedString("METHOD")
                              , f = u.URI
                              , p = u.hexadecimalInteger("IV");
                            g && (a = new dt,
                            f && ["AES-128", "SAMPLE-AES", "SAMPLE-AES-CENC"].indexOf(g) >= 0 && (a.method = g,
                            a.baseuri = t,
                            a.reluri = f,
                            a.key = null,
                            a.iv = p));
                            break;
                        case "START":
                            let i = new _t(e).decimalFloatingPoint("TIME-OFFSET");
                            Number.isFinite(i) && (o.startTimeOffset = i);
                            break;
                        case "MAP":
                            let l = new _t(e);
                            c.relurl = l.URI,
                            c.rawByteRange = l.BYTERANGE,
                            c.baseurl = t,
                            c.sn = "initSegment",
                            o.initSegment = c,
                            c = new ut,
                            c.rawProgramDateTime = o.initSegment.rawProgramDateTime;
                            break;
                        default:
                            console.warn(`line parsed but not handled: ${s}`)
                        }
                    }
                }
                return c = l,
                c && !c.relurl && (o.fragments.pop(),
                n -= c.duration),
                o.totalduration = n,
                o.averagetargetduration = n / o.fragments.length,
                o.endSN = r - 1,
                o.startCC = o.fragments[0] ? o.fragments[0].cc : 0,
                o.endCC = h,
                !o.initSegment && o.fragments.length && o.fragments.every((e=>wt.test(e.relurl))) && (console.warn("MP4 fragments found but no init segment (probably no MAP, incomplete M3U8), trying to fetch SIDX"),
                c = new ut,
                c.relurl = o.fragments[0].relurl,
                c.baseurl = t,
                c.level = id,
                c.sn = "initSegment",
                o.initSegment = c,
                o.needSidxRanges = !0),
                d && function(e, t) {
                    let s = e[t];
                    for (let i = t - 1; i >= 0; i--) {
                        const t = e[i];
                        t.programDateTime = s.programDateTime - 1e3 * t.duration,
                        s = t
                    }
                }(o.fragments, d),
                o
            }
        }
        function Ct(e, t) {
            e.rawProgramDateTime ? e.programDateTime = Date.parse(e.rawProgramDateTime) : t && t.programDateTime && (e.programDateTime = t.endProgramDateTime),
            Number.isFinite(e.programDateTime) || (e.programDateTime = null,
            e.rawProgramDateTime = null)
        }
        const It = 0
          , Tt = 1
          , Lt = 2
          , Rt = 3
          , At = (e,t,s,i)=>{
            const r = Dt(e, Tt, t, s, i);
            if (r.length >= 2)
                return [r[0], r[1]];
            if (1 === r.length) {
                const n = Dt(e, Lt, t, s, i);
                if (n.length >= 1)
                    return [n[0], r[0]];
                const o = Dt(e, Rt, t, s, i);
                return o.length >= 1 ? [r[0], o[0]] : 0 === p(0, 1) ? [null, r[0]] : [r[0], null]
            }
            const n = Dt(e, Lt, t, s, i);
            if (n.length >= 1)
                return [n[0], null];
            const o = Dt(e, Rt, t, s, i);
            return o.length >= 1 ? [null, o[0]] : [null, null]
        }
          , Dt = (e,t,s,i,r)=>e.filter((e=>e.bitset.hasWithId(s, i, r, t)));
        class Mt {
            constructor(e=!1, t) {
                this.isLive = e,
                this.levelMap = new Map;
                for (let e in t) {
                    const s = Number(e);
                    if (s < 0)
                        continue;
                    const i = new Map;
                    if (t[e])
                        for (let s of t[e])
                            i.set(s, {
                                state: Tt,
                                segId: void 0
                            });
                    this.levelMap.set(s, i)
                }
            }
            totalLevels() {
                return this.levelMap.size
            }
            hasWithId(e, t, s, i=It) {
                if (t < 0)
                    return !1;
                const r = this._createOrGetSet(t).get(e);
                return !!r && ((!s || !r.segId || r.segId === s) && (i === It || r.state === i))
            }
            has(e, t, s=It) {
                return this.hasWithId(e, t, void 0, s)
            }
            hasCompleteOr(e, t, s=Tt) {
                const i = this._createOrGetSet(t).get(e);
                return !!i && (i.state === Tt || i.state === s)
            }
            getObj(e, t) {
                let s = this._createOrGetSet(t).get(e);
                return s || (s = {}),
                s
            }
            getSegId(e, t) {
                return this.getObj(e, t).segId
            }
            getState(e, t) {
                return this.getObj(e, t).state
            }
            delete(e, t) {
                return this._createOrGetSet(t).delete(e)
            }
            add(e, t, s, i) {
                if ("number" != typeof (r = e) || r % 1 != 0)
                    return;
                var r;
                this._createOrGetSet(t).set(e, {
                    state: i,
                    segId: s
                }),
                this.isLive && this._trimBitset(e)
            }
            array(e) {
                const t = this._createOrGetSet(e);
                return this._keysForStateComplete(t)
            }
            allArray() {
                let e = {};
                return this.levelMap.forEach(((t,s)=>{
                    e[s] = this._keysForStateComplete(t)
                }
                )),
                e
            }
            clear() {
                this.levelMap.forEach((e=>{
                    e.clear()
                }
                ))
            }
            size(e) {
                return this._createOrGetSet(e).size
            }
            _createOrGetSet(e) {
                "number" != typeof e && (e = Number(e));
                let t = this.levelMap.get(e);
                return t || (t = new Map,
                this.levelMap.set(e, t)),
                t
            }
            _trimBitset(e) {
                const t = e - 20;
                t > 0 && this.levelMap.forEach((e=>{
                    e.delete(t)
                }
                ))
            }
            _keysForStateComplete(e) {
                const t = [];
                for (let[s,i] of e)
                    i.state === Tt && t.push(s);
                return t
            }
        }
        class Nt {
            constructor() {
                this.levelMap = new Map
            }
            totalLevels() {
                return this.levelMap.size
            }
            has(e, t) {
                return this._createOrGetMap(t).has(e)
            }
            delete(e, t) {
                return this._createOrGetMap(t).delete(e)
            }
            decre(e, t) {
                const s = this._createOrGetMap(t);
                if (s.has(e)) {
                    let t = s.get(e);
                    1 === t ? s.delete(e) : s.set(e, t - 1)
                }
            }
            incre(e, t) {
                const s = this._createOrGetMap(t);
                if (s.has(e)) {
                    let t = s.get(e);
                    s.set(e, t + 1)
                } else
                    s.set(e, 1)
            }
            clear() {
                this.levelMap.forEach((e=>{
                    e.clear()
                }
                ))
            }
            size(e) {
                return this._createOrGetMap(e).size
            }
            _createOrGetMap(e) {
                "number" != typeof e && (e = Number(e));
                let t = this.levelMap.get(e);
                return t || (t = new Map,
                this.levelMap.set(e, t)),
                t
            }
        }
        const Ot = class {
            constructor() {
                this.peerMap = new Map
            }
            isEmpty() {
                return 0 === this.peerMap.size
            }
            size() {
                return this.peerMap.size
            }
            clear() {
                this.peerMap.clear()
            }
            getPeers() {
                return [...this.peerMap.values()]
            }
            getPeerValues() {
                return this.peerMap.values()
            }
            hasPeer(e) {
                return this.peerMap.has(e)
            }
            addPeer(e, t) {
                this.peerMap.set(e, t)
            }
            getPeerIds() {
                return [...this.peerMap.keys()]
            }
            removePeer(e) {
                this.peerMap.delete(e)
            }
            getPeersOrderByWeight() {
                const e = this.getAvailablePeers();
                return e.sort(((e,t)=>0 === t.weight ? 1 : 0 === e.weight ? -1 : t.weight - e.weight)),
                e
            }
            getPeer(e) {
                return this.peerMap.get(e)
            }
            getAvailablePeers() {
                return this.getPeers().filter((e=>e.isAvailableUrgently))
            }
        }
          , kt = Symbol("shareOnly");
        class $t extends (n()) {
            constructor(e, t) {
                super(),
                this.engine = e,
                this.config = t,
                this.logger = e.logger,
                this.bufMgr = null,
                this.peerManager = new Ot,
                this.fragLoading = !1,
                this._setupEngine && this._setupEngine(),
                this.startCheckConnsTimer(),
                this.dcDownloadTimeout = t.dcDownloadTimeout,
                this[kt] = !1,
                this.downloadOnly = !1,
                this.loadedPeerNum = 0,
                this.minConns = 5
            }
            get isMobileNet() {
                return this.engine.isMobileNet
            }
            startCheckConnsTimer() {
                this.checkConnsTimer = setInterval((()=>{
                    this.logger.info("start check conns");
                    const e = this.getStatsForPeer();
                    let t = this.peersNum;
                    const s = f();
                    this.getPeers().forEach((i=>{
                        t > this.minConns + 1 && (s - i.dataExchangeTs > 120 || s - i.gotStatsTs >= 83) ? (this.logger.warn(`close dead or different level peer ${i.remotePeerId} level ${i.currentLevel}`),
                        i.close(!1),
                        t--) : i.connected && i.sendMsgStats(t, e)
                    }
                    ))
                }
                ), 4e4)
            }
            getStatsForPeer() {
                return {}
            }
            requestPeers() {
                const e = f();
                let t = 0;
                for (let s of this.getPeers())
                    s.mobileNet || s.super || (e - s.gotPeersTS < 60 ? this.logger.warn(`${s.remotePeerId} just got peers, ignored`) : (s.sendPeersRequest(),
                    s.gotPeersTS = e,
                    t++));
                return t
            }
            chokePeerRequest(t) {
                const s = {
                    event: e.DC_CHOKE
                };
                t ? t.sendJson(s) : this._broadcastToPeers(s)
            }
            unchokePeerRequest(t) {
                const s = {
                    event: e.DC_UNCHOKE
                };
                t ? t.sendJson(s) : this._broadcastToPeers(s)
            }
            stopRequestFromPeers() {
                for (let e of this.getPeers())
                    e.choked = !0
            }
            resumeRequestFromPeers() {
                for (let e of this.getPeers())
                    e.choked = !1
            }
            setShareOnly() {
                this[kt] = !0
            }
            deletePeer(e) {
                this.peerManager.hasPeer(e.remotePeerId) && this.peerManager.removePeer(e.remotePeerId),
                this._peersStats(this.peerManager.getPeerIds())
            }
            getPeers() {
                return [...this.peerManager.getPeerValues()]
            }
            addPeer(e) {
                const {logger: t} = this;
                this.peerManager.addPeer(e.remotePeerId, e),
                this[kt] && (e.choked = !0);
                const s = this.peerManager.getPeerIds();
                this._peersStats(s);
                const {asn: i, country: r} = e.region || {};
                t.info(`add peer ${e.remotePeerId} country ${r || ""} asn ${i || ""}, now has ${s.length} peers`)
            }
            hasPeer(e) {
                return this.peerManager.hasPeer(e)
            }
            get hasPeers() {
                return this.peersNum > 0
            }
            get peersNum() {
                return this.peerManager.size()
            }
            get hasIdlePeers() {
                const {logger: e} = this
                  , t = this.getIdlePeer().length;
                if (e.info(`peers: ${this.peersNum} idle peers: ${t}`),
                t < this.peersNum) {
                    const t = this.peerManager.getPeers()
                      , s = t.filter((e=>e.downloading));
                    e.warn(`downloading: ${s.length} choked: ${t.filter((e=>e.choked)).length}`);
                    for (let t of s)
                        e.warn(`${t.remotePeerId} loading ${t.segId} packets ${t.bufArr.length} total ${t.pieceMsg.attachments}`)
                }
                return t > 0
            }
            getIdlePeer() {
                return this.peerManager.getAvailablePeers()
            }
            set bufferManager(t) {
                this.bufMgr = t,
                t.on(e.BM_LOST, (({sn: e, segId: t, next: s, level: i})=>{
                    this._broadcastLost(e, t, i),
                    this.onBufferManagerLost(e, t, s, i)
                }
                )).on(e.BM_SEG_ADDED, (e=>{
                    this.onBufferManagerSegAdded(e)
                }
                ))
            }
            onBufferManagerSegAdded(e) {}
            _broadcastLost(t, s, i, r) {
                this.config.live || this._broadcastToPeers({
                    event: e.DC_LOST,
                    sn: t,
                    seg_id: s || void 0,
                    level: i
                }, r)
            }
            destroy() {
                const {logger: e} = this;
                this.peersNum > 0 && this.peerManager.clear(),
                this.removeAllListeners(),
                clearInterval(this.checkConnsTimer),
                clearTimeout(this.checkTimer),
                e.warn("destroy BtScheduler")
            }
            notifyPeersLoaded(e) {}
            _setupDC(t) {
                const {logger: s} = this;
                t.on(e.DC_PIECE_ACK, (e=>{
                    e.size && (this.engine.fetcher.reportUploaded(e.size),
                    s.info(`uploaded ${e.seg_id} size ${e.size} to ${t.remotePeerId}, canceled ${e.canceled || !1}`))
                }
                )).on(e.DC_PIECE_ABORT, (e=>{
                    s.warn(`peer ${t.remotePeerId} download aborted, reason ${e.reason}`),
                    t.downloading && this._handlePieceAborted && this._handlePieceAborted(t.remotePeerId),
                    t.downloading = !1
                }
                )).on(e.DC_DISCONNECT, (()=>{
                    this.peersNum >= this.minConns && (this.logger.warn(`close disconnected peer ${t.remotePeerId}`),
                    t.close(!1))
                }
                ))
            }
            _broadcastToPeers(e, t) {
                for (let s of this.getPeers())
                    t && s === t || s.sendJson(e)
            }
            _peersStats(e) {
                this.engine.emit("peers", e);
                const t = this.engine.config.getPeersInfo;
                E(t) && t(e)
            }
            startCheckPeersTimer() {
                this.logger.info("startCheckPeersTimer");
                const e = ()=>{
                    this.checkPeers();
                    const t = 1e3 * (0 === (s = this.loadedPeerNum) ? 3 : .5 * s + 1.67);
                    var s;
                    this.loadedPeerNum = 0,
                    this.checkTimer = setTimeout(e, t)
                }
                ;
                this.checkTimer = setTimeout(e, 2e4)
            }
        }
        const Bt = $t;
        class xt extends (n()) {
            constructor() {
                super(),
                this.internalMap = new Map
            }
            has(e) {
                return this.internalMap.has(e)
            }
            set(e, t) {
                this.internalMap.set(e, t),
                y(this.internalMap, 13, (e=>{
                    e && e.destroy()
                }
                ))
            }
            get(e) {
                return this.internalMap.get(e)
            }
            delete(e) {
                const t = this.internalMap.get(e);
                t && (t.destroy(),
                this.internalMap.delete(e))
            }
            get size() {
                return this.internalMap.size
            }
            clear() {
                this.internalMap.clear(),
                this.removeAllListeners()
            }
        }
        const Ft = 0
          , qt = 1
          , zt = 2
          , Ut = 3;
        class Wt extends (n()) {
            constructor() {
                super(),
                this.UNSENT = 0,
                this.OPENED = 1,
                this.HEADERS_RECEIVED = 2,
                this.LOADING = 3,
                this.DONE = 4,
                this.timeout = 0,
                this.withCredentials = !1,
                this.status = 0,
                this.readyState = this.UNSENT,
                this.headers = new Map,
                this.responseHeaders = null,
                this.on("load", (e=>{
                    this.onload && this.onload(e)
                }
                )),
                this.on("abort", (e=>{
                    this.onabort && this.onabort(e)
                }
                )),
                this.on("error", (e=>{
                    this.onerror && this.onerror(e)
                }
                )),
                this.on("loadstart", (e=>{
                    this.onloadstart && this.onloadstart(e)
                }
                )),
                this.on("progress", (e=>{
                    this.onprogress && this.onprogress(e)
                }
                )),
                this.on("timeout", (e=>{
                    this.ontimeout && this.ontimeout(e)
                }
                )),
                this.on("loadend", (e=>{
                    this.onloadend && this.onloadend(e)
                }
                )),
                this.on("readystatechange", (()=>{
                    this.onreadystatechange && this.onreadystatechange()
                }
                ))
            }
            setRequestHeader(e, t) {
                this.headers.set(e, t)
            }
            addEventListener(e, t) {
                this.addListener(e, t)
            }
            removeEventListener(e, t) {
                this.removeListener(e, t)
            }
            overrideMimeType() {}
            getAllResponseHeaders() {
                if (!this.responseHeaders)
                    return null;
                let e = "";
                return this.responseHeaders.forEach(((t,s)=>{
                    e += `${s}: ${t}\n`
                }
                )),
                e
            }
            getResponseHeader(e) {
                return this.responseHeaders ? this.responseHeaders.get(e) : null
            }
            open() {
                this.readyState = this.OPENED,
                this.emit("loadstart")
            }
            abort() {
                this.readyState = this.DONE,
                this.status = 0,
                this.emit("loadend")
            }
            send() {}
            _emitEvent(e) {
                this.emit(e, {
                    type: e,
                    target: this
                })
            }
        }
        class Gt {
            constructor(e) {
                this.fetchSetup = e.fetchSetup || jt,
                this.xhrSetup = e.xhrSetup,
                function(e) {
                    try {
                        new e
                    } catch (e) {
                        return !1
                    }
                    return !0
                }(self.AbortController) && (this.controller = new self.AbortController),
                this.stats = function() {
                    const e = performance.now();
                    return {
                        trequest: e,
                        tfirst: 0,
                        tload: 0,
                        aborted: !1,
                        loaded: 0,
                        retry: 0,
                        total: 0,
                        chunkCount: 0,
                        bwEstimate: 0,
                        loading: {
                            start: e,
                            first: 0,
                            end: 0
                        },
                        parsing: {
                            start: 0,
                            end: 0
                        },
                        buffering: {
                            start: 0,
                            first: 0,
                            end: 0
                        }
                    }
                }(),
                this.packetSize = c,
                this.fakeXhr = new Wt
            }
            destroy() {
                this.loader = this.callbacks = null,
                this.abortInternal()
            }
            abortInternal() {
                const e = this.response;
                e && e.ok || (this.stats.aborted = !0,
                this.callbacks && this.callbacks.onUpdate && this.callbacks.onUpdate(void 0, !1, !0),
                this.controller && this.controller.abort())
            }
            abort() {
                this.abortInternal(),
                this.callbacks && this.callbacks.onAbort && this.callbacks.onAbort(this.stats, this.context, this.response)
            }
            load(e, t, s) {
                const i = this.stats;
                i.trequest = i.loading.start = performance.now();
                let r = function(e, t) {
                    const s = {
                        method: "GET",
                        mode: "cors",
                        credentials: "same-origin",
                        signal: t,
                        headers: new self.Headers(Object.assign({}, e.headers))
                    };
                    e.rangeEnd && s.headers.set("Range", "bytes=" + e.rangeStart + "-" + String(e.rangeEnd - 1));
                    return s
                }(e, this.controller ? this.controller.signal : void 0);
                const n = "arraybuffer" === e.responseType
                  , o = n ? "byteLength" : "length"
                  , a = s.onUpdate
                  , h = s.onBodyStart;
                this.context = e,
                this.config = t,
                this.callbacks = s,
                this.xhrSetup && (this.xhrSetup(this.fakeXhr, e.url),
                r = function(e, t) {
                    e.withCredentials && (t.credentials = "include");
                    for (let[s,i] of e.headers)
                        t.headers.set(s, i);
                    return t
                }(this.fakeXhr, r)),
                this.request = this.fetchSetup(e, r),
                clearTimeout(this.requestTimeout),
                this.requestTimeout = setTimeout((()=>{
                    this.abortInternal(),
                    this.fakeXhr._emitEvent("timeout"),
                    this.fakeXhr._emitEvent("loadend"),
                    s.onTimeout && s.onTimeout(i, e, this.response)
                }
                ), this.fakeXhr.timeout || t.timeout);
                const {fakeXhr: l} = this;
                l.readyState = l.OPENED,
                l.emit("readystatechange"),
                l._emitEvent("loadstart"),
                fetch(this.request).then((t=>{
                    if (this.response = this.loader = t,
                    !t.ok) {
                        const {status: e, statusText: s} = t;
                        throw a && a(void 0, !1, !0),
                        new Ht(s || "fetch, bad network response",e,t)
                    }
                    i.tfirst = i.loading.first = Math.max(performance.now(), i.loading.start),
                    i.total = parseInt(t.headers.get("Content-Length") || "0");
                    const {fakeXhr: s} = this;
                    return s.readyState = s.HEADERS_RECEIVED,
                    s.responseHeaders = t.headers,
                    s.emit("readystatechange"),
                    a && "0" !== i.total ? (h && h(i.total),
                    this.loadProgressively(t, i, e, a)) : (s.emit("progress", new ProgressEvent("progress",{
                        lengthComputable: !1
                    })),
                    n ? t.arrayBuffer() : t.text())
                }
                )).then((t=>{
                    const {response: r} = this;
                    clearTimeout(this.requestTimeout),
                    i.tload = i.loading.end = Math.max(performance.now(), i.loading.first),
                    i.loaded = i.total = t[o];
                    const n = {
                        url: r.url,
                        data: t
                    };
                    s.onProgress && s.onProgress(i, e, t, r),
                    s.onSuccess && s.onSuccess(n, i, e, r)
                }
                )).catch((t=>{
                    if (clearTimeout(this.requestTimeout),
                    i.aborted)
                        return;
                    a && a(void 0, !1, !0);
                    const r = t && t.code || 0
                      , n = t ? t.message : null;
                    s.onError && s.onError({
                        code: r,
                        text: n
                    }, e, t ? t.details : null)
                }
                ))
            }
            loadProgressively(e, t, s, i) {
                const r = e.body.getReader();
                let n = 0
                  , a = 0
                  , h = (0,
                o.h)(0)
                  , l = !1;
                const d = ()=>r.read().then((({value: s, done: r})=>{
                    const {fakeXhr: u} = this;
                    if (u.readyState !== u.LOADING && (u.readyState = u.LOADING,
                    u.emit("readystatechange")),
                    s && (n += s.length),
                    r) {
                        if (h.byteLength > 0)
                            if (n <= this.packetSize) {
                                const e = (0,
                                o.h)(n);
                                h.copy(e, 0, a * this.packetSize, h.byteLength),
                                i(e, !0)
                            } else {
                                const e = function(e, t) {
                                    const s = e.byteLength - t
                                      , i = [];
                                    let r = t
                                      , n = Math.floor(s / c)
                                      , a = s % c;
                                    for (let t = 0; t < n; t++) {
                                        const t = (0,
                                        o.h)(c);
                                        e.copy(t, 0, r, r + c),
                                        i.push(t),
                                        r += c
                                    }
                                    if (a > 0) {
                                        const t = (0,
                                        o.h)(a);
                                        e.copy(t, 0, r, r + a),
                                        i.push(t)
                                    }
                                    return i
                                }(h, a * this.packetSize);
                                for (let t = 0; t < e.length; t++)
                                    i(e[t], t === e.length - 1)
                            }
                        const t = h.buffer
                          , {fakeXhr: s} = this
                          , {status: r, statusText: l, url: d} = e;
                        return s.readyState = s.DONE,
                        s.responseText = r,
                        s.status = l,
                        s.responseURL = d,
                        s.responseType = "arraybuffer",
                        s.response = t,
                        s.emit("readystatechange"),
                        s._emitEvent("load"),
                        s._emitEvent("loadend"),
                        Promise.resolve(t)
                    }
                    if (t.loaded += s.length,
                    u.emit("progress", new ProgressEvent("progress",{
                        lengthComputable: !0,
                        loaded: t.loaded,
                        total: t.total
                    })),
                    this.callbacks.onLoaded && this.callbacks.onLoaded({
                        total: t.total,
                        loaded: t.loaded,
                        first: !l
                    }, this.context),
                    l = !0,
                    h = o.h.concat([h, s]),
                    n >= this.packetSize) {
                        n -= this.packetSize;
                        const e = (0,
                        o.h)(this.packetSize);
                        h.copy(e, 0, a * this.packetSize, (a + 1) * this.packetSize),
                        a++,
                        i(e, !1)
                    }
                    return d()
                }
                )).catch((()=>(this.fakeXhr._emitEvent("abort"),
                this.fakeXhr._emitEvent("loadend"),
                Promise.reject())));
                return d()
            }
        }
        function jt(e, t) {
            return new self.Request(e.url,t)
        }
        class Ht extends Error {
            constructor(e, t, s) {
                super(e),
                this.code = t,
                this.details = s
            }
        }
        class Xt extends (n()) {
            constructor(e, t, s=!1) {
                super(),
                this.coordinator = e,
                this.logger = t,
                this.rangeSupported = s,
                this.rangeStart = 0,
                this.rangeEnd = 0,
                this.httpLoadTime = 2e3,
                this.proxied = !1,
                this.forwardPeer = null,
                this.reversePeer = null,
                this.bufArr = [],
                this.forwardBufList = [],
                this.reverseBufList = [],
                this.forwardOffset = -1,
                this.reverseOffset = 1e4,
                this.timeStart = 0,
                this.timeReceivePiece = 0,
                this.timer = void 0,
                this.destroyed = !1,
                this.forwardStreamListeners = [],
                this.reverseStreamListeners = [],
                this.rangeRequesting = !1,
                this.waitingRemain = !1,
                this.httpLoaded = 0,
                this.p2pLoaded = 0,
                this.deadline = 0,
                this.p2pCanceled = !1,
                this.firstReceived = !1
            }
            isDownloading() {
                return this.timeReceivePiece > 0
            }
            isAlmostDeadline() {
                if (this.rangeRequesting || 0 === this.deadline)
                    return !0;
                const e = this.deadline - performance.now();
                return e <= 0 || (this.p2pSpeed > 3 * this.minRequiredSpeed(e) || e < 500)
            }
            hasPeer(e) {
                return !!e && (e === this.forwardPeer || e === this.reversePeer)
            }
            streamListeners() {
                return [...this.reverseStreamListeners, ...this.forwardStreamListeners].length
            }
            _notifyStreamListenersAbort() {
                const e = [...this.reverseStreamListeners, ...this.forwardStreamListeners];
                for (let t of e) {
                    const {handler: e} = t;
                    e(void 0, void 0, !0, "aborted by synthesizer")
                }
                this._resetStreamListeners()
            }
            _resetStreamListeners() {
                this.reverseStreamListeners.length = 0,
                this.forwardStreamListeners.length = 0
            }
            _notifyStreamListenersRemain() {
                if (this.forwardStreamListeners.length > 0) {
                    for (let e = this.forwardOffset + 1; e < this.bufArr.length; e++)
                        this._notifyStreamListeners(!1, this.bufArr[e], e);
                    this.forwardStreamListeners = []
                }
                if (this.reverseStreamListeners.length > 0) {
                    for (let e = this.reverseOffset - 1; e >= 0; e--)
                        this._notifyStreamListeners(!0, this.bufArr[e], e);
                    this.reverseStreamListeners = []
                }
            }
            addStreamListener(e, t, s) {
                (e ? this.reverseStreamListeners : this.forwardStreamListeners).push({
                    handler: s,
                    peerId: t
                })
            }
            removeStreamListener(e) {
                const t = t=>t.filter((t=>t.peerId !== e || (t.handler(void 0, void 0, !0, "aborted by cancel"),
                !1)));
                this.forwardStreamListeners = t(this.forwardStreamListeners),
                this.reverseStreamListeners = t(this.reverseStreamListeners)
            }
            setTimeout(e=0) {
                let t = performance.now();
                e <= 0 ? setTimeout((()=>{
                    this._handleTimeout(!1, !1)
                }
                ), 0) : (this.deadline = t + e,
                this._startTimer(e))
            }
            setExtra(e={}) {
                e.url && (this.url = e.url),
                e.rangeStart && (this.rangeStart = e.rangeStart),
                e.rangeEnd && (this.rangeEnd = e.rangeEnd),
                e.httpLoadTime && (this.httpLoadTime = e.httpLoadTime),
                e.proxied && (this.proxied = !0),
                e.xhrSetup && (this.xhrSetup = e.xhrSetup),
                e.headers && (this.headers = e.headers),
                e.segId && !this.pieceMsg.seg_id && (this.pieceMsg.seg_id = e.segId)
            }
            hasForwardPeer() {
                return !!this.forwardPeer
            }
            hasReversePeer() {
                return !!this.reversePeer
            }
            hasPeerId(e) {
                return this.forwardPeer && this.forwardPeer.remotePeerId === e || this.reversePeer && this.reversePeer.remotePeerId === e
            }
            isEmpty() {
                return null === this.forwardPeer && null === this.reversePeer
            }
            isFull() {
                return this.forwardPeer && this.reversePeer
            }
            setForwardPeer(e) {
                this.forwardPeer = e,
                this.reversePeer && this._print(),
                this._setupPeer(e, !1)
            }
            setReversePeer(e) {
                this.reversePeer = e,
                this.forwardPeer && this._print(),
                this._setupPeer(e, !0)
            }
            setPeer(e, t) {
                t ? this.setReversePeer(e) : this.setForwardPeer(e)
            }
            deletePeer(e) {
                const t = e === this.reversePeer;
                this._detachPeer(e),
                t ? this.reversePeer = null : this.forwardPeer = null,
                this.isEmpty() && this._handleTimeout(!1, !1)
            }
            terminate() {
                this._handleTimeout(!1, !1)
            }
            hasPartialBuffer() {
                return this.hasForwardBuffer() || this.hasReverseBuffer()
            }
            hasForwardBuffer() {
                return this.forwardOffset >= 0
            }
            hasReverseBuffer() {
                return this.pieceMsg && this.reverseOffset < this.pieceMsg.attachments
            }
            _cancelP2p() {
                if (this.p2pCanceled)
                    return;
                this.p2pCanceled = !0;
                const {seg_id: e, sn: t, level: s} = this.pieceMsg;
                [this.forwardPeer, this.reversePeer].filter((e=>!!e)).forEach((i=>{
                    i.cancelDownload(t, s, e)
                }
                ))
            }
            detachPeers() {
                this._detachPeer(this.forwardPeer),
                this._detachPeer(this.reversePeer)
            }
            destroy() {
                clearTimeout(this.timer),
                this._notifyStreamListenersAbort(),
                this._cancelP2p(),
                this.removeAllListeners(),
                this.destroyed = !0,
                this._detachPeer(this.forwardPeer),
                this.forwardPeer = null,
                this.forwardOffset = -1,
                this._detachPeer(this.reversePeer),
                this.reversePeer = null,
                this.reverseOffset = 1e4,
                this.bufArr = [],
                this.forwardStreamListeners = [],
                this.reverseStreamListeners = [],
                this.httpLoader && (this.logger.warn("abort syn httpLoader"),
                this.httpLoader.abort())
            }
            _detachPeer(t) {
                if (!t)
                    return;
                const s = t === this.reversePeer ? this.reverseEvents : this.forwardEvents;
                s && t.off(e.DC_PIECE_DATA, s.onPieceData).off(e.DC_PIECE, s.onPiece).off(e.DC_PIECE_NOT_FOUND, s.onPieceNotFound).off(e.DC_PIECE_ABORT, s.onPieceAbort)
            }
            _receivePacket(t, s, i, r=!0) {
                const {seg_id: n, sn: a, level: h, size: l, attachments: c} = this.pieceMsg
                  , d = s - 1;
                if (this.bufArr[d] ? (this.logger.warn(`syn bufArr ${n} already has ${d} size ${i.byteLength}`),
                this.bufArr[d] = i) : (r ? this.p2pLoaded += i.byteLength : this.httpLoaded += i.byteLength,
                this.emit(e.SYN_PROGRESS, {
                    total: l,
                    loaded: this.p2pLoaded + this.httpLoaded,
                    first: !this.firstReceived,
                    segId: n,
                    sn: a
                }),
                this.firstReceived = !0,
                this.bufArr[d] = i,
                t ? this.reverseOffset = d : this.forwardOffset = d,
                this._notifyStreamListeners(t, i, d)),
                this.forwardOffset !== this.reverseOffset - 1)
                    return !0;
                this.forwardPeer && (this.forwardPeer.miss = 0),
                this.reversePeer && (this.reversePeer.miss = 0),
                clearTimeout(this.timer),
                this._notifyStreamListenersRemain();
                const u = l / (performance.now() - this.timeStart);
                let g = o.h.concat(this.bufArr);
                const f = g.byteLength;
                if (f === l) {
                    let t = g.buffer;
                    const s = new H(a,n,t,this.getFromPeerId(),h);
                    this.emit(e.SYN_OUTPUT, s, {
                        speed: u,
                        p2p: this.p2pLoaded,
                        http: this.httpLoaded
                    })
                } else {
                    this.logger.error(`${n} expectedSize ${l} != byteLength ${f} forward ${this.forwardOffset} reverse ${this.reverseOffset}`);
                    for (let e = 0; e < this.bufArr.length; e++)
                        this.logger.error(`piece ${e} size ${this.bufArr[e].byteLength}`);
                    this.emit(e.SYN_ERROR, this.pieceMsg, Ft),
                    this._disconnectPeers()
                }
            }
            _disconnectPeers() {
                [this.forwardPeer, this.reversePeer].forEach((t=>{
                    t && t.emit(e.DC_ERROR, !0)
                }
                ))
            }
            _setupPeer(t, s) {
                const {logger: i} = this;
                0 === this.timeStart && (this.timeStart = performance.now());
                const r = (s,r,n,o,a,h)=>{
                    if (this.destroyed)
                        return;
                    if (!this._validateMsg(s, h.level, r))
                        return void i.error(`onPieceData ${r || s} not match ${JSON.stringify(this.pieceMsg)} from ${t.remotePeerId}`);
                    if (o < this.pieceMsg.attachments && n.byteLength !== c)
                        return i.error(`${r} dataSn ${o} size is ${n.byteLength}`),
                        this.emit(e.SYN_ERROR, this.pieceMsg, Ft),
                        void this._disconnectPeers();
                    const {reverse: l} = h;
                    this._receivePacket(l, o, n) && !this.waitingRemain && !this.rangeRequesting && this.deadline > 0 && this._shouldSwitch() && (i.warn("should switch to http"),
                    clearTimeout(this.timer),
                    this._handleTimeout(!1, !1))
                }
                  , n = e=>{
                    if (this.destroyed)
                        return;
                    const {attachments: s, size: r, sn: n, level: o, seg_id: a} = e;
                    return r && this._validateMsg(n, o, a) ? this.pieceMsg.size && r !== this.pieceMsg.size ? (i.warn(`onPiece ${a} size not match`),
                    void this.deletePeer(t)) : void (0 === this.bufArr.length && (this.pieceMsg = {
                        ...this.pieceMsg,
                        seg_id: a,
                        size: r,
                        attachments: s
                    },
                    this.reverseOffset = s,
                    this.bufArr = new Array(s),
                    this.timeReceivePiece = performance.now())) : (i.warn(`onPiece ${JSON.stringify(e)} not match ${JSON.stringify(this.pieceMsg)}`),
                    void this.deletePeer(t))
                }
                  , o = e=>{
                    this.destroyed || this.deletePeer(t)
                }
                  , a = ()=>{
                    this.destroyed || this.deletePeer(t)
                }
                  , h = {
                    onPieceData: r,
                    onPiece: n,
                    onPieceNotFound: o,
                    onPieceAbort: a
                };
                s ? this.reverseEvents = h : this.forwardEvents = h,
                t.on(e.DC_PIECE_DATA, r).once(e.DC_PIECE, n).once(e.DC_PIECE_NOT_FOUND, o).once(e.DC_PIECE_ABORT, a)
            }
            _shouldSwitch() {
                const e = c
                  , t = this.pieceMsg.size - e * this.loadedPackets();
                return this.coordinator.shouldSwitchToHttp(t, this.deadline, this.p2pSpeed, e, this.httpLoadTime)
            }
            _startTimer(e, t=!0) {
                this.timer = setTimeout(this._handleTimeout.bind(this, t), e)
            }
            loadedPackets() {
                return this.pieceMsg.attachments - (this.reverseOffset - this.forwardOffset - 1)
            }
            _handleTimeout(t=!1, s=!0) {
                if (this.destroyed)
                    return;
                const {seg_id: i, size: r, attachments: n} = this.pieceMsg;
                if (!r || 0 === this.timeReceivePiece)
                    return this.logger.warn(`syn load timeout ${i} url ${this.url}`),
                    void this.emit(e.SYN_ERROR, this.pieceMsg, Ft);
                if (t && this.timeReceivePiece > 0 && (this.logger.warn(`syn ${this.loadedPackets()} of ${n} packets loaded`),
                this.shouldWaitForRemain(this.httpLoadTime))) {
                    const e = this.httpLoadTime;
                    return this.waitingRemain = !0,
                    this.logger.info(`syn wait for remain ${e}`),
                    void this._startTimer(e, !1)
                }
                if (s) {
                    const e = [this.forwardPeer, this.reversePeer].filter((e=>!!e)).sort(((e,t)=>e.currentLoadSpeed() - t.currentLoadSpeed())).shift();
                    e && e.loadtimeout()
                }
                if (this._cancelP2p(),
                this.rangeSupported && this.url)
                    return this._loadRemainBufferByHttp();
                this._notifyStreamListenersAbort(),
                this.emit(e.SYN_ERROR, this.pieceMsg, Ut)
            }
            shouldWaitForRemain(e) {
                if (e <= 0 || this.isEmpty() || this.streamListeners() > 0)
                    return !1;
                const t = performance.now() - this.timeStart;
                return t < 500 || t < 1e3 && this.timeReceivePiece > 0 && e > 3e3 || this.shouldWaitForRemainUrgent(e)
            }
            shouldWaitForRemainUrgent(e) {
                if (0 === this.timeReceivePiece || e <= 0)
                    return !1;
                const t = this.p2pSpeed
                  , s = this.minRequiredSpeed(e);
                return this.logger.info(`syn remainTime ${e} speed ${t} required ${s}`),
                t >= s
            }
            minRequiredSpeed(e) {
                let t = 0;
                return [this.forwardPeer, this.reversePeer].forEach((e=>{
                    e && (t += e.loadedBytes())
                }
                )),
                (this.pieceMsg.size - t) / e
            }
            get p2pSpeed() {
                let e = 0;
                return [this.forwardPeer, this.reversePeer].forEach((t=>{
                    t && (e += t.currentLoadSpeed())
                }
                )),
                e
            }
            getFromPeerId() {
                const {forwardPeer: e, reversePeer: t} = this;
                return this.isFull() && e !== t ? `${e.remotePeerId}:${t.remotePeerId}` : e ? `${e.remotePeerId}` : t ? `${t.remotePeerId}` : ""
            }
            _loadRemainBufferByHttp() {
                if (this.rangeRequesting)
                    return;
                const {size: t, seg_id: s} = this.pieceMsg
                  , i = this.rangeEnd > 0 ? this.rangeEnd - 1 : 0;
                let r = this.forwardOffset;
                const n = performance.now();
                let o = this.deadline + this.httpLoadTime - n + 1e3;
                o < 2e3 ? o = 2e3 : o > 6e3 && (o = 6e3),
                this.rangeRequesting = !0;
                let a = de(r, this.reverseOffset, t, this.rangeStart, i);
                const h = a.rangeEnd - a.rangeStart;
                this.logger.info(`listeners ${this.streamListeners()} continue download ${s} from ${this.url} range: ${a.rangeStart}-${a.rangeEnd} timeout ${o}`),
                this.hasPartialBuffer() || (a = {});
                const c = new Gt({
                    xhrSetup: this.xhrSetup
                });
                this.httpLoader = c;
                let d = {
                    url: this.proxied ? g(this.url, l, !0) : this.url,
                    ...a
                };
                const u = {
                    timeout: o
                };
                let f, p = r + 1;
                const m = {
                    onUpdate: (t,s,i)=>{
                        if (!this.destroyed)
                            if (i)
                                this.emit(e.SYN_ERROR, this.pieceMsg, qt);
                            else {
                                if (s) {
                                    const e = f / (performance.now() - n);
                                    this.coordinator.addHttpSpeed(e),
                                    this.httpLoader = void 0
                                }
                                this.bufArr[p] || this._receivePacket(!1, p + 1, t, !1),
                                p++
                            }
                    }
                    ,
                    onBodyStart: t=>{
                        this.destroyed || (f = t,
                        t === this.pieceMsg.size && this.hasPartialBuffer() ? (this.logger.warn(`syn range request ${s} resp whole ts`),
                        p = 0) : t !== h && (this.logger.error(`onBodyStart total ${t} != expectedSize ${h}`),
                        this.emit(e.SYN_ERROR, this.pieceMsg, qt)))
                    }
                    ,
                    onError: t=>{
                        this.destroyed || (t.text && this.logger.error(t.text),
                        this.emit(e.SYN_ERROR, this.pieceMsg, qt))
                    }
                    ,
                    onTimeout: ()=>{
                        this.destroyed || this.emit(e.SYN_ERROR, this.pieceMsg, zt)
                    }
                };
                c.load(d, u, m)
            }
            _print() {
                const {seg_id: e, sn: t} = this.pieceMsg;
                this.logger.info(`syn parallel loading ${e || t}`)
            }
        }
        class Vt extends Xt {
            constructor(e, s, i, r, n, o=!1, a) {
                super(e, s, o, a),
                this.pieceMsg = {
                    event: t.DC_PIECE,
                    sn: i,
                    level: r,
                    seg_id: n
                },
                a && this.setExtra(a)
            }
            get segId() {
                return this.pieceMsg.seg_id
            }
            _notifyStreamListeners(e, t, s) {
                const {sn: i, seg_id: r, attachments: n} = this.pieceMsg
                  , o = e && 0 === s || !e && s === n - 1
                  , a = e ? this.reverseStreamListeners : this.forwardStreamListeners;
                e ? this.reverseBufList.push(t) : this.forwardBufList.push(t),
                o && (this.forwardBufList.push([...this.reverseBufList].reverse()),
                this.reverseBufList.push([...this.forwardBufList].reverse()));
                for (let e of a) {
                    const {handler: s} = e;
                    s(i, r, !1, t, o)
                }
                o && this._resetStreamListeners()
            }
            _validateMsg(e, t, s) {
                return (!this.pieceMsg.seg_id || s === this.pieceMsg.seg_id) && (e === this.pieceMsg.sn && t === this.pieceMsg.level)
            }
        }
        class Yt {
            constructor() {
                this.meanHttpSpeed = 0
            }
            addHttpSpeed(e) {
                this.meanHttpSpeed = .4 * this.meanHttpSpeed + .6 * e
            }
            shouldSwitchToHttp(e, t, s, i, r) {
                if (this.meanHttpSpeed <= 0)
                    return !1;
                if (s >= this.meanHttpSpeed)
                    return !1;
                if (this.meanHttpSpeed * r >= e)
                    return !1;
                return ((r + t - performance.now()) * this.meanHttpSpeed - e) / (this.meanHttpSpeed - s) * s < i
            }
        }
        class Jt extends Bt {
            constructor(e, t) {
                super(e, t),
                this.prefetchOnly = t.prefetchOnly,
                this.bitset = new Mt(t.live || !1),
                this.bitCounts = new Nt,
                this.requestingMap = new xt,
                this.segmentBuilderMap = new xt,
                this.allowP2pLimit = t.httpLoadTime + 1.5,
                this.playlistInfo = new Map,
                this.isUploader = !1,
                this.isReceiver = !1,
                this.targetPeers = {},
                this.mBufferedDuration = 0,
                this.sequential = !0,
                this.coordinator = new Yt,
                this.loadingSegId = "",
                this.loadingSN = 0,
                this.currPlaySN = 0,
                this.currLostSN = -1,
                this.nextLostSN = -1,
                this.config.live ? this.maxPrefetchCount = 10 : (this.maxPrefetchCount = 150,
                this.startCheckPeersTimer())
            }
            get httpRangeSupported() {
                return this.config.httpRangeSupported
            }
            handshakePeer(e) {
                this._setupDC(e);
                const {asn: t, country: s} = this.engine.fetcher.announceInfo;
                e.sendMetaData(this.bitset.allArray(), !0, this.peersNum, {
                    asn: t,
                    country: s
                }, this.isMobileNet)
            }
            _receiveDCHave(e, s, i, r) {
                this.bitset.has(e, s) || this.bitCounts.incre(e, s),
                r.isAvailableUrgently && this.emit(t.SCH_DCHAVE, i)
            }
            _setupDC(e) {
                super._setupDC(e),
                e.on(t.DC_HAVE, (t=>{
                    if (e.bitset && t.sn >= 0) {
                        const {sn: s, level: i, complete: r, seg_id: n} = t
                          , o = r ? Tt : Lt;
                        e.bitset.add(s, i, n, o),
                        this._receiveDCHave(s, i, n, e),
                        e.isAvailableUrgently && this._handleDCHave(e, s, i, n, o)
                    }
                }
                )).on(t.DC_HAVE_REVERSE, (t=>{
                    if (e.bitset && t.sn >= 0) {
                        const {sn: s, level: i, seg_id: r} = t;
                        e.bitset.hasCompleteOr(s, i, Rt) || e.bitset.add(s, i, r, Rt),
                        this._receiveDCHave(s, i, r, e),
                        e.isAvailableUrgently && this._handleDCHave(e, s, i, r, Rt)
                    }
                }
                )).on(t.DC_LOST, (t=>{
                    if (!e.bitset)
                        return;
                    const {sn: s, level: i} = t;
                    e.bitset.has(s, i) && (e.bitset.delete(s, i),
                    this.bitCounts.decre(s, i))
                }
                )).on(t.DC_PIECE, (e=>{
                    e.ext && e.ext.incompletes >= 7 || this.notifyAllPeers(e.sn, e.level, e.seg_id, e.reverse ? Rt : Lt)
                }
                )).on(t.DC_PIECE_CANCEL, (t=>{
                    const {sn: s, level: i} = t
                      , r = fe(s, i)
                      , n = this.requestingMap.get(r);
                    if (n)
                        return void n.removeStreamListener(e.remotePeerId);
                    const o = this.segmentBuilderMap.get(r);
                    o && o.removeStreamListener(e.remotePeerId)
                }
                )).on(t.DC_PIECE_NOT_FOUND, (t=>{
                    const {sn: s, level: i} = t;
                    e.bitset.delete(s, i),
                    this.bitCounts.decre(s, i),
                    e.checkIfNeedChoke(!0)
                }
                )).on(t.DC_DISCONNECT, (()=>{
                    this.cleanRequestingMap(e.remotePeerId)
                }
                )).on(t.DC_REQUEST, (async t=>{
                    const {logger: s} = this
                      , {sn: i, level: r, reverse: n} = t;
                    this.isUploader = !0;
                    let o = t.seg_id;
                    o || (o = await this.bufMgr.getSegIdBySN(i));
                    const a = ()=>{
                        this.bitset.delete(i, r),
                        e.sendPieceNotFound(i, o, {
                            level: r
                        }),
                        this._broadcastLost(i, o, r, e)
                    }
                      , h = await this.bufMgr.getSegById(o)
                      , l = fe(i, r)
                      , c = this.requestingMap.get(l);
                    let d = !1;
                    c && c.isDownloading() && (d = !0);
                    const u = this.segmentBuilderMap.get(l);
                    if (h)
                        s.info(`found seg ${o} from bufMgr`),
                        h.level === r ? e.sendBuffer(h.sn, h.segId, h.data, {
                            from: "Cache",
                            level: h.level,
                            reverse: n
                        }) : a();
                    else if (!n && u)
                        s.info(`peer request ${i} wait from builder, sent ${u.bufferList.length}`),
                        function(e, t) {
                            t.sendPartialBuffer(e.pieceMsg, e.bufferList, {
                                from: e.source,
                                incompletes: 1
                            }),
                            e.bufferList.length < e.pieceMsg.attachments ? g(e, t, !1) : t.uploading = !1
                        }(u, e);
                    else if (d) {
                        s.info(`syn had ${c.loadedPackets()} packets, wait remain from upstream ${c.getFromPeerId()}`);
                        const t = {
                            ...c.pieceMsg,
                            reverse: n
                        }
                          , i = n ? c.reverseBufList : c.forwardBufList;
                        e.sendPartialBuffer(t, i, {
                            from: c.isFull() ? "WaitPartialDouble" : "WaitPartialSingle",
                            incompletes: 1
                        }),
                        i.length < t.attachments ? g(c, e, n) : e.uploading = !1
                    } else
                        a();
                    function g(e, t, s) {
                        e.addStreamListener(s, t.remotePeerId, ((e,s,i,r,n)=>{
                            i ? t.sendMsgPieceAbort(r) : t.uploading && t.send(r),
                            n && (t.uploading = !1)
                        }
                        ))
                    }
                }
                ))
            }
            handleMetaData(e, t) {
                if (t.field) {
                    e.bitset = new Mt(this.config.live,t.field);
                    for (let e in t.field) {
                        const s = Number(e);
                        if (s < 0)
                            continue;
                        t.field[s].forEach((e=>{
                            this.bitset.has(e, s) || this.bitCounts.incre(e, s)
                        }
                        ))
                    }
                    this.addPeer(e),
                    this.downloadOnly && this.chokePeerRequest(e)
                }
            }
            peersHas(e, t) {
                return this.bitCounts.has(e, t)
            }
            deletePeer(e) {
                if (this.peerManager.hasPeer(e.remotePeerId) && e.bitset) {
                    const t = e.bitset.allArray();
                    for (let e in t) {
                        const s = Number(e)
                          , i = t[s];
                        i && i.forEach((e=>{
                            this.bitCounts.decre(e, s)
                        }
                        ))
                    }
                }
                this.cleanRequestingMap(e.remotePeerId),
                super.deletePeer(e)
            }
            hasAndSetTargetPeer(e, t, s, i) {
                const {logger: r, config: n} = this;
                this.waitForPeer && (this.mBufferedDuration = i = n.waitForPeerTimeout + n.httpLoadTime);
                let o = 1e3 * (i - n.httpLoadTime);
                const a = n.httpLoadTime + 1.5;
                if (r.info(`bufferedDuration ${1e3 * i} remainLoadTime ${o}`),
                i <= a)
                    return !1;
                const h = fe(e, t);
                if (this.requestingMap.has(h)) {
                    const l = this.requestingMap.get(h);
                    if (!l)
                        return this._searchAvailablePeers(e, t, s);
                    const c = l.segId;
                    if (c && c !== s)
                        return r.warn(`syn segId ${c} not match ${s}`),
                        this.requestingMap.delete(h),
                        this._searchAvailablePeers(e, t, s);
                    if (!l.shouldWaitForRemain(o)) {
                        if (r.warn(`syn prefetch timeout at ${e}`),
                        l.isFull())
                            return !1;
                        const o = this.peerManager.getPeersOrderByWeight()
                          , h = Dt(o, Tt, e, t, s);
                        let c = Dt(o, Lt, e, t, s)
                          , d = Dt(o, Rt, e, t, s);
                        if (l.hasReversePeer()) {
                            if (c = h.concat(c),
                            c.length > 0)
                                return this.targetPeers.forwardPeer = c[0],
                                !0
                        } else if (l.hasForwardPeer()) {
                            if (d = h.concat(d),
                            d.length > 0)
                                return this.targetPeers.reversePeer = d[0],
                                !0
                        } else {
                            if (h.length > 0)
                                return l.hasForwardBuffer() ? this.targetPeers.reversePeer = h[0] : this.targetPeers.forwardPeer = h[0],
                                !0;
                            {
                                let e = !1;
                                if (c.length > 0 && (this.targetPeers.forwardPeer = c[0],
                                e = !0),
                                d.length > 0 && (this.targetPeers.reversePeer = d[0],
                                e = !0),
                                e)
                                    return !0
                            }
                        }
                        return !l.isEmpty() && n.httpRangeSupported && i > a + 1
                    }
                    return r.info(`prefetch ${e} wait for remain`),
                    !0
                }
                return this._searchAvailablePeers(e, t, s)
            }
            _searchAvailablePeers(e, t, s) {
                if (!this.hasIdlePeers || !this.peersHas(e, t))
                    return !1;
                const i = this.peerManager.getPeersOrderByWeight()
                  , [r,n] = At(i, e, t, s);
                return this.targetPeers = {
                    forwardPeer: r,
                    reversePeer: n
                },
                [r, n].some((e=>!!e))
            }
            reportTraffic(e, t, s) {
                const {fetcher: i} = this.engine;
                i && (e > 0 && i.reportFlow(e),
                t > 0 && i.reportDCTraffic(t, s))
            }
            notifyAllPeers(e, t, s, i=Tt) {
                if (!s)
                    return void this.logger.error("segId is required");
                if (this.downloadOnly)
                    return;
                const {live: r} = this.config;
                if (this.bitset.has(e, t, i))
                    return;
                const n = ((e,t,s)=>`${e}-${t}-${s}`)(e, t, i);
                let o;
                i !== Rt && (o = i === Tt);
                const a = this.requestingMap.get(fe(e, t));
                for (let h of this.getPeers())
                    a && a.hasPeer(h) || h.notifySet.has(n) || h.bitset.hasCompleteOr(e, t, i) || h.uploading || (h.sendMsgHave(e, s, {
                        level: t,
                        reverse: i === Rt,
                        complete: o
                    }),
                    h.notifySet.add(n),
                    r && v(h.notifySet, 20))
            }
            checkPeers() {
                const {logger: e, config: t, engine: s} = this
                  , i = this.requestingMap.size;
                if (i > 5 && (e.warn(`requestingMap size ${i}`),
                i > 9))
                    return;
                if (!this.hasPeers)
                    return;
                const r = t.live;
                if (this.fragLoading && !r)
                    return void e.warn("loading urgently, skip prefetch");
                const {currentLevel: n} = s;
                if (0 === this.bitCounts.size(n))
                    return;
                if (!r && this.nextLostSN >= 0 && this.nextLostSN >= this.currPlaySN - 10)
                    return;
                if (this.mBufferedDuration < this.allowP2pLimit && (0 !== this.mBufferedDuration || this.isHlsjs))
                    return void e.info(`low buffer time ${this.mBufferedDuration}, skip prefetch`);
                let o = this.peerManager.getPeersOrderByWeight();
                if (0 === o.length)
                    return;
                let a = 0
                  , {prefetchNum: h, endSN: l, startSN: c} = t;
                r && (h = 2);
                let d = 0
                  , u = this.loadingSN + 1;
                if (this.prefetchOnly && u++,
                !r)
                    if (this.loadingSN >= l && !this.bufMgr.overflowed)
                        u = c;
                    else {
                        const e = Math.min(...o.filter((e=>e.endSN >= u)).map((e=>e ? e.startSN : 1 / 0)));
                        if (!isFinite(e))
                            return;
                        u < e && (u = e)
                    }
                for (; a < h && d < this.maxPrefetchCount && (r || !(u > l)) && !(r && u > this.loadingSN + 2); ) {
                    if (this.bitset.has(u, n)) {
                        u++;
                        continue
                    }
                    const s = fe(u, n);
                    if (this.bitCounts.has(u, n) && !this.requestingMap.has(s)) {
                        let i = [null, null];
                        if (r)
                            i = At(o, u, n);
                        else
                            for (let e of o)
                                if (e.bitset.has(u, n)) {
                                    const t = e.bitset.getState(u, n);
                                    let s;
                                    s = t === Tt ? 0 === p(0, 1) : t === Rt,
                                    i[s ? 1 : 0] = e;
                                    break
                                }
                        if (i.some((e=>!!e))) {
                            const r = new Vt(this.coordinator,this.logger,u,n,void 0,t.httpRangeSupported);
                            this._setupSynthesizer(r),
                            this.requestingMap.set(s, r),
                            i.forEach(((t,s)=>{
                                if (t) {
                                    a++;
                                    const i = 1 === s;
                                    r.setPeer(t, i),
                                    t.requestDataBySN(u, !1, {
                                        level: n,
                                        reverse: i
                                    }),
                                    e.info(`request prefetch ${u} level ${n} from peer ${t.remotePeerId} downloadNum ${t.downloadNum} reverse ${i}`)
                                }
                            }
                            )),
                            r.isFull() && e.info("prefetch get full syn"),
                            o = this.peerManager.getPeersOrderByWeight()
                        }
                    }
                    if (d++,
                    u++,
                    0 === o.length)
                        break
                }
                this.loadedPeerNum = a
            }
            onBufferManagerLost(e, t, s, i) {
                this.currLostSN = e,
                s && (this.nextLostSN = s),
                this.bitset.delete(e, i),
                this.bitCounts.delete(e, i)
            }
            cleanRequestingMap(e) {
                const t = this.peerManager.getPeer(e);
                if (t)
                    for (let[s,i] of this.requestingMap.internalMap) {
                        const r = s.split("-")
                          , n = Number(r[1])
                          , o = Number(r[0]);
                        i.hasPeerId(e) && (this.logger.info(`delete ${e} in synthesizer`),
                        i.deletePeer(t),
                        this.bitCounts.decre(n, o),
                        t.bitset.delete(n, o))
                    }
            }
            shouldWaitForNextSeg() {
                let e;
                return e = !this.isUploader && (!!this.isReceiver || p(0, 100) > 20),
                this.isReceiver = this.isUploader = !1,
                e
            }
            updateLoaded(e, t, s) {
                this.bitset.hasCompleteOr(e, t) || (this.bitset.add(e, t, s, Tt),
                this.bitCounts.delete(e, t))
            }
            broadcastPlaylist(e, t) {
                if (!this.config.live)
                    return;
                const s = function(e) {
                    const t = e.split("\n");
                    let s = 0
                      , i = 0;
                    for (let e of t) {
                        const t = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(e);
                        if (t && t[1]) {
                            s = parseInt(t[1], 10);
                            break
                        }
                    }
                    for (let e of t)
                        e.startsWith("#EXTINF") && i++;
                    return s + i - 1
                }(t);
                if (!this.isMobileNet)
                    for (let i of this.getPeers())
                        i.sendMsgPlaylist(e, t, s);
                this.playlistInfo.set(e, {
                    seq: s,
                    data: t
                })
            }
            getPlaylistFromPeer(e) {
                if (!this.config.live)
                    return null;
                const {seq: t, data: s} = this.playlistInfo.get(e);
                for (let s of this.getPeers()) {
                    const i = s.getLatestPlaylist(e, t);
                    if (i)
                        return this.playlistInfo.set(e, i),
                        i
                }
                return null
            }
            getBufferedDuration() {
                let {media: e, currentSrc: t} = this.engine;
                if (!e || e.src !== t && 0 === e.currentTime) {
                    if (this.logger.info("try get video element"),
                    e = le(this.config.mediaElem, t),
                    !e)
                        return 5;
                    this.engine.media = e
                }
                let s = 0
                  , i = e.currentTime
                  , r = e.buffered;
                for (let e = r.length - 1; e >= 0; e--)
                    if (i >= r.start(e) && i <= r.end(e)) {
                        s = r.end(e) - i;
                        break
                    }
                return this.mBufferedDuration = s,
                s > 0 ? s : 0
            }
            destroy() {
                super.destroy(),
                this.requestingMap.clear(),
                this.segmentBuilderMap.clear()
            }
            clearCache() {
                "SegmentStore" === this.bufMgr.name ? this.engine.emit(t.BM_FATAL_ERROR) : this.bufMgr.clear(),
                this.bitset.clear()
            }
            _handleSynOutput(e, t, s, i) {
                this.logger.info(`syn output ${e} http ${t} p2p ${s}`)
            }
            _handleSynError(e, t, s, i) {
                const {logger: r} = this;
                r.warn(`SYN_ERROR ${t}-${s} code ${i}`),
                i !== Ft && e.hasPartialBuffer() && (s > this.loadingSN || s === this.loadingSN && e.streamListeners() > 0 && e.rangeRequesting) ? r.warn(`syn abort ${s} with partial buffer`) : this.requestingMap.delete(fe(s, t))
            }
            _notifySynthesizer(e, t, s, i, r, n=!0) {
                const {logger: o} = this
                  , a = this.requestingMap.get(fe(s, i));
                if (!a)
                    return;
                const h = a.segId;
                function l(r, n) {
                    n ? e.requestDataById(t, s, !0, {
                        level: i,
                        reverse: r
                    }) : (o.info(`notify syn prefetch ${s}`),
                    e.requestDataBySN(s, !1, {
                        level: i,
                        reverse: r
                    }))
                }
                function c() {
                    return r === Lt || r === Tt
                }
                function d() {
                    return r === Rt || r === Tt
                }
                t && h && t !== h ? o.warn(`notifySynthesizer segId ${t} not match ${h}`) : a.isFull() || !this.prefetchOnly && a.isAlmostDeadline() || (a.isEmpty() ? a.hasForwardBuffer() && d() ? (a.setReversePeer(e),
                l(!0, n)) : a.hasReverseBuffer() && c() && (a.setForwardPeer(e),
                l(!1, n)) : !a.hasForwardPeer() && c() ? (a.setForwardPeer(e),
                l(!1, n)) : !a.hasReversePeer() && d() && (a.setReversePeer(e),
                l(!0, n)))
            }
            _setupEngine() {
                this.engine.on(t.MEDIA_REBUFFER, (e=>{
                    this.config.prefetchOnly || (e && !this.prefetchOnly && this.logger.warn("rebuffer reach limit"),
                    this.prefetchOnly = e)
                }
                ))
            }
            getStatsForPeer() {
                const {currentLevel: e, media: t} = this.engine
                  , s = {
                    level: e
                };
                if (t && !this.config.live) {
                    const {currentTime: e} = t;
                    s.pos = Math.round(e)
                }
                return s
            }
            checkSynthesizer(e, t) {
                const s = fe(e, t)
                  , i = this.requestingMap.get(s);
                i && (0 === i.streamListeners() ? (this.logger.info(`destroy syn ${s} without listeners`),
                this.requestingMap.delete(s)) : this.logger.info(`keep syn ${s} with listeners`))
            }
            setupSynForLoad(e, t, s, i, r) {
                const {forwardPeer: n, reversePeer: o} = this.targetPeers
                  , a = fe(e, t);
                let h = this.requestingMap.get(a);
                h ? h.setExtra(i) : (h = new Vt(this.coordinator,this.logger,e,t,s,this.httpRangeSupported,i),
                this._setupSynthesizer(h),
                this.requestingMap.set(a, h)),
                n && (h.setForwardPeer(n),
                n.requestDataById(s, e, !0, {
                    level: t
                })),
                o && (h.setReversePeer(o),
                o.requestDataById(s, e, !0, {
                    level: t,
                    reverse: !0
                })),
                h.isEmpty() && (r = 0),
                this.logger.info(`syn setTimeout ${r}`),
                h.setTimeout(r)
            }
        }
        class Qt {
            constructor(t, s, i, r) {
                this.bufferList = [],
                this.streamListeners = [],
                this.finished = !1,
                this.packetSize = c,
                this.attachments = r % this.packetSize == 0 ? r / this.packetSize : Math.floor(r / this.packetSize) + 1,
                this.pieceMsg = {
                    event: e.DC_PIECE,
                    attachments: this.attachments,
                    seg_id: i,
                    sn: t,
                    level: s,
                    size: r,
                    reverse: !1
                },
                this.sink = (0,
                o.h)(0),
                this.source = "HttpStream"
            }
            receiveBytes(e, t) {
                e.byteLength && (this.sink = o.h.concat([this.sink, e]),
                this.bufferList.push(e),
                t && (this.finished = !0),
                this._notifyStreamListeners(e))
            }
            getCompleteBuffer() {
                return this.sink.buffer
            }
            destroy() {
                this.finished || this._notifyStreamListenersAbort()
            }
            addStreamListener(e, t, s) {
                this.streamListeners.push({
                    handler: s,
                    peerId: t
                })
            }
            removeStreamListener(e) {
                this.streamListeners = this.streamListeners.filter((t=>t.peerId !== e || (t.handler(void 0, void 0, !0, "aborted by cancel"),
                !1)))
            }
            _notifyStreamListenersAbort() {
                for (let e of this.streamListeners) {
                    const {handler: t} = e;
                    t(void 0, void 0, !0, "aborted by httpLoader")
                }
                this.streamListeners.length = 0
            }
            _notifyStreamListeners(e) {
                const {sn: t, seg_id: s} = this.pieceMsg;
                for (let i of this.streamListeners) {
                    const {handler: r} = i;
                    r(t, s, !1, e, this.finished)
                }
                this.finished && (this.streamListeners.length = 0)
            }
        }
        const Kt = class extends Jt {
            constructor(e, t) {
                super(e, t),
                this.fragloadTimeout = e.hlsjs ? 10 : 6.8,
                this.resolveMap = new Map,
                this.segmentBypass = E(t.segmentBypass) ? t.segmentBypass : ()=>!1,
                !0 === this.config.httpStreamEnabled ? this.streamEnabled = function() {
                    if (self.fetch && self.AbortController && self.ReadableStream && self.Request)
                        try {
                            return new self.ReadableStream({}),
                            !0
                        } catch (e) {}
                    return !1
                }() : this.streamEnabled = !1
            }
            async handleGetMediaData(e, s) {
                const {logger: i, engine: r, config: n} = this;
                let {url: o, range: a} = e;
                const h = this._getFrag(o, a);
                if (!h)
                    return i.warn(`cannot get frag ${o}`),
                    s.postMessage({
                        action: t.SW_GET_MEDIA
                    });
                if (this.segmentBypass(o, h.tagList) || r.segmentLoadCount < n.startFromSegmentOffset)
                    return i.info(`bypass frag ${o}`),
                    s.postMessage({
                        action: t.SW_GET_MEDIA
                    });
                r.currentLevelIndex = h.level;
                const {sn: l, level: c} = h
                  , d = this.config.segmentId(String(c), l, o, a)
                  , u = d === this.loadingSegId;
                if (u && (i.warn(`duplicate request ${d}`),
                this.prefetchOnly))
                    return s.postMessage({
                        action: t.SW_GET_MEDIA
                    });
                this.loadingSN = l,
                r.bufMgr && (r.bufMgr.loadingSN = l),
                this.loadingSegId = d;
                const g = await this.bufMgr.getSegById(d);
                if (g)
                    return i.info(`bufMgr found seg sn ${l} segId ${d}`),
                    h.loaded = g.data.byteLength,
                    h.fromPeerId = g.fromPeerId,
                    r.emit(t.FRAG_LOADED, {
                        url: o,
                        sn: l,
                        level: c,
                        segId: d,
                        loaded: h.loaded,
                        duration: h.duration,
                        byP2p: !0,
                        fromPeerId: g.fromPeerId
                    }),
                    this._onFragLoaded(o, h),
                    s.postMessage({
                        action: t.SW_GET_MEDIA,
                        data: {
                            url: o,
                            buffer: g.data
                        }
                    });
                if (this.fragLoading = !0,
                this.prefetchOnly)
                    return i.info(`prefetchOnly, skip p2p load ${d}`),
                    this._loadFragByHttp(h, s, l, d, o, c, a, 1e3 * this.fragloadTimeout);
                let f = this.getBufferedDuration();
                f > this.fragloadTimeout && (f = this.fragloadTimeout),
                i.info(`handleGetMediaData sn ${l} bufferedDuration ${f}`);
                let p = 1e3 * (f - this.config.httpLoadTime);
                p < 0 ? p = 0 : p > 2800 && (p = 2800);
                const m = fe(l, c);
                if (this.resolveMap.has(l) || u) {
                    let e = this.requestingMap.get(m);
                    if (e || u) {
                        e && this.httpRangeSupported && (i.warn(`${l} is requesting, terminate syn wait for seg`),
                        e.terminate());
                        let r = setTimeout((()=>{
                            i.info(`notify seg ${l} timeout`),
                            r = -1,
                            s.postMessage({
                                action: t.SW_GET_MEDIA
                            })
                        }
                        ), p);
                        this.bufMgr.once(`${t.BM_ADDED_SN_}${l}`, (e=>{
                            r < 0 || e && e.level === c && (clearTimeout(r),
                            i.info(`notify seg ${e.sn}`),
                            s.postMessage({
                                action: t.SW_GET_MEDIA,
                                data: {
                                    url: o,
                                    buffer: e.data
                                }
                            }))
                        }
                        ))
                    } else
                        i.warn(`${l} is requesting, fallback`),
                        s.postMessage({
                            action: t.SW_GET_MEDIA
                        })
                } else if (this.hasAndSetTargetPeer(l, c, d, f)) {
                    await this._loadFragByP2p(h, s, l, d, o, c, a, p) || (i.warn(`p2p timeout switch to http load ${d}`),
                    this._loadFragByHttp(h, s, l, d, o, c, a, 1e3 * this.fragloadTimeout))
                } else
                    this._loadFragByHttp(h, s, l, d, o, c, a, 1e3 * this.fragloadTimeout)
            }
            _loadFragByHttp(e, s, i, r, n, a, h, c) {
                const d = fe(i, a)
                  , u = g(n, l, !0)
                  , f = new Gt({});
                let p = {
                    url: u,
                    ...P(h)
                };
                const m = {
                    timeout: c
                }
                  , _ = {
                    onError: e=>{
                        e.text && this.logger.warn(e.text),
                        this.fragLoading = !1,
                        s.postMessage({
                            action: t.SW_GET_MEDIA
                        })
                    }
                    ,
                    onTimeout: ()=>{
                        this.logger.warn("http load timeout"),
                        this.fragLoading = !1,
                        s.postMessage({
                            action: t.SW_GET_MEDIA
                        })
                    }
                    ,
                    onSuccess: async h=>{
                        this.fragLoading = !1,
                        this.notifyAllPeers(i, a, r);
                        const {data: l} = h;
                        if (!await this.bufMgr.hasSegOfId(r)) {
                            const e = function(e) {
                                const t = o.h.from(e)
                                  , s = new o.h(e.byteLength);
                                return t.copy(s),
                                s
                            }(l).buffer
                              , t = new H(i,r,e,"",a);
                            await this.bufMgr.putSeg(t),
                            this.reportTraffic(l.byteLength, 0, 0)
                        }
                        this.segmentBuilderMap.delete(d),
                        e.segId = r,
                        e.loaded = l.byteLength,
                        this.engine.emit(t.FRAG_LOADED, {
                            url: n,
                            sn: i,
                            level: a,
                            segId: r,
                            loaded: e.loaded,
                            duration: e.duration,
                            byP2p: !1
                        }),
                        this._onFragLoaded(n, e),
                        s.postMessage({
                            action: t.SW_GET_MEDIA,
                            data: {
                                url: n,
                                buffer: l
                            }
                        })
                    }
                };
                if (this.streamEnabled) {
                    let e;
                    _.onBodyStart = t=>{
                        !e && t > 0 && (this.isMobileNet || this.notifyAllPeers(i, a, r, Lt),
                        e = new Qt(i,a,r,t),
                        this.segmentBuilderMap.has(d) || this.segmentBuilderMap.set(d, e))
                    }
                    ,
                    _.onUpdate = (t,s,i)=>{
                        if (i)
                            return this.logger.warn(`loadFragByHttp ${r} aborted`),
                            void this.segmentBuilderMap.delete(d);
                        e && e.receiveBytes(t, s)
                    }
                }
                f.load(p, m, _)
            }
            async _loadFragByP2p(e, s, i, r, n, o, a, h) {
                const {logger: l} = this;
                l.info(`p2p load sn ${i} segId ${r} level ${o}`);
                const c = await this.load(i, r, o, n, a, h);
                if (c && c.data) {
                    const {data: a, fromPeerId: h, size: d} = c;
                    if (l.info(`p2p loaded segId ${r} level ${o} size ${a.byteLength}`),
                    !await this.bufMgr.hasSegOfId(r)) {
                        const e = new H(i,r,a,h,o);
                        l.info(`bufMgr putSeg ${i} level ${o}`),
                        await this.bufMgr.putSeg(e)
                    }
                    return e.loaded = a.byteLength,
                    e.fromPeerId = h,
                    this.engine.emit(t.FRAG_LOADED, {
                        url: n,
                        sn: i,
                        level: o,
                        segId: r,
                        loaded: e.loaded,
                        duration: e.duration,
                        byP2p: !0,
                        fromPeerId: h
                    }),
                    this._onFragLoaded(n, e),
                    s.postMessage({
                        action: t.SW_GET_MEDIA,
                        data: {
                            url: n,
                            buffer: a,
                            size: d
                        }
                    }),
                    !0
                }
                l.warn(`P2P timeout load segId ${r}`);
                const d = await this.bufMgr.getSegById(r);
                return !!d && (this.fragLoading = !1,
                l.info(`already loaded seg sn ${i} segId ${r}`),
                s.postMessage({
                    action: t.SW_GET_MEDIA,
                    data: {
                        url: n,
                        buffer: d.data
                    }
                }),
                !0)
            }
            notifySWMessage(e, s, i) {
                if (e === t.SW_GET_MEDIA)
                    this.engine.fetcher && this.engine.fetcher.increMediaRequests(),
                    this.handleGetMediaData(s, i);
                else
                    this.logger.warn(`unknown action ${e}`)
            }
            _getFrag(e, t) {
                return t && (e = `${e}|${t}`),
                this.fragMap.get(e)
            }
            destroy() {
                super.destroy(),
                this.logger.warn("destroy HlsSwScheduler")
            }
            _onFragLoaded(e, t) {
                if (this.updateLoaded(t.sn, t.level, t.segId),
                !this.engine)
                    return;
                const {media: s, targetDuration: i} = this.engine;
                !this.config.live && s && i && (this.currPlaySN = Math.ceil(s.currentTime / i))
            }
            load(e, t, s, i, r, n) {
                const {logger: o, config: a} = this;
                this.isReceiver = !0;
                let h = {
                    ...P(r),
                    proxied: !0,
                    url: i,
                    segId: t,
                    httpLoadTime: 1e3 * a.httpLoadTime
                };
                this.setupSynForLoad(e, s, t, h, n);
                const l = new Promise((i=>{
                    const r = {
                        resolve: i,
                        sn: e,
                        level: s,
                        segId: t
                    };
                    this.resolveMap.set(e, r)
                }
                ));
                return this.targetPeers = {},
                l
            }
            _setupSynthesizer(e) {
                e.on(t.SYN_OUTPUT, (async(t,s)=>{
                    const {config: i, logger: r} = this
                      , {segId: n, sn: o, data: a, level: h} = t
                      , {speed: l, http: c, p2p: d, underused: u} = s;
                    this._handleSynOutput(n, c, d, u);
                    const g = this.resolveMap.has(o);
                    g && (this.fragLoading = !1);
                    if (i.validateSegment(n, new Uint8Array(a))) {
                        this.notifyAllPeers(o, h, n),
                        this.bitset.has(o, h) || this.reportTraffic(c, d, l);
                        const s = e.getFromPeerId();
                        if (g) {
                            r.info(`receive criticalSeg seg_id ${n}`);
                            const e = this.resolveMap.get(o);
                            this.resolveMap.delete(o),
                            e.resolve({
                                data: a,
                                fromPeerId: s
                            })
                        } else
                            this.bitset.has(o, h) || (e.detachPeers(),
                            await this.bufMgr.putSeg(t),
                            this.updateLoaded(o, h, n))
                    } else if (r.error(`segment ${n} validate failed`),
                    g) {
                        const e = this.resolveMap.get(o);
                        this.resolveMap.delete(o),
                        e.resolve()
                    }
                    this.requestingMap.delete(fe(o, h))
                }
                )).on(t.SYN_ERROR, ((t,s)=>{
                    const {sn: i, level: r} = t;
                    if (this.resolveMap.has(i)) {
                        const e = this.resolveMap.get(i);
                        this.resolveMap.delete(i),
                        e.resolve()
                    }
                    this._handleSynError(e, r, i, s)
                }
                ))
            }
            _handleDCHave(e, t, s, i, r) {
                const n = 0 !== this.resolveMap.size;
                this._notifySynthesizer(e, i, t, s, r),
                this.config.live && !n && z()((()=>{
                    this.checkPeers()
                }
                ))
            }
        }
        ;
        const Zt = "2.7.10";
        class es extends ct {
            static get name() {
                return "HlsSwP2pEngine"
            }
            static isServiceWorkerSupported() {
                return "serviceWorker"in navigator
            }
            constructor(e={}, s=null) {
                super(e, s),
                this.swSupported = self.isSecureContext,
                this.levels = [],
                this.bypassLevels = [],
                this.currentLevelIndex = 0,
                this.currentSrc = "",
                this.swVersion = "",
                this.media = le(this.config.mediaElem),
                this.workerKeepAliveInterval = null,
                this.fragMap = new Map,
                this.engineName = es.name,
                es.isServiceWorkerSupported() || (this.swSupported = !1,
                console.warn("service worker is not supported")),
                s && (s.once("hlsDestroying", (()=>{
                    this.destroy(),
                    this.hlsjs = null
                }
                )),
                s.on(this.HLSEvents.ERROR, this._onHlsError.bind(this)));
                const {channelIdMaker: i, signalId: r, browserInfo: n} = this.setup();
                if (this.onLevelLoaded = e=>{
                    const {config: s} = this
                      , o = e.live;
                    s.live = o,
                    this.targetDuration = e.averagetargetduration,
                    this.browserInfo = {
                        ...n,
                        live: o,
                        abr: this.multiBitrate || void 0,
                        type: "hls_sw"
                    },
                    this.channel = `${i(this.currentSrc)}|${r}[${J.VERSION}]`,
                    this.setupElectron();
                    const a = this.initLogger();
                    a.info("use HlsSwP2pEngine"),
                    a.info(`engine version: ${ae.version} hls-proxy version: ${this.swVersion}`),
                    a.info(`channel ${this.channel}`),
                    o || (s.startSN = e.startSN,
                    s.endSN = e.endSN,
                    a.info(`startSN ${e.startSN} endSN ${e.endSN}`)),
                    this._init(this.channel, this.browserInfo),
                    this.off(t.LEVEL_LOADED, this.onLevelLoaded)
                }
                ,
                0 === this.config.httpLoadTime && (this.config.live ? this.on(t.LEVEL_LOADED, (e=>{
                    const {fragments: t, averagetargetduration: s} = e;
                    this.config.httpLoadTime = this.determineHttpLoadTime(t),
                    this.logger && this.logger.info(`segments in playlist: ${t.length}, targetDuration: ${s}`)
                }
                )) : this.config.httpLoadTime = 3.5),
                this.on(t.LEVEL_LOADED, this.onLevelLoaded),
                this.onManifestParsed = (e,s)=>{
                    this.multiBitrate = e.length > 1,
                    this.currentSrc = s,
                    this.off(t.MANIFEST_PARSED, this.onManifestParsed)
                }
                ,
                this.on(t.MANIFEST_PARSED, this.onManifestParsed),
                this.onFragLoaded = ({url: e})=>{
                    const {config: s} = this;
                    !this.rangeTested && s.useHttpRange && (function(e, t, s, i=2e3, r=!1) {
                        const n = new XMLHttpRequest;
                        let o = e;
                        return r && (o = g(e, l, !0)),
                        new Promise(((r,a)=>{
                            n.open("GET", o, !0),
                            n.responseType = "arraybuffer",
                            n.timeout = i,
                            n.onreadystatechange = e=>{
                                if (4 === n.readyState) {
                                    const e = n.status;
                                    206 === e || 200 === e && t || 0 === e ? r(n.response) : a(`status ${e}`)
                                }
                            }
                            ,
                            n.onerror = e=>{
                                a("request error")
                            }
                            ,
                            n.ontimeout = e=>{
                                a("timeout")
                            }
                            ,
                            n.setRequestHeader("Range", t || "bytes=0-0"),
                            s && s(n, e),
                            n.send()
                        }
                        ))
                    }(e, null, null, 2e3, !1).then((e=>{
                        s.httpRangeSupported = !0
                    }
                    )).catch((e=>{
                        s.httpRangeSupported = !1,
                        s.logger.warn(e)
                    }
                    )).finally((()=>{
                        s.logger.info(`http range is ${s.httpRangeSupported ? "" : "not "} supported`)
                    }
                    )),
                    this.rangeTested = !0,
                    s.logger.info(JSON.stringify({
                        engine: this.engineName,
                        ...this.browserInfo
                    }))),
                    this.off(t.FRAG_LOADED, this.onFragLoaded)
                }
                ,
                this.once(t.FRAG_LOADED, this.onFragLoaded),
                this.swSupported) {
                    const {serviceWorker: e} = navigator;
                    e.onmessage = e=>{
                        const {action: s, data: i} = e.data
                          , r = e.ports[0];
                        if (r) {
                            if (this.logger && this.logger.info(`engine onmessage action ${s}`),
                            r.postMessage({
                                action: s,
                                pong: !0
                            }),
                            !this.p2pEnabled || !i)
                                return r.postMessage({
                                    action: s
                                });
                            switch (s) {
                            case t.SW_PLAYLIST:
                                this.handlePlaylist(i, r);
                                break;
                            case t.SW_GET_PLAYLIST:
                                this.handleGetPlaylist(i, r);
                                break;
                            default:
                                if (s === t.SW_GET_MEDIA && this.segmentLoadCount++,
                                !this.scheduler)
                                    return r.postMessage({
                                        action: s
                                    });
                                this.scheduler.notifySWMessage(s, i, r)
                            }
                        } else
                            this.logger && this.logger.error(`sender not found in action ${s}`)
                    }
                }
                this.config.swAutoRegister && this.registerServiceWorker().then((function(e) {}
                )).catch((e=>{
                    console.warn("ServiceWorker registration failed ", e)
                }
                ))
            }
            get currentLevel() {
                return this.currentLevelIndex
            }
            watchRebuffering(e) {
                this.offEventRebuffer = function(e, t) {
                    let s = null;
                    const i = ()=>{
                        s || (s = setTimeout((()=>{
                            t()
                        }
                        ), 2500))
                    }
                      , r = ()=>{
                        null != s && (clearTimeout(s),
                        s = null)
                    }
                    ;
                    return e.addEventListener("waiting", i),
                    e.addEventListener("playing", r),
                    ()=>{
                        e.removeEventListener("waiting", i),
                        e.removeEventListener("playing", r)
                    }
                }(e, (()=>{
                    this.fetcher && this.fetcher.increRebuffers()
                }
                ))
            }
            handlePlaylist(e, s) {
                const {config: i, logger: r} = this
                  , {url: n, redirectedUrl: o, text: a, ver: h} = e;
                return this.swVersion = h,
                -1 === function(e, t) {
                    for (var s = e.split("."), i = t.split("."), r = 0; r < Math.max(s.length, i.length); r++) {
                        var n = parseInt(s[r] || 0)
                          , o = parseInt(i[r] || 0);
                        if (n < o)
                            return -1;
                        if (n > o)
                            return 1
                    }
                    return 0
                }(h, Zt) ? (console.warn(`hls-proxy.js version should >= ${Zt}`),
                s.postMessage({
                    action: t.SW_PLAYLIST
                })) : 0 !== a.indexOf("#EXTM3U") || this.bypassLevels.indexOf(b(n)) >= 0 ? (r && r.warn("no EXTM3U delimiter or bypass audio track"),
                s.postMessage({
                    action: t.SW_PLAYLIST
                })) : (s.postMessage({
                    action: t.SW_PLAYLIST,
                    data: {
                        active: !0,
                        debug: r && r.isDebugLevel,
                        sharePlaylist: !!i.sharePlaylist
                    }
                }),
                this._parsePlaylist(a, b(n), o),
                void (this.workerKeepAliveInterval || navigator.serviceWorker.getRegistration().then((e=>{
                    if (!i.live && e && e.active && "activated" === e.active.state) {
                        const t = new URL(e.scope);
                        this.pathname = t.pathname + l;
                        const s = ()=>{
                            clearInterval(this.workerKeepAliveInterval),
                            this.workerKeepAliveInterval = null
                        }
                        ;
                        this.workerKeepAliveInterval = setInterval((()=>{
                            return (e = this.pathname,
                            new Promise(((t,s)=>{
                                fetch(`${e}/keepalive/`).then((e=>{
                                    if (e.ok)
                                        return e.text();
                                    throw new Error("keepalive failed")
                                }
                                )).then((e=>{
                                    "" === e.trim() ? t() : s("not valid keepalive response")
                                }
                                )).catch((e=>{
                                    s(e)
                                }
                                ))
                            }
                            ))).catch((e=>{
                                console.error(e),
                                s()
                            }
                            ));
                            var e
                        }
                        ), 2e4)
                    }
                }
                ))))
            }
            _parsePlaylist(e, s, i, r=!1) {
                const n = s;
                i && (s = i);
                const {config: o, logger: a} = this;
                if (e.indexOf("#EXTINF:") > 0 || e.indexOf("#EXT-X-TARGETDURATION:") > 0) {
                    let i = 0;
                    const a = Et.parseLevelPlaylist(e, s);
                    this.levels.length > 0 ? (i = this.levels.indexOf(b(a.url)),
                    -1 === i ? (this.restartP2p(),
                    this.currentSrc = n,
                    i = 0) : this.currentLevelIndex = i) : ("" !== this.currentSrc && n !== this.currentSrc && this.restartP2p(),
                    this.currentSrc = n,
                    this.levels = [b(s)]),
                    this.emit(t.LEVEL_LOADED, a),
                    o.live && y(this.fragMap, 200),
                    a.fragments.forEach((e=>{
                        e.level = i;
                        let t = h().buildAbsoluteURL(e.baseurl, e.relurl, {
                            alwaysNormalize: !0
                        });
                        const s = e.byteRange;
                        2 === s.length && (t = `${t}|bytes=${s[0]}-${s[1] - 1}`),
                        this.fragMap.set(t, e)
                    }
                    )),
                    !r && o.sharePlaylist && this.scheduler && !this.scheduler.isMobileNet && this.scheduler.broadcastPlaylist(b(s), e)
                } else {
                    const i = Et.parseMasterPlaylist(e, s);
                    if ("" !== this.currentSrc && this.restartP2p(),
                    i.length > 0) {
                        i.sort(((e,t)=>e.bitrate - t.bitrate)),
                        this.levels = i.map((e=>b(e.url)));
                        let t = [];
                        ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((i=>{
                            const r = Et.parseMasterPlaylistMedia(e, s, i);
                            "AUDIO" === i && (t = r),
                            r.forEach((e=>{
                                e.url && this.bypassLevels.push(b(e.url))
                            }
                            ))
                        }
                        )),
                        t.length > 0 && (o.segmentId !== ue && o.segmentId || (o.segmentId = ge))
                    }
                    this.emit(t.MANIFEST_PARSED, i, n)
                }
                o.segmentId || (o.segmentId = o.strictSegmentId ? ge : ue)
            }
            handleGetPlaylist(e, s) {
                const {config: i, logger: r} = this;
                if (!r)
                    return s.postMessage({
                        action: t.SW_GET_PLAYLIST
                    });
                const {scheduler: n} = this;
                if (!n)
                    return void r.warn("scheduler not found");
                const {url: o} = e
                  , a = b(o);
                if (n.playlistInfo.has(a)) {
                    const e = n.getPlaylistFromPeer(a);
                    if (e && e.data) {
                        const {data: i, seq: n} = e;
                        return r.info(`got playlist from peer seq ${n}`),
                        s.postMessage({
                            action: t.SW_GET_PLAYLIST,
                            data: {
                                text: i
                            }
                        }),
                        void this._parsePlaylist(i, b(o), void 0, !0)
                    }
                }
                return s.postMessage({
                    action: t.SW_GET_PLAYLIST
                })
            }
            async registerServiceWorker() {
                const {logger: e, config: t} = this;
                if (!this.swSupported) {
                    let e = "sw is not supported";
                    return _ || (e = "https is required when using ServiceWorker",
                    console.warn(e)),
                    Promise.reject(e)
                }
                return this.media = le(t.mediaElem),
                this.media || e && e.warn("no video element found"),
                rs.registerServiceWorker(t)
            }
            async unregisterServiceWorker() {
                clearInterval(this.workerKeepAliveInterval),
                this.workerKeepAliveInterval = null;
                const e = "serviceWorker is not registered";
                return new Promise(((t,s)=>{
                    const {serviceWorker: i} = navigator;
                    i || s(e),
                    i.getRegistration().then((i=>{
                        i ? i.unregister().then((()=>{
                            t()
                        }
                        )).catch((e=>{
                            s(e)
                        }
                        )) : s(e)
                    }
                    ))
                }
                ))
            }
            async _init(e, t) {
                const {logger: s, config: i} = this;
                if (!this.p2pEnabled || "undefined" == typeof self)
                    return;
                const r = setInterval((()=>{
                    const e = ()=>this.hlsjs && this.hlsjs.media;
                    if (this.media) {
                        const t = e();
                        t && this.media !== t && (this.media = t),
                        clearInterval(r),
                        this.watchRebuffering(this.media)
                    } else
                        this.media = e() || le(i.mediaElem)
                }
                ), 3e3);
                let n = new Kt(this,i);
                n.fragMap = this.fragMap;
                try {
                    await super._init(e, n, t)
                } catch (e) {
                    return void s.error(e)
                }
                n.server = this.fetcher,
                this.scheduler = n,
                this.p2pEnabled && !this.tracker.connected && this.tracker.resumeP2P()
            }
            restartP2p() {
                this.logger && this.logger.warn("restart P2P"),
                this.disableP2P(),
                this.enableP2P(),
                this.config.strictSegmentId || this.config.segmentId !== ge || (this.logger && this.logger.warn("reset hlsSegmentIdGenerator"),
                this.config.segmentId = null),
                this.on(t.LEVEL_LOADED, this.onLevelLoaded),
                this.on(t.MANIFEST_PARSED, this.onManifestParsed),
                this.on(t.FRAG_LOADED, this.onFragLoaded)
            }
            enableP2P() {
                return this.p2pEnabled ? null : (this.logger && this.logger.info("enable P2P"),
                this.config.p2pEnabled = this.p2pEnabled = !0,
                this)
            }
            disableP2P() {
                this.logger && this.logger.warn("disable P2P"),
                this.offEventRebuffer && this.offEventRebuffer(),
                this.p2pEnabled && (this.config.p2pEnabled = this.p2pEnabled = !1,
                this.tracker && this.tracker instanceof lt && (this.tracker.stopP2P(),
                this.tracker = {},
                this.fetcher = null,
                this.bufMgr.destroy(),
                this.bufMgr = null)),
                this.levels = [],
                this.currentLevelIndex = 0,
                this.lastLevel = 0,
                this.multiBitrate = !1,
                this.rangeTested = !1,
                this.currentSrc = "",
                this.media = void 0,
                this.config.live = !1,
                this.removeAllListeners(t.MANIFEST_PARSED),
                this.removeAllListeners(t.LEVEL_LOADED),
                clearInterval(this.workerKeepAliveInterval),
                this.workerKeepAliveInterval = null
            }
        }
        const ts = es;
        const ss = class extends ct {
            static get name() {
                return "ShadowP2pEngine"
            }
            constructor() {
                super(),
                console.warn("Using Shadow Engine")
            }
            disableP2P() {}
            isServiceWorkerSupported() {
                return !1
            }
        }
        ;
        class is {
            static get Events() {
                return t
            }
            static get TrackerZone() {
                return ae.TrackerZone
            }
            static isSupported() {
                return ae.isSupported() && (he() || ts.isServiceWorkerSupported())
            }
            static isServiceWorkerSupported() {
                return ts.isServiceWorkerSupported()
            }
            static isMSESupported() {
                return he()
            }
            static getBrowser() {
                return V().getBrowser()
            }
            static get ServiceWorkerEngine() {
                return ts
            }
            static get HlsjsEngine() {
                return ss
            }
            static async tryRegisterServiceWorker({swFile: e="./sw.js", swScope: t="./"}={}) {
                return is.registerServiceWorker({
                    swFile: e,
                    swScope: t
                })
            }
            static async registerServiceWorker({swFile: e="./sw.js", swScope: t="./", hlsjsInstance: s}={}) {
                const {serviceWorker: i} = navigator;
                return !i || s ? Promise.resolve() : i.getRegistration().then((s=>{
                    return s || Promise.race([i.register(e, {
                        scope: t
                    }).then((e=>function(e) {
                        return new Promise(((t,s)=>{
                            const i = e.installing || e.waiting || e.active
                              , r = ()=>"activated" === i.state && (i.removeEventListener("statechange", r),
                            t(e),
                            !0);
                            r() || i.addEventListener("statechange", r)
                        }
                        ))
                    }(e))), (r = 300,
                    new Promise((e=>setTimeout(e, r))))]);
                    var r
                }
                )).catch((()=>{
                    Promise.resolve()
                }
                ))
            }
            constructor(e={}) {
                const {hlsjsInstance: t} = e;
                delete e.hlsjsInstance;
                const s = ()=>{
                    this._realEngine = new ss(t,e)
                }
                  , i = ()=>{
                    this._realEngine = new ts(e,t)
                }
                ;
                "1" !== u("_ios") ? e.proxyFirst && t ? ts.isServiceWorkerSupported() ? i() : s() : !e.proxyOnly && he() && t ? s() : i() : i()
            }
            get realEngine() {
                return this._realEngine
            }
            get engineName() {
                return this._realEngine.constructor.name
            }
            once(e, t) {
                return this._realEngine.once(e, t)
            }
            on(e, t) {
                return this._realEngine.on(e, t)
            }
            off(e, t) {
                return this._realEngine.off(e, t)
            }
            removeListener(e, t) {
                return this._realEngine.removeListener(e, t)
            }
            removeAllListeners(e) {
                return this._realEngine.removeAllListeners(e)
            }
            set p2pEnabled(e) {
                this._realEngine.p2pEnabled = e
            }
            get p2pEnabled() {
                return this._realEngine.p2pEnabled
            }
            enableP2P() {
                this._realEngine.enableP2P()
            }
            disableP2P() {
                this._realEngine.disableP2P()
            }
            destroy() {
                this._realEngine.destroy()
            }
            async registerServiceWorker() {
                return E(this._realEngine.registerServiceWorker) ? this._realEngine.registerServiceWorker() : Promise.reject("Not supported by this engine")
            }
            async unregisterServiceWorker() {
                return E(this._realEngine.unregisterServiceWorker) ? this._realEngine.unregisterServiceWorker() : Promise.reject("Not supported by this engine")
            }
            get version() {
                return ae.version
            }
        }
        is.version = ae.version,
        is.protocolVersion = J.VERSION,
        "undefined" != typeof self && (self.P2PEngineHls = is);
        const rs = is
    }
    )(),
    i = i.default
}
)()));
/*** END FILE: /var/www/lookmovie.ag/v3.9.36/web/assets/86c9b585/p2p-engine-v2.10.3.min.js ***/
